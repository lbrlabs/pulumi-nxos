// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos
{
    public static class GetRest
    {
        /// <summary>
        /// This data source can read one NX-OS DME object.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nxos = Pulumi.Nxos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var l1PhysIf = Nxos.GetRest.Invoke(new()
        ///     {
        ///         Dn = "sys/intf/phys-[eth1/1]",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRestResult> InvokeAsync(GetRestArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRestResult>("nxos:index/getRest:getRest", args ?? new GetRestArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read one NX-OS DME object.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nxos = Pulumi.Nxos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var l1PhysIf = Nxos.GetRest.Invoke(new()
        ///     {
        ///         Dn = "sys/intf/phys-[eth1/1]",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetRestResult> Invoke(GetRestInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRestResult>("nxos:index/getRest:getRest", args ?? new GetRestInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRestArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        /// <summary>
        /// Distinguished name of object to be retrieved, e.g. sys/intf/phys-[eth1/1].
        /// </summary>
        [Input("dn", required: true)]
        public string Dn { get; set; } = null!;

        public GetRestArgs()
        {
        }
        public static new GetRestArgs Empty => new GetRestArgs();
    }

    public sealed class GetRestInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Distinguished name of object to be retrieved, e.g. sys/intf/phys-[eth1/1].
        /// </summary>
        [Input("dn", required: true)]
        public Input<string> Dn { get; set; } = null!;

        public GetRestInvokeArgs()
        {
        }
        public static new GetRestInvokeArgs Empty => new GetRestInvokeArgs();
    }


    [OutputType]
    public sealed class GetRestResult
    {
        /// <summary>
        /// Class name of object being retrieved.
        /// </summary>
        public readonly string ClassName;
        /// <summary>
        /// Map of key-value pairs which represents the attributes of object being retrieved.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Content;
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// Distinguished name of object to be retrieved, e.g. sys/intf/phys-[eth1/1].
        /// </summary>
        public readonly string Dn;
        /// <summary>
        /// The distinguished name of the object.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetRestResult(
            string className,

            ImmutableDictionary<string, string> content,

            string? device,

            string dn,

            string id)
        {
            ClassName = className;
            Content = content;
            Device = device;
            Dn = dn;
            Id = id;
        }
    }
}
