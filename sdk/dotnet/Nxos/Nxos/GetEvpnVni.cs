// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    public static class GetEvpnVni
    {
        public static Task<GetEvpnVniResult> InvokeAsync(GetEvpnVniArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEvpnVniResult>("nxos:nxos/getEvpnVni:getEvpnVni", args ?? new GetEvpnVniArgs(), options.WithDefaults());

        public static Output<GetEvpnVniResult> Invoke(GetEvpnVniInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEvpnVniResult>("nxos:nxos/getEvpnVni:getEvpnVni", args ?? new GetEvpnVniInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEvpnVniArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        [Input("encap", required: true)]
        public string Encap { get; set; } = null!;

        public GetEvpnVniArgs()
        {
        }
        public static new GetEvpnVniArgs Empty => new GetEvpnVniArgs();
    }

    public sealed class GetEvpnVniInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("encap", required: true)]
        public Input<string> Encap { get; set; } = null!;

        public GetEvpnVniInvokeArgs()
        {
        }
        public static new GetEvpnVniInvokeArgs Empty => new GetEvpnVniInvokeArgs();
    }


    [OutputType]
    public sealed class GetEvpnVniResult
    {
        public readonly string? Device;
        public readonly string Encap;
        public readonly string Id;
        public readonly string RouteDistinguisher;

        [OutputConstructor]
        private GetEvpnVniResult(
            string? device,

            string encap,

            string id,

            string routeDistinguisher)
        {
            Device = device;
            Encap = encap;
            Id = id;
            RouteDistinguisher = routeDistinguisher;
        }
    }
}
