// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    [NxosResourceType("nxos:nxos/ipv4PrefixListRuleEntry:Ipv4PrefixListRuleEntry")]
    public partial class Ipv4PrefixListRuleEntry : global::Pulumi.CustomResource
    {
        /// <summary>
        /// IPv4 Prefix List Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// IPv4 Prefix List Rule Entry criteria. - Choices: `exact`, `inexact` - Default value: `exact`
        /// </summary>
        [Output("criteria")]
        public Output<string> Criteria { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// IPv4 Prefix List Rule Entry start range. - Range: `0`-`128` - Default value: `0`
        /// </summary>
        [Output("fromRange")]
        public Output<int> FromRange { get; private set; } = null!;

        /// <summary>
        /// IPv4 Prefix List Rule Entry order. - Range: `0`-`4294967294`
        /// </summary>
        [Output("order")]
        public Output<int> Order { get; private set; } = null!;

        /// <summary>
        /// IPv4 Prefix List Rule Entry prefix.
        /// </summary>
        [Output("prefix")]
        public Output<string?> Prefix { get; private set; } = null!;

        /// <summary>
        /// IPv4 Prefix List Rule name.
        /// </summary>
        [Output("ruleName")]
        public Output<string> RuleName { get; private set; } = null!;

        /// <summary>
        /// IPv4 Prefix List Rule Entry end range. - Range: `0`-`128` - Default value: `0`
        /// </summary>
        [Output("toRange")]
        public Output<int> ToRange { get; private set; } = null!;


        /// <summary>
        /// Create a Ipv4PrefixListRuleEntry resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Ipv4PrefixListRuleEntry(string name, Ipv4PrefixListRuleEntryArgs args, CustomResourceOptions? options = null)
            : base("nxos:nxos/ipv4PrefixListRuleEntry:Ipv4PrefixListRuleEntry", name, args ?? new Ipv4PrefixListRuleEntryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Ipv4PrefixListRuleEntry(string name, Input<string> id, Ipv4PrefixListRuleEntryState? state = null, CustomResourceOptions? options = null)
            : base("nxos:nxos/ipv4PrefixListRuleEntry:Ipv4PrefixListRuleEntry", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Ipv4PrefixListRuleEntry resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Ipv4PrefixListRuleEntry Get(string name, Input<string> id, Ipv4PrefixListRuleEntryState? state = null, CustomResourceOptions? options = null)
        {
            return new Ipv4PrefixListRuleEntry(name, id, state, options);
        }
    }

    public sealed class Ipv4PrefixListRuleEntryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IPv4 Prefix List Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// IPv4 Prefix List Rule Entry criteria. - Choices: `exact`, `inexact` - Default value: `exact`
        /// </summary>
        [Input("criteria")]
        public Input<string>? Criteria { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// IPv4 Prefix List Rule Entry start range. - Range: `0`-`128` - Default value: `0`
        /// </summary>
        [Input("fromRange")]
        public Input<int>? FromRange { get; set; }

        /// <summary>
        /// IPv4 Prefix List Rule Entry order. - Range: `0`-`4294967294`
        /// </summary>
        [Input("order", required: true)]
        public Input<int> Order { get; set; } = null!;

        /// <summary>
        /// IPv4 Prefix List Rule Entry prefix.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        /// <summary>
        /// IPv4 Prefix List Rule name.
        /// </summary>
        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        /// <summary>
        /// IPv4 Prefix List Rule Entry end range. - Range: `0`-`128` - Default value: `0`
        /// </summary>
        [Input("toRange")]
        public Input<int>? ToRange { get; set; }

        public Ipv4PrefixListRuleEntryArgs()
        {
        }
        public static new Ipv4PrefixListRuleEntryArgs Empty => new Ipv4PrefixListRuleEntryArgs();
    }

    public sealed class Ipv4PrefixListRuleEntryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IPv4 Prefix List Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// IPv4 Prefix List Rule Entry criteria. - Choices: `exact`, `inexact` - Default value: `exact`
        /// </summary>
        [Input("criteria")]
        public Input<string>? Criteria { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// IPv4 Prefix List Rule Entry start range. - Range: `0`-`128` - Default value: `0`
        /// </summary>
        [Input("fromRange")]
        public Input<int>? FromRange { get; set; }

        /// <summary>
        /// IPv4 Prefix List Rule Entry order. - Range: `0`-`4294967294`
        /// </summary>
        [Input("order")]
        public Input<int>? Order { get; set; }

        /// <summary>
        /// IPv4 Prefix List Rule Entry prefix.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        /// <summary>
        /// IPv4 Prefix List Rule name.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// IPv4 Prefix List Rule Entry end range. - Range: `0`-`128` - Default value: `0`
        /// </summary>
        [Input("toRange")]
        public Input<int>? ToRange { get; set; }

        public Ipv4PrefixListRuleEntryState()
        {
        }
        public static new Ipv4PrefixListRuleEntryState Empty => new Ipv4PrefixListRuleEntryState();
    }
}
