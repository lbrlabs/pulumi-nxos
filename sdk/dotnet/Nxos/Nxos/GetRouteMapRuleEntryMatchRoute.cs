// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    public static class GetRouteMapRuleEntryMatchRoute
    {
        public static Task<GetRouteMapRuleEntryMatchRouteResult> InvokeAsync(GetRouteMapRuleEntryMatchRouteArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRouteMapRuleEntryMatchRouteResult>("nxos:nxos/getRouteMapRuleEntryMatchRoute:getRouteMapRuleEntryMatchRoute", args ?? new GetRouteMapRuleEntryMatchRouteArgs(), options.WithDefaults());

        public static Output<GetRouteMapRuleEntryMatchRouteResult> Invoke(GetRouteMapRuleEntryMatchRouteInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRouteMapRuleEntryMatchRouteResult>("nxos:nxos/getRouteMapRuleEntryMatchRoute:getRouteMapRuleEntryMatchRoute", args ?? new GetRouteMapRuleEntryMatchRouteInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRouteMapRuleEntryMatchRouteArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        [Input("order", required: true)]
        public int Order { get; set; }

        [Input("ruleName", required: true)]
        public string RuleName { get; set; } = null!;

        public GetRouteMapRuleEntryMatchRouteArgs()
        {
        }
        public static new GetRouteMapRuleEntryMatchRouteArgs Empty => new GetRouteMapRuleEntryMatchRouteArgs();
    }

    public sealed class GetRouteMapRuleEntryMatchRouteInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("order", required: true)]
        public Input<int> Order { get; set; } = null!;

        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        public GetRouteMapRuleEntryMatchRouteInvokeArgs()
        {
        }
        public static new GetRouteMapRuleEntryMatchRouteInvokeArgs Empty => new GetRouteMapRuleEntryMatchRouteInvokeArgs();
    }


    [OutputType]
    public sealed class GetRouteMapRuleEntryMatchRouteResult
    {
        public readonly string? Device;
        public readonly string Id;
        public readonly int Order;
        public readonly string RuleName;

        [OutputConstructor]
        private GetRouteMapRuleEntryMatchRouteResult(
            string? device,

            string id,

            int order,

            string ruleName)
        {
            Device = device;
            Id = id;
            Order = order;
            RuleName = ruleName;
        }
    }
}
