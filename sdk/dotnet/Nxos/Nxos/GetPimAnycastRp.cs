// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    public static class GetPimAnycastRp
    {
        public static Task<GetPimAnycastRpResult> InvokeAsync(GetPimAnycastRpArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPimAnycastRpResult>("nxos:nxos/getPimAnycastRp:getPimAnycastRp", args ?? new GetPimAnycastRpArgs(), options.WithDefaults());

        public static Output<GetPimAnycastRpResult> Invoke(GetPimAnycastRpInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPimAnycastRpResult>("nxos:nxos/getPimAnycastRp:getPimAnycastRp", args ?? new GetPimAnycastRpInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPimAnycastRpArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        [Input("vrfName", required: true)]
        public string VrfName { get; set; } = null!;

        public GetPimAnycastRpArgs()
        {
        }
        public static new GetPimAnycastRpArgs Empty => new GetPimAnycastRpArgs();
    }

    public sealed class GetPimAnycastRpInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("vrfName", required: true)]
        public Input<string> VrfName { get; set; } = null!;

        public GetPimAnycastRpInvokeArgs()
        {
        }
        public static new GetPimAnycastRpInvokeArgs Empty => new GetPimAnycastRpInvokeArgs();
    }


    [OutputType]
    public sealed class GetPimAnycastRpResult
    {
        public readonly string? Device;
        public readonly string Id;
        public readonly string LocalInterface;
        public readonly string SourceInterface;
        public readonly string VrfName;

        [OutputConstructor]
        private GetPimAnycastRpResult(
            string? device,

            string id,

            string localInterface,

            string sourceInterface,

            string vrfName)
        {
            Device = device;
            Id = id;
            LocalInterface = localInterface;
            SourceInterface = sourceInterface;
            VrfName = vrfName;
        }
    }
}
