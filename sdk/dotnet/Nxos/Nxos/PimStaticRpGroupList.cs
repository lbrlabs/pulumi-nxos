// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    [NxosResourceType("nxos:nxos/pimStaticRpGroupList:PimStaticRpGroupList")]
    public partial class PimStaticRpGroupList : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Group list address information.
        /// </summary>
        [Output("address")]
        public Output<string> Address { get; private set; } = null!;

        /// <summary>
        /// Flag to treat Group Ranges as BiDir. - Default value: `false`
        /// </summary>
        [Output("bidir")]
        public Output<bool> Bidir { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// Flag to override RP preference to use Static over Dynamic RP. - Default value: `false`
        /// </summary>
        [Output("override")]
        public Output<bool> Override { get; private set; } = null!;

        /// <summary>
        /// RP address.
        /// </summary>
        [Output("rpAddress")]
        public Output<string> RpAddress { get; private set; } = null!;

        /// <summary>
        /// VRF name.
        /// </summary>
        [Output("vrfName")]
        public Output<string> VrfName { get; private set; } = null!;


        /// <summary>
        /// Create a PimStaticRpGroupList resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PimStaticRpGroupList(string name, PimStaticRpGroupListArgs args, CustomResourceOptions? options = null)
            : base("nxos:nxos/pimStaticRpGroupList:PimStaticRpGroupList", name, args ?? new PimStaticRpGroupListArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PimStaticRpGroupList(string name, Input<string> id, PimStaticRpGroupListState? state = null, CustomResourceOptions? options = null)
            : base("nxos:nxos/pimStaticRpGroupList:PimStaticRpGroupList", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PimStaticRpGroupList resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PimStaticRpGroupList Get(string name, Input<string> id, PimStaticRpGroupListState? state = null, CustomResourceOptions? options = null)
        {
            return new PimStaticRpGroupList(name, id, state, options);
        }
    }

    public sealed class PimStaticRpGroupListArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Group list address information.
        /// </summary>
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        /// <summary>
        /// Flag to treat Group Ranges as BiDir. - Default value: `false`
        /// </summary>
        [Input("bidir")]
        public Input<bool>? Bidir { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Flag to override RP preference to use Static over Dynamic RP. - Default value: `false`
        /// </summary>
        [Input("override")]
        public Input<bool>? Override { get; set; }

        /// <summary>
        /// RP address.
        /// </summary>
        [Input("rpAddress", required: true)]
        public Input<string> RpAddress { get; set; } = null!;

        /// <summary>
        /// VRF name.
        /// </summary>
        [Input("vrfName", required: true)]
        public Input<string> VrfName { get; set; } = null!;

        public PimStaticRpGroupListArgs()
        {
        }
        public static new PimStaticRpGroupListArgs Empty => new PimStaticRpGroupListArgs();
    }

    public sealed class PimStaticRpGroupListState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Group list address information.
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// Flag to treat Group Ranges as BiDir. - Default value: `false`
        /// </summary>
        [Input("bidir")]
        public Input<bool>? Bidir { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Flag to override RP preference to use Static over Dynamic RP. - Default value: `false`
        /// </summary>
        [Input("override")]
        public Input<bool>? Override { get; set; }

        /// <summary>
        /// RP address.
        /// </summary>
        [Input("rpAddress")]
        public Input<string>? RpAddress { get; set; }

        /// <summary>
        /// VRF name.
        /// </summary>
        [Input("vrfName")]
        public Input<string>? VrfName { get; set; }

        public PimStaticRpGroupListState()
        {
        }
        public static new PimStaticRpGroupListState Empty => new PimStaticRpGroupListState();
    }
}
