// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    public static class GetNtpServer
    {
        public static Task<GetNtpServerResult> InvokeAsync(GetNtpServerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNtpServerResult>("nxos:nxos/getNtpServer:getNtpServer", args ?? new GetNtpServerArgs(), options.WithDefaults());

        public static Output<GetNtpServerResult> Invoke(GetNtpServerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNtpServerResult>("nxos:nxos/getNtpServer:getNtpServer", args ?? new GetNtpServerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNtpServerArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetNtpServerArgs()
        {
        }
        public static new GetNtpServerArgs Empty => new GetNtpServerArgs();
    }

    public sealed class GetNtpServerInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetNtpServerInvokeArgs()
        {
        }
        public static new GetNtpServerInvokeArgs Empty => new GetNtpServerInvokeArgs();
    }


    [OutputType]
    public sealed class GetNtpServerResult
    {
        public readonly string? Device;
        public readonly string Id;
        public readonly int KeyId;
        public readonly int MaxPoll;
        public readonly int MinPoll;
        public readonly string Name;
        public readonly string Type;
        public readonly string Vrf;

        [OutputConstructor]
        private GetNtpServerResult(
            string? device,

            string id,

            int keyId,

            int maxPoll,

            int minPoll,

            string name,

            string type,

            string vrf)
        {
            Device = device;
            Id = id;
            KeyId = keyId;
            MaxPoll = maxPoll;
            MinPoll = minPoll;
            Name = name;
            Type = type;
            Vrf = vrf;
        }
    }
}
