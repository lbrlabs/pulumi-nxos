// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    public static class GetOspfInterface
    {
        public static Task<GetOspfInterfaceResult> InvokeAsync(GetOspfInterfaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOspfInterfaceResult>("nxos:nxos/getOspfInterface:getOspfInterface", args ?? new GetOspfInterfaceArgs(), options.WithDefaults());

        public static Output<GetOspfInterfaceResult> Invoke(GetOspfInterfaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOspfInterfaceResult>("nxos:nxos/getOspfInterface:getOspfInterface", args ?? new GetOspfInterfaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOspfInterfaceArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        [Input("instanceName", required: true)]
        public string InstanceName { get; set; } = null!;

        [Input("interfaceId", required: true)]
        public string InterfaceId { get; set; } = null!;

        [Input("vrfName", required: true)]
        public string VrfName { get; set; } = null!;

        public GetOspfInterfaceArgs()
        {
        }
        public static new GetOspfInterfaceArgs Empty => new GetOspfInterfaceArgs();
    }

    public sealed class GetOspfInterfaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("instanceName", required: true)]
        public Input<string> InstanceName { get; set; } = null!;

        [Input("interfaceId", required: true)]
        public Input<string> InterfaceId { get; set; } = null!;

        [Input("vrfName", required: true)]
        public Input<string> VrfName { get; set; } = null!;

        public GetOspfInterfaceInvokeArgs()
        {
        }
        public static new GetOspfInterfaceInvokeArgs Empty => new GetOspfInterfaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetOspfInterfaceResult
    {
        public readonly bool AdvertiseSecondaries;
        public readonly string Area;
        public readonly string Bfd;
        public readonly int Cost;
        public readonly int DeadInterval;
        public readonly string? Device;
        public readonly int HelloInterval;
        public readonly string Id;
        public readonly string InstanceName;
        public readonly string InterfaceId;
        public readonly string NetworkType;
        public readonly string Passive;
        public readonly int Priority;
        public readonly string VrfName;

        [OutputConstructor]
        private GetOspfInterfaceResult(
            bool advertiseSecondaries,

            string area,

            string bfd,

            int cost,

            int deadInterval,

            string? device,

            int helloInterval,

            string id,

            string instanceName,

            string interfaceId,

            string networkType,

            string passive,

            int priority,

            string vrfName)
        {
            AdvertiseSecondaries = advertiseSecondaries;
            Area = area;
            Bfd = bfd;
            Cost = cost;
            DeadInterval = deadInterval;
            Device = device;
            HelloInterval = helloInterval;
            Id = id;
            InstanceName = instanceName;
            InterfaceId = interfaceId;
            NetworkType = networkType;
            Passive = passive;
            Priority = priority;
            VrfName = vrfName;
        }
    }
}
