// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    public static class GetSubinterface
    {
        public static Task<GetSubinterfaceResult> InvokeAsync(GetSubinterfaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubinterfaceResult>("nxos:nxos/getSubinterface:getSubinterface", args ?? new GetSubinterfaceArgs(), options.WithDefaults());

        public static Output<GetSubinterfaceResult> Invoke(GetSubinterfaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubinterfaceResult>("nxos:nxos/getSubinterface:getSubinterface", args ?? new GetSubinterfaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubinterfaceArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        [Input("interfaceId", required: true)]
        public string InterfaceId { get; set; } = null!;

        public GetSubinterfaceArgs()
        {
        }
        public static new GetSubinterfaceArgs Empty => new GetSubinterfaceArgs();
    }

    public sealed class GetSubinterfaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("interfaceId", required: true)]
        public Input<string> InterfaceId { get; set; } = null!;

        public GetSubinterfaceInvokeArgs()
        {
        }
        public static new GetSubinterfaceInvokeArgs Empty => new GetSubinterfaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubinterfaceResult
    {
        public readonly string AdminState;
        public readonly int Bandwidth;
        public readonly int Delay;
        public readonly string Description;
        public readonly string? Device;
        public readonly string Encap;
        public readonly string Id;
        public readonly string InterfaceId;
        public readonly string LinkLogging;
        public readonly string Medium;
        public readonly int Mtu;

        [OutputConstructor]
        private GetSubinterfaceResult(
            string adminState,

            int bandwidth,

            int delay,

            string description,

            string? device,

            string encap,

            string id,

            string interfaceId,

            string linkLogging,

            string medium,

            int mtu)
        {
            AdminState = adminState;
            Bandwidth = bandwidth;
            Delay = delay;
            Description = description;
            Device = device;
            Encap = encap;
            Id = id;
            InterfaceId = interfaceId;
            LinkLogging = linkLogging;
            Medium = medium;
            Mtu = mtu;
        }
    }
}
