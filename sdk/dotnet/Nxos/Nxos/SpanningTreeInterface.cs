// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    [NxosResourceType("nxos:nxos/spanningTreeInterface:SpanningTreeInterface")]
    public partial class SpanningTreeInterface : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The administrative state of the object or policy. - Choices: `enabled`, `disabled` - Default value: `enabled`
        /// </summary>
        [Output("adminState")]
        public Output<string> AdminState { get; private set; } = null!;

        /// <summary>
        /// BPDU filter mode. - Choices: `default`, `enable`, `disable` - Default value: `default`
        /// </summary>
        [Output("bpduFilter")]
        public Output<string> BpduFilter { get; private set; } = null!;

        /// <summary>
        /// BPDU guard mode. - Choices: `default`, `enable`, `disable` - Default value: `default`
        /// </summary>
        [Output("bpduGuard")]
        public Output<string> BpduGuard { get; private set; } = null!;

        /// <summary>
        /// Port path cost. - Range: `0`-`200000000` - Default value: `0`
        /// </summary>
        [Output("cost")]
        public Output<int> Cost { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// Guard mode. - Choices: `default`, `root`, `loop`, `none` - Default value: `default`
        /// </summary>
        [Output("guard")]
        public Output<string> Guard { get; private set; } = null!;

        /// <summary>
        /// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
        /// </summary>
        [Output("interfaceId")]
        public Output<string> InterfaceId { get; private set; } = null!;

        /// <summary>
        /// Link type. - Choices: `auto`, `p2p`, `shared` - Default value: `auto`
        /// </summary>
        [Output("linkType")]
        public Output<string> LinkType { get; private set; } = null!;

        /// <summary>
        /// Port mode. - Choices: `default`, `edge`, `network`, `normal`, `trunk` - Default value: `default`
        /// </summary>
        [Output("mode")]
        public Output<string> Mode { get; private set; } = null!;

        /// <summary>
        /// Port priority. - Range: `0`-`224` - Default value: `128`
        /// </summary>
        [Output("priority")]
        public Output<int> Priority { get; private set; } = null!;


        /// <summary>
        /// Create a SpanningTreeInterface resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SpanningTreeInterface(string name, SpanningTreeInterfaceArgs args, CustomResourceOptions? options = null)
            : base("nxos:nxos/spanningTreeInterface:SpanningTreeInterface", name, args ?? new SpanningTreeInterfaceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SpanningTreeInterface(string name, Input<string> id, SpanningTreeInterfaceState? state = null, CustomResourceOptions? options = null)
            : base("nxos:nxos/spanningTreeInterface:SpanningTreeInterface", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SpanningTreeInterface resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SpanningTreeInterface Get(string name, Input<string> id, SpanningTreeInterfaceState? state = null, CustomResourceOptions? options = null)
        {
            return new SpanningTreeInterface(name, id, state, options);
        }
    }

    public sealed class SpanningTreeInterfaceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The administrative state of the object or policy. - Choices: `enabled`, `disabled` - Default value: `enabled`
        /// </summary>
        [Input("adminState")]
        public Input<string>? AdminState { get; set; }

        /// <summary>
        /// BPDU filter mode. - Choices: `default`, `enable`, `disable` - Default value: `default`
        /// </summary>
        [Input("bpduFilter")]
        public Input<string>? BpduFilter { get; set; }

        /// <summary>
        /// BPDU guard mode. - Choices: `default`, `enable`, `disable` - Default value: `default`
        /// </summary>
        [Input("bpduGuard")]
        public Input<string>? BpduGuard { get; set; }

        /// <summary>
        /// Port path cost. - Range: `0`-`200000000` - Default value: `0`
        /// </summary>
        [Input("cost")]
        public Input<int>? Cost { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Guard mode. - Choices: `default`, `root`, `loop`, `none` - Default value: `default`
        /// </summary>
        [Input("guard")]
        public Input<string>? Guard { get; set; }

        /// <summary>
        /// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
        /// </summary>
        [Input("interfaceId", required: true)]
        public Input<string> InterfaceId { get; set; } = null!;

        /// <summary>
        /// Link type. - Choices: `auto`, `p2p`, `shared` - Default value: `auto`
        /// </summary>
        [Input("linkType")]
        public Input<string>? LinkType { get; set; }

        /// <summary>
        /// Port mode. - Choices: `default`, `edge`, `network`, `normal`, `trunk` - Default value: `default`
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Port priority. - Range: `0`-`224` - Default value: `128`
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        public SpanningTreeInterfaceArgs()
        {
        }
        public static new SpanningTreeInterfaceArgs Empty => new SpanningTreeInterfaceArgs();
    }

    public sealed class SpanningTreeInterfaceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The administrative state of the object or policy. - Choices: `enabled`, `disabled` - Default value: `enabled`
        /// </summary>
        [Input("adminState")]
        public Input<string>? AdminState { get; set; }

        /// <summary>
        /// BPDU filter mode. - Choices: `default`, `enable`, `disable` - Default value: `default`
        /// </summary>
        [Input("bpduFilter")]
        public Input<string>? BpduFilter { get; set; }

        /// <summary>
        /// BPDU guard mode. - Choices: `default`, `enable`, `disable` - Default value: `default`
        /// </summary>
        [Input("bpduGuard")]
        public Input<string>? BpduGuard { get; set; }

        /// <summary>
        /// Port path cost. - Range: `0`-`200000000` - Default value: `0`
        /// </summary>
        [Input("cost")]
        public Input<int>? Cost { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Guard mode. - Choices: `default`, `root`, `loop`, `none` - Default value: `default`
        /// </summary>
        [Input("guard")]
        public Input<string>? Guard { get; set; }

        /// <summary>
        /// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
        /// </summary>
        [Input("interfaceId")]
        public Input<string>? InterfaceId { get; set; }

        /// <summary>
        /// Link type. - Choices: `auto`, `p2p`, `shared` - Default value: `auto`
        /// </summary>
        [Input("linkType")]
        public Input<string>? LinkType { get; set; }

        /// <summary>
        /// Port mode. - Choices: `default`, `edge`, `network`, `normal`, `trunk` - Default value: `default`
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Port priority. - Range: `0`-`224` - Default value: `128`
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        public SpanningTreeInterfaceState()
        {
        }
        public static new SpanningTreeInterfaceState Empty => new SpanningTreeInterfaceState();
    }
}
