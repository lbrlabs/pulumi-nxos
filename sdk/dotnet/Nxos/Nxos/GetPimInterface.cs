// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    public static class GetPimInterface
    {
        public static Task<GetPimInterfaceResult> InvokeAsync(GetPimInterfaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPimInterfaceResult>("nxos:nxos/getPimInterface:getPimInterface", args ?? new GetPimInterfaceArgs(), options.WithDefaults());

        public static Output<GetPimInterfaceResult> Invoke(GetPimInterfaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPimInterfaceResult>("nxos:nxos/getPimInterface:getPimInterface", args ?? new GetPimInterfaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPimInterfaceArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        [Input("interfaceId", required: true)]
        public string InterfaceId { get; set; } = null!;

        [Input("vrfName", required: true)]
        public string VrfName { get; set; } = null!;

        public GetPimInterfaceArgs()
        {
        }
        public static new GetPimInterfaceArgs Empty => new GetPimInterfaceArgs();
    }

    public sealed class GetPimInterfaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("interfaceId", required: true)]
        public Input<string> InterfaceId { get; set; } = null!;

        [Input("vrfName", required: true)]
        public Input<string> VrfName { get; set; } = null!;

        public GetPimInterfaceInvokeArgs()
        {
        }
        public static new GetPimInterfaceInvokeArgs Empty => new GetPimInterfaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetPimInterfaceResult
    {
        public readonly string AdminState;
        public readonly string Bfd;
        public readonly string? Device;
        public readonly int DrPriority;
        public readonly string Id;
        public readonly string InterfaceId;
        public readonly bool Passive;
        public readonly bool SparseMode;
        public readonly string VrfName;

        [OutputConstructor]
        private GetPimInterfaceResult(
            string adminState,

            string bfd,

            string? device,

            int drPriority,

            string id,

            string interfaceId,

            bool passive,

            bool sparseMode,

            string vrfName)
        {
            AdminState = adminState;
            Bfd = bfd;
            Device = device;
            DrPriority = drPriority;
            Id = id;
            InterfaceId = interfaceId;
            Passive = passive;
            SparseMode = sparseMode;
            VrfName = vrfName;
        }
    }
}
