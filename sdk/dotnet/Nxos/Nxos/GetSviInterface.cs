// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    public static class GetSviInterface
    {
        public static Task<GetSviInterfaceResult> InvokeAsync(GetSviInterfaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSviInterfaceResult>("nxos:nxos/getSviInterface:getSviInterface", args ?? new GetSviInterfaceArgs(), options.WithDefaults());

        public static Output<GetSviInterfaceResult> Invoke(GetSviInterfaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSviInterfaceResult>("nxos:nxos/getSviInterface:getSviInterface", args ?? new GetSviInterfaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSviInterfaceArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        [Input("interfaceId", required: true)]
        public string InterfaceId { get; set; } = null!;

        public GetSviInterfaceArgs()
        {
        }
        public static new GetSviInterfaceArgs Empty => new GetSviInterfaceArgs();
    }

    public sealed class GetSviInterfaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("interfaceId", required: true)]
        public Input<string> InterfaceId { get; set; } = null!;

        public GetSviInterfaceInvokeArgs()
        {
        }
        public static new GetSviInterfaceInvokeArgs Empty => new GetSviInterfaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetSviInterfaceResult
    {
        public readonly string AdminState;
        public readonly int Bandwidth;
        public readonly int Delay;
        public readonly string Description;
        public readonly string? Device;
        public readonly string Id;
        public readonly string InterfaceId;
        public readonly string Medium;
        public readonly int Mtu;

        [OutputConstructor]
        private GetSviInterfaceResult(
            string adminState,

            int bandwidth,

            int delay,

            string description,

            string? device,

            string id,

            string interfaceId,

            string medium,

            int mtu)
        {
            AdminState = adminState;
            Bandwidth = bandwidth;
            Delay = delay;
            Description = description;
            Device = device;
            Id = id;
            InterfaceId = interfaceId;
            Medium = medium;
            Mtu = mtu;
        }
    }
}
