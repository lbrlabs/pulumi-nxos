// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    [NxosResourceType("nxos:nxos/bgpPeerTemplateMaxPrefix:BgpPeerTemplateMaxPrefix")]
    public partial class BgpPeerTemplateMaxPrefix : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Action to do when limit is exceeded. - Choices: `log`, `shut`, `restart` - Default value: `shut`
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,
        /// `vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,
        /// `ipv4-mdt` - Default value: `ipv4-ucast`
        /// </summary>
        [Output("addressFamily")]
        public Output<string> AddressFamily { get; private set; } = null!;

        /// <summary>
        /// Autonomous system number.
        /// </summary>
        [Output("asn")]
        public Output<string> Asn { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// Maximum number of prefixes allowed from the peer. - Range: `0`-`4294967295`
        /// </summary>
        [Output("maximumPrefix")]
        public Output<int?> MaximumPrefix { get; private set; } = null!;

        /// <summary>
        /// The period of time in minutes before restarting the peer when the prefix limit is reached. - Default value: `0`
        /// </summary>
        [Output("restartTime")]
        public Output<int> RestartTime { get; private set; } = null!;

        /// <summary>
        /// Peer template name.
        /// </summary>
        [Output("templateName")]
        public Output<string> TemplateName { get; private set; } = null!;

        /// <summary>
        /// The period of time in minutes before restarting the peer when the prefix limit is reached. - Range: `0`-`100` - Default
        /// value: `0`
        /// </summary>
        [Output("threshold")]
        public Output<int> Threshold { get; private set; } = null!;


        /// <summary>
        /// Create a BgpPeerTemplateMaxPrefix resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BgpPeerTemplateMaxPrefix(string name, BgpPeerTemplateMaxPrefixArgs args, CustomResourceOptions? options = null)
            : base("nxos:nxos/bgpPeerTemplateMaxPrefix:BgpPeerTemplateMaxPrefix", name, args ?? new BgpPeerTemplateMaxPrefixArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BgpPeerTemplateMaxPrefix(string name, Input<string> id, BgpPeerTemplateMaxPrefixState? state = null, CustomResourceOptions? options = null)
            : base("nxos:nxos/bgpPeerTemplateMaxPrefix:BgpPeerTemplateMaxPrefix", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BgpPeerTemplateMaxPrefix resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BgpPeerTemplateMaxPrefix Get(string name, Input<string> id, BgpPeerTemplateMaxPrefixState? state = null, CustomResourceOptions? options = null)
        {
            return new BgpPeerTemplateMaxPrefix(name, id, state, options);
        }
    }

    public sealed class BgpPeerTemplateMaxPrefixArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Action to do when limit is exceeded. - Choices: `log`, `shut`, `restart` - Default value: `shut`
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,
        /// `vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,
        /// `ipv4-mdt` - Default value: `ipv4-ucast`
        /// </summary>
        [Input("addressFamily", required: true)]
        public Input<string> AddressFamily { get; set; } = null!;

        /// <summary>
        /// Autonomous system number.
        /// </summary>
        [Input("asn", required: true)]
        public Input<string> Asn { get; set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Maximum number of prefixes allowed from the peer. - Range: `0`-`4294967295`
        /// </summary>
        [Input("maximumPrefix")]
        public Input<int>? MaximumPrefix { get; set; }

        /// <summary>
        /// The period of time in minutes before restarting the peer when the prefix limit is reached. - Default value: `0`
        /// </summary>
        [Input("restartTime")]
        public Input<int>? RestartTime { get; set; }

        /// <summary>
        /// Peer template name.
        /// </summary>
        [Input("templateName", required: true)]
        public Input<string> TemplateName { get; set; } = null!;

        /// <summary>
        /// The period of time in minutes before restarting the peer when the prefix limit is reached. - Range: `0`-`100` - Default
        /// value: `0`
        /// </summary>
        [Input("threshold")]
        public Input<int>? Threshold { get; set; }

        public BgpPeerTemplateMaxPrefixArgs()
        {
        }
        public static new BgpPeerTemplateMaxPrefixArgs Empty => new BgpPeerTemplateMaxPrefixArgs();
    }

    public sealed class BgpPeerTemplateMaxPrefixState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Action to do when limit is exceeded. - Choices: `log`, `shut`, `restart` - Default value: `shut`
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,
        /// `vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,
        /// `ipv4-mdt` - Default value: `ipv4-ucast`
        /// </summary>
        [Input("addressFamily")]
        public Input<string>? AddressFamily { get; set; }

        /// <summary>
        /// Autonomous system number.
        /// </summary>
        [Input("asn")]
        public Input<string>? Asn { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Maximum number of prefixes allowed from the peer. - Range: `0`-`4294967295`
        /// </summary>
        [Input("maximumPrefix")]
        public Input<int>? MaximumPrefix { get; set; }

        /// <summary>
        /// The period of time in minutes before restarting the peer when the prefix limit is reached. - Default value: `0`
        /// </summary>
        [Input("restartTime")]
        public Input<int>? RestartTime { get; set; }

        /// <summary>
        /// Peer template name.
        /// </summary>
        [Input("templateName")]
        public Input<string>? TemplateName { get; set; }

        /// <summary>
        /// The period of time in minutes before restarting the peer when the prefix limit is reached. - Range: `0`-`100` - Default
        /// value: `0`
        /// </summary>
        [Input("threshold")]
        public Input<int>? Threshold { get; set; }

        public BgpPeerTemplateMaxPrefixState()
        {
        }
        public static new BgpPeerTemplateMaxPrefixState Empty => new BgpPeerTemplateMaxPrefixState();
    }
}
