// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    public static class GetIpv4Interface
    {
        public static Task<GetIpv4InterfaceResult> InvokeAsync(GetIpv4InterfaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpv4InterfaceResult>("nxos:nxos/getIpv4Interface:getIpv4Interface", args ?? new GetIpv4InterfaceArgs(), options.WithDefaults());

        public static Output<GetIpv4InterfaceResult> Invoke(GetIpv4InterfaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpv4InterfaceResult>("nxos:nxos/getIpv4Interface:getIpv4Interface", args ?? new GetIpv4InterfaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpv4InterfaceArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        [Input("interfaceId", required: true)]
        public string InterfaceId { get; set; } = null!;

        [Input("vrf", required: true)]
        public string Vrf { get; set; } = null!;

        public GetIpv4InterfaceArgs()
        {
        }
        public static new GetIpv4InterfaceArgs Empty => new GetIpv4InterfaceArgs();
    }

    public sealed class GetIpv4InterfaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("interfaceId", required: true)]
        public Input<string> InterfaceId { get; set; } = null!;

        [Input("vrf", required: true)]
        public Input<string> Vrf { get; set; } = null!;

        public GetIpv4InterfaceInvokeArgs()
        {
        }
        public static new GetIpv4InterfaceInvokeArgs Empty => new GetIpv4InterfaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpv4InterfaceResult
    {
        public readonly string? Device;
        public readonly string DropGlean;
        public readonly string Forward;
        public readonly string Id;
        public readonly string InterfaceId;
        public readonly string Unnumbered;
        public readonly string Urpf;
        public readonly string Vrf;

        [OutputConstructor]
        private GetIpv4InterfaceResult(
            string? device,

            string dropGlean,

            string forward,

            string id,

            string interfaceId,

            string unnumbered,

            string urpf,

            string vrf)
        {
            Device = device;
            DropGlean = dropGlean;
            Forward = forward;
            Id = id;
            InterfaceId = interfaceId;
            Unnumbered = unnumbered;
            Urpf = urpf;
            Vrf = vrf;
        }
    }
}
