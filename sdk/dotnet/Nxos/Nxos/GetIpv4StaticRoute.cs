// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    public static class GetIpv4StaticRoute
    {
        public static Task<GetIpv4StaticRouteResult> InvokeAsync(GetIpv4StaticRouteArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpv4StaticRouteResult>("nxos:nxos/getIpv4StaticRoute:getIpv4StaticRoute", args ?? new GetIpv4StaticRouteArgs(), options.WithDefaults());

        public static Output<GetIpv4StaticRouteResult> Invoke(GetIpv4StaticRouteInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpv4StaticRouteResult>("nxos:nxos/getIpv4StaticRoute:getIpv4StaticRoute", args ?? new GetIpv4StaticRouteInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpv4StaticRouteArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        [Input("prefix", required: true)]
        public string Prefix { get; set; } = null!;

        [Input("vrfName", required: true)]
        public string VrfName { get; set; } = null!;

        public GetIpv4StaticRouteArgs()
        {
        }
        public static new GetIpv4StaticRouteArgs Empty => new GetIpv4StaticRouteArgs();
    }

    public sealed class GetIpv4StaticRouteInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("prefix", required: true)]
        public Input<string> Prefix { get; set; } = null!;

        [Input("vrfName", required: true)]
        public Input<string> VrfName { get; set; } = null!;

        public GetIpv4StaticRouteInvokeArgs()
        {
        }
        public static new GetIpv4StaticRouteInvokeArgs Empty => new GetIpv4StaticRouteInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpv4StaticRouteResult
    {
        public readonly string? Device;
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetIpv4StaticRouteNextHopResult> NextHops;
        public readonly string Prefix;
        public readonly string VrfName;

        [OutputConstructor]
        private GetIpv4StaticRouteResult(
            string? device,

            string id,

            ImmutableArray<Outputs.GetIpv4StaticRouteNextHopResult> nextHops,

            string prefix,

            string vrfName)
        {
            Device = device;
            Id = id;
            NextHops = nextHops;
            Prefix = prefix;
            VrfName = vrfName;
        }
    }
}
