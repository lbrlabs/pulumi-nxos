// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    public static class GetQueuingQosPolicySystemOut
    {
        public static Task<GetQueuingQosPolicySystemOutResult> InvokeAsync(GetQueuingQosPolicySystemOutArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetQueuingQosPolicySystemOutResult>("nxos:nxos/getQueuingQosPolicySystemOut:getQueuingQosPolicySystemOut", args ?? new GetQueuingQosPolicySystemOutArgs(), options.WithDefaults());

        public static Output<GetQueuingQosPolicySystemOutResult> Invoke(GetQueuingQosPolicySystemOutInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetQueuingQosPolicySystemOutResult>("nxos:nxos/getQueuingQosPolicySystemOut:getQueuingQosPolicySystemOut", args ?? new GetQueuingQosPolicySystemOutInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetQueuingQosPolicySystemOutArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        public GetQueuingQosPolicySystemOutArgs()
        {
        }
        public static new GetQueuingQosPolicySystemOutArgs Empty => new GetQueuingQosPolicySystemOutArgs();
    }

    public sealed class GetQueuingQosPolicySystemOutInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        public GetQueuingQosPolicySystemOutInvokeArgs()
        {
        }
        public static new GetQueuingQosPolicySystemOutInvokeArgs Empty => new GetQueuingQosPolicySystemOutInvokeArgs();
    }


    [OutputType]
    public sealed class GetQueuingQosPolicySystemOutResult
    {
        public readonly string? Device;
        public readonly string Id;

        [OutputConstructor]
        private GetQueuingQosPolicySystemOutResult(
            string? device,

            string id)
        {
            Device = device;
            Id = id;
        }
    }
}
