// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    public static class GetDhcpRelayAddress
    {
        public static Task<GetDhcpRelayAddressResult> InvokeAsync(GetDhcpRelayAddressArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDhcpRelayAddressResult>("nxos:nxos/getDhcpRelayAddress:getDhcpRelayAddress", args ?? new GetDhcpRelayAddressArgs(), options.WithDefaults());

        public static Output<GetDhcpRelayAddressResult> Invoke(GetDhcpRelayAddressInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDhcpRelayAddressResult>("nxos:nxos/getDhcpRelayAddress:getDhcpRelayAddress", args ?? new GetDhcpRelayAddressInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDhcpRelayAddressArgs : global::Pulumi.InvokeArgs
    {
        [Input("address", required: true)]
        public string Address { get; set; } = null!;

        [Input("device")]
        public string? Device { get; set; }

        [Input("interfaceId", required: true)]
        public string InterfaceId { get; set; } = null!;

        [Input("vrf", required: true)]
        public string Vrf { get; set; } = null!;

        public GetDhcpRelayAddressArgs()
        {
        }
        public static new GetDhcpRelayAddressArgs Empty => new GetDhcpRelayAddressArgs();
    }

    public sealed class GetDhcpRelayAddressInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("interfaceId", required: true)]
        public Input<string> InterfaceId { get; set; } = null!;

        [Input("vrf", required: true)]
        public Input<string> Vrf { get; set; } = null!;

        public GetDhcpRelayAddressInvokeArgs()
        {
        }
        public static new GetDhcpRelayAddressInvokeArgs Empty => new GetDhcpRelayAddressInvokeArgs();
    }


    [OutputType]
    public sealed class GetDhcpRelayAddressResult
    {
        public readonly string Address;
        public readonly string? Device;
        public readonly string Id;
        public readonly string InterfaceId;
        public readonly string Vrf;

        [OutputConstructor]
        private GetDhcpRelayAddressResult(
            string address,

            string? device,

            string id,

            string interfaceId,

            string vrf)
        {
            Address = address;
            Device = device;
            Id = id;
            InterfaceId = interfaceId;
            Vrf = vrf;
        }
    }
}
