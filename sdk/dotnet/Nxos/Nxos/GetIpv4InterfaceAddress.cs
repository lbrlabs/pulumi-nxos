// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    public static class GetIpv4InterfaceAddress
    {
        public static Task<GetIpv4InterfaceAddressResult> InvokeAsync(GetIpv4InterfaceAddressArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpv4InterfaceAddressResult>("nxos:nxos/getIpv4InterfaceAddress:getIpv4InterfaceAddress", args ?? new GetIpv4InterfaceAddressArgs(), options.WithDefaults());

        public static Output<GetIpv4InterfaceAddressResult> Invoke(GetIpv4InterfaceAddressInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpv4InterfaceAddressResult>("nxos:nxos/getIpv4InterfaceAddress:getIpv4InterfaceAddress", args ?? new GetIpv4InterfaceAddressInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpv4InterfaceAddressArgs : global::Pulumi.InvokeArgs
    {
        [Input("address", required: true)]
        public string Address { get; set; } = null!;

        [Input("device")]
        public string? Device { get; set; }

        [Input("interfaceId", required: true)]
        public string InterfaceId { get; set; } = null!;

        [Input("vrf", required: true)]
        public string Vrf { get; set; } = null!;

        public GetIpv4InterfaceAddressArgs()
        {
        }
        public static new GetIpv4InterfaceAddressArgs Empty => new GetIpv4InterfaceAddressArgs();
    }

    public sealed class GetIpv4InterfaceAddressInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("interfaceId", required: true)]
        public Input<string> InterfaceId { get; set; } = null!;

        [Input("vrf", required: true)]
        public Input<string> Vrf { get; set; } = null!;

        public GetIpv4InterfaceAddressInvokeArgs()
        {
        }
        public static new GetIpv4InterfaceAddressInvokeArgs Empty => new GetIpv4InterfaceAddressInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpv4InterfaceAddressResult
    {
        public readonly string Address;
        public readonly string? Device;
        public readonly string Id;
        public readonly string InterfaceId;
        public readonly string Type;
        public readonly string Vrf;

        [OutputConstructor]
        private GetIpv4InterfaceAddressResult(
            string address,

            string? device,

            string id,

            string interfaceId,

            string type,

            string vrf)
        {
            Address = address;
            Device = device;
            Id = id;
            InterfaceId = interfaceId;
            Type = type;
            Vrf = vrf;
        }
    }
}
