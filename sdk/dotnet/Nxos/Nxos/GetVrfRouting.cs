// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos.Nxos
{
    public static class GetVrfRouting
    {
        public static Task<GetVrfRoutingResult> InvokeAsync(GetVrfRoutingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVrfRoutingResult>("nxos:nxos/getVrfRouting:getVrfRouting", args ?? new GetVrfRoutingArgs(), options.WithDefaults());

        public static Output<GetVrfRoutingResult> Invoke(GetVrfRoutingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVrfRoutingResult>("nxos:nxos/getVrfRouting:getVrfRouting", args ?? new GetVrfRoutingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVrfRoutingArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        [Input("vrf", required: true)]
        public string Vrf { get; set; } = null!;

        public GetVrfRoutingArgs()
        {
        }
        public static new GetVrfRoutingArgs Empty => new GetVrfRoutingArgs();
    }

    public sealed class GetVrfRoutingInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("vrf", required: true)]
        public Input<string> Vrf { get; set; } = null!;

        public GetVrfRoutingInvokeArgs()
        {
        }
        public static new GetVrfRoutingInvokeArgs Empty => new GetVrfRoutingInvokeArgs();
    }


    [OutputType]
    public sealed class GetVrfRoutingResult
    {
        public readonly string? Device;
        public readonly string Id;
        public readonly string RouteDistinguisher;
        public readonly string Vrf;

        [OutputConstructor]
        private GetVrfRoutingResult(
            string? device,

            string id,

            string routeDistinguisher,

            string vrf)
        {
            Device = device;
            Id = id;
            RouteDistinguisher = routeDistinguisher;
            Vrf = vrf;
        }
    }
}
