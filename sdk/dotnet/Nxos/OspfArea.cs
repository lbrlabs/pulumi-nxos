// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos
{
    /// <summary>
    /// This resource can manage the OSPF Area configuration.
    /// 
    /// - API Documentation: [ospfArea](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:Area/)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Nxos = Lbrlabs.PulumiPackage.Nxos;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Nxos.OspfArea("example", new()
    ///     {
    ///         AreaId = "0.0.0.10",
    ///         AuthenticationType = "none",
    ///         Cost = 10,
    ///         InstanceName = "OSPF1",
    ///         Type = "stub",
    ///         VrfName = "VRF1",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import nxos:index/ospfArea:OspfArea example "sys/ospf/inst-[OSPF1]/dom-[VRF1]/area-[0.0.0.10]"
    /// ```
    /// </summary>
    [NxosResourceType("nxos:index/ospfArea:OspfArea")]
    public partial class OspfArea : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
        /// </summary>
        [Output("areaId")]
        public Output<string> AreaId { get; private set; } = null!;

        /// <summary>
        /// Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`
        /// </summary>
        [Output("authenticationType")]
        public Output<string> AuthenticationType { get; private set; } = null!;

        /// <summary>
        /// Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types. - Range: `0`-`16777215` - Default
        /// value: `1`
        /// </summary>
        [Output("cost")]
        public Output<int> Cost { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// OSPF instance name.
        /// </summary>
        [Output("instanceName")]
        public Output<string> InstanceName { get; private set; } = null!;

        /// <summary>
        /// Area type. - Choices: `regular`, `stub`, `nssa` - Default value: `regular`
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// VRF name.
        /// </summary>
        [Output("vrfName")]
        public Output<string> VrfName { get; private set; } = null!;


        /// <summary>
        /// Create a OspfArea resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OspfArea(string name, OspfAreaArgs args, CustomResourceOptions? options = null)
            : base("nxos:index/ospfArea:OspfArea", name, args ?? new OspfAreaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OspfArea(string name, Input<string> id, OspfAreaState? state = null, CustomResourceOptions? options = null)
            : base("nxos:index/ospfArea:OspfArea", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OspfArea resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OspfArea Get(string name, Input<string> id, OspfAreaState? state = null, CustomResourceOptions? options = null)
        {
            return new OspfArea(name, id, state, options);
        }
    }

    public sealed class OspfAreaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
        /// </summary>
        [Input("areaId", required: true)]
        public Input<string> AreaId { get; set; } = null!;

        /// <summary>
        /// Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types. - Range: `0`-`16777215` - Default
        /// value: `1`
        /// </summary>
        [Input("cost")]
        public Input<int>? Cost { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// OSPF instance name.
        /// </summary>
        [Input("instanceName", required: true)]
        public Input<string> InstanceName { get; set; } = null!;

        /// <summary>
        /// Area type. - Choices: `regular`, `stub`, `nssa` - Default value: `regular`
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// VRF name.
        /// </summary>
        [Input("vrfName", required: true)]
        public Input<string> VrfName { get; set; } = null!;

        public OspfAreaArgs()
        {
        }
        public static new OspfAreaArgs Empty => new OspfAreaArgs();
    }

    public sealed class OspfAreaState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
        /// </summary>
        [Input("areaId")]
        public Input<string>? AreaId { get; set; }

        /// <summary>
        /// Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types. - Range: `0`-`16777215` - Default
        /// value: `1`
        /// </summary>
        [Input("cost")]
        public Input<int>? Cost { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// OSPF instance name.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// Area type. - Choices: `regular`, `stub`, `nssa` - Default value: `regular`
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// VRF name.
        /// </summary>
        [Input("vrfName")]
        public Input<string>? VrfName { get; set; }

        public OspfAreaState()
        {
        }
        public static new OspfAreaState Empty => new OspfAreaState();
    }
}
