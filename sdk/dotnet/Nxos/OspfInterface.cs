// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos
{
    /// <summary>
    /// This resource can manage the OSPF interface configuration.
    /// 
    /// - API Documentation: [ospfIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:If/)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Nxos = Lbrlabs.PulumiPackage.Nxos;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Nxos.OspfInterface("example", new()
    ///     {
    ///         AdvertiseSecondaries = false,
    ///         Area = "0.0.0.10",
    ///         Bfd = "disabled",
    ///         Cost = 1000,
    ///         DeadInterval = 60,
    ///         HelloInterval = 15,
    ///         InstanceName = "OSPF1",
    ///         InterfaceId = "eth1/10",
    ///         NetworkType = "p2p",
    ///         Passive = "enabled",
    ///         Priority = 10,
    ///         VrfName = "VRF1",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import nxos:index/ospfInterface:OspfInterface example "sys/ospf/inst-[OSPF1]/dom-[VRF1]/if-[eth1/10]"
    /// ```
    /// </summary>
    [NxosResourceType("nxos:index/ospfInterface:OspfInterface")]
    public partial class OspfInterface : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Advertise secondary IP addresses. - Default value: `true`
        /// </summary>
        [Output("advertiseSecondaries")]
        public Output<bool> AdvertiseSecondaries { get; private set; } = null!;

        /// <summary>
        /// Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
        /// </summary>
        [Output("area")]
        public Output<string> Area { get; private set; } = null!;

        /// <summary>
        /// Bidirectional Forwarding Detection (BFD). - Choices: `unspecified`, `enabled`, `disabled` - Default value: `unspecified`
        /// </summary>
        [Output("bfd")]
        public Output<string> Bfd { get; private set; } = null!;

        /// <summary>
        /// Specifies the cost of interface. - Range: `0`-`65535` - Default value: `0`
        /// </summary>
        [Output("cost")]
        public Output<int> Cost { get; private set; } = null!;

        /// <summary>
        /// Dead interval, interval after which router declares that neighbor as down. - Range: `0`-`65535` - Default value: `0`
        /// </summary>
        [Output("deadInterval")]
        public Output<int> DeadInterval { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// Hello interval, interval between hello packets that OSPF sends on the interface. - Range: `0`-`65535` - Default value:
        /// `10`
        /// </summary>
        [Output("helloInterval")]
        public Output<int> HelloInterval { get; private set; } = null!;

        /// <summary>
        /// OSPF instance name.
        /// </summary>
        [Output("instanceName")]
        public Output<string> InstanceName { get; private set; } = null!;

        /// <summary>
        /// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
        /// </summary>
        [Output("interfaceId")]
        public Output<string> InterfaceId { get; private set; } = null!;

        /// <summary>
        /// Network type. - Choices: `unspecified`, `p2p`, `bcast` - Default value: `unspecified`
        /// </summary>
        [Output("networkType")]
        public Output<string> NetworkType { get; private set; } = null!;

        /// <summary>
        /// Passive interface control. Interface can be configured as passive or non-passive. - Choices: `unspecified`, `enabled`,
        /// `disabled` - Default value: `unspecified`
        /// </summary>
        [Output("passive")]
        public Output<string> Passive { get; private set; } = null!;

        /// <summary>
        /// Priority, used in determining the designated router on this network. - Range: `0`-`255` - Default value: `1`
        /// </summary>
        [Output("priority")]
        public Output<int> Priority { get; private set; } = null!;

        /// <summary>
        /// VRF name.
        /// </summary>
        [Output("vrfName")]
        public Output<string> VrfName { get; private set; } = null!;


        /// <summary>
        /// Create a OspfInterface resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OspfInterface(string name, OspfInterfaceArgs args, CustomResourceOptions? options = null)
            : base("nxos:index/ospfInterface:OspfInterface", name, args ?? new OspfInterfaceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OspfInterface(string name, Input<string> id, OspfInterfaceState? state = null, CustomResourceOptions? options = null)
            : base("nxos:index/ospfInterface:OspfInterface", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OspfInterface resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OspfInterface Get(string name, Input<string> id, OspfInterfaceState? state = null, CustomResourceOptions? options = null)
        {
            return new OspfInterface(name, id, state, options);
        }
    }

    public sealed class OspfInterfaceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advertise secondary IP addresses. - Default value: `true`
        /// </summary>
        [Input("advertiseSecondaries")]
        public Input<bool>? AdvertiseSecondaries { get; set; }

        /// <summary>
        /// Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
        /// </summary>
        [Input("area")]
        public Input<string>? Area { get; set; }

        /// <summary>
        /// Bidirectional Forwarding Detection (BFD). - Choices: `unspecified`, `enabled`, `disabled` - Default value: `unspecified`
        /// </summary>
        [Input("bfd")]
        public Input<string>? Bfd { get; set; }

        /// <summary>
        /// Specifies the cost of interface. - Range: `0`-`65535` - Default value: `0`
        /// </summary>
        [Input("cost")]
        public Input<int>? Cost { get; set; }

        /// <summary>
        /// Dead interval, interval after which router declares that neighbor as down. - Range: `0`-`65535` - Default value: `0`
        /// </summary>
        [Input("deadInterval")]
        public Input<int>? DeadInterval { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Hello interval, interval between hello packets that OSPF sends on the interface. - Range: `0`-`65535` - Default value:
        /// `10`
        /// </summary>
        [Input("helloInterval")]
        public Input<int>? HelloInterval { get; set; }

        /// <summary>
        /// OSPF instance name.
        /// </summary>
        [Input("instanceName", required: true)]
        public Input<string> InstanceName { get; set; } = null!;

        /// <summary>
        /// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
        /// </summary>
        [Input("interfaceId", required: true)]
        public Input<string> InterfaceId { get; set; } = null!;

        /// <summary>
        /// Network type. - Choices: `unspecified`, `p2p`, `bcast` - Default value: `unspecified`
        /// </summary>
        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        /// <summary>
        /// Passive interface control. Interface can be configured as passive or non-passive. - Choices: `unspecified`, `enabled`,
        /// `disabled` - Default value: `unspecified`
        /// </summary>
        [Input("passive")]
        public Input<string>? Passive { get; set; }

        /// <summary>
        /// Priority, used in determining the designated router on this network. - Range: `0`-`255` - Default value: `1`
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// VRF name.
        /// </summary>
        [Input("vrfName", required: true)]
        public Input<string> VrfName { get; set; } = null!;

        public OspfInterfaceArgs()
        {
        }
        public static new OspfInterfaceArgs Empty => new OspfInterfaceArgs();
    }

    public sealed class OspfInterfaceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advertise secondary IP addresses. - Default value: `true`
        /// </summary>
        [Input("advertiseSecondaries")]
        public Input<bool>? AdvertiseSecondaries { get; set; }

        /// <summary>
        /// Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
        /// </summary>
        [Input("area")]
        public Input<string>? Area { get; set; }

        /// <summary>
        /// Bidirectional Forwarding Detection (BFD). - Choices: `unspecified`, `enabled`, `disabled` - Default value: `unspecified`
        /// </summary>
        [Input("bfd")]
        public Input<string>? Bfd { get; set; }

        /// <summary>
        /// Specifies the cost of interface. - Range: `0`-`65535` - Default value: `0`
        /// </summary>
        [Input("cost")]
        public Input<int>? Cost { get; set; }

        /// <summary>
        /// Dead interval, interval after which router declares that neighbor as down. - Range: `0`-`65535` - Default value: `0`
        /// </summary>
        [Input("deadInterval")]
        public Input<int>? DeadInterval { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Hello interval, interval between hello packets that OSPF sends on the interface. - Range: `0`-`65535` - Default value:
        /// `10`
        /// </summary>
        [Input("helloInterval")]
        public Input<int>? HelloInterval { get; set; }

        /// <summary>
        /// OSPF instance name.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
        /// </summary>
        [Input("interfaceId")]
        public Input<string>? InterfaceId { get; set; }

        /// <summary>
        /// Network type. - Choices: `unspecified`, `p2p`, `bcast` - Default value: `unspecified`
        /// </summary>
        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        /// <summary>
        /// Passive interface control. Interface can be configured as passive or non-passive. - Choices: `unspecified`, `enabled`,
        /// `disabled` - Default value: `unspecified`
        /// </summary>
        [Input("passive")]
        public Input<string>? Passive { get; set; }

        /// <summary>
        /// Priority, used in determining the designated router on this network. - Range: `0`-`255` - Default value: `1`
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// VRF name.
        /// </summary>
        [Input("vrfName")]
        public Input<string>? VrfName { get; set; }

        public OspfInterfaceState()
        {
        }
        public static new OspfInterfaceState Empty => new OspfInterfaceState();
    }
}
