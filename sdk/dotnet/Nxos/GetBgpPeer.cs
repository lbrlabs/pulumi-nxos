// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos
{
    public static class GetBgpPeer
    {
        /// <summary>
        /// This data source can read the BGP peer configuration.
        /// 
        /// - API Documentation: [bgpPeer](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:Peer/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nxos = Pulumi.Nxos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nxos.GetBgpPeer.Invoke(new()
        ///     {
        ///         Address = "192.168.0.1",
        ///         Asn = "65001",
        ///         Vrf = "default",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBgpPeerResult> InvokeAsync(GetBgpPeerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBgpPeerResult>("nxos:index/getBgpPeer:getBgpPeer", args ?? new GetBgpPeerArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the BGP peer configuration.
        /// 
        /// - API Documentation: [bgpPeer](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:Peer/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nxos = Pulumi.Nxos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nxos.GetBgpPeer.Invoke(new()
        ///     {
        ///         Address = "192.168.0.1",
        ///         Asn = "65001",
        ///         Vrf = "default",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBgpPeerResult> Invoke(GetBgpPeerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBgpPeerResult>("nxos:index/getBgpPeer:getBgpPeer", args ?? new GetBgpPeerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBgpPeerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Peer address.
        /// </summary>
        [Input("address", required: true)]
        public string Address { get; set; } = null!;

        /// <summary>
        /// Autonomous system number.
        /// </summary>
        [Input("asn", required: true)]
        public string Asn { get; set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        /// <summary>
        /// VRF name.
        /// </summary>
        [Input("vrf", required: true)]
        public string Vrf { get; set; } = null!;

        public GetBgpPeerArgs()
        {
        }
        public static new GetBgpPeerArgs Empty => new GetBgpPeerArgs();
    }

    public sealed class GetBgpPeerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Peer address.
        /// </summary>
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        /// <summary>
        /// Autonomous system number.
        /// </summary>
        [Input("asn", required: true)]
        public Input<string> Asn { get; set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// VRF name.
        /// </summary>
        [Input("vrf", required: true)]
        public Input<string> Vrf { get; set; } = null!;

        public GetBgpPeerInvokeArgs()
        {
        }
        public static new GetBgpPeerInvokeArgs Empty => new GetBgpPeerInvokeArgs();
    }


    [OutputType]
    public sealed class GetBgpPeerResult
    {
        /// <summary>
        /// Peer address.
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// Autonomous system number.
        /// </summary>
        public readonly string Asn;
        /// <summary>
        /// Peer description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// BGP Hold Timer in seconds. The value must be greater than the keepalive timer
        /// </summary>
        public readonly int HoldTime;
        /// <summary>
        /// The distinguished name of the object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// BGP Keepalive Timer in seconds
        /// </summary>
        public readonly int Keepalive;
        /// <summary>
        /// Peer template name.
        /// </summary>
        public readonly string PeerTemplate;
        /// <summary>
        /// Neighbor Fabric Type.
        /// </summary>
        public readonly string PeerType;
        /// <summary>
        /// Peer autonomous system number.
        /// </summary>
        public readonly string RemoteAsn;
        /// <summary>
        /// Source Interface. Must match first field in the output of `show intf brief`.
        /// </summary>
        public readonly string SourceInterface;
        /// <summary>
        /// VRF name.
        /// </summary>
        public readonly string Vrf;

        [OutputConstructor]
        private GetBgpPeerResult(
            string address,

            string asn,

            string description,

            string? device,

            int holdTime,

            string id,

            int keepalive,

            string peerTemplate,

            string peerType,

            string remoteAsn,

            string sourceInterface,

            string vrf)
        {
            Address = address;
            Asn = asn;
            Description = description;
            Device = device;
            HoldTime = holdTime;
            Id = id;
            Keepalive = keepalive;
            PeerTemplate = peerTemplate;
            PeerType = peerType;
            RemoteAsn = remoteAsn;
            SourceInterface = sourceInterface;
            Vrf = vrf;
        }
    }
}
