// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos
{
    public static class GetBridgeDomain
    {
        /// <summary>
        /// This data source can read a bridge domain.
        /// 
        /// - API Documentation: [l2BD](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%202/l2:BD/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nxos = Pulumi.Nxos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nxos.GetBridgeDomain.Invoke(new()
        ///     {
        ///         FabricEncap = "vlan-10",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBridgeDomainResult> InvokeAsync(GetBridgeDomainArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBridgeDomainResult>("nxos:index/getBridgeDomain:getBridgeDomain", args ?? new GetBridgeDomainArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read a bridge domain.
        /// 
        /// - API Documentation: [l2BD](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%202/l2:BD/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nxos = Pulumi.Nxos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nxos.GetBridgeDomain.Invoke(new()
        ///     {
        ///         FabricEncap = "vlan-10",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBridgeDomainResult> Invoke(GetBridgeDomainInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBridgeDomainResult>("nxos:index/getBridgeDomain:getBridgeDomain", args ?? new GetBridgeDomainInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBridgeDomainArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        /// <summary>
        /// Fabric encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.
        /// </summary>
        [Input("fabricEncap", required: true)]
        public string FabricEncap { get; set; } = null!;

        public GetBridgeDomainArgs()
        {
        }
        public static new GetBridgeDomainArgs Empty => new GetBridgeDomainArgs();
    }

    public sealed class GetBridgeDomainInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Fabric encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.
        /// </summary>
        [Input("fabricEncap", required: true)]
        public Input<string> FabricEncap { get; set; } = null!;

        public GetBridgeDomainInvokeArgs()
        {
        }
        public static new GetBridgeDomainInvokeArgs Empty => new GetBridgeDomainInvokeArgs();
    }


    [OutputType]
    public sealed class GetBridgeDomainResult
    {
        /// <summary>
        /// Access encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.
        /// </summary>
        public readonly string AccessEncap;
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// Fabric encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.
        /// </summary>
        public readonly string FabricEncap;
        /// <summary>
        /// The distinguished name of the object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Bridge domain name.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetBridgeDomainResult(
            string accessEncap,

            string? device,

            string fabricEncap,

            string id,

            string name)
        {
            AccessEncap = accessEncap;
            Device = device;
            FabricEncap = fabricEncap;
            Id = id;
            Name = name;
        }
    }
}
