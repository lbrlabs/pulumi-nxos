// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos
{
    public static class GetNveVniIngressReplication
    {
        /// <summary>
        /// This data source can read the configuration of Ingress Replication for Virtual Network ID (VNI).
        /// 
        /// - API Documentation: [nvoIngRepl](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Network%20Virtualization/nvo:IngRepl/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nxos = Pulumi.Nxos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nxos.GetNveVniIngressReplication.Invoke(new()
        ///     {
        ///         Vni = 103100,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetNveVniIngressReplicationResult> InvokeAsync(GetNveVniIngressReplicationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNveVniIngressReplicationResult>("nxos:index/getNveVniIngressReplication:getNveVniIngressReplication", args ?? new GetNveVniIngressReplicationArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the configuration of Ingress Replication for Virtual Network ID (VNI).
        /// 
        /// - API Documentation: [nvoIngRepl](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Network%20Virtualization/nvo:IngRepl/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nxos = Pulumi.Nxos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nxos.GetNveVniIngressReplication.Invoke(new()
        ///     {
        ///         Vni = 103100,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetNveVniIngressReplicationResult> Invoke(GetNveVniIngressReplicationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNveVniIngressReplicationResult>("nxos:index/getNveVniIngressReplication:getNveVniIngressReplication", args ?? new GetNveVniIngressReplicationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNveVniIngressReplicationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        /// <summary>
        /// Virtual Network ID.
        /// </summary>
        [Input("vni", required: true)]
        public int Vni { get; set; }

        public GetNveVniIngressReplicationArgs()
        {
        }
        public static new GetNveVniIngressReplicationArgs Empty => new GetNveVniIngressReplicationArgs();
    }

    public sealed class GetNveVniIngressReplicationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Virtual Network ID.
        /// </summary>
        [Input("vni", required: true)]
        public Input<int> Vni { get; set; } = null!;

        public GetNveVniIngressReplicationInvokeArgs()
        {
        }
        public static new GetNveVniIngressReplicationInvokeArgs Empty => new GetNveVniIngressReplicationInvokeArgs();
    }


    [OutputType]
    public sealed class GetNveVniIngressReplicationResult
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// The distinguished name of the object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Configure VxLAN Ingress Replication mode.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// Virtual Network ID.
        /// </summary>
        public readonly int Vni;

        [OutputConstructor]
        private GetNveVniIngressReplicationResult(
            string? device,

            string id,

            string protocol,

            int vni)
        {
            Device = device;
            Id = id;
            Protocol = protocol;
            Vni = vni;
        }
    }
}
