// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos
{
    public static class GetPimSsmRange
    {
        /// <summary>
        /// This data source can read the PIM SSM range configuration.
        /// 
        /// - API Documentation: [pimSSMRangeP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:SSMRangeP/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nxos = Pulumi.Nxos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nxos.GetPimSsmRange.Invoke(new()
        ///     {
        ///         VrfName = "default",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPimSsmRangeResult> InvokeAsync(GetPimSsmRangeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPimSsmRangeResult>("nxos:index/getPimSsmRange:getPimSsmRange", args ?? new GetPimSsmRangeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the PIM SSM range configuration.
        /// 
        /// - API Documentation: [pimSSMRangeP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:SSMRangeP/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nxos = Pulumi.Nxos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nxos.GetPimSsmRange.Invoke(new()
        ///     {
        ///         VrfName = "default",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPimSsmRangeResult> Invoke(GetPimSsmRangeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPimSsmRangeResult>("nxos:index/getPimSsmRange:getPimSsmRange", args ?? new GetPimSsmRangeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPimSsmRangeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        /// <summary>
        /// VRF name.
        /// </summary>
        [Input("vrfName", required: true)]
        public string VrfName { get; set; } = null!;

        public GetPimSsmRangeArgs()
        {
        }
        public static new GetPimSsmRangeArgs Empty => new GetPimSsmRangeArgs();
    }

    public sealed class GetPimSsmRangeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// VRF name.
        /// </summary>
        [Input("vrfName", required: true)]
        public Input<string> VrfName { get; set; } = null!;

        public GetPimSsmRangeInvokeArgs()
        {
        }
        public static new GetPimSsmRangeInvokeArgs Empty => new GetPimSsmRangeInvokeArgs();
    }


    [OutputType]
    public sealed class GetPimSsmRangeResult
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// Group list 1.
        /// </summary>
        public readonly string GroupList1;
        /// <summary>
        /// Group list 2.
        /// </summary>
        public readonly string GroupList2;
        /// <summary>
        /// Group list 3.
        /// </summary>
        public readonly string GroupList3;
        /// <summary>
        /// Group list 4.
        /// </summary>
        public readonly string GroupList4;
        /// <summary>
        /// The distinguished name of the object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Prefix list name.
        /// </summary>
        public readonly string PrefixList;
        /// <summary>
        /// Route map name.
        /// </summary>
        public readonly string RouteMap;
        /// <summary>
        /// Exclude standard SSM range (232.0.0.0/8).
        /// </summary>
        public readonly bool SsmNone;
        /// <summary>
        /// VRF name.
        /// </summary>
        public readonly string VrfName;

        [OutputConstructor]
        private GetPimSsmRangeResult(
            string? device,

            string groupList1,

            string groupList2,

            string groupList3,

            string groupList4,

            string id,

            string prefixList,

            string routeMap,

            bool ssmNone,

            string vrfName)
        {
            Device = device;
            GroupList1 = groupList1;
            GroupList2 = groupList2;
            GroupList3 = groupList3;
            GroupList4 = groupList4;
            Id = id;
            PrefixList = prefixList;
            RouteMap = routeMap;
            SsmNone = ssmNone;
            VrfName = vrfName;
        }
    }
}
