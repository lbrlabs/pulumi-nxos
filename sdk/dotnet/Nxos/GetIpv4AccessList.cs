// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos
{
    public static class GetIpv4AccessList
    {
        /// <summary>
        /// This data source can read IPv4 Access Lists.
        /// 
        /// - API Documentation: [ipv4aclACL](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Security%20and%20Policing/ipv4acl:ACL/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nxos = Pulumi.Nxos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nxos.GetIpv4AccessList.Invoke(new()
        ///     {
        ///         Name = "ACL1",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetIpv4AccessListResult> InvokeAsync(GetIpv4AccessListArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpv4AccessListResult>("nxos:index/getIpv4AccessList:getIpv4AccessList", args ?? new GetIpv4AccessListArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read IPv4 Access Lists.
        /// 
        /// - API Documentation: [ipv4aclACL](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Security%20and%20Policing/ipv4acl:ACL/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nxos = Pulumi.Nxos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nxos.GetIpv4AccessList.Invoke(new()
        ///     {
        ///         Name = "ACL1",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetIpv4AccessListResult> Invoke(GetIpv4AccessListInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpv4AccessListResult>("nxos:index/getIpv4AccessList:getIpv4AccessList", args ?? new GetIpv4AccessListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpv4AccessListArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        /// <summary>
        /// Access list name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetIpv4AccessListArgs()
        {
        }
        public static new GetIpv4AccessListArgs Empty => new GetIpv4AccessListArgs();
    }

    public sealed class GetIpv4AccessListInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Access list name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetIpv4AccessListInvokeArgs()
        {
        }
        public static new GetIpv4AccessListInvokeArgs Empty => new GetIpv4AccessListInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpv4AccessListResult
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// The distinguished name of the object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Access list name.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetIpv4AccessListResult(
            string? device,

            string id,

            string name)
        {
            Device = device;
            Id = id;
            Name = name;
        }
    }
}
