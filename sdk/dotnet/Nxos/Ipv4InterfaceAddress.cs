// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos
{
    /// <summary>
    /// This resource can manage an IPv4 interface address.
    /// 
    /// - API Documentation: [ipv4Addr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/ipv4:Addr/)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Nxos = Lbrlabs.PulumiPackage.Nxos;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Nxos.Ipv4InterfaceAddress("example", new()
    ///     {
    ///         Address = "24.63.46.49/30",
    ///         InterfaceId = "eth1/10",
    ///         Type = "primary",
    ///         Vrf = "default",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import nxos:index/ipv4InterfaceAddress:Ipv4InterfaceAddress example "sys/ipv4/inst/dom-[default]/if-[eth1/10]/addr-[24.63.46.49/30]"
    /// ```
    /// </summary>
    [NxosResourceType("nxos:index/ipv4InterfaceAddress:Ipv4InterfaceAddress")]
    public partial class Ipv4InterfaceAddress : global::Pulumi.CustomResource
    {
        /// <summary>
        /// IPv4 address.
        /// </summary>
        [Output("address")]
        public Output<string> Address { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
        /// </summary>
        [Output("interfaceId")]
        public Output<string> InterfaceId { get; private set; } = null!;

        /// <summary>
        /// Address type. - Choices: `primary`, `secondary` - Default value: `primary`
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// VRF name.
        /// </summary>
        [Output("vrf")]
        public Output<string> Vrf { get; private set; } = null!;


        /// <summary>
        /// Create a Ipv4InterfaceAddress resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Ipv4InterfaceAddress(string name, Ipv4InterfaceAddressArgs args, CustomResourceOptions? options = null)
            : base("nxos:index/ipv4InterfaceAddress:Ipv4InterfaceAddress", name, args ?? new Ipv4InterfaceAddressArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Ipv4InterfaceAddress(string name, Input<string> id, Ipv4InterfaceAddressState? state = null, CustomResourceOptions? options = null)
            : base("nxos:index/ipv4InterfaceAddress:Ipv4InterfaceAddress", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Ipv4InterfaceAddress resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Ipv4InterfaceAddress Get(string name, Input<string> id, Ipv4InterfaceAddressState? state = null, CustomResourceOptions? options = null)
        {
            return new Ipv4InterfaceAddress(name, id, state, options);
        }
    }

    public sealed class Ipv4InterfaceAddressArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IPv4 address.
        /// </summary>
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
        /// </summary>
        [Input("interfaceId", required: true)]
        public Input<string> InterfaceId { get; set; } = null!;

        /// <summary>
        /// Address type. - Choices: `primary`, `secondary` - Default value: `primary`
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// VRF name.
        /// </summary>
        [Input("vrf", required: true)]
        public Input<string> Vrf { get; set; } = null!;

        public Ipv4InterfaceAddressArgs()
        {
        }
        public static new Ipv4InterfaceAddressArgs Empty => new Ipv4InterfaceAddressArgs();
    }

    public sealed class Ipv4InterfaceAddressState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IPv4 address.
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
        /// </summary>
        [Input("interfaceId")]
        public Input<string>? InterfaceId { get; set; }

        /// <summary>
        /// Address type. - Choices: `primary`, `secondary` - Default value: `primary`
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// VRF name.
        /// </summary>
        [Input("vrf")]
        public Input<string>? Vrf { get; set; }

        public Ipv4InterfaceAddressState()
        {
        }
        public static new Ipv4InterfaceAddressState Empty => new Ipv4InterfaceAddressState();
    }
}
