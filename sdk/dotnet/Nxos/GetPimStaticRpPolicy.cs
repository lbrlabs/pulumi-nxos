// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos
{
    public static class GetPimStaticRpPolicy
    {
        /// <summary>
        /// This data source can read the PIM Static RP policy configuration.
        /// 
        /// - API Documentation: [pimStaticRPP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:StaticRPP/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nxos = Pulumi.Nxos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nxos.GetPimStaticRpPolicy.Invoke(new()
        ///     {
        ///         VrfName = "default",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPimStaticRpPolicyResult> InvokeAsync(GetPimStaticRpPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPimStaticRpPolicyResult>("nxos:index/getPimStaticRpPolicy:getPimStaticRpPolicy", args ?? new GetPimStaticRpPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the PIM Static RP policy configuration.
        /// 
        /// - API Documentation: [pimStaticRPP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:StaticRPP/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nxos = Pulumi.Nxos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nxos.GetPimStaticRpPolicy.Invoke(new()
        ///     {
        ///         VrfName = "default",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPimStaticRpPolicyResult> Invoke(GetPimStaticRpPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPimStaticRpPolicyResult>("nxos:index/getPimStaticRpPolicy:getPimStaticRpPolicy", args ?? new GetPimStaticRpPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPimStaticRpPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        /// <summary>
        /// VRF name.
        /// </summary>
        [Input("vrfName", required: true)]
        public string VrfName { get; set; } = null!;

        public GetPimStaticRpPolicyArgs()
        {
        }
        public static new GetPimStaticRpPolicyArgs Empty => new GetPimStaticRpPolicyArgs();
    }

    public sealed class GetPimStaticRpPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// VRF name.
        /// </summary>
        [Input("vrfName", required: true)]
        public Input<string> VrfName { get; set; } = null!;

        public GetPimStaticRpPolicyInvokeArgs()
        {
        }
        public static new GetPimStaticRpPolicyInvokeArgs Empty => new GetPimStaticRpPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetPimStaticRpPolicyResult
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// The distinguished name of the object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Policy name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// VRF name.
        /// </summary>
        public readonly string VrfName;

        [OutputConstructor]
        private GetPimStaticRpPolicyResult(
            string? device,

            string id,

            string name,

            string vrfName)
        {
            Device = device;
            Id = id;
            Name = name;
            VrfName = vrfName;
        }
    }
}
