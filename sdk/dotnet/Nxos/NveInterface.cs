// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos
{
    /// <summary>
    /// This resource can manage the NVE interface configuration.
    /// 
    /// - API Documentation: [nvoEp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Network%20Virtualization/nvo:Ep/)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Nxos = Lbrlabs.PulumiPackage.Nxos;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Nxos.NveInterface("example", new()
    ///     {
    ///         AdminState = "enabled",
    ///         AdvertiseVirtualMac = true,
    ///         HoldDownTime = 60,
    ///         HostReachabilityProtocol = "bgp",
    ///         IngressReplicationProtocolBgp = true,
    ///         MulticastGroupL2 = "0.0.0.0",
    ///         MulticastGroupL3 = "0.0.0.0",
    ///         MultisiteSourceInterface = "unspecified",
    ///         SourceInterface = "lo0",
    ///         SuppressArp = true,
    ///         SuppressMacRoute = false,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import nxos:index/nveInterface:NveInterface example "sys/eps/epId-[1]"
    /// ```
    /// </summary>
    [NxosResourceType("nxos:index/nveInterface:NveInterface")]
    public partial class NveInterface : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Administrative state. - Choices: `enabled`, `disabled` - Default value: `disabled`
        /// </summary>
        [Output("adminState")]
        public Output<string> AdminState { get; private set; } = null!;

        /// <summary>
        /// Enable or disable Virtual MAC Advertisement in VPC mode. - Default value: `false`
        /// </summary>
        [Output("advertiseVirtualMac")]
        public Output<bool> AdvertiseVirtualMac { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// Hold Down Time. - Range: `1`-`1500` - Default value: `180`
        /// </summary>
        [Output("holdDownTime")]
        public Output<int> HoldDownTime { get; private set; } = null!;

        /// <summary>
        /// Host Reachability Protocol. - Choices: `Flood-and-learn`, `bgp`, `controller`, `openflow`, `openflowIR` - Default value:
        /// `Flood-and-learn`
        /// </summary>
        [Output("hostReachabilityProtocol")]
        public Output<string> HostReachabilityProtocol { get; private set; } = null!;

        /// <summary>
        /// VxLAN Ingress Replication Protocol BGP. - Default value: `false`
        /// </summary>
        [Output("ingressReplicationProtocolBgp")]
        public Output<bool> IngressReplicationProtocolBgp { get; private set; } = null!;

        /// <summary>
        /// Base multicast group address for L2. - Default value: `0.0.0.0`
        /// </summary>
        [Output("multicastGroupL2")]
        public Output<string> MulticastGroupL2 { get; private set; } = null!;

        /// <summary>
        /// Base multicast group address for L3. - Default value: `0.0.0.0`
        /// </summary>
        [Output("multicastGroupL3")]
        public Output<string> MulticastGroupL3 { get; private set; } = null!;

        /// <summary>
        /// Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`. - Default
        /// value: `unspecified`
        /// </summary>
        [Output("multisiteSourceInterface")]
        public Output<string> MultisiteSourceInterface { get; private set; } = null!;

        /// <summary>
        /// Source Interface associated with the NVE. Must match first field in the output of `show int brief`. - Default value:
        /// `unspecified`
        /// </summary>
        [Output("sourceInterface")]
        public Output<string> SourceInterface { get; private set; } = null!;

        /// <summary>
        /// Suppress ARP. - Default value: `false`
        /// </summary>
        [Output("suppressArp")]
        public Output<bool> SuppressArp { get; private set; } = null!;

        /// <summary>
        /// Suppress MAC Route. - Default value: `false`
        /// </summary>
        [Output("suppressMacRoute")]
        public Output<bool> SuppressMacRoute { get; private set; } = null!;


        /// <summary>
        /// Create a NveInterface resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NveInterface(string name, NveInterfaceArgs? args = null, CustomResourceOptions? options = null)
            : base("nxos:index/nveInterface:NveInterface", name, args ?? new NveInterfaceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NveInterface(string name, Input<string> id, NveInterfaceState? state = null, CustomResourceOptions? options = null)
            : base("nxos:index/nveInterface:NveInterface", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NveInterface resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NveInterface Get(string name, Input<string> id, NveInterfaceState? state = null, CustomResourceOptions? options = null)
        {
            return new NveInterface(name, id, state, options);
        }
    }

    public sealed class NveInterfaceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Administrative state. - Choices: `enabled`, `disabled` - Default value: `disabled`
        /// </summary>
        [Input("adminState")]
        public Input<string>? AdminState { get; set; }

        /// <summary>
        /// Enable or disable Virtual MAC Advertisement in VPC mode. - Default value: `false`
        /// </summary>
        [Input("advertiseVirtualMac")]
        public Input<bool>? AdvertiseVirtualMac { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Hold Down Time. - Range: `1`-`1500` - Default value: `180`
        /// </summary>
        [Input("holdDownTime")]
        public Input<int>? HoldDownTime { get; set; }

        /// <summary>
        /// Host Reachability Protocol. - Choices: `Flood-and-learn`, `bgp`, `controller`, `openflow`, `openflowIR` - Default value:
        /// `Flood-and-learn`
        /// </summary>
        [Input("hostReachabilityProtocol")]
        public Input<string>? HostReachabilityProtocol { get; set; }

        /// <summary>
        /// VxLAN Ingress Replication Protocol BGP. - Default value: `false`
        /// </summary>
        [Input("ingressReplicationProtocolBgp")]
        public Input<bool>? IngressReplicationProtocolBgp { get; set; }

        /// <summary>
        /// Base multicast group address for L2. - Default value: `0.0.0.0`
        /// </summary>
        [Input("multicastGroupL2")]
        public Input<string>? MulticastGroupL2 { get; set; }

        /// <summary>
        /// Base multicast group address for L3. - Default value: `0.0.0.0`
        /// </summary>
        [Input("multicastGroupL3")]
        public Input<string>? MulticastGroupL3 { get; set; }

        /// <summary>
        /// Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`. - Default
        /// value: `unspecified`
        /// </summary>
        [Input("multisiteSourceInterface")]
        public Input<string>? MultisiteSourceInterface { get; set; }

        /// <summary>
        /// Source Interface associated with the NVE. Must match first field in the output of `show int brief`. - Default value:
        /// `unspecified`
        /// </summary>
        [Input("sourceInterface")]
        public Input<string>? SourceInterface { get; set; }

        /// <summary>
        /// Suppress ARP. - Default value: `false`
        /// </summary>
        [Input("suppressArp")]
        public Input<bool>? SuppressArp { get; set; }

        /// <summary>
        /// Suppress MAC Route. - Default value: `false`
        /// </summary>
        [Input("suppressMacRoute")]
        public Input<bool>? SuppressMacRoute { get; set; }

        public NveInterfaceArgs()
        {
        }
        public static new NveInterfaceArgs Empty => new NveInterfaceArgs();
    }

    public sealed class NveInterfaceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Administrative state. - Choices: `enabled`, `disabled` - Default value: `disabled`
        /// </summary>
        [Input("adminState")]
        public Input<string>? AdminState { get; set; }

        /// <summary>
        /// Enable or disable Virtual MAC Advertisement in VPC mode. - Default value: `false`
        /// </summary>
        [Input("advertiseVirtualMac")]
        public Input<bool>? AdvertiseVirtualMac { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Hold Down Time. - Range: `1`-`1500` - Default value: `180`
        /// </summary>
        [Input("holdDownTime")]
        public Input<int>? HoldDownTime { get; set; }

        /// <summary>
        /// Host Reachability Protocol. - Choices: `Flood-and-learn`, `bgp`, `controller`, `openflow`, `openflowIR` - Default value:
        /// `Flood-and-learn`
        /// </summary>
        [Input("hostReachabilityProtocol")]
        public Input<string>? HostReachabilityProtocol { get; set; }

        /// <summary>
        /// VxLAN Ingress Replication Protocol BGP. - Default value: `false`
        /// </summary>
        [Input("ingressReplicationProtocolBgp")]
        public Input<bool>? IngressReplicationProtocolBgp { get; set; }

        /// <summary>
        /// Base multicast group address for L2. - Default value: `0.0.0.0`
        /// </summary>
        [Input("multicastGroupL2")]
        public Input<string>? MulticastGroupL2 { get; set; }

        /// <summary>
        /// Base multicast group address for L3. - Default value: `0.0.0.0`
        /// </summary>
        [Input("multicastGroupL3")]
        public Input<string>? MulticastGroupL3 { get; set; }

        /// <summary>
        /// Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`. - Default
        /// value: `unspecified`
        /// </summary>
        [Input("multisiteSourceInterface")]
        public Input<string>? MultisiteSourceInterface { get; set; }

        /// <summary>
        /// Source Interface associated with the NVE. Must match first field in the output of `show int brief`. - Default value:
        /// `unspecified`
        /// </summary>
        [Input("sourceInterface")]
        public Input<string>? SourceInterface { get; set; }

        /// <summary>
        /// Suppress ARP. - Default value: `false`
        /// </summary>
        [Input("suppressArp")]
        public Input<bool>? SuppressArp { get; set; }

        /// <summary>
        /// Suppress MAC Route. - Default value: `false`
        /// </summary>
        [Input("suppressMacRoute")]
        public Input<bool>? SuppressMacRoute { get; set; }

        public NveInterfaceState()
        {
        }
        public static new NveInterfaceState Empty => new NveInterfaceState();
    }
}
