// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos
{
    public static class GetPimStaticRpGroupList
    {
        /// <summary>
        /// This data source can read the PIM Static RP group list configuration.
        /// 
        /// - API Documentation: [pimRPGrpList](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:RPGrpList/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nxos = Pulumi.Nxos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nxos.GetPimStaticRpGroupList.Invoke(new()
        ///     {
        ///         Address = "224.0.0.0/4",
        ///         RpAddress = "1.2.3.4",
        ///         VrfName = "default",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPimStaticRpGroupListResult> InvokeAsync(GetPimStaticRpGroupListArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPimStaticRpGroupListResult>("nxos:index/getPimStaticRpGroupList:getPimStaticRpGroupList", args ?? new GetPimStaticRpGroupListArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the PIM Static RP group list configuration.
        /// 
        /// - API Documentation: [pimRPGrpList](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:RPGrpList/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nxos = Pulumi.Nxos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nxos.GetPimStaticRpGroupList.Invoke(new()
        ///     {
        ///         Address = "224.0.0.0/4",
        ///         RpAddress = "1.2.3.4",
        ///         VrfName = "default",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPimStaticRpGroupListResult> Invoke(GetPimStaticRpGroupListInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPimStaticRpGroupListResult>("nxos:index/getPimStaticRpGroupList:getPimStaticRpGroupList", args ?? new GetPimStaticRpGroupListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPimStaticRpGroupListArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Group list address information.
        /// </summary>
        [Input("address", required: true)]
        public string Address { get; set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        /// <summary>
        /// RP address.
        /// </summary>
        [Input("rpAddress", required: true)]
        public string RpAddress { get; set; } = null!;

        /// <summary>
        /// VRF name.
        /// </summary>
        [Input("vrfName", required: true)]
        public string VrfName { get; set; } = null!;

        public GetPimStaticRpGroupListArgs()
        {
        }
        public static new GetPimStaticRpGroupListArgs Empty => new GetPimStaticRpGroupListArgs();
    }

    public sealed class GetPimStaticRpGroupListInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Group list address information.
        /// </summary>
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// RP address.
        /// </summary>
        [Input("rpAddress", required: true)]
        public Input<string> RpAddress { get; set; } = null!;

        /// <summary>
        /// VRF name.
        /// </summary>
        [Input("vrfName", required: true)]
        public Input<string> VrfName { get; set; } = null!;

        public GetPimStaticRpGroupListInvokeArgs()
        {
        }
        public static new GetPimStaticRpGroupListInvokeArgs Empty => new GetPimStaticRpGroupListInvokeArgs();
    }


    [OutputType]
    public sealed class GetPimStaticRpGroupListResult
    {
        /// <summary>
        /// Group list address information.
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// Flag to treat Group Ranges as BiDir.
        /// </summary>
        public readonly bool Bidir;
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// The distinguished name of the object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Flag to override RP preference to use Static over Dynamic RP.
        /// </summary>
        public readonly bool Override;
        /// <summary>
        /// RP address.
        /// </summary>
        public readonly string RpAddress;
        /// <summary>
        /// VRF name.
        /// </summary>
        public readonly string VrfName;

        [OutputConstructor]
        private GetPimStaticRpGroupListResult(
            string address,

            bool bidir,

            string? device,

            string id,

            bool @override,

            string rpAddress,

            string vrfName)
        {
            Address = address;
            Bidir = bidir;
            Device = device;
            Id = id;
            Override = @override;
            RpAddress = rpAddress;
            VrfName = vrfName;
        }
    }
}
