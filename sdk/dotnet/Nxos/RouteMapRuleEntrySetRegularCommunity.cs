// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Nxos
{
    /// <summary>
    /// This resource can manage a Set Community configuration in a Route-Map Rule Entry.
    /// 
    /// - API Documentation: [rtmapSetRegComm](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtmap:SetRegComm/)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Nxos = Lbrlabs.PulumiPackage.Nxos;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Nxos.RouteMapRuleEntrySetRegularCommunity("example", new()
    ///     {
    ///         Additive = "disabled",
    ///         NoCommunity = "disabled",
    ///         Order = 10,
    ///         RuleName = "RULE1",
    ///         SetCriteria = "none",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import nxos:index/routeMapRuleEntrySetRegularCommunity:RouteMapRuleEntrySetRegularCommunity example "sys/rpm/rtmap-[RULE1]/ent-[10]/sregcomm"
    /// ```
    /// </summary>
    [NxosResourceType("nxos:index/routeMapRuleEntrySetRegularCommunity:RouteMapRuleEntrySetRegularCommunity")]
    public partial class RouteMapRuleEntrySetRegularCommunity : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Option to add to an existing community. - Choices: `enabled`, `disabled` - Default value: `disabled`
        /// </summary>
        [Output("additive")]
        public Output<string> Additive { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// Option to have no community attribute. - Choices: `enabled`, `disabled` - Default value: `disabled`
        /// </summary>
        [Output("noCommunity")]
        public Output<string> NoCommunity { get; private set; } = null!;

        /// <summary>
        /// Route-Map Rule Entry order. - Range: `0`-`65535`
        /// </summary>
        [Output("order")]
        public Output<int> Order { get; private set; } = null!;

        /// <summary>
        /// Route Map rule name.
        /// </summary>
        [Output("ruleName")]
        public Output<string> RuleName { get; private set; } = null!;

        /// <summary>
        /// Operation on the current community. - Choices: `none`, `append`, `replace`, `igp`, `pre-bestpath` - Default value:
        /// `none`
        /// </summary>
        [Output("setCriteria")]
        public Output<string> SetCriteria { get; private set; } = null!;


        /// <summary>
        /// Create a RouteMapRuleEntrySetRegularCommunity resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RouteMapRuleEntrySetRegularCommunity(string name, RouteMapRuleEntrySetRegularCommunityArgs args, CustomResourceOptions? options = null)
            : base("nxos:index/routeMapRuleEntrySetRegularCommunity:RouteMapRuleEntrySetRegularCommunity", name, args ?? new RouteMapRuleEntrySetRegularCommunityArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RouteMapRuleEntrySetRegularCommunity(string name, Input<string> id, RouteMapRuleEntrySetRegularCommunityState? state = null, CustomResourceOptions? options = null)
            : base("nxos:index/routeMapRuleEntrySetRegularCommunity:RouteMapRuleEntrySetRegularCommunity", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RouteMapRuleEntrySetRegularCommunity resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RouteMapRuleEntrySetRegularCommunity Get(string name, Input<string> id, RouteMapRuleEntrySetRegularCommunityState? state = null, CustomResourceOptions? options = null)
        {
            return new RouteMapRuleEntrySetRegularCommunity(name, id, state, options);
        }
    }

    public sealed class RouteMapRuleEntrySetRegularCommunityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Option to add to an existing community. - Choices: `enabled`, `disabled` - Default value: `disabled`
        /// </summary>
        [Input("additive")]
        public Input<string>? Additive { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Option to have no community attribute. - Choices: `enabled`, `disabled` - Default value: `disabled`
        /// </summary>
        [Input("noCommunity")]
        public Input<string>? NoCommunity { get; set; }

        /// <summary>
        /// Route-Map Rule Entry order. - Range: `0`-`65535`
        /// </summary>
        [Input("order", required: true)]
        public Input<int> Order { get; set; } = null!;

        /// <summary>
        /// Route Map rule name.
        /// </summary>
        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        /// <summary>
        /// Operation on the current community. - Choices: `none`, `append`, `replace`, `igp`, `pre-bestpath` - Default value:
        /// `none`
        /// </summary>
        [Input("setCriteria")]
        public Input<string>? SetCriteria { get; set; }

        public RouteMapRuleEntrySetRegularCommunityArgs()
        {
        }
        public static new RouteMapRuleEntrySetRegularCommunityArgs Empty => new RouteMapRuleEntrySetRegularCommunityArgs();
    }

    public sealed class RouteMapRuleEntrySetRegularCommunityState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Option to add to an existing community. - Choices: `enabled`, `disabled` - Default value: `disabled`
        /// </summary>
        [Input("additive")]
        public Input<string>? Additive { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Option to have no community attribute. - Choices: `enabled`, `disabled` - Default value: `disabled`
        /// </summary>
        [Input("noCommunity")]
        public Input<string>? NoCommunity { get; set; }

        /// <summary>
        /// Route-Map Rule Entry order. - Range: `0`-`65535`
        /// </summary>
        [Input("order")]
        public Input<int>? Order { get; set; }

        /// <summary>
        /// Route Map rule name.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// Operation on the current community. - Choices: `none`, `append`, `replace`, `igp`, `pre-bestpath` - Default value:
        /// `none`
        /// </summary>
        [Input("setCriteria")]
        public Input<string>? SetCriteria { get; set; }

        public RouteMapRuleEntrySetRegularCommunityState()
        {
        }
        public static new RouteMapRuleEntrySetRegularCommunityState Empty => new RouteMapRuleEntrySetRegularCommunityState();
    }
}
