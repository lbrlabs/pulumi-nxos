// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Lbrlabs.PulumiPackage.Nxos
{
    public static class Config
    {
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly global::Pulumi.Config __config = new global::Pulumi.Config("nxos");

        private static readonly __Value<ImmutableArray<Lbrlabs.PulumiPackage.Nxos.Config.Types.Devices>> _devices = new __Value<ImmutableArray<Lbrlabs.PulumiPackage.Nxos.Config.Types.Devices>>(() => __config.GetObject<ImmutableArray<Lbrlabs.PulumiPackage.Nxos.Config.Types.Devices>>("devices"));
        /// <summary>
        /// This can be used to manage a list of devices from a single provider. All devices must use the same credentials. Each
        /// resource and data source has an optional attribute named `device`, which can then select a device by its name from this
        /// list.
        /// </summary>
        public static ImmutableArray<Lbrlabs.PulumiPackage.Nxos.Config.Types.Devices> Devices
        {
            get => _devices.Get();
            set => _devices.Set(value);
        }

        private static readonly __Value<bool?> _insecure = new __Value<bool?>(() => __config.GetBoolean("insecure"));
        /// <summary>
        /// Allow insecure HTTPS client. This can also be set as the NXOS_INSECURE environment variable. Defaults to `true`.
        /// </summary>
        public static bool? Insecure
        {
            get => _insecure.Get();
            set => _insecure.Set(value);
        }

        private static readonly __Value<string?> _password = new __Value<string?>(() => __config.Get("password"));
        /// <summary>
        /// Password for the NX-OS device account. This can also be set as the NXOS_PASSWORD environment variable.
        /// </summary>
        public static string? Password
        {
            get => _password.Get();
            set => _password.Set(value);
        }

        private static readonly __Value<int?> _retries = new __Value<int?>(() => __config.GetInt32("retries"));
        /// <summary>
        /// Number of retries for REST API calls. This can also be set as the NXOS_RETRIES environment variable. Defaults to `3`.
        /// </summary>
        public static int? Retries
        {
            get => _retries.Get();
            set => _retries.Set(value);
        }

        private static readonly __Value<string?> _url = new __Value<string?>(() => __config.Get("url"));
        /// <summary>
        /// URL of the Cisco NX-OS device. This can also be set as the NXOS_URL environment variable. If no URL is provided, the URL
        /// of the first device from the `devices` list is being used.
        /// </summary>
        public static string? Url
        {
            get => _url.Get();
            set => _url.Set(value);
        }

        private static readonly __Value<string?> _username = new __Value<string?>(() => __config.Get("username"));
        /// <summary>
        /// Username for the NX-OS device account. This can also be set as the NXOS_USERNAME environment variable.
        /// </summary>
        public static string? Username
        {
            get => _username.Get();
            set => _username.Set(value);
        }

        public static class Types
        {

             public class Devices
             {
                public string Name { get; set; }
                public string Url { get; set; }
            }
        }
    }
}
