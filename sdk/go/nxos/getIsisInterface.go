// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source can read the IS-IS interface configuration.
//
// - API Documentation: [isisInternalIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/isis:InternalIf/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nxos.LookupIsisInterface(ctx, &nxos.LookupIsisInterfaceArgs{
//				InterfaceId: "eth1/10",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupIsisInterface(ctx *pulumi.Context, args *LookupIsisInterfaceArgs, opts ...pulumi.InvokeOption) (*LookupIsisInterfaceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIsisInterfaceResult
	err := ctx.Invoke("nxos:index/getIsisInterface:getIsisInterface", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIsisInterface.
type LookupIsisInterfaceArgs struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	InterfaceId string `pulumi:"interfaceId"`
}

// A collection of values returned by getIsisInterface.
type LookupIsisInterfaceResult struct {
	// Authentication Check for ISIS without specific level.
	AuthenticationCheck bool `pulumi:"authenticationCheck"`
	// Authentication Check for ISIS on Level-1.
	AuthenticationCheckL1 bool `pulumi:"authenticationCheckL1"`
	// Authentication Check for ISIS on Level-2.
	AuthenticationCheckL2 bool `pulumi:"authenticationCheckL2"`
	// Authentication Key for IS-IS without specific level.
	AuthenticationKey string `pulumi:"authenticationKey"`
	// Authentication Key for IS-IS on Level-1.
	AuthenticationKeyL1 string `pulumi:"authenticationKeyL1"`
	// Authentication Key for IS-IS on Level-2.
	AuthenticationKeyL2 string `pulumi:"authenticationKeyL2"`
	// IS-IS Authentication-Type without specific level.
	AuthenticationType string `pulumi:"authenticationType"`
	// IS-IS Authentication-Type for Level-1.
	AuthenticationTypeL1 string `pulumi:"authenticationTypeL1"`
	// IS-IS Authentication-Type for Level-2.
	AuthenticationTypeL2 string `pulumi:"authenticationTypeL2"`
	// Circuit type.
	CircuitType string `pulumi:"circuitType"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Hello interval.
	HelloInterval int `pulumi:"helloInterval"`
	// Hello interval Level-1.
	HelloIntervalL1 int `pulumi:"helloIntervalL1"`
	// Hello interval Level-2.
	HelloIntervalL2 int `pulumi:"helloIntervalL2"`
	// Hello multiplier.
	HelloMultiplier int `pulumi:"helloMultiplier"`
	// Hello multiplier Level-1.
	HelloMultiplierL1 int `pulumi:"helloMultiplierL1"`
	// Hello multiplier Level-2.
	HelloMultiplierL2 int `pulumi:"helloMultiplierL2"`
	// Hello padding.
	HelloPadding string `pulumi:"helloPadding"`
	// The distinguished name of the object.
	Id string `pulumi:"id"`
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	InterfaceId string `pulumi:"interfaceId"`
	// Interface metric Level-1.
	MetricL1 int `pulumi:"metricL1"`
	// Interface metric Level-2.
	MetricL2 int `pulumi:"metricL2"`
	// MTU Check for IS-IS without specific level.
	MtuCheck bool `pulumi:"mtuCheck"`
	// MTU Check for IS-IS on Level-1.
	MtuCheckL1 bool `pulumi:"mtuCheckL1"`
	// MTU Check for IS-IS on Level-2.
	MtuCheckL2 bool `pulumi:"mtuCheckL2"`
	// Enabling Point-to-Point Network Type on IS-IS Interface.
	NetworkTypeP2p string `pulumi:"networkTypeP2p"`
	// IS-IS Passive Interface Info.
	Passive string `pulumi:"passive"`
	// Circuit priority.
	PriorityL1 int `pulumi:"priorityL1"`
	// Circuit priority.
	PriorityL2 int `pulumi:"priorityL2"`
	// VRF.
	Vrf string `pulumi:"vrf"`
}

func LookupIsisInterfaceOutput(ctx *pulumi.Context, args LookupIsisInterfaceOutputArgs, opts ...pulumi.InvokeOption) LookupIsisInterfaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIsisInterfaceResult, error) {
			args := v.(LookupIsisInterfaceArgs)
			r, err := LookupIsisInterface(ctx, &args, opts...)
			var s LookupIsisInterfaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIsisInterfaceResultOutput)
}

// A collection of arguments for invoking getIsisInterface.
type LookupIsisInterfaceOutputArgs struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	InterfaceId pulumi.StringInput `pulumi:"interfaceId"`
}

func (LookupIsisInterfaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIsisInterfaceArgs)(nil)).Elem()
}

// A collection of values returned by getIsisInterface.
type LookupIsisInterfaceResultOutput struct{ *pulumi.OutputState }

func (LookupIsisInterfaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIsisInterfaceResult)(nil)).Elem()
}

func (o LookupIsisInterfaceResultOutput) ToLookupIsisInterfaceResultOutput() LookupIsisInterfaceResultOutput {
	return o
}

func (o LookupIsisInterfaceResultOutput) ToLookupIsisInterfaceResultOutputWithContext(ctx context.Context) LookupIsisInterfaceResultOutput {
	return o
}

func (o LookupIsisInterfaceResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupIsisInterfaceResult] {
	return pulumix.Output[LookupIsisInterfaceResult]{
		OutputState: o.OutputState,
	}
}

// Authentication Check for ISIS without specific level.
func (o LookupIsisInterfaceResultOutput) AuthenticationCheck() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) bool { return v.AuthenticationCheck }).(pulumi.BoolOutput)
}

// Authentication Check for ISIS on Level-1.
func (o LookupIsisInterfaceResultOutput) AuthenticationCheckL1() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) bool { return v.AuthenticationCheckL1 }).(pulumi.BoolOutput)
}

// Authentication Check for ISIS on Level-2.
func (o LookupIsisInterfaceResultOutput) AuthenticationCheckL2() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) bool { return v.AuthenticationCheckL2 }).(pulumi.BoolOutput)
}

// Authentication Key for IS-IS without specific level.
func (o LookupIsisInterfaceResultOutput) AuthenticationKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) string { return v.AuthenticationKey }).(pulumi.StringOutput)
}

// Authentication Key for IS-IS on Level-1.
func (o LookupIsisInterfaceResultOutput) AuthenticationKeyL1() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) string { return v.AuthenticationKeyL1 }).(pulumi.StringOutput)
}

// Authentication Key for IS-IS on Level-2.
func (o LookupIsisInterfaceResultOutput) AuthenticationKeyL2() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) string { return v.AuthenticationKeyL2 }).(pulumi.StringOutput)
}

// IS-IS Authentication-Type without specific level.
func (o LookupIsisInterfaceResultOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// IS-IS Authentication-Type for Level-1.
func (o LookupIsisInterfaceResultOutput) AuthenticationTypeL1() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) string { return v.AuthenticationTypeL1 }).(pulumi.StringOutput)
}

// IS-IS Authentication-Type for Level-2.
func (o LookupIsisInterfaceResultOutput) AuthenticationTypeL2() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) string { return v.AuthenticationTypeL2 }).(pulumi.StringOutput)
}

// Circuit type.
func (o LookupIsisInterfaceResultOutput) CircuitType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) string { return v.CircuitType }).(pulumi.StringOutput)
}

// A device name from the provider configuration.
func (o LookupIsisInterfaceResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// Hello interval.
func (o LookupIsisInterfaceResultOutput) HelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) int { return v.HelloInterval }).(pulumi.IntOutput)
}

// Hello interval Level-1.
func (o LookupIsisInterfaceResultOutput) HelloIntervalL1() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) int { return v.HelloIntervalL1 }).(pulumi.IntOutput)
}

// Hello interval Level-2.
func (o LookupIsisInterfaceResultOutput) HelloIntervalL2() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) int { return v.HelloIntervalL2 }).(pulumi.IntOutput)
}

// Hello multiplier.
func (o LookupIsisInterfaceResultOutput) HelloMultiplier() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) int { return v.HelloMultiplier }).(pulumi.IntOutput)
}

// Hello multiplier Level-1.
func (o LookupIsisInterfaceResultOutput) HelloMultiplierL1() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) int { return v.HelloMultiplierL1 }).(pulumi.IntOutput)
}

// Hello multiplier Level-2.
func (o LookupIsisInterfaceResultOutput) HelloMultiplierL2() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) int { return v.HelloMultiplierL2 }).(pulumi.IntOutput)
}

// Hello padding.
func (o LookupIsisInterfaceResultOutput) HelloPadding() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) string { return v.HelloPadding }).(pulumi.StringOutput)
}

// The distinguished name of the object.
func (o LookupIsisInterfaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
func (o LookupIsisInterfaceResultOutput) InterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) string { return v.InterfaceId }).(pulumi.StringOutput)
}

// Interface metric Level-1.
func (o LookupIsisInterfaceResultOutput) MetricL1() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) int { return v.MetricL1 }).(pulumi.IntOutput)
}

// Interface metric Level-2.
func (o LookupIsisInterfaceResultOutput) MetricL2() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) int { return v.MetricL2 }).(pulumi.IntOutput)
}

// MTU Check for IS-IS without specific level.
func (o LookupIsisInterfaceResultOutput) MtuCheck() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) bool { return v.MtuCheck }).(pulumi.BoolOutput)
}

// MTU Check for IS-IS on Level-1.
func (o LookupIsisInterfaceResultOutput) MtuCheckL1() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) bool { return v.MtuCheckL1 }).(pulumi.BoolOutput)
}

// MTU Check for IS-IS on Level-2.
func (o LookupIsisInterfaceResultOutput) MtuCheckL2() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) bool { return v.MtuCheckL2 }).(pulumi.BoolOutput)
}

// Enabling Point-to-Point Network Type on IS-IS Interface.
func (o LookupIsisInterfaceResultOutput) NetworkTypeP2p() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) string { return v.NetworkTypeP2p }).(pulumi.StringOutput)
}

// IS-IS Passive Interface Info.
func (o LookupIsisInterfaceResultOutput) Passive() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) string { return v.Passive }).(pulumi.StringOutput)
}

// Circuit priority.
func (o LookupIsisInterfaceResultOutput) PriorityL1() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) int { return v.PriorityL1 }).(pulumi.IntOutput)
}

// Circuit priority.
func (o LookupIsisInterfaceResultOutput) PriorityL2() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) int { return v.PriorityL2 }).(pulumi.IntOutput)
}

// VRF.
func (o LookupIsisInterfaceResultOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIsisInterfaceResult) string { return v.Vrf }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIsisInterfaceResultOutput{})
}
