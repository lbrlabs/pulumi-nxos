// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupPimInterface(ctx *pulumi.Context, args *LookupPimInterfaceArgs, opts ...pulumi.InvokeOption) (*LookupPimInterfaceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPimInterfaceResult
	err := ctx.Invoke("nxos:nxos/getPimInterface:getPimInterface", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPimInterface.
type LookupPimInterfaceArgs struct {
	Device      *string `pulumi:"device"`
	InterfaceId string  `pulumi:"interfaceId"`
	VrfName     string  `pulumi:"vrfName"`
}

// A collection of values returned by getPimInterface.
type LookupPimInterfaceResult struct {
	AdminState  string  `pulumi:"adminState"`
	Bfd         string  `pulumi:"bfd"`
	Device      *string `pulumi:"device"`
	DrPriority  int     `pulumi:"drPriority"`
	Id          string  `pulumi:"id"`
	InterfaceId string  `pulumi:"interfaceId"`
	Passive     bool    `pulumi:"passive"`
	SparseMode  bool    `pulumi:"sparseMode"`
	VrfName     string  `pulumi:"vrfName"`
}

func LookupPimInterfaceOutput(ctx *pulumi.Context, args LookupPimInterfaceOutputArgs, opts ...pulumi.InvokeOption) LookupPimInterfaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPimInterfaceResult, error) {
			args := v.(LookupPimInterfaceArgs)
			r, err := LookupPimInterface(ctx, &args, opts...)
			var s LookupPimInterfaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPimInterfaceResultOutput)
}

// A collection of arguments for invoking getPimInterface.
type LookupPimInterfaceOutputArgs struct {
	Device      pulumi.StringPtrInput `pulumi:"device"`
	InterfaceId pulumi.StringInput    `pulumi:"interfaceId"`
	VrfName     pulumi.StringInput    `pulumi:"vrfName"`
}

func (LookupPimInterfaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPimInterfaceArgs)(nil)).Elem()
}

// A collection of values returned by getPimInterface.
type LookupPimInterfaceResultOutput struct{ *pulumi.OutputState }

func (LookupPimInterfaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPimInterfaceResult)(nil)).Elem()
}

func (o LookupPimInterfaceResultOutput) ToLookupPimInterfaceResultOutput() LookupPimInterfaceResultOutput {
	return o
}

func (o LookupPimInterfaceResultOutput) ToLookupPimInterfaceResultOutputWithContext(ctx context.Context) LookupPimInterfaceResultOutput {
	return o
}

func (o LookupPimInterfaceResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupPimInterfaceResult] {
	return pulumix.Output[LookupPimInterfaceResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupPimInterfaceResultOutput) AdminState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) string { return v.AdminState }).(pulumi.StringOutput)
}

func (o LookupPimInterfaceResultOutput) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) string { return v.Bfd }).(pulumi.StringOutput)
}

func (o LookupPimInterfaceResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupPimInterfaceResultOutput) DrPriority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) int { return v.DrPriority }).(pulumi.IntOutput)
}

func (o LookupPimInterfaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPimInterfaceResultOutput) InterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) string { return v.InterfaceId }).(pulumi.StringOutput)
}

func (o LookupPimInterfaceResultOutput) Passive() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) bool { return v.Passive }).(pulumi.BoolOutput)
}

func (o LookupPimInterfaceResultOutput) SparseMode() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) bool { return v.SparseMode }).(pulumi.BoolOutput)
}

func (o LookupPimInterfaceResultOutput) VrfName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) string { return v.VrfName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPimInterfaceResultOutput{})
}
