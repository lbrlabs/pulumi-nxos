// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupNveVniContainer(ctx *pulumi.Context, args *LookupNveVniContainerArgs, opts ...pulumi.InvokeOption) (*LookupNveVniContainerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNveVniContainerResult
	err := ctx.Invoke("nxos:nxos/getNveVniContainer:getNveVniContainer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNveVniContainer.
type LookupNveVniContainerArgs struct {
	Device *string `pulumi:"device"`
}

// A collection of values returned by getNveVniContainer.
type LookupNveVniContainerResult struct {
	Device *string `pulumi:"device"`
	Id     string  `pulumi:"id"`
}

func LookupNveVniContainerOutput(ctx *pulumi.Context, args LookupNveVniContainerOutputArgs, opts ...pulumi.InvokeOption) LookupNveVniContainerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNveVniContainerResult, error) {
			args := v.(LookupNveVniContainerArgs)
			r, err := LookupNveVniContainer(ctx, &args, opts...)
			var s LookupNveVniContainerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNveVniContainerResultOutput)
}

// A collection of arguments for invoking getNveVniContainer.
type LookupNveVniContainerOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
}

func (LookupNveVniContainerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNveVniContainerArgs)(nil)).Elem()
}

// A collection of values returned by getNveVniContainer.
type LookupNveVniContainerResultOutput struct{ *pulumi.OutputState }

func (LookupNveVniContainerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNveVniContainerResult)(nil)).Elem()
}

func (o LookupNveVniContainerResultOutput) ToLookupNveVniContainerResultOutput() LookupNveVniContainerResultOutput {
	return o
}

func (o LookupNveVniContainerResultOutput) ToLookupNveVniContainerResultOutputWithContext(ctx context.Context) LookupNveVniContainerResultOutput {
	return o
}

func (o LookupNveVniContainerResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupNveVniContainerResult] {
	return pulumix.Output[LookupNveVniContainerResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupNveVniContainerResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNveVniContainerResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupNveVniContainerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNveVniContainerResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNveVniContainerResultOutput{})
}
