// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupSubinterfaceVrf(ctx *pulumi.Context, args *LookupSubinterfaceVrfArgs, opts ...pulumi.InvokeOption) (*LookupSubinterfaceVrfResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSubinterfaceVrfResult
	err := ctx.Invoke("nxos:nxos/getSubinterfaceVrf:getSubinterfaceVrf", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubinterfaceVrf.
type LookupSubinterfaceVrfArgs struct {
	Device      *string `pulumi:"device"`
	InterfaceId string  `pulumi:"interfaceId"`
}

// A collection of values returned by getSubinterfaceVrf.
type LookupSubinterfaceVrfResult struct {
	Device      *string `pulumi:"device"`
	Id          string  `pulumi:"id"`
	InterfaceId string  `pulumi:"interfaceId"`
	VrfDn       string  `pulumi:"vrfDn"`
}

func LookupSubinterfaceVrfOutput(ctx *pulumi.Context, args LookupSubinterfaceVrfOutputArgs, opts ...pulumi.InvokeOption) LookupSubinterfaceVrfResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSubinterfaceVrfResult, error) {
			args := v.(LookupSubinterfaceVrfArgs)
			r, err := LookupSubinterfaceVrf(ctx, &args, opts...)
			var s LookupSubinterfaceVrfResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSubinterfaceVrfResultOutput)
}

// A collection of arguments for invoking getSubinterfaceVrf.
type LookupSubinterfaceVrfOutputArgs struct {
	Device      pulumi.StringPtrInput `pulumi:"device"`
	InterfaceId pulumi.StringInput    `pulumi:"interfaceId"`
}

func (LookupSubinterfaceVrfOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubinterfaceVrfArgs)(nil)).Elem()
}

// A collection of values returned by getSubinterfaceVrf.
type LookupSubinterfaceVrfResultOutput struct{ *pulumi.OutputState }

func (LookupSubinterfaceVrfResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubinterfaceVrfResult)(nil)).Elem()
}

func (o LookupSubinterfaceVrfResultOutput) ToLookupSubinterfaceVrfResultOutput() LookupSubinterfaceVrfResultOutput {
	return o
}

func (o LookupSubinterfaceVrfResultOutput) ToLookupSubinterfaceVrfResultOutputWithContext(ctx context.Context) LookupSubinterfaceVrfResultOutput {
	return o
}

func (o LookupSubinterfaceVrfResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupSubinterfaceVrfResult] {
	return pulumix.Output[LookupSubinterfaceVrfResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupSubinterfaceVrfResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubinterfaceVrfResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupSubinterfaceVrfResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubinterfaceVrfResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSubinterfaceVrfResultOutput) InterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubinterfaceVrfResult) string { return v.InterfaceId }).(pulumi.StringOutput)
}

func (o LookupSubinterfaceVrfResultOutput) VrfDn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubinterfaceVrfResult) string { return v.VrfDn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSubinterfaceVrfResultOutput{})
}
