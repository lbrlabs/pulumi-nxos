// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type BgpPeer struct {
	pulumi.CustomResourceState

	// Peer address.
	Address pulumi.StringOutput `pulumi:"address"`
	// Autonomous system number.
	Asn pulumi.StringOutput `pulumi:"asn"`
	// Peer description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// BGP Hold Timer in seconds. The value must be greater than the keepalive timer - Range: `3`-`3600` - Default value: `180`
	HoldTime pulumi.IntOutput `pulumi:"holdTime"`
	// BGP Keepalive Timer in seconds - Range: `0`-`3600` - Default value: `60`
	Keepalive pulumi.IntOutput `pulumi:"keepalive"`
	// Peer template name.
	PeerTemplate pulumi.StringPtrOutput `pulumi:"peerTemplate"`
	// Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:
	// `fabric-internal`
	PeerType pulumi.StringOutput `pulumi:"peerType"`
	// Peer autonomous system number.
	RemoteAsn pulumi.StringPtrOutput `pulumi:"remoteAsn"`
	// Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`
	SourceInterface pulumi.StringOutput `pulumi:"sourceInterface"`
	// VRF name.
	Vrf pulumi.StringOutput `pulumi:"vrf"`
}

// NewBgpPeer registers a new resource with the given unique name, arguments, and options.
func NewBgpPeer(ctx *pulumi.Context,
	name string, args *BgpPeerArgs, opts ...pulumi.ResourceOption) (*BgpPeer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Address == nil {
		return nil, errors.New("invalid value for required argument 'Address'")
	}
	if args.Asn == nil {
		return nil, errors.New("invalid value for required argument 'Asn'")
	}
	if args.Vrf == nil {
		return nil, errors.New("invalid value for required argument 'Vrf'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BgpPeer
	err := ctx.RegisterResource("nxos:nxos/bgpPeer:BgpPeer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBgpPeer gets an existing BgpPeer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBgpPeer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BgpPeerState, opts ...pulumi.ResourceOption) (*BgpPeer, error) {
	var resource BgpPeer
	err := ctx.ReadResource("nxos:nxos/bgpPeer:BgpPeer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BgpPeer resources.
type bgpPeerState struct {
	// Peer address.
	Address *string `pulumi:"address"`
	// Autonomous system number.
	Asn *string `pulumi:"asn"`
	// Peer description.
	Description *string `pulumi:"description"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// BGP Hold Timer in seconds. The value must be greater than the keepalive timer - Range: `3`-`3600` - Default value: `180`
	HoldTime *int `pulumi:"holdTime"`
	// BGP Keepalive Timer in seconds - Range: `0`-`3600` - Default value: `60`
	Keepalive *int `pulumi:"keepalive"`
	// Peer template name.
	PeerTemplate *string `pulumi:"peerTemplate"`
	// Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:
	// `fabric-internal`
	PeerType *string `pulumi:"peerType"`
	// Peer autonomous system number.
	RemoteAsn *string `pulumi:"remoteAsn"`
	// Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`
	SourceInterface *string `pulumi:"sourceInterface"`
	// VRF name.
	Vrf *string `pulumi:"vrf"`
}

type BgpPeerState struct {
	// Peer address.
	Address pulumi.StringPtrInput
	// Autonomous system number.
	Asn pulumi.StringPtrInput
	// Peer description.
	Description pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// BGP Hold Timer in seconds. The value must be greater than the keepalive timer - Range: `3`-`3600` - Default value: `180`
	HoldTime pulumi.IntPtrInput
	// BGP Keepalive Timer in seconds - Range: `0`-`3600` - Default value: `60`
	Keepalive pulumi.IntPtrInput
	// Peer template name.
	PeerTemplate pulumi.StringPtrInput
	// Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:
	// `fabric-internal`
	PeerType pulumi.StringPtrInput
	// Peer autonomous system number.
	RemoteAsn pulumi.StringPtrInput
	// Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`
	SourceInterface pulumi.StringPtrInput
	// VRF name.
	Vrf pulumi.StringPtrInput
}

func (BgpPeerState) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpPeerState)(nil)).Elem()
}

type bgpPeerArgs struct {
	// Peer address.
	Address string `pulumi:"address"`
	// Autonomous system number.
	Asn string `pulumi:"asn"`
	// Peer description.
	Description *string `pulumi:"description"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// BGP Hold Timer in seconds. The value must be greater than the keepalive timer - Range: `3`-`3600` - Default value: `180`
	HoldTime *int `pulumi:"holdTime"`
	// BGP Keepalive Timer in seconds - Range: `0`-`3600` - Default value: `60`
	Keepalive *int `pulumi:"keepalive"`
	// Peer template name.
	PeerTemplate *string `pulumi:"peerTemplate"`
	// Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:
	// `fabric-internal`
	PeerType *string `pulumi:"peerType"`
	// Peer autonomous system number.
	RemoteAsn *string `pulumi:"remoteAsn"`
	// Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`
	SourceInterface *string `pulumi:"sourceInterface"`
	// VRF name.
	Vrf string `pulumi:"vrf"`
}

// The set of arguments for constructing a BgpPeer resource.
type BgpPeerArgs struct {
	// Peer address.
	Address pulumi.StringInput
	// Autonomous system number.
	Asn pulumi.StringInput
	// Peer description.
	Description pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// BGP Hold Timer in seconds. The value must be greater than the keepalive timer - Range: `3`-`3600` - Default value: `180`
	HoldTime pulumi.IntPtrInput
	// BGP Keepalive Timer in seconds - Range: `0`-`3600` - Default value: `60`
	Keepalive pulumi.IntPtrInput
	// Peer template name.
	PeerTemplate pulumi.StringPtrInput
	// Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:
	// `fabric-internal`
	PeerType pulumi.StringPtrInput
	// Peer autonomous system number.
	RemoteAsn pulumi.StringPtrInput
	// Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`
	SourceInterface pulumi.StringPtrInput
	// VRF name.
	Vrf pulumi.StringInput
}

func (BgpPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpPeerArgs)(nil)).Elem()
}

type BgpPeerInput interface {
	pulumi.Input

	ToBgpPeerOutput() BgpPeerOutput
	ToBgpPeerOutputWithContext(ctx context.Context) BgpPeerOutput
}

func (*BgpPeer) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpPeer)(nil)).Elem()
}

func (i *BgpPeer) ToBgpPeerOutput() BgpPeerOutput {
	return i.ToBgpPeerOutputWithContext(context.Background())
}

func (i *BgpPeer) ToBgpPeerOutputWithContext(ctx context.Context) BgpPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeerOutput)
}

func (i *BgpPeer) ToOutput(ctx context.Context) pulumix.Output[*BgpPeer] {
	return pulumix.Output[*BgpPeer]{
		OutputState: i.ToBgpPeerOutputWithContext(ctx).OutputState,
	}
}

// BgpPeerArrayInput is an input type that accepts BgpPeerArray and BgpPeerArrayOutput values.
// You can construct a concrete instance of `BgpPeerArrayInput` via:
//
//	BgpPeerArray{ BgpPeerArgs{...} }
type BgpPeerArrayInput interface {
	pulumi.Input

	ToBgpPeerArrayOutput() BgpPeerArrayOutput
	ToBgpPeerArrayOutputWithContext(context.Context) BgpPeerArrayOutput
}

type BgpPeerArray []BgpPeerInput

func (BgpPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpPeer)(nil)).Elem()
}

func (i BgpPeerArray) ToBgpPeerArrayOutput() BgpPeerArrayOutput {
	return i.ToBgpPeerArrayOutputWithContext(context.Background())
}

func (i BgpPeerArray) ToBgpPeerArrayOutputWithContext(ctx context.Context) BgpPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeerArrayOutput)
}

func (i BgpPeerArray) ToOutput(ctx context.Context) pulumix.Output[[]*BgpPeer] {
	return pulumix.Output[[]*BgpPeer]{
		OutputState: i.ToBgpPeerArrayOutputWithContext(ctx).OutputState,
	}
}

// BgpPeerMapInput is an input type that accepts BgpPeerMap and BgpPeerMapOutput values.
// You can construct a concrete instance of `BgpPeerMapInput` via:
//
//	BgpPeerMap{ "key": BgpPeerArgs{...} }
type BgpPeerMapInput interface {
	pulumi.Input

	ToBgpPeerMapOutput() BgpPeerMapOutput
	ToBgpPeerMapOutputWithContext(context.Context) BgpPeerMapOutput
}

type BgpPeerMap map[string]BgpPeerInput

func (BgpPeerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpPeer)(nil)).Elem()
}

func (i BgpPeerMap) ToBgpPeerMapOutput() BgpPeerMapOutput {
	return i.ToBgpPeerMapOutputWithContext(context.Background())
}

func (i BgpPeerMap) ToBgpPeerMapOutputWithContext(ctx context.Context) BgpPeerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeerMapOutput)
}

func (i BgpPeerMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpPeer] {
	return pulumix.Output[map[string]*BgpPeer]{
		OutputState: i.ToBgpPeerMapOutputWithContext(ctx).OutputState,
	}
}

type BgpPeerOutput struct{ *pulumi.OutputState }

func (BgpPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpPeer)(nil)).Elem()
}

func (o BgpPeerOutput) ToBgpPeerOutput() BgpPeerOutput {
	return o
}

func (o BgpPeerOutput) ToBgpPeerOutputWithContext(ctx context.Context) BgpPeerOutput {
	return o
}

func (o BgpPeerOutput) ToOutput(ctx context.Context) pulumix.Output[*BgpPeer] {
	return pulumix.Output[*BgpPeer]{
		OutputState: o.OutputState,
	}
}

// Peer address.
func (o BgpPeerOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

// Autonomous system number.
func (o BgpPeerOutput) Asn() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.Asn }).(pulumi.StringOutput)
}

// Peer description.
func (o BgpPeerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A device name from the provider configuration.
func (o BgpPeerOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// BGP Hold Timer in seconds. The value must be greater than the keepalive timer - Range: `3`-`3600` - Default value: `180`
func (o BgpPeerOutput) HoldTime() pulumi.IntOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.IntOutput { return v.HoldTime }).(pulumi.IntOutput)
}

// BGP Keepalive Timer in seconds - Range: `0`-`3600` - Default value: `60`
func (o BgpPeerOutput) Keepalive() pulumi.IntOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.IntOutput { return v.Keepalive }).(pulumi.IntOutput)
}

// Peer template name.
func (o BgpPeerOutput) PeerTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringPtrOutput { return v.PeerTemplate }).(pulumi.StringPtrOutput)
}

// Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:
// `fabric-internal`
func (o BgpPeerOutput) PeerType() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.PeerType }).(pulumi.StringOutput)
}

// Peer autonomous system number.
func (o BgpPeerOutput) RemoteAsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringPtrOutput { return v.RemoteAsn }).(pulumi.StringPtrOutput)
}

// Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`
func (o BgpPeerOutput) SourceInterface() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.SourceInterface }).(pulumi.StringOutput)
}

// VRF name.
func (o BgpPeerOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.Vrf }).(pulumi.StringOutput)
}

type BgpPeerArrayOutput struct{ *pulumi.OutputState }

func (BgpPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpPeer)(nil)).Elem()
}

func (o BgpPeerArrayOutput) ToBgpPeerArrayOutput() BgpPeerArrayOutput {
	return o
}

func (o BgpPeerArrayOutput) ToBgpPeerArrayOutputWithContext(ctx context.Context) BgpPeerArrayOutput {
	return o
}

func (o BgpPeerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*BgpPeer] {
	return pulumix.Output[[]*BgpPeer]{
		OutputState: o.OutputState,
	}
}

func (o BgpPeerArrayOutput) Index(i pulumi.IntInput) BgpPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BgpPeer {
		return vs[0].([]*BgpPeer)[vs[1].(int)]
	}).(BgpPeerOutput)
}

type BgpPeerMapOutput struct{ *pulumi.OutputState }

func (BgpPeerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpPeer)(nil)).Elem()
}

func (o BgpPeerMapOutput) ToBgpPeerMapOutput() BgpPeerMapOutput {
	return o
}

func (o BgpPeerMapOutput) ToBgpPeerMapOutputWithContext(ctx context.Context) BgpPeerMapOutput {
	return o
}

func (o BgpPeerMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpPeer] {
	return pulumix.Output[map[string]*BgpPeer]{
		OutputState: o.OutputState,
	}
}

func (o BgpPeerMapOutput) MapIndex(k pulumi.StringInput) BgpPeerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BgpPeer {
		return vs[0].(map[string]*BgpPeer)[vs[1].(string)]
	}).(BgpPeerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BgpPeerInput)(nil)).Elem(), &BgpPeer{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpPeerArrayInput)(nil)).Elem(), BgpPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpPeerMapInput)(nil)).Elem(), BgpPeerMap{})
	pulumi.RegisterOutputType(BgpPeerOutput{})
	pulumi.RegisterOutputType(BgpPeerArrayOutput{})
	pulumi.RegisterOutputType(BgpPeerMapOutput{})
}
