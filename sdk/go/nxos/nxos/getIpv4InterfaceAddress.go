// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupIpv4InterfaceAddress(ctx *pulumi.Context, args *LookupIpv4InterfaceAddressArgs, opts ...pulumi.InvokeOption) (*LookupIpv4InterfaceAddressResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIpv4InterfaceAddressResult
	err := ctx.Invoke("nxos:nxos/getIpv4InterfaceAddress:getIpv4InterfaceAddress", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpv4InterfaceAddress.
type LookupIpv4InterfaceAddressArgs struct {
	Address     string  `pulumi:"address"`
	Device      *string `pulumi:"device"`
	InterfaceId string  `pulumi:"interfaceId"`
	Vrf         string  `pulumi:"vrf"`
}

// A collection of values returned by getIpv4InterfaceAddress.
type LookupIpv4InterfaceAddressResult struct {
	Address     string  `pulumi:"address"`
	Device      *string `pulumi:"device"`
	Id          string  `pulumi:"id"`
	InterfaceId string  `pulumi:"interfaceId"`
	Type        string  `pulumi:"type"`
	Vrf         string  `pulumi:"vrf"`
}

func LookupIpv4InterfaceAddressOutput(ctx *pulumi.Context, args LookupIpv4InterfaceAddressOutputArgs, opts ...pulumi.InvokeOption) LookupIpv4InterfaceAddressResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIpv4InterfaceAddressResult, error) {
			args := v.(LookupIpv4InterfaceAddressArgs)
			r, err := LookupIpv4InterfaceAddress(ctx, &args, opts...)
			var s LookupIpv4InterfaceAddressResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIpv4InterfaceAddressResultOutput)
}

// A collection of arguments for invoking getIpv4InterfaceAddress.
type LookupIpv4InterfaceAddressOutputArgs struct {
	Address     pulumi.StringInput    `pulumi:"address"`
	Device      pulumi.StringPtrInput `pulumi:"device"`
	InterfaceId pulumi.StringInput    `pulumi:"interfaceId"`
	Vrf         pulumi.StringInput    `pulumi:"vrf"`
}

func (LookupIpv4InterfaceAddressOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpv4InterfaceAddressArgs)(nil)).Elem()
}

// A collection of values returned by getIpv4InterfaceAddress.
type LookupIpv4InterfaceAddressResultOutput struct{ *pulumi.OutputState }

func (LookupIpv4InterfaceAddressResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpv4InterfaceAddressResult)(nil)).Elem()
}

func (o LookupIpv4InterfaceAddressResultOutput) ToLookupIpv4InterfaceAddressResultOutput() LookupIpv4InterfaceAddressResultOutput {
	return o
}

func (o LookupIpv4InterfaceAddressResultOutput) ToLookupIpv4InterfaceAddressResultOutputWithContext(ctx context.Context) LookupIpv4InterfaceAddressResultOutput {
	return o
}

func (o LookupIpv4InterfaceAddressResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupIpv4InterfaceAddressResult] {
	return pulumix.Output[LookupIpv4InterfaceAddressResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupIpv4InterfaceAddressResultOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4InterfaceAddressResult) string { return v.Address }).(pulumi.StringOutput)
}

func (o LookupIpv4InterfaceAddressResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIpv4InterfaceAddressResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupIpv4InterfaceAddressResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4InterfaceAddressResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupIpv4InterfaceAddressResultOutput) InterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4InterfaceAddressResult) string { return v.InterfaceId }).(pulumi.StringOutput)
}

func (o LookupIpv4InterfaceAddressResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4InterfaceAddressResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupIpv4InterfaceAddressResultOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4InterfaceAddressResult) string { return v.Vrf }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIpv4InterfaceAddressResultOutput{})
}
