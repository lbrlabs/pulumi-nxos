// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupRouteMapRuleEntryMatchRoutePrefixList(ctx *pulumi.Context, args *LookupRouteMapRuleEntryMatchRoutePrefixListArgs, opts ...pulumi.InvokeOption) (*LookupRouteMapRuleEntryMatchRoutePrefixListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRouteMapRuleEntryMatchRoutePrefixListResult
	err := ctx.Invoke("nxos:nxos/getRouteMapRuleEntryMatchRoutePrefixList:getRouteMapRuleEntryMatchRoutePrefixList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouteMapRuleEntryMatchRoutePrefixList.
type LookupRouteMapRuleEntryMatchRoutePrefixListArgs struct {
	Device       *string `pulumi:"device"`
	Order        int     `pulumi:"order"`
	PrefixListDn string  `pulumi:"prefixListDn"`
	RuleName     string  `pulumi:"ruleName"`
}

// A collection of values returned by getRouteMapRuleEntryMatchRoutePrefixList.
type LookupRouteMapRuleEntryMatchRoutePrefixListResult struct {
	Device       *string `pulumi:"device"`
	Id           string  `pulumi:"id"`
	Order        int     `pulumi:"order"`
	PrefixListDn string  `pulumi:"prefixListDn"`
	RuleName     string  `pulumi:"ruleName"`
}

func LookupRouteMapRuleEntryMatchRoutePrefixListOutput(ctx *pulumi.Context, args LookupRouteMapRuleEntryMatchRoutePrefixListOutputArgs, opts ...pulumi.InvokeOption) LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRouteMapRuleEntryMatchRoutePrefixListResult, error) {
			args := v.(LookupRouteMapRuleEntryMatchRoutePrefixListArgs)
			r, err := LookupRouteMapRuleEntryMatchRoutePrefixList(ctx, &args, opts...)
			var s LookupRouteMapRuleEntryMatchRoutePrefixListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput)
}

// A collection of arguments for invoking getRouteMapRuleEntryMatchRoutePrefixList.
type LookupRouteMapRuleEntryMatchRoutePrefixListOutputArgs struct {
	Device       pulumi.StringPtrInput `pulumi:"device"`
	Order        pulumi.IntInput       `pulumi:"order"`
	PrefixListDn pulumi.StringInput    `pulumi:"prefixListDn"`
	RuleName     pulumi.StringInput    `pulumi:"ruleName"`
}

func (LookupRouteMapRuleEntryMatchRoutePrefixListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteMapRuleEntryMatchRoutePrefixListArgs)(nil)).Elem()
}

// A collection of values returned by getRouteMapRuleEntryMatchRoutePrefixList.
type LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput struct{ *pulumi.OutputState }

func (LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteMapRuleEntryMatchRoutePrefixListResult)(nil)).Elem()
}

func (o LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) ToLookupRouteMapRuleEntryMatchRoutePrefixListResultOutput() LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput {
	return o
}

func (o LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) ToLookupRouteMapRuleEntryMatchRoutePrefixListResultOutputWithContext(ctx context.Context) LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput {
	return o
}

func (o LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupRouteMapRuleEntryMatchRoutePrefixListResult] {
	return pulumix.Output[LookupRouteMapRuleEntryMatchRoutePrefixListResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouteMapRuleEntryMatchRoutePrefixListResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteMapRuleEntryMatchRoutePrefixListResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRouteMapRuleEntryMatchRoutePrefixListResult) int { return v.Order }).(pulumi.IntOutput)
}

func (o LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) PrefixListDn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteMapRuleEntryMatchRoutePrefixListResult) string { return v.PrefixListDn }).(pulumi.StringOutput)
}

func (o LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteMapRuleEntryMatchRoutePrefixListResult) string { return v.RuleName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput{})
}
