// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupSviInterface(ctx *pulumi.Context, args *LookupSviInterfaceArgs, opts ...pulumi.InvokeOption) (*LookupSviInterfaceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSviInterfaceResult
	err := ctx.Invoke("nxos:nxos/getSviInterface:getSviInterface", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSviInterface.
type LookupSviInterfaceArgs struct {
	Device      *string `pulumi:"device"`
	InterfaceId string  `pulumi:"interfaceId"`
}

// A collection of values returned by getSviInterface.
type LookupSviInterfaceResult struct {
	AdminState  string  `pulumi:"adminState"`
	Bandwidth   int     `pulumi:"bandwidth"`
	Delay       int     `pulumi:"delay"`
	Description string  `pulumi:"description"`
	Device      *string `pulumi:"device"`
	Id          string  `pulumi:"id"`
	InterfaceId string  `pulumi:"interfaceId"`
	Medium      string  `pulumi:"medium"`
	Mtu         int     `pulumi:"mtu"`
}

func LookupSviInterfaceOutput(ctx *pulumi.Context, args LookupSviInterfaceOutputArgs, opts ...pulumi.InvokeOption) LookupSviInterfaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSviInterfaceResult, error) {
			args := v.(LookupSviInterfaceArgs)
			r, err := LookupSviInterface(ctx, &args, opts...)
			var s LookupSviInterfaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSviInterfaceResultOutput)
}

// A collection of arguments for invoking getSviInterface.
type LookupSviInterfaceOutputArgs struct {
	Device      pulumi.StringPtrInput `pulumi:"device"`
	InterfaceId pulumi.StringInput    `pulumi:"interfaceId"`
}

func (LookupSviInterfaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSviInterfaceArgs)(nil)).Elem()
}

// A collection of values returned by getSviInterface.
type LookupSviInterfaceResultOutput struct{ *pulumi.OutputState }

func (LookupSviInterfaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSviInterfaceResult)(nil)).Elem()
}

func (o LookupSviInterfaceResultOutput) ToLookupSviInterfaceResultOutput() LookupSviInterfaceResultOutput {
	return o
}

func (o LookupSviInterfaceResultOutput) ToLookupSviInterfaceResultOutputWithContext(ctx context.Context) LookupSviInterfaceResultOutput {
	return o
}

func (o LookupSviInterfaceResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupSviInterfaceResult] {
	return pulumix.Output[LookupSviInterfaceResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupSviInterfaceResultOutput) AdminState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSviInterfaceResult) string { return v.AdminState }).(pulumi.StringOutput)
}

func (o LookupSviInterfaceResultOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSviInterfaceResult) int { return v.Bandwidth }).(pulumi.IntOutput)
}

func (o LookupSviInterfaceResultOutput) Delay() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSviInterfaceResult) int { return v.Delay }).(pulumi.IntOutput)
}

func (o LookupSviInterfaceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSviInterfaceResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupSviInterfaceResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSviInterfaceResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupSviInterfaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSviInterfaceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSviInterfaceResultOutput) InterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSviInterfaceResult) string { return v.InterfaceId }).(pulumi.StringOutput)
}

func (o LookupSviInterfaceResultOutput) Medium() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSviInterfaceResult) string { return v.Medium }).(pulumi.StringOutput)
}

func (o LookupSviInterfaceResultOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSviInterfaceResult) int { return v.Mtu }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSviInterfaceResultOutput{})
}
