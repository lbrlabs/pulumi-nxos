// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type PimSsmRange struct {
	pulumi.CustomResourceState

	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// Group list 1. - Default value: `0.0.0.0`
	GroupList1 pulumi.StringOutput `pulumi:"groupList1"`
	// Group list 2. - Default value: `0.0.0.0`
	GroupList2 pulumi.StringOutput `pulumi:"groupList2"`
	// Group list 3. - Default value: `0.0.0.0`
	GroupList3 pulumi.StringOutput `pulumi:"groupList3"`
	// Group list 4. - Default value: `0.0.0.0`
	GroupList4 pulumi.StringOutput `pulumi:"groupList4"`
	// Prefix list name.
	PrefixList pulumi.StringPtrOutput `pulumi:"prefixList"`
	// Route map name.
	RouteMap pulumi.StringPtrOutput `pulumi:"routeMap"`
	// Exclude standard SSM range (232.0.0.0/8). - Default value: `false`
	SsmNone pulumi.BoolOutput `pulumi:"ssmNone"`
	// VRF name.
	VrfName pulumi.StringOutput `pulumi:"vrfName"`
}

// NewPimSsmRange registers a new resource with the given unique name, arguments, and options.
func NewPimSsmRange(ctx *pulumi.Context,
	name string, args *PimSsmRangeArgs, opts ...pulumi.ResourceOption) (*PimSsmRange, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VrfName == nil {
		return nil, errors.New("invalid value for required argument 'VrfName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PimSsmRange
	err := ctx.RegisterResource("nxos:nxos/pimSsmRange:PimSsmRange", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPimSsmRange gets an existing PimSsmRange resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPimSsmRange(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PimSsmRangeState, opts ...pulumi.ResourceOption) (*PimSsmRange, error) {
	var resource PimSsmRange
	err := ctx.ReadResource("nxos:nxos/pimSsmRange:PimSsmRange", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PimSsmRange resources.
type pimSsmRangeState struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Group list 1. - Default value: `0.0.0.0`
	GroupList1 *string `pulumi:"groupList1"`
	// Group list 2. - Default value: `0.0.0.0`
	GroupList2 *string `pulumi:"groupList2"`
	// Group list 3. - Default value: `0.0.0.0`
	GroupList3 *string `pulumi:"groupList3"`
	// Group list 4. - Default value: `0.0.0.0`
	GroupList4 *string `pulumi:"groupList4"`
	// Prefix list name.
	PrefixList *string `pulumi:"prefixList"`
	// Route map name.
	RouteMap *string `pulumi:"routeMap"`
	// Exclude standard SSM range (232.0.0.0/8). - Default value: `false`
	SsmNone *bool `pulumi:"ssmNone"`
	// VRF name.
	VrfName *string `pulumi:"vrfName"`
}

type PimSsmRangeState struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Group list 1. - Default value: `0.0.0.0`
	GroupList1 pulumi.StringPtrInput
	// Group list 2. - Default value: `0.0.0.0`
	GroupList2 pulumi.StringPtrInput
	// Group list 3. - Default value: `0.0.0.0`
	GroupList3 pulumi.StringPtrInput
	// Group list 4. - Default value: `0.0.0.0`
	GroupList4 pulumi.StringPtrInput
	// Prefix list name.
	PrefixList pulumi.StringPtrInput
	// Route map name.
	RouteMap pulumi.StringPtrInput
	// Exclude standard SSM range (232.0.0.0/8). - Default value: `false`
	SsmNone pulumi.BoolPtrInput
	// VRF name.
	VrfName pulumi.StringPtrInput
}

func (PimSsmRangeState) ElementType() reflect.Type {
	return reflect.TypeOf((*pimSsmRangeState)(nil)).Elem()
}

type pimSsmRangeArgs struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Group list 1. - Default value: `0.0.0.0`
	GroupList1 *string `pulumi:"groupList1"`
	// Group list 2. - Default value: `0.0.0.0`
	GroupList2 *string `pulumi:"groupList2"`
	// Group list 3. - Default value: `0.0.0.0`
	GroupList3 *string `pulumi:"groupList3"`
	// Group list 4. - Default value: `0.0.0.0`
	GroupList4 *string `pulumi:"groupList4"`
	// Prefix list name.
	PrefixList *string `pulumi:"prefixList"`
	// Route map name.
	RouteMap *string `pulumi:"routeMap"`
	// Exclude standard SSM range (232.0.0.0/8). - Default value: `false`
	SsmNone *bool `pulumi:"ssmNone"`
	// VRF name.
	VrfName string `pulumi:"vrfName"`
}

// The set of arguments for constructing a PimSsmRange resource.
type PimSsmRangeArgs struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Group list 1. - Default value: `0.0.0.0`
	GroupList1 pulumi.StringPtrInput
	// Group list 2. - Default value: `0.0.0.0`
	GroupList2 pulumi.StringPtrInput
	// Group list 3. - Default value: `0.0.0.0`
	GroupList3 pulumi.StringPtrInput
	// Group list 4. - Default value: `0.0.0.0`
	GroupList4 pulumi.StringPtrInput
	// Prefix list name.
	PrefixList pulumi.StringPtrInput
	// Route map name.
	RouteMap pulumi.StringPtrInput
	// Exclude standard SSM range (232.0.0.0/8). - Default value: `false`
	SsmNone pulumi.BoolPtrInput
	// VRF name.
	VrfName pulumi.StringInput
}

func (PimSsmRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pimSsmRangeArgs)(nil)).Elem()
}

type PimSsmRangeInput interface {
	pulumi.Input

	ToPimSsmRangeOutput() PimSsmRangeOutput
	ToPimSsmRangeOutputWithContext(ctx context.Context) PimSsmRangeOutput
}

func (*PimSsmRange) ElementType() reflect.Type {
	return reflect.TypeOf((**PimSsmRange)(nil)).Elem()
}

func (i *PimSsmRange) ToPimSsmRangeOutput() PimSsmRangeOutput {
	return i.ToPimSsmRangeOutputWithContext(context.Background())
}

func (i *PimSsmRange) ToPimSsmRangeOutputWithContext(ctx context.Context) PimSsmRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PimSsmRangeOutput)
}

func (i *PimSsmRange) ToOutput(ctx context.Context) pulumix.Output[*PimSsmRange] {
	return pulumix.Output[*PimSsmRange]{
		OutputState: i.ToPimSsmRangeOutputWithContext(ctx).OutputState,
	}
}

// PimSsmRangeArrayInput is an input type that accepts PimSsmRangeArray and PimSsmRangeArrayOutput values.
// You can construct a concrete instance of `PimSsmRangeArrayInput` via:
//
//	PimSsmRangeArray{ PimSsmRangeArgs{...} }
type PimSsmRangeArrayInput interface {
	pulumi.Input

	ToPimSsmRangeArrayOutput() PimSsmRangeArrayOutput
	ToPimSsmRangeArrayOutputWithContext(context.Context) PimSsmRangeArrayOutput
}

type PimSsmRangeArray []PimSsmRangeInput

func (PimSsmRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PimSsmRange)(nil)).Elem()
}

func (i PimSsmRangeArray) ToPimSsmRangeArrayOutput() PimSsmRangeArrayOutput {
	return i.ToPimSsmRangeArrayOutputWithContext(context.Background())
}

func (i PimSsmRangeArray) ToPimSsmRangeArrayOutputWithContext(ctx context.Context) PimSsmRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PimSsmRangeArrayOutput)
}

func (i PimSsmRangeArray) ToOutput(ctx context.Context) pulumix.Output[[]*PimSsmRange] {
	return pulumix.Output[[]*PimSsmRange]{
		OutputState: i.ToPimSsmRangeArrayOutputWithContext(ctx).OutputState,
	}
}

// PimSsmRangeMapInput is an input type that accepts PimSsmRangeMap and PimSsmRangeMapOutput values.
// You can construct a concrete instance of `PimSsmRangeMapInput` via:
//
//	PimSsmRangeMap{ "key": PimSsmRangeArgs{...} }
type PimSsmRangeMapInput interface {
	pulumi.Input

	ToPimSsmRangeMapOutput() PimSsmRangeMapOutput
	ToPimSsmRangeMapOutputWithContext(context.Context) PimSsmRangeMapOutput
}

type PimSsmRangeMap map[string]PimSsmRangeInput

func (PimSsmRangeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PimSsmRange)(nil)).Elem()
}

func (i PimSsmRangeMap) ToPimSsmRangeMapOutput() PimSsmRangeMapOutput {
	return i.ToPimSsmRangeMapOutputWithContext(context.Background())
}

func (i PimSsmRangeMap) ToPimSsmRangeMapOutputWithContext(ctx context.Context) PimSsmRangeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PimSsmRangeMapOutput)
}

func (i PimSsmRangeMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*PimSsmRange] {
	return pulumix.Output[map[string]*PimSsmRange]{
		OutputState: i.ToPimSsmRangeMapOutputWithContext(ctx).OutputState,
	}
}

type PimSsmRangeOutput struct{ *pulumi.OutputState }

func (PimSsmRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PimSsmRange)(nil)).Elem()
}

func (o PimSsmRangeOutput) ToPimSsmRangeOutput() PimSsmRangeOutput {
	return o
}

func (o PimSsmRangeOutput) ToPimSsmRangeOutputWithContext(ctx context.Context) PimSsmRangeOutput {
	return o
}

func (o PimSsmRangeOutput) ToOutput(ctx context.Context) pulumix.Output[*PimSsmRange] {
	return pulumix.Output[*PimSsmRange]{
		OutputState: o.OutputState,
	}
}

// A device name from the provider configuration.
func (o PimSsmRangeOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PimSsmRange) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// Group list 1. - Default value: `0.0.0.0`
func (o PimSsmRangeOutput) GroupList1() pulumi.StringOutput {
	return o.ApplyT(func(v *PimSsmRange) pulumi.StringOutput { return v.GroupList1 }).(pulumi.StringOutput)
}

// Group list 2. - Default value: `0.0.0.0`
func (o PimSsmRangeOutput) GroupList2() pulumi.StringOutput {
	return o.ApplyT(func(v *PimSsmRange) pulumi.StringOutput { return v.GroupList2 }).(pulumi.StringOutput)
}

// Group list 3. - Default value: `0.0.0.0`
func (o PimSsmRangeOutput) GroupList3() pulumi.StringOutput {
	return o.ApplyT(func(v *PimSsmRange) pulumi.StringOutput { return v.GroupList3 }).(pulumi.StringOutput)
}

// Group list 4. - Default value: `0.0.0.0`
func (o PimSsmRangeOutput) GroupList4() pulumi.StringOutput {
	return o.ApplyT(func(v *PimSsmRange) pulumi.StringOutput { return v.GroupList4 }).(pulumi.StringOutput)
}

// Prefix list name.
func (o PimSsmRangeOutput) PrefixList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PimSsmRange) pulumi.StringPtrOutput { return v.PrefixList }).(pulumi.StringPtrOutput)
}

// Route map name.
func (o PimSsmRangeOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PimSsmRange) pulumi.StringPtrOutput { return v.RouteMap }).(pulumi.StringPtrOutput)
}

// Exclude standard SSM range (232.0.0.0/8). - Default value: `false`
func (o PimSsmRangeOutput) SsmNone() pulumi.BoolOutput {
	return o.ApplyT(func(v *PimSsmRange) pulumi.BoolOutput { return v.SsmNone }).(pulumi.BoolOutput)
}

// VRF name.
func (o PimSsmRangeOutput) VrfName() pulumi.StringOutput {
	return o.ApplyT(func(v *PimSsmRange) pulumi.StringOutput { return v.VrfName }).(pulumi.StringOutput)
}

type PimSsmRangeArrayOutput struct{ *pulumi.OutputState }

func (PimSsmRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PimSsmRange)(nil)).Elem()
}

func (o PimSsmRangeArrayOutput) ToPimSsmRangeArrayOutput() PimSsmRangeArrayOutput {
	return o
}

func (o PimSsmRangeArrayOutput) ToPimSsmRangeArrayOutputWithContext(ctx context.Context) PimSsmRangeArrayOutput {
	return o
}

func (o PimSsmRangeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*PimSsmRange] {
	return pulumix.Output[[]*PimSsmRange]{
		OutputState: o.OutputState,
	}
}

func (o PimSsmRangeArrayOutput) Index(i pulumi.IntInput) PimSsmRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PimSsmRange {
		return vs[0].([]*PimSsmRange)[vs[1].(int)]
	}).(PimSsmRangeOutput)
}

type PimSsmRangeMapOutput struct{ *pulumi.OutputState }

func (PimSsmRangeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PimSsmRange)(nil)).Elem()
}

func (o PimSsmRangeMapOutput) ToPimSsmRangeMapOutput() PimSsmRangeMapOutput {
	return o
}

func (o PimSsmRangeMapOutput) ToPimSsmRangeMapOutputWithContext(ctx context.Context) PimSsmRangeMapOutput {
	return o
}

func (o PimSsmRangeMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*PimSsmRange] {
	return pulumix.Output[map[string]*PimSsmRange]{
		OutputState: o.OutputState,
	}
}

func (o PimSsmRangeMapOutput) MapIndex(k pulumi.StringInput) PimSsmRangeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PimSsmRange {
		return vs[0].(map[string]*PimSsmRange)[vs[1].(string)]
	}).(PimSsmRangeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PimSsmRangeInput)(nil)).Elem(), &PimSsmRange{})
	pulumi.RegisterInputType(reflect.TypeOf((*PimSsmRangeArrayInput)(nil)).Elem(), PimSsmRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PimSsmRangeMapInput)(nil)).Elem(), PimSsmRangeMap{})
	pulumi.RegisterOutputType(PimSsmRangeOutput{})
	pulumi.RegisterOutputType(PimSsmRangeArrayOutput{})
	pulumi.RegisterOutputType(PimSsmRangeMapOutput{})
}
