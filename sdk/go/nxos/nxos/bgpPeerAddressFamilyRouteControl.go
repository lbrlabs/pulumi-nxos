// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type BgpPeerAddressFamilyRouteControl struct {
	pulumi.CustomResourceState

	// Peer address.
	Address pulumi.StringOutput `pulumi:"address"`
	// Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default
	// value: `ipv4-ucast`
	AddressFamily pulumi.StringOutput `pulumi:"addressFamily"`
	// Autonomous system number.
	Asn pulumi.StringOutput `pulumi:"asn"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// Route Control direction. - Choices: `in`, `out` - Default value: `in`
	Direction pulumi.StringOutput `pulumi:"direction"`
	// Route Control Route-Map name.
	RouteMapName pulumi.StringPtrOutput `pulumi:"routeMapName"`
	// VRF name.
	Vrf pulumi.StringOutput `pulumi:"vrf"`
}

// NewBgpPeerAddressFamilyRouteControl registers a new resource with the given unique name, arguments, and options.
func NewBgpPeerAddressFamilyRouteControl(ctx *pulumi.Context,
	name string, args *BgpPeerAddressFamilyRouteControlArgs, opts ...pulumi.ResourceOption) (*BgpPeerAddressFamilyRouteControl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Address == nil {
		return nil, errors.New("invalid value for required argument 'Address'")
	}
	if args.AddressFamily == nil {
		return nil, errors.New("invalid value for required argument 'AddressFamily'")
	}
	if args.Asn == nil {
		return nil, errors.New("invalid value for required argument 'Asn'")
	}
	if args.Direction == nil {
		return nil, errors.New("invalid value for required argument 'Direction'")
	}
	if args.Vrf == nil {
		return nil, errors.New("invalid value for required argument 'Vrf'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BgpPeerAddressFamilyRouteControl
	err := ctx.RegisterResource("nxos:nxos/bgpPeerAddressFamilyRouteControl:BgpPeerAddressFamilyRouteControl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBgpPeerAddressFamilyRouteControl gets an existing BgpPeerAddressFamilyRouteControl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBgpPeerAddressFamilyRouteControl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BgpPeerAddressFamilyRouteControlState, opts ...pulumi.ResourceOption) (*BgpPeerAddressFamilyRouteControl, error) {
	var resource BgpPeerAddressFamilyRouteControl
	err := ctx.ReadResource("nxos:nxos/bgpPeerAddressFamilyRouteControl:BgpPeerAddressFamilyRouteControl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BgpPeerAddressFamilyRouteControl resources.
type bgpPeerAddressFamilyRouteControlState struct {
	// Peer address.
	Address *string `pulumi:"address"`
	// Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default
	// value: `ipv4-ucast`
	AddressFamily *string `pulumi:"addressFamily"`
	// Autonomous system number.
	Asn *string `pulumi:"asn"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Route Control direction. - Choices: `in`, `out` - Default value: `in`
	Direction *string `pulumi:"direction"`
	// Route Control Route-Map name.
	RouteMapName *string `pulumi:"routeMapName"`
	// VRF name.
	Vrf *string `pulumi:"vrf"`
}

type BgpPeerAddressFamilyRouteControlState struct {
	// Peer address.
	Address pulumi.StringPtrInput
	// Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default
	// value: `ipv4-ucast`
	AddressFamily pulumi.StringPtrInput
	// Autonomous system number.
	Asn pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Route Control direction. - Choices: `in`, `out` - Default value: `in`
	Direction pulumi.StringPtrInput
	// Route Control Route-Map name.
	RouteMapName pulumi.StringPtrInput
	// VRF name.
	Vrf pulumi.StringPtrInput
}

func (BgpPeerAddressFamilyRouteControlState) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpPeerAddressFamilyRouteControlState)(nil)).Elem()
}

type bgpPeerAddressFamilyRouteControlArgs struct {
	// Peer address.
	Address string `pulumi:"address"`
	// Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default
	// value: `ipv4-ucast`
	AddressFamily string `pulumi:"addressFamily"`
	// Autonomous system number.
	Asn string `pulumi:"asn"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Route Control direction. - Choices: `in`, `out` - Default value: `in`
	Direction string `pulumi:"direction"`
	// Route Control Route-Map name.
	RouteMapName *string `pulumi:"routeMapName"`
	// VRF name.
	Vrf string `pulumi:"vrf"`
}

// The set of arguments for constructing a BgpPeerAddressFamilyRouteControl resource.
type BgpPeerAddressFamilyRouteControlArgs struct {
	// Peer address.
	Address pulumi.StringInput
	// Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default
	// value: `ipv4-ucast`
	AddressFamily pulumi.StringInput
	// Autonomous system number.
	Asn pulumi.StringInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Route Control direction. - Choices: `in`, `out` - Default value: `in`
	Direction pulumi.StringInput
	// Route Control Route-Map name.
	RouteMapName pulumi.StringPtrInput
	// VRF name.
	Vrf pulumi.StringInput
}

func (BgpPeerAddressFamilyRouteControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpPeerAddressFamilyRouteControlArgs)(nil)).Elem()
}

type BgpPeerAddressFamilyRouteControlInput interface {
	pulumi.Input

	ToBgpPeerAddressFamilyRouteControlOutput() BgpPeerAddressFamilyRouteControlOutput
	ToBgpPeerAddressFamilyRouteControlOutputWithContext(ctx context.Context) BgpPeerAddressFamilyRouteControlOutput
}

func (*BgpPeerAddressFamilyRouteControl) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpPeerAddressFamilyRouteControl)(nil)).Elem()
}

func (i *BgpPeerAddressFamilyRouteControl) ToBgpPeerAddressFamilyRouteControlOutput() BgpPeerAddressFamilyRouteControlOutput {
	return i.ToBgpPeerAddressFamilyRouteControlOutputWithContext(context.Background())
}

func (i *BgpPeerAddressFamilyRouteControl) ToBgpPeerAddressFamilyRouteControlOutputWithContext(ctx context.Context) BgpPeerAddressFamilyRouteControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeerAddressFamilyRouteControlOutput)
}

func (i *BgpPeerAddressFamilyRouteControl) ToOutput(ctx context.Context) pulumix.Output[*BgpPeerAddressFamilyRouteControl] {
	return pulumix.Output[*BgpPeerAddressFamilyRouteControl]{
		OutputState: i.ToBgpPeerAddressFamilyRouteControlOutputWithContext(ctx).OutputState,
	}
}

// BgpPeerAddressFamilyRouteControlArrayInput is an input type that accepts BgpPeerAddressFamilyRouteControlArray and BgpPeerAddressFamilyRouteControlArrayOutput values.
// You can construct a concrete instance of `BgpPeerAddressFamilyRouteControlArrayInput` via:
//
//	BgpPeerAddressFamilyRouteControlArray{ BgpPeerAddressFamilyRouteControlArgs{...} }
type BgpPeerAddressFamilyRouteControlArrayInput interface {
	pulumi.Input

	ToBgpPeerAddressFamilyRouteControlArrayOutput() BgpPeerAddressFamilyRouteControlArrayOutput
	ToBgpPeerAddressFamilyRouteControlArrayOutputWithContext(context.Context) BgpPeerAddressFamilyRouteControlArrayOutput
}

type BgpPeerAddressFamilyRouteControlArray []BgpPeerAddressFamilyRouteControlInput

func (BgpPeerAddressFamilyRouteControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpPeerAddressFamilyRouteControl)(nil)).Elem()
}

func (i BgpPeerAddressFamilyRouteControlArray) ToBgpPeerAddressFamilyRouteControlArrayOutput() BgpPeerAddressFamilyRouteControlArrayOutput {
	return i.ToBgpPeerAddressFamilyRouteControlArrayOutputWithContext(context.Background())
}

func (i BgpPeerAddressFamilyRouteControlArray) ToBgpPeerAddressFamilyRouteControlArrayOutputWithContext(ctx context.Context) BgpPeerAddressFamilyRouteControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeerAddressFamilyRouteControlArrayOutput)
}

func (i BgpPeerAddressFamilyRouteControlArray) ToOutput(ctx context.Context) pulumix.Output[[]*BgpPeerAddressFamilyRouteControl] {
	return pulumix.Output[[]*BgpPeerAddressFamilyRouteControl]{
		OutputState: i.ToBgpPeerAddressFamilyRouteControlArrayOutputWithContext(ctx).OutputState,
	}
}

// BgpPeerAddressFamilyRouteControlMapInput is an input type that accepts BgpPeerAddressFamilyRouteControlMap and BgpPeerAddressFamilyRouteControlMapOutput values.
// You can construct a concrete instance of `BgpPeerAddressFamilyRouteControlMapInput` via:
//
//	BgpPeerAddressFamilyRouteControlMap{ "key": BgpPeerAddressFamilyRouteControlArgs{...} }
type BgpPeerAddressFamilyRouteControlMapInput interface {
	pulumi.Input

	ToBgpPeerAddressFamilyRouteControlMapOutput() BgpPeerAddressFamilyRouteControlMapOutput
	ToBgpPeerAddressFamilyRouteControlMapOutputWithContext(context.Context) BgpPeerAddressFamilyRouteControlMapOutput
}

type BgpPeerAddressFamilyRouteControlMap map[string]BgpPeerAddressFamilyRouteControlInput

func (BgpPeerAddressFamilyRouteControlMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpPeerAddressFamilyRouteControl)(nil)).Elem()
}

func (i BgpPeerAddressFamilyRouteControlMap) ToBgpPeerAddressFamilyRouteControlMapOutput() BgpPeerAddressFamilyRouteControlMapOutput {
	return i.ToBgpPeerAddressFamilyRouteControlMapOutputWithContext(context.Background())
}

func (i BgpPeerAddressFamilyRouteControlMap) ToBgpPeerAddressFamilyRouteControlMapOutputWithContext(ctx context.Context) BgpPeerAddressFamilyRouteControlMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeerAddressFamilyRouteControlMapOutput)
}

func (i BgpPeerAddressFamilyRouteControlMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpPeerAddressFamilyRouteControl] {
	return pulumix.Output[map[string]*BgpPeerAddressFamilyRouteControl]{
		OutputState: i.ToBgpPeerAddressFamilyRouteControlMapOutputWithContext(ctx).OutputState,
	}
}

type BgpPeerAddressFamilyRouteControlOutput struct{ *pulumi.OutputState }

func (BgpPeerAddressFamilyRouteControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpPeerAddressFamilyRouteControl)(nil)).Elem()
}

func (o BgpPeerAddressFamilyRouteControlOutput) ToBgpPeerAddressFamilyRouteControlOutput() BgpPeerAddressFamilyRouteControlOutput {
	return o
}

func (o BgpPeerAddressFamilyRouteControlOutput) ToBgpPeerAddressFamilyRouteControlOutputWithContext(ctx context.Context) BgpPeerAddressFamilyRouteControlOutput {
	return o
}

func (o BgpPeerAddressFamilyRouteControlOutput) ToOutput(ctx context.Context) pulumix.Output[*BgpPeerAddressFamilyRouteControl] {
	return pulumix.Output[*BgpPeerAddressFamilyRouteControl]{
		OutputState: o.OutputState,
	}
}

// Peer address.
func (o BgpPeerAddressFamilyRouteControlOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeerAddressFamilyRouteControl) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

// Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default
// value: `ipv4-ucast`
func (o BgpPeerAddressFamilyRouteControlOutput) AddressFamily() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeerAddressFamilyRouteControl) pulumi.StringOutput { return v.AddressFamily }).(pulumi.StringOutput)
}

// Autonomous system number.
func (o BgpPeerAddressFamilyRouteControlOutput) Asn() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeerAddressFamilyRouteControl) pulumi.StringOutput { return v.Asn }).(pulumi.StringOutput)
}

// A device name from the provider configuration.
func (o BgpPeerAddressFamilyRouteControlOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpPeerAddressFamilyRouteControl) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// Route Control direction. - Choices: `in`, `out` - Default value: `in`
func (o BgpPeerAddressFamilyRouteControlOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeerAddressFamilyRouteControl) pulumi.StringOutput { return v.Direction }).(pulumi.StringOutput)
}

// Route Control Route-Map name.
func (o BgpPeerAddressFamilyRouteControlOutput) RouteMapName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpPeerAddressFamilyRouteControl) pulumi.StringPtrOutput { return v.RouteMapName }).(pulumi.StringPtrOutput)
}

// VRF name.
func (o BgpPeerAddressFamilyRouteControlOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeerAddressFamilyRouteControl) pulumi.StringOutput { return v.Vrf }).(pulumi.StringOutput)
}

type BgpPeerAddressFamilyRouteControlArrayOutput struct{ *pulumi.OutputState }

func (BgpPeerAddressFamilyRouteControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpPeerAddressFamilyRouteControl)(nil)).Elem()
}

func (o BgpPeerAddressFamilyRouteControlArrayOutput) ToBgpPeerAddressFamilyRouteControlArrayOutput() BgpPeerAddressFamilyRouteControlArrayOutput {
	return o
}

func (o BgpPeerAddressFamilyRouteControlArrayOutput) ToBgpPeerAddressFamilyRouteControlArrayOutputWithContext(ctx context.Context) BgpPeerAddressFamilyRouteControlArrayOutput {
	return o
}

func (o BgpPeerAddressFamilyRouteControlArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*BgpPeerAddressFamilyRouteControl] {
	return pulumix.Output[[]*BgpPeerAddressFamilyRouteControl]{
		OutputState: o.OutputState,
	}
}

func (o BgpPeerAddressFamilyRouteControlArrayOutput) Index(i pulumi.IntInput) BgpPeerAddressFamilyRouteControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BgpPeerAddressFamilyRouteControl {
		return vs[0].([]*BgpPeerAddressFamilyRouteControl)[vs[1].(int)]
	}).(BgpPeerAddressFamilyRouteControlOutput)
}

type BgpPeerAddressFamilyRouteControlMapOutput struct{ *pulumi.OutputState }

func (BgpPeerAddressFamilyRouteControlMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpPeerAddressFamilyRouteControl)(nil)).Elem()
}

func (o BgpPeerAddressFamilyRouteControlMapOutput) ToBgpPeerAddressFamilyRouteControlMapOutput() BgpPeerAddressFamilyRouteControlMapOutput {
	return o
}

func (o BgpPeerAddressFamilyRouteControlMapOutput) ToBgpPeerAddressFamilyRouteControlMapOutputWithContext(ctx context.Context) BgpPeerAddressFamilyRouteControlMapOutput {
	return o
}

func (o BgpPeerAddressFamilyRouteControlMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpPeerAddressFamilyRouteControl] {
	return pulumix.Output[map[string]*BgpPeerAddressFamilyRouteControl]{
		OutputState: o.OutputState,
	}
}

func (o BgpPeerAddressFamilyRouteControlMapOutput) MapIndex(k pulumi.StringInput) BgpPeerAddressFamilyRouteControlOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BgpPeerAddressFamilyRouteControl {
		return vs[0].(map[string]*BgpPeerAddressFamilyRouteControl)[vs[1].(string)]
	}).(BgpPeerAddressFamilyRouteControlOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BgpPeerAddressFamilyRouteControlInput)(nil)).Elem(), &BgpPeerAddressFamilyRouteControl{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpPeerAddressFamilyRouteControlArrayInput)(nil)).Elem(), BgpPeerAddressFamilyRouteControlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpPeerAddressFamilyRouteControlMapInput)(nil)).Elem(), BgpPeerAddressFamilyRouteControlMap{})
	pulumi.RegisterOutputType(BgpPeerAddressFamilyRouteControlOutput{})
	pulumi.RegisterOutputType(BgpPeerAddressFamilyRouteControlArrayOutput{})
	pulumi.RegisterOutputType(BgpPeerAddressFamilyRouteControlMapOutput{})
}
