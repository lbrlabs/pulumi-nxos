// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type BgpAdvertisedPrefix struct {
	pulumi.CustomResourceState

	// Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,
	// `vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,
	// `ipv4-mdt` - Default value: `ipv4-ucast`
	AddressFamily pulumi.StringOutput `pulumi:"addressFamily"`
	// Autonomous system number.
	Asn pulumi.StringOutput `pulumi:"asn"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// IP address of the network or prefix to advertise.
	Prefix pulumi.StringOutput `pulumi:"prefix"`
	// Route map to modify attributes.
	RouteMap pulumi.StringPtrOutput `pulumi:"routeMap"`
	// VRF name.
	Vrf pulumi.StringOutput `pulumi:"vrf"`
}

// NewBgpAdvertisedPrefix registers a new resource with the given unique name, arguments, and options.
func NewBgpAdvertisedPrefix(ctx *pulumi.Context,
	name string, args *BgpAdvertisedPrefixArgs, opts ...pulumi.ResourceOption) (*BgpAdvertisedPrefix, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AddressFamily == nil {
		return nil, errors.New("invalid value for required argument 'AddressFamily'")
	}
	if args.Asn == nil {
		return nil, errors.New("invalid value for required argument 'Asn'")
	}
	if args.Prefix == nil {
		return nil, errors.New("invalid value for required argument 'Prefix'")
	}
	if args.Vrf == nil {
		return nil, errors.New("invalid value for required argument 'Vrf'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BgpAdvertisedPrefix
	err := ctx.RegisterResource("nxos:nxos/bgpAdvertisedPrefix:BgpAdvertisedPrefix", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBgpAdvertisedPrefix gets an existing BgpAdvertisedPrefix resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBgpAdvertisedPrefix(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BgpAdvertisedPrefixState, opts ...pulumi.ResourceOption) (*BgpAdvertisedPrefix, error) {
	var resource BgpAdvertisedPrefix
	err := ctx.ReadResource("nxos:nxos/bgpAdvertisedPrefix:BgpAdvertisedPrefix", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BgpAdvertisedPrefix resources.
type bgpAdvertisedPrefixState struct {
	// Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,
	// `vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,
	// `ipv4-mdt` - Default value: `ipv4-ucast`
	AddressFamily *string `pulumi:"addressFamily"`
	// Autonomous system number.
	Asn *string `pulumi:"asn"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// IP address of the network or prefix to advertise.
	Prefix *string `pulumi:"prefix"`
	// Route map to modify attributes.
	RouteMap *string `pulumi:"routeMap"`
	// VRF name.
	Vrf *string `pulumi:"vrf"`
}

type BgpAdvertisedPrefixState struct {
	// Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,
	// `vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,
	// `ipv4-mdt` - Default value: `ipv4-ucast`
	AddressFamily pulumi.StringPtrInput
	// Autonomous system number.
	Asn pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// IP address of the network or prefix to advertise.
	Prefix pulumi.StringPtrInput
	// Route map to modify attributes.
	RouteMap pulumi.StringPtrInput
	// VRF name.
	Vrf pulumi.StringPtrInput
}

func (BgpAdvertisedPrefixState) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpAdvertisedPrefixState)(nil)).Elem()
}

type bgpAdvertisedPrefixArgs struct {
	// Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,
	// `vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,
	// `ipv4-mdt` - Default value: `ipv4-ucast`
	AddressFamily string `pulumi:"addressFamily"`
	// Autonomous system number.
	Asn string `pulumi:"asn"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// IP address of the network or prefix to advertise.
	Prefix string `pulumi:"prefix"`
	// Route map to modify attributes.
	RouteMap *string `pulumi:"routeMap"`
	// VRF name.
	Vrf string `pulumi:"vrf"`
}

// The set of arguments for constructing a BgpAdvertisedPrefix resource.
type BgpAdvertisedPrefixArgs struct {
	// Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,
	// `vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,
	// `ipv4-mdt` - Default value: `ipv4-ucast`
	AddressFamily pulumi.StringInput
	// Autonomous system number.
	Asn pulumi.StringInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// IP address of the network or prefix to advertise.
	Prefix pulumi.StringInput
	// Route map to modify attributes.
	RouteMap pulumi.StringPtrInput
	// VRF name.
	Vrf pulumi.StringInput
}

func (BgpAdvertisedPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpAdvertisedPrefixArgs)(nil)).Elem()
}

type BgpAdvertisedPrefixInput interface {
	pulumi.Input

	ToBgpAdvertisedPrefixOutput() BgpAdvertisedPrefixOutput
	ToBgpAdvertisedPrefixOutputWithContext(ctx context.Context) BgpAdvertisedPrefixOutput
}

func (*BgpAdvertisedPrefix) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpAdvertisedPrefix)(nil)).Elem()
}

func (i *BgpAdvertisedPrefix) ToBgpAdvertisedPrefixOutput() BgpAdvertisedPrefixOutput {
	return i.ToBgpAdvertisedPrefixOutputWithContext(context.Background())
}

func (i *BgpAdvertisedPrefix) ToBgpAdvertisedPrefixOutputWithContext(ctx context.Context) BgpAdvertisedPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpAdvertisedPrefixOutput)
}

func (i *BgpAdvertisedPrefix) ToOutput(ctx context.Context) pulumix.Output[*BgpAdvertisedPrefix] {
	return pulumix.Output[*BgpAdvertisedPrefix]{
		OutputState: i.ToBgpAdvertisedPrefixOutputWithContext(ctx).OutputState,
	}
}

// BgpAdvertisedPrefixArrayInput is an input type that accepts BgpAdvertisedPrefixArray and BgpAdvertisedPrefixArrayOutput values.
// You can construct a concrete instance of `BgpAdvertisedPrefixArrayInput` via:
//
//	BgpAdvertisedPrefixArray{ BgpAdvertisedPrefixArgs{...} }
type BgpAdvertisedPrefixArrayInput interface {
	pulumi.Input

	ToBgpAdvertisedPrefixArrayOutput() BgpAdvertisedPrefixArrayOutput
	ToBgpAdvertisedPrefixArrayOutputWithContext(context.Context) BgpAdvertisedPrefixArrayOutput
}

type BgpAdvertisedPrefixArray []BgpAdvertisedPrefixInput

func (BgpAdvertisedPrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpAdvertisedPrefix)(nil)).Elem()
}

func (i BgpAdvertisedPrefixArray) ToBgpAdvertisedPrefixArrayOutput() BgpAdvertisedPrefixArrayOutput {
	return i.ToBgpAdvertisedPrefixArrayOutputWithContext(context.Background())
}

func (i BgpAdvertisedPrefixArray) ToBgpAdvertisedPrefixArrayOutputWithContext(ctx context.Context) BgpAdvertisedPrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpAdvertisedPrefixArrayOutput)
}

func (i BgpAdvertisedPrefixArray) ToOutput(ctx context.Context) pulumix.Output[[]*BgpAdvertisedPrefix] {
	return pulumix.Output[[]*BgpAdvertisedPrefix]{
		OutputState: i.ToBgpAdvertisedPrefixArrayOutputWithContext(ctx).OutputState,
	}
}

// BgpAdvertisedPrefixMapInput is an input type that accepts BgpAdvertisedPrefixMap and BgpAdvertisedPrefixMapOutput values.
// You can construct a concrete instance of `BgpAdvertisedPrefixMapInput` via:
//
//	BgpAdvertisedPrefixMap{ "key": BgpAdvertisedPrefixArgs{...} }
type BgpAdvertisedPrefixMapInput interface {
	pulumi.Input

	ToBgpAdvertisedPrefixMapOutput() BgpAdvertisedPrefixMapOutput
	ToBgpAdvertisedPrefixMapOutputWithContext(context.Context) BgpAdvertisedPrefixMapOutput
}

type BgpAdvertisedPrefixMap map[string]BgpAdvertisedPrefixInput

func (BgpAdvertisedPrefixMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpAdvertisedPrefix)(nil)).Elem()
}

func (i BgpAdvertisedPrefixMap) ToBgpAdvertisedPrefixMapOutput() BgpAdvertisedPrefixMapOutput {
	return i.ToBgpAdvertisedPrefixMapOutputWithContext(context.Background())
}

func (i BgpAdvertisedPrefixMap) ToBgpAdvertisedPrefixMapOutputWithContext(ctx context.Context) BgpAdvertisedPrefixMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpAdvertisedPrefixMapOutput)
}

func (i BgpAdvertisedPrefixMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpAdvertisedPrefix] {
	return pulumix.Output[map[string]*BgpAdvertisedPrefix]{
		OutputState: i.ToBgpAdvertisedPrefixMapOutputWithContext(ctx).OutputState,
	}
}

type BgpAdvertisedPrefixOutput struct{ *pulumi.OutputState }

func (BgpAdvertisedPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpAdvertisedPrefix)(nil)).Elem()
}

func (o BgpAdvertisedPrefixOutput) ToBgpAdvertisedPrefixOutput() BgpAdvertisedPrefixOutput {
	return o
}

func (o BgpAdvertisedPrefixOutput) ToBgpAdvertisedPrefixOutputWithContext(ctx context.Context) BgpAdvertisedPrefixOutput {
	return o
}

func (o BgpAdvertisedPrefixOutput) ToOutput(ctx context.Context) pulumix.Output[*BgpAdvertisedPrefix] {
	return pulumix.Output[*BgpAdvertisedPrefix]{
		OutputState: o.OutputState,
	}
}

// Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,
// `vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,
// `ipv4-mdt` - Default value: `ipv4-ucast`
func (o BgpAdvertisedPrefixOutput) AddressFamily() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpAdvertisedPrefix) pulumi.StringOutput { return v.AddressFamily }).(pulumi.StringOutput)
}

// Autonomous system number.
func (o BgpAdvertisedPrefixOutput) Asn() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpAdvertisedPrefix) pulumi.StringOutput { return v.Asn }).(pulumi.StringOutput)
}

// A device name from the provider configuration.
func (o BgpAdvertisedPrefixOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpAdvertisedPrefix) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// IP address of the network or prefix to advertise.
func (o BgpAdvertisedPrefixOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpAdvertisedPrefix) pulumi.StringOutput { return v.Prefix }).(pulumi.StringOutput)
}

// Route map to modify attributes.
func (o BgpAdvertisedPrefixOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpAdvertisedPrefix) pulumi.StringPtrOutput { return v.RouteMap }).(pulumi.StringPtrOutput)
}

// VRF name.
func (o BgpAdvertisedPrefixOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpAdvertisedPrefix) pulumi.StringOutput { return v.Vrf }).(pulumi.StringOutput)
}

type BgpAdvertisedPrefixArrayOutput struct{ *pulumi.OutputState }

func (BgpAdvertisedPrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpAdvertisedPrefix)(nil)).Elem()
}

func (o BgpAdvertisedPrefixArrayOutput) ToBgpAdvertisedPrefixArrayOutput() BgpAdvertisedPrefixArrayOutput {
	return o
}

func (o BgpAdvertisedPrefixArrayOutput) ToBgpAdvertisedPrefixArrayOutputWithContext(ctx context.Context) BgpAdvertisedPrefixArrayOutput {
	return o
}

func (o BgpAdvertisedPrefixArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*BgpAdvertisedPrefix] {
	return pulumix.Output[[]*BgpAdvertisedPrefix]{
		OutputState: o.OutputState,
	}
}

func (o BgpAdvertisedPrefixArrayOutput) Index(i pulumi.IntInput) BgpAdvertisedPrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BgpAdvertisedPrefix {
		return vs[0].([]*BgpAdvertisedPrefix)[vs[1].(int)]
	}).(BgpAdvertisedPrefixOutput)
}

type BgpAdvertisedPrefixMapOutput struct{ *pulumi.OutputState }

func (BgpAdvertisedPrefixMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpAdvertisedPrefix)(nil)).Elem()
}

func (o BgpAdvertisedPrefixMapOutput) ToBgpAdvertisedPrefixMapOutput() BgpAdvertisedPrefixMapOutput {
	return o
}

func (o BgpAdvertisedPrefixMapOutput) ToBgpAdvertisedPrefixMapOutputWithContext(ctx context.Context) BgpAdvertisedPrefixMapOutput {
	return o
}

func (o BgpAdvertisedPrefixMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpAdvertisedPrefix] {
	return pulumix.Output[map[string]*BgpAdvertisedPrefix]{
		OutputState: o.OutputState,
	}
}

func (o BgpAdvertisedPrefixMapOutput) MapIndex(k pulumi.StringInput) BgpAdvertisedPrefixOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BgpAdvertisedPrefix {
		return vs[0].(map[string]*BgpAdvertisedPrefix)[vs[1].(string)]
	}).(BgpAdvertisedPrefixOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BgpAdvertisedPrefixInput)(nil)).Elem(), &BgpAdvertisedPrefix{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpAdvertisedPrefixArrayInput)(nil)).Elem(), BgpAdvertisedPrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpAdvertisedPrefixMapInput)(nil)).Elem(), BgpAdvertisedPrefixMap{})
	pulumi.RegisterOutputType(BgpAdvertisedPrefixOutput{})
	pulumi.RegisterOutputType(BgpAdvertisedPrefixArrayOutput{})
	pulumi.RegisterOutputType(BgpAdvertisedPrefixMapOutput{})
}
