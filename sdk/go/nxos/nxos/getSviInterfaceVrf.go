// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupSviInterfaceVrf(ctx *pulumi.Context, args *LookupSviInterfaceVrfArgs, opts ...pulumi.InvokeOption) (*LookupSviInterfaceVrfResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSviInterfaceVrfResult
	err := ctx.Invoke("nxos:nxos/getSviInterfaceVrf:getSviInterfaceVrf", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSviInterfaceVrf.
type LookupSviInterfaceVrfArgs struct {
	Device      *string `pulumi:"device"`
	InterfaceId string  `pulumi:"interfaceId"`
}

// A collection of values returned by getSviInterfaceVrf.
type LookupSviInterfaceVrfResult struct {
	Device      *string `pulumi:"device"`
	Id          string  `pulumi:"id"`
	InterfaceId string  `pulumi:"interfaceId"`
	VrfDn       string  `pulumi:"vrfDn"`
}

func LookupSviInterfaceVrfOutput(ctx *pulumi.Context, args LookupSviInterfaceVrfOutputArgs, opts ...pulumi.InvokeOption) LookupSviInterfaceVrfResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSviInterfaceVrfResult, error) {
			args := v.(LookupSviInterfaceVrfArgs)
			r, err := LookupSviInterfaceVrf(ctx, &args, opts...)
			var s LookupSviInterfaceVrfResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSviInterfaceVrfResultOutput)
}

// A collection of arguments for invoking getSviInterfaceVrf.
type LookupSviInterfaceVrfOutputArgs struct {
	Device      pulumi.StringPtrInput `pulumi:"device"`
	InterfaceId pulumi.StringInput    `pulumi:"interfaceId"`
}

func (LookupSviInterfaceVrfOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSviInterfaceVrfArgs)(nil)).Elem()
}

// A collection of values returned by getSviInterfaceVrf.
type LookupSviInterfaceVrfResultOutput struct{ *pulumi.OutputState }

func (LookupSviInterfaceVrfResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSviInterfaceVrfResult)(nil)).Elem()
}

func (o LookupSviInterfaceVrfResultOutput) ToLookupSviInterfaceVrfResultOutput() LookupSviInterfaceVrfResultOutput {
	return o
}

func (o LookupSviInterfaceVrfResultOutput) ToLookupSviInterfaceVrfResultOutputWithContext(ctx context.Context) LookupSviInterfaceVrfResultOutput {
	return o
}

func (o LookupSviInterfaceVrfResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupSviInterfaceVrfResult] {
	return pulumix.Output[LookupSviInterfaceVrfResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupSviInterfaceVrfResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSviInterfaceVrfResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupSviInterfaceVrfResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSviInterfaceVrfResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSviInterfaceVrfResultOutput) InterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSviInterfaceVrfResult) string { return v.InterfaceId }).(pulumi.StringOutput)
}

func (o LookupSviInterfaceVrfResultOutput) VrfDn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSviInterfaceVrfResult) string { return v.VrfDn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSviInterfaceVrfResultOutput{})
}
