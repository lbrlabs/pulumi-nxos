// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupOspfInstance(ctx *pulumi.Context, args *LookupOspfInstanceArgs, opts ...pulumi.InvokeOption) (*LookupOspfInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOspfInstanceResult
	err := ctx.Invoke("nxos:nxos/getOspfInstance:getOspfInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOspfInstance.
type LookupOspfInstanceArgs struct {
	Device *string `pulumi:"device"`
	Name   string  `pulumi:"name"`
}

// A collection of values returned by getOspfInstance.
type LookupOspfInstanceResult struct {
	AdminState string  `pulumi:"adminState"`
	Device     *string `pulumi:"device"`
	Id         string  `pulumi:"id"`
	Name       string  `pulumi:"name"`
}

func LookupOspfInstanceOutput(ctx *pulumi.Context, args LookupOspfInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupOspfInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOspfInstanceResult, error) {
			args := v.(LookupOspfInstanceArgs)
			r, err := LookupOspfInstance(ctx, &args, opts...)
			var s LookupOspfInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOspfInstanceResultOutput)
}

// A collection of arguments for invoking getOspfInstance.
type LookupOspfInstanceOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
	Name   pulumi.StringInput    `pulumi:"name"`
}

func (LookupOspfInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOspfInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getOspfInstance.
type LookupOspfInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupOspfInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOspfInstanceResult)(nil)).Elem()
}

func (o LookupOspfInstanceResultOutput) ToLookupOspfInstanceResultOutput() LookupOspfInstanceResultOutput {
	return o
}

func (o LookupOspfInstanceResultOutput) ToLookupOspfInstanceResultOutputWithContext(ctx context.Context) LookupOspfInstanceResultOutput {
	return o
}

func (o LookupOspfInstanceResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupOspfInstanceResult] {
	return pulumix.Output[LookupOspfInstanceResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupOspfInstanceResultOutput) AdminState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOspfInstanceResult) string { return v.AdminState }).(pulumi.StringOutput)
}

func (o LookupOspfInstanceResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOspfInstanceResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupOspfInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOspfInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupOspfInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOspfInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOspfInstanceResultOutput{})
}
