// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type DefaultQosPolicyMapMatchClassMap struct {
	pulumi.CustomResourceState

	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// Class map name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Policy map name.
	PolicyMapName pulumi.StringOutput `pulumi:"policyMapName"`
}

// NewDefaultQosPolicyMapMatchClassMap registers a new resource with the given unique name, arguments, and options.
func NewDefaultQosPolicyMapMatchClassMap(ctx *pulumi.Context,
	name string, args *DefaultQosPolicyMapMatchClassMapArgs, opts ...pulumi.ResourceOption) (*DefaultQosPolicyMapMatchClassMap, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyMapName == nil {
		return nil, errors.New("invalid value for required argument 'PolicyMapName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DefaultQosPolicyMapMatchClassMap
	err := ctx.RegisterResource("nxos:nxos/defaultQosPolicyMapMatchClassMap:DefaultQosPolicyMapMatchClassMap", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDefaultQosPolicyMapMatchClassMap gets an existing DefaultQosPolicyMapMatchClassMap resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDefaultQosPolicyMapMatchClassMap(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DefaultQosPolicyMapMatchClassMapState, opts ...pulumi.ResourceOption) (*DefaultQosPolicyMapMatchClassMap, error) {
	var resource DefaultQosPolicyMapMatchClassMap
	err := ctx.ReadResource("nxos:nxos/defaultQosPolicyMapMatchClassMap:DefaultQosPolicyMapMatchClassMap", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DefaultQosPolicyMapMatchClassMap resources.
type defaultQosPolicyMapMatchClassMapState struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Class map name.
	Name *string `pulumi:"name"`
	// Policy map name.
	PolicyMapName *string `pulumi:"policyMapName"`
}

type DefaultQosPolicyMapMatchClassMapState struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Class map name.
	Name pulumi.StringPtrInput
	// Policy map name.
	PolicyMapName pulumi.StringPtrInput
}

func (DefaultQosPolicyMapMatchClassMapState) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultQosPolicyMapMatchClassMapState)(nil)).Elem()
}

type defaultQosPolicyMapMatchClassMapArgs struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Class map name.
	Name *string `pulumi:"name"`
	// Policy map name.
	PolicyMapName string `pulumi:"policyMapName"`
}

// The set of arguments for constructing a DefaultQosPolicyMapMatchClassMap resource.
type DefaultQosPolicyMapMatchClassMapArgs struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Class map name.
	Name pulumi.StringPtrInput
	// Policy map name.
	PolicyMapName pulumi.StringInput
}

func (DefaultQosPolicyMapMatchClassMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultQosPolicyMapMatchClassMapArgs)(nil)).Elem()
}

type DefaultQosPolicyMapMatchClassMapInput interface {
	pulumi.Input

	ToDefaultQosPolicyMapMatchClassMapOutput() DefaultQosPolicyMapMatchClassMapOutput
	ToDefaultQosPolicyMapMatchClassMapOutputWithContext(ctx context.Context) DefaultQosPolicyMapMatchClassMapOutput
}

func (*DefaultQosPolicyMapMatchClassMap) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultQosPolicyMapMatchClassMap)(nil)).Elem()
}

func (i *DefaultQosPolicyMapMatchClassMap) ToDefaultQosPolicyMapMatchClassMapOutput() DefaultQosPolicyMapMatchClassMapOutput {
	return i.ToDefaultQosPolicyMapMatchClassMapOutputWithContext(context.Background())
}

func (i *DefaultQosPolicyMapMatchClassMap) ToDefaultQosPolicyMapMatchClassMapOutputWithContext(ctx context.Context) DefaultQosPolicyMapMatchClassMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultQosPolicyMapMatchClassMapOutput)
}

func (i *DefaultQosPolicyMapMatchClassMap) ToOutput(ctx context.Context) pulumix.Output[*DefaultQosPolicyMapMatchClassMap] {
	return pulumix.Output[*DefaultQosPolicyMapMatchClassMap]{
		OutputState: i.ToDefaultQosPolicyMapMatchClassMapOutputWithContext(ctx).OutputState,
	}
}

// DefaultQosPolicyMapMatchClassMapArrayInput is an input type that accepts DefaultQosPolicyMapMatchClassMapArray and DefaultQosPolicyMapMatchClassMapArrayOutput values.
// You can construct a concrete instance of `DefaultQosPolicyMapMatchClassMapArrayInput` via:
//
//	DefaultQosPolicyMapMatchClassMapArray{ DefaultQosPolicyMapMatchClassMapArgs{...} }
type DefaultQosPolicyMapMatchClassMapArrayInput interface {
	pulumi.Input

	ToDefaultQosPolicyMapMatchClassMapArrayOutput() DefaultQosPolicyMapMatchClassMapArrayOutput
	ToDefaultQosPolicyMapMatchClassMapArrayOutputWithContext(context.Context) DefaultQosPolicyMapMatchClassMapArrayOutput
}

type DefaultQosPolicyMapMatchClassMapArray []DefaultQosPolicyMapMatchClassMapInput

func (DefaultQosPolicyMapMatchClassMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DefaultQosPolicyMapMatchClassMap)(nil)).Elem()
}

func (i DefaultQosPolicyMapMatchClassMapArray) ToDefaultQosPolicyMapMatchClassMapArrayOutput() DefaultQosPolicyMapMatchClassMapArrayOutput {
	return i.ToDefaultQosPolicyMapMatchClassMapArrayOutputWithContext(context.Background())
}

func (i DefaultQosPolicyMapMatchClassMapArray) ToDefaultQosPolicyMapMatchClassMapArrayOutputWithContext(ctx context.Context) DefaultQosPolicyMapMatchClassMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultQosPolicyMapMatchClassMapArrayOutput)
}

func (i DefaultQosPolicyMapMatchClassMapArray) ToOutput(ctx context.Context) pulumix.Output[[]*DefaultQosPolicyMapMatchClassMap] {
	return pulumix.Output[[]*DefaultQosPolicyMapMatchClassMap]{
		OutputState: i.ToDefaultQosPolicyMapMatchClassMapArrayOutputWithContext(ctx).OutputState,
	}
}

// DefaultQosPolicyMapMatchClassMapMapInput is an input type that accepts DefaultQosPolicyMapMatchClassMapMap and DefaultQosPolicyMapMatchClassMapMapOutput values.
// You can construct a concrete instance of `DefaultQosPolicyMapMatchClassMapMapInput` via:
//
//	DefaultQosPolicyMapMatchClassMapMap{ "key": DefaultQosPolicyMapMatchClassMapArgs{...} }
type DefaultQosPolicyMapMatchClassMapMapInput interface {
	pulumi.Input

	ToDefaultQosPolicyMapMatchClassMapMapOutput() DefaultQosPolicyMapMatchClassMapMapOutput
	ToDefaultQosPolicyMapMatchClassMapMapOutputWithContext(context.Context) DefaultQosPolicyMapMatchClassMapMapOutput
}

type DefaultQosPolicyMapMatchClassMapMap map[string]DefaultQosPolicyMapMatchClassMapInput

func (DefaultQosPolicyMapMatchClassMapMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DefaultQosPolicyMapMatchClassMap)(nil)).Elem()
}

func (i DefaultQosPolicyMapMatchClassMapMap) ToDefaultQosPolicyMapMatchClassMapMapOutput() DefaultQosPolicyMapMatchClassMapMapOutput {
	return i.ToDefaultQosPolicyMapMatchClassMapMapOutputWithContext(context.Background())
}

func (i DefaultQosPolicyMapMatchClassMapMap) ToDefaultQosPolicyMapMatchClassMapMapOutputWithContext(ctx context.Context) DefaultQosPolicyMapMatchClassMapMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultQosPolicyMapMatchClassMapMapOutput)
}

func (i DefaultQosPolicyMapMatchClassMapMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*DefaultQosPolicyMapMatchClassMap] {
	return pulumix.Output[map[string]*DefaultQosPolicyMapMatchClassMap]{
		OutputState: i.ToDefaultQosPolicyMapMatchClassMapMapOutputWithContext(ctx).OutputState,
	}
}

type DefaultQosPolicyMapMatchClassMapOutput struct{ *pulumi.OutputState }

func (DefaultQosPolicyMapMatchClassMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultQosPolicyMapMatchClassMap)(nil)).Elem()
}

func (o DefaultQosPolicyMapMatchClassMapOutput) ToDefaultQosPolicyMapMatchClassMapOutput() DefaultQosPolicyMapMatchClassMapOutput {
	return o
}

func (o DefaultQosPolicyMapMatchClassMapOutput) ToDefaultQosPolicyMapMatchClassMapOutputWithContext(ctx context.Context) DefaultQosPolicyMapMatchClassMapOutput {
	return o
}

func (o DefaultQosPolicyMapMatchClassMapOutput) ToOutput(ctx context.Context) pulumix.Output[*DefaultQosPolicyMapMatchClassMap] {
	return pulumix.Output[*DefaultQosPolicyMapMatchClassMap]{
		OutputState: o.OutputState,
	}
}

// A device name from the provider configuration.
func (o DefaultQosPolicyMapMatchClassMapOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DefaultQosPolicyMapMatchClassMap) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// Class map name.
func (o DefaultQosPolicyMapMatchClassMapOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultQosPolicyMapMatchClassMap) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Policy map name.
func (o DefaultQosPolicyMapMatchClassMapOutput) PolicyMapName() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultQosPolicyMapMatchClassMap) pulumi.StringOutput { return v.PolicyMapName }).(pulumi.StringOutput)
}

type DefaultQosPolicyMapMatchClassMapArrayOutput struct{ *pulumi.OutputState }

func (DefaultQosPolicyMapMatchClassMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DefaultQosPolicyMapMatchClassMap)(nil)).Elem()
}

func (o DefaultQosPolicyMapMatchClassMapArrayOutput) ToDefaultQosPolicyMapMatchClassMapArrayOutput() DefaultQosPolicyMapMatchClassMapArrayOutput {
	return o
}

func (o DefaultQosPolicyMapMatchClassMapArrayOutput) ToDefaultQosPolicyMapMatchClassMapArrayOutputWithContext(ctx context.Context) DefaultQosPolicyMapMatchClassMapArrayOutput {
	return o
}

func (o DefaultQosPolicyMapMatchClassMapArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*DefaultQosPolicyMapMatchClassMap] {
	return pulumix.Output[[]*DefaultQosPolicyMapMatchClassMap]{
		OutputState: o.OutputState,
	}
}

func (o DefaultQosPolicyMapMatchClassMapArrayOutput) Index(i pulumi.IntInput) DefaultQosPolicyMapMatchClassMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DefaultQosPolicyMapMatchClassMap {
		return vs[0].([]*DefaultQosPolicyMapMatchClassMap)[vs[1].(int)]
	}).(DefaultQosPolicyMapMatchClassMapOutput)
}

type DefaultQosPolicyMapMatchClassMapMapOutput struct{ *pulumi.OutputState }

func (DefaultQosPolicyMapMatchClassMapMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DefaultQosPolicyMapMatchClassMap)(nil)).Elem()
}

func (o DefaultQosPolicyMapMatchClassMapMapOutput) ToDefaultQosPolicyMapMatchClassMapMapOutput() DefaultQosPolicyMapMatchClassMapMapOutput {
	return o
}

func (o DefaultQosPolicyMapMatchClassMapMapOutput) ToDefaultQosPolicyMapMatchClassMapMapOutputWithContext(ctx context.Context) DefaultQosPolicyMapMatchClassMapMapOutput {
	return o
}

func (o DefaultQosPolicyMapMatchClassMapMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*DefaultQosPolicyMapMatchClassMap] {
	return pulumix.Output[map[string]*DefaultQosPolicyMapMatchClassMap]{
		OutputState: o.OutputState,
	}
}

func (o DefaultQosPolicyMapMatchClassMapMapOutput) MapIndex(k pulumi.StringInput) DefaultQosPolicyMapMatchClassMapOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DefaultQosPolicyMapMatchClassMap {
		return vs[0].(map[string]*DefaultQosPolicyMapMatchClassMap)[vs[1].(string)]
	}).(DefaultQosPolicyMapMatchClassMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultQosPolicyMapMatchClassMapInput)(nil)).Elem(), &DefaultQosPolicyMapMatchClassMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultQosPolicyMapMatchClassMapArrayInput)(nil)).Elem(), DefaultQosPolicyMapMatchClassMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultQosPolicyMapMatchClassMapMapInput)(nil)).Elem(), DefaultQosPolicyMapMatchClassMapMap{})
	pulumi.RegisterOutputType(DefaultQosPolicyMapMatchClassMapOutput{})
	pulumi.RegisterOutputType(DefaultQosPolicyMapMatchClassMapArrayOutput{})
	pulumi.RegisterOutputType(DefaultQosPolicyMapMatchClassMapMapOutput{})
}
