// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupVrf(ctx *pulumi.Context, args *LookupVrfArgs, opts ...pulumi.InvokeOption) (*LookupVrfResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVrfResult
	err := ctx.Invoke("nxos:nxos/getVrf:getVrf", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVrf.
type LookupVrfArgs struct {
	Device *string `pulumi:"device"`
	Name   string  `pulumi:"name"`
}

// A collection of values returned by getVrf.
type LookupVrfResult struct {
	Description string  `pulumi:"description"`
	Device      *string `pulumi:"device"`
	Encap       string  `pulumi:"encap"`
	Id          string  `pulumi:"id"`
	Name        string  `pulumi:"name"`
}

func LookupVrfOutput(ctx *pulumi.Context, args LookupVrfOutputArgs, opts ...pulumi.InvokeOption) LookupVrfResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVrfResult, error) {
			args := v.(LookupVrfArgs)
			r, err := LookupVrf(ctx, &args, opts...)
			var s LookupVrfResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVrfResultOutput)
}

// A collection of arguments for invoking getVrf.
type LookupVrfOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
	Name   pulumi.StringInput    `pulumi:"name"`
}

func (LookupVrfOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVrfArgs)(nil)).Elem()
}

// A collection of values returned by getVrf.
type LookupVrfResultOutput struct{ *pulumi.OutputState }

func (LookupVrfResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVrfResult)(nil)).Elem()
}

func (o LookupVrfResultOutput) ToLookupVrfResultOutput() LookupVrfResultOutput {
	return o
}

func (o LookupVrfResultOutput) ToLookupVrfResultOutputWithContext(ctx context.Context) LookupVrfResultOutput {
	return o
}

func (o LookupVrfResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupVrfResult] {
	return pulumix.Output[LookupVrfResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupVrfResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrfResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupVrfResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVrfResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupVrfResultOutput) Encap() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrfResult) string { return v.Encap }).(pulumi.StringOutput)
}

func (o LookupVrfResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrfResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVrfResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrfResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVrfResultOutput{})
}
