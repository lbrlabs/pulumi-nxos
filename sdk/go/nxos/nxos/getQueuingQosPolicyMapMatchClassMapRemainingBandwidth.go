// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidth(ctx *pulumi.Context, args *LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthArgs, opts ...pulumi.InvokeOption) (*LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult
	err := ctx.Invoke("nxos:nxos/getQueuingQosPolicyMapMatchClassMapRemainingBandwidth:getQueuingQosPolicyMapMatchClassMapRemainingBandwidth", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQueuingQosPolicyMapMatchClassMapRemainingBandwidth.
type LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthArgs struct {
	ClassMapName  string  `pulumi:"classMapName"`
	Device        *string `pulumi:"device"`
	PolicyMapName string  `pulumi:"policyMapName"`
}

// A collection of values returned by getQueuingQosPolicyMapMatchClassMapRemainingBandwidth.
type LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult struct {
	ClassMapName  string  `pulumi:"classMapName"`
	Device        *string `pulumi:"device"`
	Id            string  `pulumi:"id"`
	PolicyMapName string  `pulumi:"policyMapName"`
	Value         int     `pulumi:"value"`
}

func LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthOutput(ctx *pulumi.Context, args LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthOutputArgs, opts ...pulumi.InvokeOption) LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult, error) {
			args := v.(LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthArgs)
			r, err := LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidth(ctx, &args, opts...)
			var s LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput)
}

// A collection of arguments for invoking getQueuingQosPolicyMapMatchClassMapRemainingBandwidth.
type LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthOutputArgs struct {
	ClassMapName  pulumi.StringInput    `pulumi:"classMapName"`
	Device        pulumi.StringPtrInput `pulumi:"device"`
	PolicyMapName pulumi.StringInput    `pulumi:"policyMapName"`
}

func (LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthArgs)(nil)).Elem()
}

// A collection of values returned by getQueuingQosPolicyMapMatchClassMapRemainingBandwidth.
type LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput struct{ *pulumi.OutputState }

func (LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult)(nil)).Elem()
}

func (o LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) ToLookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput() LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput {
	return o
}

func (o LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) ToLookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutputWithContext(ctx context.Context) LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput {
	return o
}

func (o LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult] {
	return pulumix.Output[LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) ClassMapName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult) string { return v.ClassMapName }).(pulumi.StringOutput)
}

func (o LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) PolicyMapName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult) string { return v.PolicyMapName }).(pulumi.StringOutput)
}

func (o LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult) int { return v.Value }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput{})
}
