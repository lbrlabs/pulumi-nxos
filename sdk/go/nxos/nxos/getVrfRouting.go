// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupVrfRouting(ctx *pulumi.Context, args *LookupVrfRoutingArgs, opts ...pulumi.InvokeOption) (*LookupVrfRoutingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVrfRoutingResult
	err := ctx.Invoke("nxos:nxos/getVrfRouting:getVrfRouting", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVrfRouting.
type LookupVrfRoutingArgs struct {
	Device *string `pulumi:"device"`
	Vrf    string  `pulumi:"vrf"`
}

// A collection of values returned by getVrfRouting.
type LookupVrfRoutingResult struct {
	Device             *string `pulumi:"device"`
	Id                 string  `pulumi:"id"`
	RouteDistinguisher string  `pulumi:"routeDistinguisher"`
	Vrf                string  `pulumi:"vrf"`
}

func LookupVrfRoutingOutput(ctx *pulumi.Context, args LookupVrfRoutingOutputArgs, opts ...pulumi.InvokeOption) LookupVrfRoutingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVrfRoutingResult, error) {
			args := v.(LookupVrfRoutingArgs)
			r, err := LookupVrfRouting(ctx, &args, opts...)
			var s LookupVrfRoutingResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVrfRoutingResultOutput)
}

// A collection of arguments for invoking getVrfRouting.
type LookupVrfRoutingOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
	Vrf    pulumi.StringInput    `pulumi:"vrf"`
}

func (LookupVrfRoutingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVrfRoutingArgs)(nil)).Elem()
}

// A collection of values returned by getVrfRouting.
type LookupVrfRoutingResultOutput struct{ *pulumi.OutputState }

func (LookupVrfRoutingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVrfRoutingResult)(nil)).Elem()
}

func (o LookupVrfRoutingResultOutput) ToLookupVrfRoutingResultOutput() LookupVrfRoutingResultOutput {
	return o
}

func (o LookupVrfRoutingResultOutput) ToLookupVrfRoutingResultOutputWithContext(ctx context.Context) LookupVrfRoutingResultOutput {
	return o
}

func (o LookupVrfRoutingResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupVrfRoutingResult] {
	return pulumix.Output[LookupVrfRoutingResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupVrfRoutingResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVrfRoutingResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupVrfRoutingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrfRoutingResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVrfRoutingResultOutput) RouteDistinguisher() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrfRoutingResult) string { return v.RouteDistinguisher }).(pulumi.StringOutput)
}

func (o LookupVrfRoutingResultOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrfRoutingResult) string { return v.Vrf }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVrfRoutingResultOutput{})
}
