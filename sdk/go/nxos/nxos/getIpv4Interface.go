// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupIpv4Interface(ctx *pulumi.Context, args *LookupIpv4InterfaceArgs, opts ...pulumi.InvokeOption) (*LookupIpv4InterfaceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIpv4InterfaceResult
	err := ctx.Invoke("nxos:nxos/getIpv4Interface:getIpv4Interface", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpv4Interface.
type LookupIpv4InterfaceArgs struct {
	Device      *string `pulumi:"device"`
	InterfaceId string  `pulumi:"interfaceId"`
	Vrf         string  `pulumi:"vrf"`
}

// A collection of values returned by getIpv4Interface.
type LookupIpv4InterfaceResult struct {
	Device      *string `pulumi:"device"`
	DropGlean   string  `pulumi:"dropGlean"`
	Forward     string  `pulumi:"forward"`
	Id          string  `pulumi:"id"`
	InterfaceId string  `pulumi:"interfaceId"`
	Unnumbered  string  `pulumi:"unnumbered"`
	Urpf        string  `pulumi:"urpf"`
	Vrf         string  `pulumi:"vrf"`
}

func LookupIpv4InterfaceOutput(ctx *pulumi.Context, args LookupIpv4InterfaceOutputArgs, opts ...pulumi.InvokeOption) LookupIpv4InterfaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIpv4InterfaceResult, error) {
			args := v.(LookupIpv4InterfaceArgs)
			r, err := LookupIpv4Interface(ctx, &args, opts...)
			var s LookupIpv4InterfaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIpv4InterfaceResultOutput)
}

// A collection of arguments for invoking getIpv4Interface.
type LookupIpv4InterfaceOutputArgs struct {
	Device      pulumi.StringPtrInput `pulumi:"device"`
	InterfaceId pulumi.StringInput    `pulumi:"interfaceId"`
	Vrf         pulumi.StringInput    `pulumi:"vrf"`
}

func (LookupIpv4InterfaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpv4InterfaceArgs)(nil)).Elem()
}

// A collection of values returned by getIpv4Interface.
type LookupIpv4InterfaceResultOutput struct{ *pulumi.OutputState }

func (LookupIpv4InterfaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpv4InterfaceResult)(nil)).Elem()
}

func (o LookupIpv4InterfaceResultOutput) ToLookupIpv4InterfaceResultOutput() LookupIpv4InterfaceResultOutput {
	return o
}

func (o LookupIpv4InterfaceResultOutput) ToLookupIpv4InterfaceResultOutputWithContext(ctx context.Context) LookupIpv4InterfaceResultOutput {
	return o
}

func (o LookupIpv4InterfaceResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupIpv4InterfaceResult] {
	return pulumix.Output[LookupIpv4InterfaceResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupIpv4InterfaceResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIpv4InterfaceResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupIpv4InterfaceResultOutput) DropGlean() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4InterfaceResult) string { return v.DropGlean }).(pulumi.StringOutput)
}

func (o LookupIpv4InterfaceResultOutput) Forward() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4InterfaceResult) string { return v.Forward }).(pulumi.StringOutput)
}

func (o LookupIpv4InterfaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4InterfaceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupIpv4InterfaceResultOutput) InterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4InterfaceResult) string { return v.InterfaceId }).(pulumi.StringOutput)
}

func (o LookupIpv4InterfaceResultOutput) Unnumbered() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4InterfaceResult) string { return v.Unnumbered }).(pulumi.StringOutput)
}

func (o LookupIpv4InterfaceResultOutput) Urpf() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4InterfaceResult) string { return v.Urpf }).(pulumi.StringOutput)
}

func (o LookupIpv4InterfaceResultOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4InterfaceResult) string { return v.Vrf }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIpv4InterfaceResultOutput{})
}
