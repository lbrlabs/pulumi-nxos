// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type PimAnycastRp struct {
	pulumi.CustomResourceState

	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	LocalInterface pulumi.StringPtrOutput `pulumi:"localInterface"`
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	SourceInterface pulumi.StringPtrOutput `pulumi:"sourceInterface"`
	// VRF name.
	VrfName pulumi.StringOutput `pulumi:"vrfName"`
}

// NewPimAnycastRp registers a new resource with the given unique name, arguments, and options.
func NewPimAnycastRp(ctx *pulumi.Context,
	name string, args *PimAnycastRpArgs, opts ...pulumi.ResourceOption) (*PimAnycastRp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VrfName == nil {
		return nil, errors.New("invalid value for required argument 'VrfName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PimAnycastRp
	err := ctx.RegisterResource("nxos:nxos/pimAnycastRp:PimAnycastRp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPimAnycastRp gets an existing PimAnycastRp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPimAnycastRp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PimAnycastRpState, opts ...pulumi.ResourceOption) (*PimAnycastRp, error) {
	var resource PimAnycastRp
	err := ctx.ReadResource("nxos:nxos/pimAnycastRp:PimAnycastRp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PimAnycastRp resources.
type pimAnycastRpState struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	LocalInterface *string `pulumi:"localInterface"`
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	SourceInterface *string `pulumi:"sourceInterface"`
	// VRF name.
	VrfName *string `pulumi:"vrfName"`
}

type PimAnycastRpState struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	LocalInterface pulumi.StringPtrInput
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	SourceInterface pulumi.StringPtrInput
	// VRF name.
	VrfName pulumi.StringPtrInput
}

func (PimAnycastRpState) ElementType() reflect.Type {
	return reflect.TypeOf((*pimAnycastRpState)(nil)).Elem()
}

type pimAnycastRpArgs struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	LocalInterface *string `pulumi:"localInterface"`
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	SourceInterface *string `pulumi:"sourceInterface"`
	// VRF name.
	VrfName string `pulumi:"vrfName"`
}

// The set of arguments for constructing a PimAnycastRp resource.
type PimAnycastRpArgs struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	LocalInterface pulumi.StringPtrInput
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	SourceInterface pulumi.StringPtrInput
	// VRF name.
	VrfName pulumi.StringInput
}

func (PimAnycastRpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pimAnycastRpArgs)(nil)).Elem()
}

type PimAnycastRpInput interface {
	pulumi.Input

	ToPimAnycastRpOutput() PimAnycastRpOutput
	ToPimAnycastRpOutputWithContext(ctx context.Context) PimAnycastRpOutput
}

func (*PimAnycastRp) ElementType() reflect.Type {
	return reflect.TypeOf((**PimAnycastRp)(nil)).Elem()
}

func (i *PimAnycastRp) ToPimAnycastRpOutput() PimAnycastRpOutput {
	return i.ToPimAnycastRpOutputWithContext(context.Background())
}

func (i *PimAnycastRp) ToPimAnycastRpOutputWithContext(ctx context.Context) PimAnycastRpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PimAnycastRpOutput)
}

func (i *PimAnycastRp) ToOutput(ctx context.Context) pulumix.Output[*PimAnycastRp] {
	return pulumix.Output[*PimAnycastRp]{
		OutputState: i.ToPimAnycastRpOutputWithContext(ctx).OutputState,
	}
}

// PimAnycastRpArrayInput is an input type that accepts PimAnycastRpArray and PimAnycastRpArrayOutput values.
// You can construct a concrete instance of `PimAnycastRpArrayInput` via:
//
//	PimAnycastRpArray{ PimAnycastRpArgs{...} }
type PimAnycastRpArrayInput interface {
	pulumi.Input

	ToPimAnycastRpArrayOutput() PimAnycastRpArrayOutput
	ToPimAnycastRpArrayOutputWithContext(context.Context) PimAnycastRpArrayOutput
}

type PimAnycastRpArray []PimAnycastRpInput

func (PimAnycastRpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PimAnycastRp)(nil)).Elem()
}

func (i PimAnycastRpArray) ToPimAnycastRpArrayOutput() PimAnycastRpArrayOutput {
	return i.ToPimAnycastRpArrayOutputWithContext(context.Background())
}

func (i PimAnycastRpArray) ToPimAnycastRpArrayOutputWithContext(ctx context.Context) PimAnycastRpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PimAnycastRpArrayOutput)
}

func (i PimAnycastRpArray) ToOutput(ctx context.Context) pulumix.Output[[]*PimAnycastRp] {
	return pulumix.Output[[]*PimAnycastRp]{
		OutputState: i.ToPimAnycastRpArrayOutputWithContext(ctx).OutputState,
	}
}

// PimAnycastRpMapInput is an input type that accepts PimAnycastRpMap and PimAnycastRpMapOutput values.
// You can construct a concrete instance of `PimAnycastRpMapInput` via:
//
//	PimAnycastRpMap{ "key": PimAnycastRpArgs{...} }
type PimAnycastRpMapInput interface {
	pulumi.Input

	ToPimAnycastRpMapOutput() PimAnycastRpMapOutput
	ToPimAnycastRpMapOutputWithContext(context.Context) PimAnycastRpMapOutput
}

type PimAnycastRpMap map[string]PimAnycastRpInput

func (PimAnycastRpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PimAnycastRp)(nil)).Elem()
}

func (i PimAnycastRpMap) ToPimAnycastRpMapOutput() PimAnycastRpMapOutput {
	return i.ToPimAnycastRpMapOutputWithContext(context.Background())
}

func (i PimAnycastRpMap) ToPimAnycastRpMapOutputWithContext(ctx context.Context) PimAnycastRpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PimAnycastRpMapOutput)
}

func (i PimAnycastRpMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*PimAnycastRp] {
	return pulumix.Output[map[string]*PimAnycastRp]{
		OutputState: i.ToPimAnycastRpMapOutputWithContext(ctx).OutputState,
	}
}

type PimAnycastRpOutput struct{ *pulumi.OutputState }

func (PimAnycastRpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PimAnycastRp)(nil)).Elem()
}

func (o PimAnycastRpOutput) ToPimAnycastRpOutput() PimAnycastRpOutput {
	return o
}

func (o PimAnycastRpOutput) ToPimAnycastRpOutputWithContext(ctx context.Context) PimAnycastRpOutput {
	return o
}

func (o PimAnycastRpOutput) ToOutput(ctx context.Context) pulumix.Output[*PimAnycastRp] {
	return pulumix.Output[*PimAnycastRp]{
		OutputState: o.OutputState,
	}
}

// A device name from the provider configuration.
func (o PimAnycastRpOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PimAnycastRp) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
func (o PimAnycastRpOutput) LocalInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PimAnycastRp) pulumi.StringPtrOutput { return v.LocalInterface }).(pulumi.StringPtrOutput)
}

// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
func (o PimAnycastRpOutput) SourceInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PimAnycastRp) pulumi.StringPtrOutput { return v.SourceInterface }).(pulumi.StringPtrOutput)
}

// VRF name.
func (o PimAnycastRpOutput) VrfName() pulumi.StringOutput {
	return o.ApplyT(func(v *PimAnycastRp) pulumi.StringOutput { return v.VrfName }).(pulumi.StringOutput)
}

type PimAnycastRpArrayOutput struct{ *pulumi.OutputState }

func (PimAnycastRpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PimAnycastRp)(nil)).Elem()
}

func (o PimAnycastRpArrayOutput) ToPimAnycastRpArrayOutput() PimAnycastRpArrayOutput {
	return o
}

func (o PimAnycastRpArrayOutput) ToPimAnycastRpArrayOutputWithContext(ctx context.Context) PimAnycastRpArrayOutput {
	return o
}

func (o PimAnycastRpArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*PimAnycastRp] {
	return pulumix.Output[[]*PimAnycastRp]{
		OutputState: o.OutputState,
	}
}

func (o PimAnycastRpArrayOutput) Index(i pulumi.IntInput) PimAnycastRpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PimAnycastRp {
		return vs[0].([]*PimAnycastRp)[vs[1].(int)]
	}).(PimAnycastRpOutput)
}

type PimAnycastRpMapOutput struct{ *pulumi.OutputState }

func (PimAnycastRpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PimAnycastRp)(nil)).Elem()
}

func (o PimAnycastRpMapOutput) ToPimAnycastRpMapOutput() PimAnycastRpMapOutput {
	return o
}

func (o PimAnycastRpMapOutput) ToPimAnycastRpMapOutputWithContext(ctx context.Context) PimAnycastRpMapOutput {
	return o
}

func (o PimAnycastRpMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*PimAnycastRp] {
	return pulumix.Output[map[string]*PimAnycastRp]{
		OutputState: o.OutputState,
	}
}

func (o PimAnycastRpMapOutput) MapIndex(k pulumi.StringInput) PimAnycastRpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PimAnycastRp {
		return vs[0].(map[string]*PimAnycastRp)[vs[1].(string)]
	}).(PimAnycastRpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PimAnycastRpInput)(nil)).Elem(), &PimAnycastRp{})
	pulumi.RegisterInputType(reflect.TypeOf((*PimAnycastRpArrayInput)(nil)).Elem(), PimAnycastRpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PimAnycastRpMapInput)(nil)).Elem(), PimAnycastRpMap{})
	pulumi.RegisterOutputType(PimAnycastRpOutput{})
	pulumi.RegisterOutputType(PimAnycastRpArrayOutput{})
	pulumi.RegisterOutputType(PimAnycastRpMapOutput{})
}
