// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupDhcpRelayInterface(ctx *pulumi.Context, args *LookupDhcpRelayInterfaceArgs, opts ...pulumi.InvokeOption) (*LookupDhcpRelayInterfaceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDhcpRelayInterfaceResult
	err := ctx.Invoke("nxos:nxos/getDhcpRelayInterface:getDhcpRelayInterface", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDhcpRelayInterface.
type LookupDhcpRelayInterfaceArgs struct {
	Device      *string `pulumi:"device"`
	InterfaceId string  `pulumi:"interfaceId"`
}

// A collection of values returned by getDhcpRelayInterface.
type LookupDhcpRelayInterfaceResult struct {
	Device      *string `pulumi:"device"`
	Id          string  `pulumi:"id"`
	InterfaceId string  `pulumi:"interfaceId"`
}

func LookupDhcpRelayInterfaceOutput(ctx *pulumi.Context, args LookupDhcpRelayInterfaceOutputArgs, opts ...pulumi.InvokeOption) LookupDhcpRelayInterfaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDhcpRelayInterfaceResult, error) {
			args := v.(LookupDhcpRelayInterfaceArgs)
			r, err := LookupDhcpRelayInterface(ctx, &args, opts...)
			var s LookupDhcpRelayInterfaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDhcpRelayInterfaceResultOutput)
}

// A collection of arguments for invoking getDhcpRelayInterface.
type LookupDhcpRelayInterfaceOutputArgs struct {
	Device      pulumi.StringPtrInput `pulumi:"device"`
	InterfaceId pulumi.StringInput    `pulumi:"interfaceId"`
}

func (LookupDhcpRelayInterfaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDhcpRelayInterfaceArgs)(nil)).Elem()
}

// A collection of values returned by getDhcpRelayInterface.
type LookupDhcpRelayInterfaceResultOutput struct{ *pulumi.OutputState }

func (LookupDhcpRelayInterfaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDhcpRelayInterfaceResult)(nil)).Elem()
}

func (o LookupDhcpRelayInterfaceResultOutput) ToLookupDhcpRelayInterfaceResultOutput() LookupDhcpRelayInterfaceResultOutput {
	return o
}

func (o LookupDhcpRelayInterfaceResultOutput) ToLookupDhcpRelayInterfaceResultOutputWithContext(ctx context.Context) LookupDhcpRelayInterfaceResultOutput {
	return o
}

func (o LookupDhcpRelayInterfaceResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupDhcpRelayInterfaceResult] {
	return pulumix.Output[LookupDhcpRelayInterfaceResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupDhcpRelayInterfaceResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDhcpRelayInterfaceResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupDhcpRelayInterfaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDhcpRelayInterfaceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDhcpRelayInterfaceResultOutput) InterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDhcpRelayInterfaceResult) string { return v.InterfaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDhcpRelayInterfaceResultOutput{})
}
