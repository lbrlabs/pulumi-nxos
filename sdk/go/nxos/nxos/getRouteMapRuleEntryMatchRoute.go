// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupRouteMapRuleEntryMatchRoute(ctx *pulumi.Context, args *LookupRouteMapRuleEntryMatchRouteArgs, opts ...pulumi.InvokeOption) (*LookupRouteMapRuleEntryMatchRouteResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRouteMapRuleEntryMatchRouteResult
	err := ctx.Invoke("nxos:nxos/getRouteMapRuleEntryMatchRoute:getRouteMapRuleEntryMatchRoute", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouteMapRuleEntryMatchRoute.
type LookupRouteMapRuleEntryMatchRouteArgs struct {
	Device   *string `pulumi:"device"`
	Order    int     `pulumi:"order"`
	RuleName string  `pulumi:"ruleName"`
}

// A collection of values returned by getRouteMapRuleEntryMatchRoute.
type LookupRouteMapRuleEntryMatchRouteResult struct {
	Device   *string `pulumi:"device"`
	Id       string  `pulumi:"id"`
	Order    int     `pulumi:"order"`
	RuleName string  `pulumi:"ruleName"`
}

func LookupRouteMapRuleEntryMatchRouteOutput(ctx *pulumi.Context, args LookupRouteMapRuleEntryMatchRouteOutputArgs, opts ...pulumi.InvokeOption) LookupRouteMapRuleEntryMatchRouteResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRouteMapRuleEntryMatchRouteResult, error) {
			args := v.(LookupRouteMapRuleEntryMatchRouteArgs)
			r, err := LookupRouteMapRuleEntryMatchRoute(ctx, &args, opts...)
			var s LookupRouteMapRuleEntryMatchRouteResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRouteMapRuleEntryMatchRouteResultOutput)
}

// A collection of arguments for invoking getRouteMapRuleEntryMatchRoute.
type LookupRouteMapRuleEntryMatchRouteOutputArgs struct {
	Device   pulumi.StringPtrInput `pulumi:"device"`
	Order    pulumi.IntInput       `pulumi:"order"`
	RuleName pulumi.StringInput    `pulumi:"ruleName"`
}

func (LookupRouteMapRuleEntryMatchRouteOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteMapRuleEntryMatchRouteArgs)(nil)).Elem()
}

// A collection of values returned by getRouteMapRuleEntryMatchRoute.
type LookupRouteMapRuleEntryMatchRouteResultOutput struct{ *pulumi.OutputState }

func (LookupRouteMapRuleEntryMatchRouteResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteMapRuleEntryMatchRouteResult)(nil)).Elem()
}

func (o LookupRouteMapRuleEntryMatchRouteResultOutput) ToLookupRouteMapRuleEntryMatchRouteResultOutput() LookupRouteMapRuleEntryMatchRouteResultOutput {
	return o
}

func (o LookupRouteMapRuleEntryMatchRouteResultOutput) ToLookupRouteMapRuleEntryMatchRouteResultOutputWithContext(ctx context.Context) LookupRouteMapRuleEntryMatchRouteResultOutput {
	return o
}

func (o LookupRouteMapRuleEntryMatchRouteResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupRouteMapRuleEntryMatchRouteResult] {
	return pulumix.Output[LookupRouteMapRuleEntryMatchRouteResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupRouteMapRuleEntryMatchRouteResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouteMapRuleEntryMatchRouteResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupRouteMapRuleEntryMatchRouteResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteMapRuleEntryMatchRouteResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRouteMapRuleEntryMatchRouteResultOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRouteMapRuleEntryMatchRouteResult) int { return v.Order }).(pulumi.IntOutput)
}

func (o LookupRouteMapRuleEntryMatchRouteResultOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteMapRuleEntryMatchRouteResult) string { return v.RuleName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRouteMapRuleEntryMatchRouteResultOutput{})
}
