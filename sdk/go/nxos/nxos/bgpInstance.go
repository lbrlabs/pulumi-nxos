// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type BgpInstance struct {
	pulumi.CustomResourceState

	// Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
	AdminState pulumi.StringOutput `pulumi:"adminState"`
	// Autonomous system number.
	Asn pulumi.StringPtrOutput `pulumi:"asn"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// Enable BGP Enhanced Error Handling. - Default value: `true`
	EnhancedErrorHandling pulumi.BoolOutput `pulumi:"enhancedErrorHandling"`
}

// NewBgpInstance registers a new resource with the given unique name, arguments, and options.
func NewBgpInstance(ctx *pulumi.Context,
	name string, args *BgpInstanceArgs, opts ...pulumi.ResourceOption) (*BgpInstance, error) {
	if args == nil {
		args = &BgpInstanceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BgpInstance
	err := ctx.RegisterResource("nxos:nxos/bgpInstance:BgpInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBgpInstance gets an existing BgpInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBgpInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BgpInstanceState, opts ...pulumi.ResourceOption) (*BgpInstance, error) {
	var resource BgpInstance
	err := ctx.ReadResource("nxos:nxos/bgpInstance:BgpInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BgpInstance resources.
type bgpInstanceState struct {
	// Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
	AdminState *string `pulumi:"adminState"`
	// Autonomous system number.
	Asn *string `pulumi:"asn"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Enable BGP Enhanced Error Handling. - Default value: `true`
	EnhancedErrorHandling *bool `pulumi:"enhancedErrorHandling"`
}

type BgpInstanceState struct {
	// Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
	AdminState pulumi.StringPtrInput
	// Autonomous system number.
	Asn pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Enable BGP Enhanced Error Handling. - Default value: `true`
	EnhancedErrorHandling pulumi.BoolPtrInput
}

func (BgpInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpInstanceState)(nil)).Elem()
}

type bgpInstanceArgs struct {
	// Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
	AdminState *string `pulumi:"adminState"`
	// Autonomous system number.
	Asn *string `pulumi:"asn"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Enable BGP Enhanced Error Handling. - Default value: `true`
	EnhancedErrorHandling *bool `pulumi:"enhancedErrorHandling"`
}

// The set of arguments for constructing a BgpInstance resource.
type BgpInstanceArgs struct {
	// Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
	AdminState pulumi.StringPtrInput
	// Autonomous system number.
	Asn pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Enable BGP Enhanced Error Handling. - Default value: `true`
	EnhancedErrorHandling pulumi.BoolPtrInput
}

func (BgpInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpInstanceArgs)(nil)).Elem()
}

type BgpInstanceInput interface {
	pulumi.Input

	ToBgpInstanceOutput() BgpInstanceOutput
	ToBgpInstanceOutputWithContext(ctx context.Context) BgpInstanceOutput
}

func (*BgpInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpInstance)(nil)).Elem()
}

func (i *BgpInstance) ToBgpInstanceOutput() BgpInstanceOutput {
	return i.ToBgpInstanceOutputWithContext(context.Background())
}

func (i *BgpInstance) ToBgpInstanceOutputWithContext(ctx context.Context) BgpInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpInstanceOutput)
}

func (i *BgpInstance) ToOutput(ctx context.Context) pulumix.Output[*BgpInstance] {
	return pulumix.Output[*BgpInstance]{
		OutputState: i.ToBgpInstanceOutputWithContext(ctx).OutputState,
	}
}

// BgpInstanceArrayInput is an input type that accepts BgpInstanceArray and BgpInstanceArrayOutput values.
// You can construct a concrete instance of `BgpInstanceArrayInput` via:
//
//	BgpInstanceArray{ BgpInstanceArgs{...} }
type BgpInstanceArrayInput interface {
	pulumi.Input

	ToBgpInstanceArrayOutput() BgpInstanceArrayOutput
	ToBgpInstanceArrayOutputWithContext(context.Context) BgpInstanceArrayOutput
}

type BgpInstanceArray []BgpInstanceInput

func (BgpInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpInstance)(nil)).Elem()
}

func (i BgpInstanceArray) ToBgpInstanceArrayOutput() BgpInstanceArrayOutput {
	return i.ToBgpInstanceArrayOutputWithContext(context.Background())
}

func (i BgpInstanceArray) ToBgpInstanceArrayOutputWithContext(ctx context.Context) BgpInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpInstanceArrayOutput)
}

func (i BgpInstanceArray) ToOutput(ctx context.Context) pulumix.Output[[]*BgpInstance] {
	return pulumix.Output[[]*BgpInstance]{
		OutputState: i.ToBgpInstanceArrayOutputWithContext(ctx).OutputState,
	}
}

// BgpInstanceMapInput is an input type that accepts BgpInstanceMap and BgpInstanceMapOutput values.
// You can construct a concrete instance of `BgpInstanceMapInput` via:
//
//	BgpInstanceMap{ "key": BgpInstanceArgs{...} }
type BgpInstanceMapInput interface {
	pulumi.Input

	ToBgpInstanceMapOutput() BgpInstanceMapOutput
	ToBgpInstanceMapOutputWithContext(context.Context) BgpInstanceMapOutput
}

type BgpInstanceMap map[string]BgpInstanceInput

func (BgpInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpInstance)(nil)).Elem()
}

func (i BgpInstanceMap) ToBgpInstanceMapOutput() BgpInstanceMapOutput {
	return i.ToBgpInstanceMapOutputWithContext(context.Background())
}

func (i BgpInstanceMap) ToBgpInstanceMapOutputWithContext(ctx context.Context) BgpInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpInstanceMapOutput)
}

func (i BgpInstanceMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpInstance] {
	return pulumix.Output[map[string]*BgpInstance]{
		OutputState: i.ToBgpInstanceMapOutputWithContext(ctx).OutputState,
	}
}

type BgpInstanceOutput struct{ *pulumi.OutputState }

func (BgpInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpInstance)(nil)).Elem()
}

func (o BgpInstanceOutput) ToBgpInstanceOutput() BgpInstanceOutput {
	return o
}

func (o BgpInstanceOutput) ToBgpInstanceOutputWithContext(ctx context.Context) BgpInstanceOutput {
	return o
}

func (o BgpInstanceOutput) ToOutput(ctx context.Context) pulumix.Output[*BgpInstance] {
	return pulumix.Output[*BgpInstance]{
		OutputState: o.OutputState,
	}
}

// Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
func (o BgpInstanceOutput) AdminState() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpInstance) pulumi.StringOutput { return v.AdminState }).(pulumi.StringOutput)
}

// Autonomous system number.
func (o BgpInstanceOutput) Asn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpInstance) pulumi.StringPtrOutput { return v.Asn }).(pulumi.StringPtrOutput)
}

// A device name from the provider configuration.
func (o BgpInstanceOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpInstance) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// Enable BGP Enhanced Error Handling. - Default value: `true`
func (o BgpInstanceOutput) EnhancedErrorHandling() pulumi.BoolOutput {
	return o.ApplyT(func(v *BgpInstance) pulumi.BoolOutput { return v.EnhancedErrorHandling }).(pulumi.BoolOutput)
}

type BgpInstanceArrayOutput struct{ *pulumi.OutputState }

func (BgpInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpInstance)(nil)).Elem()
}

func (o BgpInstanceArrayOutput) ToBgpInstanceArrayOutput() BgpInstanceArrayOutput {
	return o
}

func (o BgpInstanceArrayOutput) ToBgpInstanceArrayOutputWithContext(ctx context.Context) BgpInstanceArrayOutput {
	return o
}

func (o BgpInstanceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*BgpInstance] {
	return pulumix.Output[[]*BgpInstance]{
		OutputState: o.OutputState,
	}
}

func (o BgpInstanceArrayOutput) Index(i pulumi.IntInput) BgpInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BgpInstance {
		return vs[0].([]*BgpInstance)[vs[1].(int)]
	}).(BgpInstanceOutput)
}

type BgpInstanceMapOutput struct{ *pulumi.OutputState }

func (BgpInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpInstance)(nil)).Elem()
}

func (o BgpInstanceMapOutput) ToBgpInstanceMapOutput() BgpInstanceMapOutput {
	return o
}

func (o BgpInstanceMapOutput) ToBgpInstanceMapOutputWithContext(ctx context.Context) BgpInstanceMapOutput {
	return o
}

func (o BgpInstanceMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpInstance] {
	return pulumix.Output[map[string]*BgpInstance]{
		OutputState: o.OutputState,
	}
}

func (o BgpInstanceMapOutput) MapIndex(k pulumi.StringInput) BgpInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BgpInstance {
		return vs[0].(map[string]*BgpInstance)[vs[1].(string)]
	}).(BgpInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BgpInstanceInput)(nil)).Elem(), &BgpInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpInstanceArrayInput)(nil)).Elem(), BgpInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpInstanceMapInput)(nil)).Elem(), BgpInstanceMap{})
	pulumi.RegisterOutputType(BgpInstanceOutput{})
	pulumi.RegisterOutputType(BgpInstanceArrayOutput{})
	pulumi.RegisterOutputType(BgpInstanceMapOutput{})
}
