// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupIpv4PrefixListRule(ctx *pulumi.Context, args *LookupIpv4PrefixListRuleArgs, opts ...pulumi.InvokeOption) (*LookupIpv4PrefixListRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIpv4PrefixListRuleResult
	err := ctx.Invoke("nxos:nxos/getIpv4PrefixListRule:getIpv4PrefixListRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpv4PrefixListRule.
type LookupIpv4PrefixListRuleArgs struct {
	Device *string `pulumi:"device"`
	Name   string  `pulumi:"name"`
}

// A collection of values returned by getIpv4PrefixListRule.
type LookupIpv4PrefixListRuleResult struct {
	Device *string `pulumi:"device"`
	Id     string  `pulumi:"id"`
	Name   string  `pulumi:"name"`
}

func LookupIpv4PrefixListRuleOutput(ctx *pulumi.Context, args LookupIpv4PrefixListRuleOutputArgs, opts ...pulumi.InvokeOption) LookupIpv4PrefixListRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIpv4PrefixListRuleResult, error) {
			args := v.(LookupIpv4PrefixListRuleArgs)
			r, err := LookupIpv4PrefixListRule(ctx, &args, opts...)
			var s LookupIpv4PrefixListRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIpv4PrefixListRuleResultOutput)
}

// A collection of arguments for invoking getIpv4PrefixListRule.
type LookupIpv4PrefixListRuleOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
	Name   pulumi.StringInput    `pulumi:"name"`
}

func (LookupIpv4PrefixListRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpv4PrefixListRuleArgs)(nil)).Elem()
}

// A collection of values returned by getIpv4PrefixListRule.
type LookupIpv4PrefixListRuleResultOutput struct{ *pulumi.OutputState }

func (LookupIpv4PrefixListRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpv4PrefixListRuleResult)(nil)).Elem()
}

func (o LookupIpv4PrefixListRuleResultOutput) ToLookupIpv4PrefixListRuleResultOutput() LookupIpv4PrefixListRuleResultOutput {
	return o
}

func (o LookupIpv4PrefixListRuleResultOutput) ToLookupIpv4PrefixListRuleResultOutputWithContext(ctx context.Context) LookupIpv4PrefixListRuleResultOutput {
	return o
}

func (o LookupIpv4PrefixListRuleResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupIpv4PrefixListRuleResult] {
	return pulumix.Output[LookupIpv4PrefixListRuleResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupIpv4PrefixListRuleResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIpv4PrefixListRuleResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupIpv4PrefixListRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4PrefixListRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupIpv4PrefixListRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4PrefixListRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIpv4PrefixListRuleResultOutput{})
}
