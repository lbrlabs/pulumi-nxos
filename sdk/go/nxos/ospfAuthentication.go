// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource can manage the OSPF authentication configuration.
//
// - API Documentation: [ospfAuthNewP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:AuthNewP/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nxos.NewOspfAuthentication(ctx, "example", &nxos.OspfAuthenticationArgs{
//				InstanceName:     pulumi.String("OSPF1"),
//				InterfaceId:      pulumi.String("eth1/10"),
//				Key:              pulumi.String("0 mykey"),
//				KeyId:            pulumi.Int(1),
//				KeySecureMode:    pulumi.Bool(false),
//				Keychain:         pulumi.String("mykeychain"),
//				Md5Key:           pulumi.String("0 mymd5key"),
//				Md5KeySecureMode: pulumi.Bool(false),
//				Type:             pulumi.String("none"),
//				VrfName:          pulumi.String("VRF1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import nxos:index/ospfAuthentication:OspfAuthentication example "sys/ospf/inst-[OSPF1]/dom-[VRF1]/if-[eth1/10]/authnew"
//
// ```
type OspfAuthentication struct {
	pulumi.CustomResourceState

	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// OSPF instance name.
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	InterfaceId pulumi.StringOutput `pulumi:"interfaceId"`
	// Key used for authentication.
	Key pulumi.StringPtrOutput `pulumi:"key"`
	// Key ID used for authentication. - Range: `0`-`255` - Default value: `0`
	KeyId pulumi.IntOutput `pulumi:"keyId"`
	// Encrypted authentication key or plain text key. - Default value: `false`
	KeySecureMode pulumi.BoolOutput `pulumi:"keySecureMode"`
	// Authentication keychain.
	Keychain pulumi.StringPtrOutput `pulumi:"keychain"`
	// Key used for md5 authentication.
	Md5Key pulumi.StringPtrOutput `pulumi:"md5Key"`
	// Encrypted authentication md5 key or plain text key. - Default value: `false`
	Md5KeySecureMode pulumi.BoolOutput `pulumi:"md5KeySecureMode"`
	// Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`
	Type pulumi.StringOutput `pulumi:"type"`
	// VRF name.
	VrfName pulumi.StringOutput `pulumi:"vrfName"`
}

// NewOspfAuthentication registers a new resource with the given unique name, arguments, and options.
func NewOspfAuthentication(ctx *pulumi.Context,
	name string, args *OspfAuthenticationArgs, opts ...pulumi.ResourceOption) (*OspfAuthentication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	if args.InterfaceId == nil {
		return nil, errors.New("invalid value for required argument 'InterfaceId'")
	}
	if args.VrfName == nil {
		return nil, errors.New("invalid value for required argument 'VrfName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OspfAuthentication
	err := ctx.RegisterResource("nxos:index/ospfAuthentication:OspfAuthentication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOspfAuthentication gets an existing OspfAuthentication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOspfAuthentication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OspfAuthenticationState, opts ...pulumi.ResourceOption) (*OspfAuthentication, error) {
	var resource OspfAuthentication
	err := ctx.ReadResource("nxos:index/ospfAuthentication:OspfAuthentication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OspfAuthentication resources.
type ospfAuthenticationState struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// OSPF instance name.
	InstanceName *string `pulumi:"instanceName"`
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	InterfaceId *string `pulumi:"interfaceId"`
	// Key used for authentication.
	Key *string `pulumi:"key"`
	// Key ID used for authentication. - Range: `0`-`255` - Default value: `0`
	KeyId *int `pulumi:"keyId"`
	// Encrypted authentication key or plain text key. - Default value: `false`
	KeySecureMode *bool `pulumi:"keySecureMode"`
	// Authentication keychain.
	Keychain *string `pulumi:"keychain"`
	// Key used for md5 authentication.
	Md5Key *string `pulumi:"md5Key"`
	// Encrypted authentication md5 key or plain text key. - Default value: `false`
	Md5KeySecureMode *bool `pulumi:"md5KeySecureMode"`
	// Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`
	Type *string `pulumi:"type"`
	// VRF name.
	VrfName *string `pulumi:"vrfName"`
}

type OspfAuthenticationState struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// OSPF instance name.
	InstanceName pulumi.StringPtrInput
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	InterfaceId pulumi.StringPtrInput
	// Key used for authentication.
	Key pulumi.StringPtrInput
	// Key ID used for authentication. - Range: `0`-`255` - Default value: `0`
	KeyId pulumi.IntPtrInput
	// Encrypted authentication key or plain text key. - Default value: `false`
	KeySecureMode pulumi.BoolPtrInput
	// Authentication keychain.
	Keychain pulumi.StringPtrInput
	// Key used for md5 authentication.
	Md5Key pulumi.StringPtrInput
	// Encrypted authentication md5 key or plain text key. - Default value: `false`
	Md5KeySecureMode pulumi.BoolPtrInput
	// Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`
	Type pulumi.StringPtrInput
	// VRF name.
	VrfName pulumi.StringPtrInput
}

func (OspfAuthenticationState) ElementType() reflect.Type {
	return reflect.TypeOf((*ospfAuthenticationState)(nil)).Elem()
}

type ospfAuthenticationArgs struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// OSPF instance name.
	InstanceName string `pulumi:"instanceName"`
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	InterfaceId string `pulumi:"interfaceId"`
	// Key used for authentication.
	Key *string `pulumi:"key"`
	// Key ID used for authentication. - Range: `0`-`255` - Default value: `0`
	KeyId *int `pulumi:"keyId"`
	// Encrypted authentication key or plain text key. - Default value: `false`
	KeySecureMode *bool `pulumi:"keySecureMode"`
	// Authentication keychain.
	Keychain *string `pulumi:"keychain"`
	// Key used for md5 authentication.
	Md5Key *string `pulumi:"md5Key"`
	// Encrypted authentication md5 key or plain text key. - Default value: `false`
	Md5KeySecureMode *bool `pulumi:"md5KeySecureMode"`
	// Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`
	Type *string `pulumi:"type"`
	// VRF name.
	VrfName string `pulumi:"vrfName"`
}

// The set of arguments for constructing a OspfAuthentication resource.
type OspfAuthenticationArgs struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// OSPF instance name.
	InstanceName pulumi.StringInput
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	InterfaceId pulumi.StringInput
	// Key used for authentication.
	Key pulumi.StringPtrInput
	// Key ID used for authentication. - Range: `0`-`255` - Default value: `0`
	KeyId pulumi.IntPtrInput
	// Encrypted authentication key or plain text key. - Default value: `false`
	KeySecureMode pulumi.BoolPtrInput
	// Authentication keychain.
	Keychain pulumi.StringPtrInput
	// Key used for md5 authentication.
	Md5Key pulumi.StringPtrInput
	// Encrypted authentication md5 key or plain text key. - Default value: `false`
	Md5KeySecureMode pulumi.BoolPtrInput
	// Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`
	Type pulumi.StringPtrInput
	// VRF name.
	VrfName pulumi.StringInput
}

func (OspfAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ospfAuthenticationArgs)(nil)).Elem()
}

type OspfAuthenticationInput interface {
	pulumi.Input

	ToOspfAuthenticationOutput() OspfAuthenticationOutput
	ToOspfAuthenticationOutputWithContext(ctx context.Context) OspfAuthenticationOutput
}

func (*OspfAuthentication) ElementType() reflect.Type {
	return reflect.TypeOf((**OspfAuthentication)(nil)).Elem()
}

func (i *OspfAuthentication) ToOspfAuthenticationOutput() OspfAuthenticationOutput {
	return i.ToOspfAuthenticationOutputWithContext(context.Background())
}

func (i *OspfAuthentication) ToOspfAuthenticationOutputWithContext(ctx context.Context) OspfAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfAuthenticationOutput)
}

func (i *OspfAuthentication) ToOutput(ctx context.Context) pulumix.Output[*OspfAuthentication] {
	return pulumix.Output[*OspfAuthentication]{
		OutputState: i.ToOspfAuthenticationOutputWithContext(ctx).OutputState,
	}
}

// OspfAuthenticationArrayInput is an input type that accepts OspfAuthenticationArray and OspfAuthenticationArrayOutput values.
// You can construct a concrete instance of `OspfAuthenticationArrayInput` via:
//
//	OspfAuthenticationArray{ OspfAuthenticationArgs{...} }
type OspfAuthenticationArrayInput interface {
	pulumi.Input

	ToOspfAuthenticationArrayOutput() OspfAuthenticationArrayOutput
	ToOspfAuthenticationArrayOutputWithContext(context.Context) OspfAuthenticationArrayOutput
}

type OspfAuthenticationArray []OspfAuthenticationInput

func (OspfAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OspfAuthentication)(nil)).Elem()
}

func (i OspfAuthenticationArray) ToOspfAuthenticationArrayOutput() OspfAuthenticationArrayOutput {
	return i.ToOspfAuthenticationArrayOutputWithContext(context.Background())
}

func (i OspfAuthenticationArray) ToOspfAuthenticationArrayOutputWithContext(ctx context.Context) OspfAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfAuthenticationArrayOutput)
}

func (i OspfAuthenticationArray) ToOutput(ctx context.Context) pulumix.Output[[]*OspfAuthentication] {
	return pulumix.Output[[]*OspfAuthentication]{
		OutputState: i.ToOspfAuthenticationArrayOutputWithContext(ctx).OutputState,
	}
}

// OspfAuthenticationMapInput is an input type that accepts OspfAuthenticationMap and OspfAuthenticationMapOutput values.
// You can construct a concrete instance of `OspfAuthenticationMapInput` via:
//
//	OspfAuthenticationMap{ "key": OspfAuthenticationArgs{...} }
type OspfAuthenticationMapInput interface {
	pulumi.Input

	ToOspfAuthenticationMapOutput() OspfAuthenticationMapOutput
	ToOspfAuthenticationMapOutputWithContext(context.Context) OspfAuthenticationMapOutput
}

type OspfAuthenticationMap map[string]OspfAuthenticationInput

func (OspfAuthenticationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OspfAuthentication)(nil)).Elem()
}

func (i OspfAuthenticationMap) ToOspfAuthenticationMapOutput() OspfAuthenticationMapOutput {
	return i.ToOspfAuthenticationMapOutputWithContext(context.Background())
}

func (i OspfAuthenticationMap) ToOspfAuthenticationMapOutputWithContext(ctx context.Context) OspfAuthenticationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfAuthenticationMapOutput)
}

func (i OspfAuthenticationMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*OspfAuthentication] {
	return pulumix.Output[map[string]*OspfAuthentication]{
		OutputState: i.ToOspfAuthenticationMapOutputWithContext(ctx).OutputState,
	}
}

type OspfAuthenticationOutput struct{ *pulumi.OutputState }

func (OspfAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OspfAuthentication)(nil)).Elem()
}

func (o OspfAuthenticationOutput) ToOspfAuthenticationOutput() OspfAuthenticationOutput {
	return o
}

func (o OspfAuthenticationOutput) ToOspfAuthenticationOutputWithContext(ctx context.Context) OspfAuthenticationOutput {
	return o
}

func (o OspfAuthenticationOutput) ToOutput(ctx context.Context) pulumix.Output[*OspfAuthentication] {
	return pulumix.Output[*OspfAuthentication]{
		OutputState: o.OutputState,
	}
}

// A device name from the provider configuration.
func (o OspfAuthenticationOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OspfAuthentication) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// OSPF instance name.
func (o OspfAuthenticationOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *OspfAuthentication) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
func (o OspfAuthenticationOutput) InterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *OspfAuthentication) pulumi.StringOutput { return v.InterfaceId }).(pulumi.StringOutput)
}

// Key used for authentication.
func (o OspfAuthenticationOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OspfAuthentication) pulumi.StringPtrOutput { return v.Key }).(pulumi.StringPtrOutput)
}

// Key ID used for authentication. - Range: `0`-`255` - Default value: `0`
func (o OspfAuthenticationOutput) KeyId() pulumi.IntOutput {
	return o.ApplyT(func(v *OspfAuthentication) pulumi.IntOutput { return v.KeyId }).(pulumi.IntOutput)
}

// Encrypted authentication key or plain text key. - Default value: `false`
func (o OspfAuthenticationOutput) KeySecureMode() pulumi.BoolOutput {
	return o.ApplyT(func(v *OspfAuthentication) pulumi.BoolOutput { return v.KeySecureMode }).(pulumi.BoolOutput)
}

// Authentication keychain.
func (o OspfAuthenticationOutput) Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OspfAuthentication) pulumi.StringPtrOutput { return v.Keychain }).(pulumi.StringPtrOutput)
}

// Key used for md5 authentication.
func (o OspfAuthenticationOutput) Md5Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OspfAuthentication) pulumi.StringPtrOutput { return v.Md5Key }).(pulumi.StringPtrOutput)
}

// Encrypted authentication md5 key or plain text key. - Default value: `false`
func (o OspfAuthenticationOutput) Md5KeySecureMode() pulumi.BoolOutput {
	return o.ApplyT(func(v *OspfAuthentication) pulumi.BoolOutput { return v.Md5KeySecureMode }).(pulumi.BoolOutput)
}

// Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`
func (o OspfAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *OspfAuthentication) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// VRF name.
func (o OspfAuthenticationOutput) VrfName() pulumi.StringOutput {
	return o.ApplyT(func(v *OspfAuthentication) pulumi.StringOutput { return v.VrfName }).(pulumi.StringOutput)
}

type OspfAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (OspfAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OspfAuthentication)(nil)).Elem()
}

func (o OspfAuthenticationArrayOutput) ToOspfAuthenticationArrayOutput() OspfAuthenticationArrayOutput {
	return o
}

func (o OspfAuthenticationArrayOutput) ToOspfAuthenticationArrayOutputWithContext(ctx context.Context) OspfAuthenticationArrayOutput {
	return o
}

func (o OspfAuthenticationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*OspfAuthentication] {
	return pulumix.Output[[]*OspfAuthentication]{
		OutputState: o.OutputState,
	}
}

func (o OspfAuthenticationArrayOutput) Index(i pulumi.IntInput) OspfAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OspfAuthentication {
		return vs[0].([]*OspfAuthentication)[vs[1].(int)]
	}).(OspfAuthenticationOutput)
}

type OspfAuthenticationMapOutput struct{ *pulumi.OutputState }

func (OspfAuthenticationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OspfAuthentication)(nil)).Elem()
}

func (o OspfAuthenticationMapOutput) ToOspfAuthenticationMapOutput() OspfAuthenticationMapOutput {
	return o
}

func (o OspfAuthenticationMapOutput) ToOspfAuthenticationMapOutputWithContext(ctx context.Context) OspfAuthenticationMapOutput {
	return o
}

func (o OspfAuthenticationMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*OspfAuthentication] {
	return pulumix.Output[map[string]*OspfAuthentication]{
		OutputState: o.OutputState,
	}
}

func (o OspfAuthenticationMapOutput) MapIndex(k pulumi.StringInput) OspfAuthenticationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OspfAuthentication {
		return vs[0].(map[string]*OspfAuthentication)[vs[1].(string)]
	}).(OspfAuthenticationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OspfAuthenticationInput)(nil)).Elem(), &OspfAuthentication{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfAuthenticationArrayInput)(nil)).Elem(), OspfAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfAuthenticationMapInput)(nil)).Elem(), OspfAuthenticationMap{})
	pulumi.RegisterOutputType(OspfAuthenticationOutput{})
	pulumi.RegisterOutputType(OspfAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(OspfAuthenticationMapOutput{})
}
