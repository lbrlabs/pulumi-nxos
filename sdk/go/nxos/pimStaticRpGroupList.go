// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource can manage the PIM Static RP group list configuration.
//
// - API Documentation: [pimRPGrpList](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:RPGrpList/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nxos.NewPimStaticRpGroupList(ctx, "example", &nxos.PimStaticRpGroupListArgs{
//				Address:   pulumi.String("224.0.0.0/4"),
//				Bidir:     pulumi.Bool(true),
//				Override:  pulumi.Bool(true),
//				RpAddress: pulumi.String("1.2.3.4"),
//				VrfName:   pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import nxos:index/pimStaticRpGroupList:PimStaticRpGroupList example "sys/pim/inst/dom-[default]/staticrp/rp-[1.2.3.4]/rpgrplist-[224.0.0.0/4]"
//
// ```
type PimStaticRpGroupList struct {
	pulumi.CustomResourceState

	// Group list address information.
	Address pulumi.StringOutput `pulumi:"address"`
	// Flag to treat Group Ranges as BiDir. - Default value: `false`
	Bidir pulumi.BoolOutput `pulumi:"bidir"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// Flag to override RP preference to use Static over Dynamic RP. - Default value: `false`
	Override pulumi.BoolOutput `pulumi:"override"`
	// RP address.
	RpAddress pulumi.StringOutput `pulumi:"rpAddress"`
	// VRF name.
	VrfName pulumi.StringOutput `pulumi:"vrfName"`
}

// NewPimStaticRpGroupList registers a new resource with the given unique name, arguments, and options.
func NewPimStaticRpGroupList(ctx *pulumi.Context,
	name string, args *PimStaticRpGroupListArgs, opts ...pulumi.ResourceOption) (*PimStaticRpGroupList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Address == nil {
		return nil, errors.New("invalid value for required argument 'Address'")
	}
	if args.RpAddress == nil {
		return nil, errors.New("invalid value for required argument 'RpAddress'")
	}
	if args.VrfName == nil {
		return nil, errors.New("invalid value for required argument 'VrfName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PimStaticRpGroupList
	err := ctx.RegisterResource("nxos:index/pimStaticRpGroupList:PimStaticRpGroupList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPimStaticRpGroupList gets an existing PimStaticRpGroupList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPimStaticRpGroupList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PimStaticRpGroupListState, opts ...pulumi.ResourceOption) (*PimStaticRpGroupList, error) {
	var resource PimStaticRpGroupList
	err := ctx.ReadResource("nxos:index/pimStaticRpGroupList:PimStaticRpGroupList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PimStaticRpGroupList resources.
type pimStaticRpGroupListState struct {
	// Group list address information.
	Address *string `pulumi:"address"`
	// Flag to treat Group Ranges as BiDir. - Default value: `false`
	Bidir *bool `pulumi:"bidir"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Flag to override RP preference to use Static over Dynamic RP. - Default value: `false`
	Override *bool `pulumi:"override"`
	// RP address.
	RpAddress *string `pulumi:"rpAddress"`
	// VRF name.
	VrfName *string `pulumi:"vrfName"`
}

type PimStaticRpGroupListState struct {
	// Group list address information.
	Address pulumi.StringPtrInput
	// Flag to treat Group Ranges as BiDir. - Default value: `false`
	Bidir pulumi.BoolPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Flag to override RP preference to use Static over Dynamic RP. - Default value: `false`
	Override pulumi.BoolPtrInput
	// RP address.
	RpAddress pulumi.StringPtrInput
	// VRF name.
	VrfName pulumi.StringPtrInput
}

func (PimStaticRpGroupListState) ElementType() reflect.Type {
	return reflect.TypeOf((*pimStaticRpGroupListState)(nil)).Elem()
}

type pimStaticRpGroupListArgs struct {
	// Group list address information.
	Address string `pulumi:"address"`
	// Flag to treat Group Ranges as BiDir. - Default value: `false`
	Bidir *bool `pulumi:"bidir"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Flag to override RP preference to use Static over Dynamic RP. - Default value: `false`
	Override *bool `pulumi:"override"`
	// RP address.
	RpAddress string `pulumi:"rpAddress"`
	// VRF name.
	VrfName string `pulumi:"vrfName"`
}

// The set of arguments for constructing a PimStaticRpGroupList resource.
type PimStaticRpGroupListArgs struct {
	// Group list address information.
	Address pulumi.StringInput
	// Flag to treat Group Ranges as BiDir. - Default value: `false`
	Bidir pulumi.BoolPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Flag to override RP preference to use Static over Dynamic RP. - Default value: `false`
	Override pulumi.BoolPtrInput
	// RP address.
	RpAddress pulumi.StringInput
	// VRF name.
	VrfName pulumi.StringInput
}

func (PimStaticRpGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pimStaticRpGroupListArgs)(nil)).Elem()
}

type PimStaticRpGroupListInput interface {
	pulumi.Input

	ToPimStaticRpGroupListOutput() PimStaticRpGroupListOutput
	ToPimStaticRpGroupListOutputWithContext(ctx context.Context) PimStaticRpGroupListOutput
}

func (*PimStaticRpGroupList) ElementType() reflect.Type {
	return reflect.TypeOf((**PimStaticRpGroupList)(nil)).Elem()
}

func (i *PimStaticRpGroupList) ToPimStaticRpGroupListOutput() PimStaticRpGroupListOutput {
	return i.ToPimStaticRpGroupListOutputWithContext(context.Background())
}

func (i *PimStaticRpGroupList) ToPimStaticRpGroupListOutputWithContext(ctx context.Context) PimStaticRpGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PimStaticRpGroupListOutput)
}

func (i *PimStaticRpGroupList) ToOutput(ctx context.Context) pulumix.Output[*PimStaticRpGroupList] {
	return pulumix.Output[*PimStaticRpGroupList]{
		OutputState: i.ToPimStaticRpGroupListOutputWithContext(ctx).OutputState,
	}
}

// PimStaticRpGroupListArrayInput is an input type that accepts PimStaticRpGroupListArray and PimStaticRpGroupListArrayOutput values.
// You can construct a concrete instance of `PimStaticRpGroupListArrayInput` via:
//
//	PimStaticRpGroupListArray{ PimStaticRpGroupListArgs{...} }
type PimStaticRpGroupListArrayInput interface {
	pulumi.Input

	ToPimStaticRpGroupListArrayOutput() PimStaticRpGroupListArrayOutput
	ToPimStaticRpGroupListArrayOutputWithContext(context.Context) PimStaticRpGroupListArrayOutput
}

type PimStaticRpGroupListArray []PimStaticRpGroupListInput

func (PimStaticRpGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PimStaticRpGroupList)(nil)).Elem()
}

func (i PimStaticRpGroupListArray) ToPimStaticRpGroupListArrayOutput() PimStaticRpGroupListArrayOutput {
	return i.ToPimStaticRpGroupListArrayOutputWithContext(context.Background())
}

func (i PimStaticRpGroupListArray) ToPimStaticRpGroupListArrayOutputWithContext(ctx context.Context) PimStaticRpGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PimStaticRpGroupListArrayOutput)
}

func (i PimStaticRpGroupListArray) ToOutput(ctx context.Context) pulumix.Output[[]*PimStaticRpGroupList] {
	return pulumix.Output[[]*PimStaticRpGroupList]{
		OutputState: i.ToPimStaticRpGroupListArrayOutputWithContext(ctx).OutputState,
	}
}

// PimStaticRpGroupListMapInput is an input type that accepts PimStaticRpGroupListMap and PimStaticRpGroupListMapOutput values.
// You can construct a concrete instance of `PimStaticRpGroupListMapInput` via:
//
//	PimStaticRpGroupListMap{ "key": PimStaticRpGroupListArgs{...} }
type PimStaticRpGroupListMapInput interface {
	pulumi.Input

	ToPimStaticRpGroupListMapOutput() PimStaticRpGroupListMapOutput
	ToPimStaticRpGroupListMapOutputWithContext(context.Context) PimStaticRpGroupListMapOutput
}

type PimStaticRpGroupListMap map[string]PimStaticRpGroupListInput

func (PimStaticRpGroupListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PimStaticRpGroupList)(nil)).Elem()
}

func (i PimStaticRpGroupListMap) ToPimStaticRpGroupListMapOutput() PimStaticRpGroupListMapOutput {
	return i.ToPimStaticRpGroupListMapOutputWithContext(context.Background())
}

func (i PimStaticRpGroupListMap) ToPimStaticRpGroupListMapOutputWithContext(ctx context.Context) PimStaticRpGroupListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PimStaticRpGroupListMapOutput)
}

func (i PimStaticRpGroupListMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*PimStaticRpGroupList] {
	return pulumix.Output[map[string]*PimStaticRpGroupList]{
		OutputState: i.ToPimStaticRpGroupListMapOutputWithContext(ctx).OutputState,
	}
}

type PimStaticRpGroupListOutput struct{ *pulumi.OutputState }

func (PimStaticRpGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PimStaticRpGroupList)(nil)).Elem()
}

func (o PimStaticRpGroupListOutput) ToPimStaticRpGroupListOutput() PimStaticRpGroupListOutput {
	return o
}

func (o PimStaticRpGroupListOutput) ToPimStaticRpGroupListOutputWithContext(ctx context.Context) PimStaticRpGroupListOutput {
	return o
}

func (o PimStaticRpGroupListOutput) ToOutput(ctx context.Context) pulumix.Output[*PimStaticRpGroupList] {
	return pulumix.Output[*PimStaticRpGroupList]{
		OutputState: o.OutputState,
	}
}

// Group list address information.
func (o PimStaticRpGroupListOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *PimStaticRpGroupList) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

// Flag to treat Group Ranges as BiDir. - Default value: `false`
func (o PimStaticRpGroupListOutput) Bidir() pulumi.BoolOutput {
	return o.ApplyT(func(v *PimStaticRpGroupList) pulumi.BoolOutput { return v.Bidir }).(pulumi.BoolOutput)
}

// A device name from the provider configuration.
func (o PimStaticRpGroupListOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PimStaticRpGroupList) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// Flag to override RP preference to use Static over Dynamic RP. - Default value: `false`
func (o PimStaticRpGroupListOutput) Override() pulumi.BoolOutput {
	return o.ApplyT(func(v *PimStaticRpGroupList) pulumi.BoolOutput { return v.Override }).(pulumi.BoolOutput)
}

// RP address.
func (o PimStaticRpGroupListOutput) RpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *PimStaticRpGroupList) pulumi.StringOutput { return v.RpAddress }).(pulumi.StringOutput)
}

// VRF name.
func (o PimStaticRpGroupListOutput) VrfName() pulumi.StringOutput {
	return o.ApplyT(func(v *PimStaticRpGroupList) pulumi.StringOutput { return v.VrfName }).(pulumi.StringOutput)
}

type PimStaticRpGroupListArrayOutput struct{ *pulumi.OutputState }

func (PimStaticRpGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PimStaticRpGroupList)(nil)).Elem()
}

func (o PimStaticRpGroupListArrayOutput) ToPimStaticRpGroupListArrayOutput() PimStaticRpGroupListArrayOutput {
	return o
}

func (o PimStaticRpGroupListArrayOutput) ToPimStaticRpGroupListArrayOutputWithContext(ctx context.Context) PimStaticRpGroupListArrayOutput {
	return o
}

func (o PimStaticRpGroupListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*PimStaticRpGroupList] {
	return pulumix.Output[[]*PimStaticRpGroupList]{
		OutputState: o.OutputState,
	}
}

func (o PimStaticRpGroupListArrayOutput) Index(i pulumi.IntInput) PimStaticRpGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PimStaticRpGroupList {
		return vs[0].([]*PimStaticRpGroupList)[vs[1].(int)]
	}).(PimStaticRpGroupListOutput)
}

type PimStaticRpGroupListMapOutput struct{ *pulumi.OutputState }

func (PimStaticRpGroupListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PimStaticRpGroupList)(nil)).Elem()
}

func (o PimStaticRpGroupListMapOutput) ToPimStaticRpGroupListMapOutput() PimStaticRpGroupListMapOutput {
	return o
}

func (o PimStaticRpGroupListMapOutput) ToPimStaticRpGroupListMapOutputWithContext(ctx context.Context) PimStaticRpGroupListMapOutput {
	return o
}

func (o PimStaticRpGroupListMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*PimStaticRpGroupList] {
	return pulumix.Output[map[string]*PimStaticRpGroupList]{
		OutputState: o.OutputState,
	}
}

func (o PimStaticRpGroupListMapOutput) MapIndex(k pulumi.StringInput) PimStaticRpGroupListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PimStaticRpGroupList {
		return vs[0].(map[string]*PimStaticRpGroupList)[vs[1].(string)]
	}).(PimStaticRpGroupListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PimStaticRpGroupListInput)(nil)).Elem(), &PimStaticRpGroupList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PimStaticRpGroupListArrayInput)(nil)).Elem(), PimStaticRpGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PimStaticRpGroupListMapInput)(nil)).Elem(), PimStaticRpGroupListMap{})
	pulumi.RegisterOutputType(PimStaticRpGroupListOutput{})
	pulumi.RegisterOutputType(PimStaticRpGroupListArrayOutput{})
	pulumi.RegisterOutputType(PimStaticRpGroupListMapOutput{})
}
