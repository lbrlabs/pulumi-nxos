// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source can read the PIM Static RP group list configuration.
//
// - API Documentation: [pimRPGrpList](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:RPGrpList/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nxos.LookupPimStaticRpGroupList(ctx, &nxos.LookupPimStaticRpGroupListArgs{
//				Address:   "224.0.0.0/4",
//				RpAddress: "1.2.3.4",
//				VrfName:   "default",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPimStaticRpGroupList(ctx *pulumi.Context, args *LookupPimStaticRpGroupListArgs, opts ...pulumi.InvokeOption) (*LookupPimStaticRpGroupListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPimStaticRpGroupListResult
	err := ctx.Invoke("nxos:index/getPimStaticRpGroupList:getPimStaticRpGroupList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPimStaticRpGroupList.
type LookupPimStaticRpGroupListArgs struct {
	// Group list address information.
	Address string `pulumi:"address"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// RP address.
	RpAddress string `pulumi:"rpAddress"`
	// VRF name.
	VrfName string `pulumi:"vrfName"`
}

// A collection of values returned by getPimStaticRpGroupList.
type LookupPimStaticRpGroupListResult struct {
	// Group list address information.
	Address string `pulumi:"address"`
	// Flag to treat Group Ranges as BiDir.
	Bidir bool `pulumi:"bidir"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// The distinguished name of the object.
	Id string `pulumi:"id"`
	// Flag to override RP preference to use Static over Dynamic RP.
	Override bool `pulumi:"override"`
	// RP address.
	RpAddress string `pulumi:"rpAddress"`
	// VRF name.
	VrfName string `pulumi:"vrfName"`
}

func LookupPimStaticRpGroupListOutput(ctx *pulumi.Context, args LookupPimStaticRpGroupListOutputArgs, opts ...pulumi.InvokeOption) LookupPimStaticRpGroupListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPimStaticRpGroupListResult, error) {
			args := v.(LookupPimStaticRpGroupListArgs)
			r, err := LookupPimStaticRpGroupList(ctx, &args, opts...)
			var s LookupPimStaticRpGroupListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPimStaticRpGroupListResultOutput)
}

// A collection of arguments for invoking getPimStaticRpGroupList.
type LookupPimStaticRpGroupListOutputArgs struct {
	// Group list address information.
	Address pulumi.StringInput `pulumi:"address"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// RP address.
	RpAddress pulumi.StringInput `pulumi:"rpAddress"`
	// VRF name.
	VrfName pulumi.StringInput `pulumi:"vrfName"`
}

func (LookupPimStaticRpGroupListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPimStaticRpGroupListArgs)(nil)).Elem()
}

// A collection of values returned by getPimStaticRpGroupList.
type LookupPimStaticRpGroupListResultOutput struct{ *pulumi.OutputState }

func (LookupPimStaticRpGroupListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPimStaticRpGroupListResult)(nil)).Elem()
}

func (o LookupPimStaticRpGroupListResultOutput) ToLookupPimStaticRpGroupListResultOutput() LookupPimStaticRpGroupListResultOutput {
	return o
}

func (o LookupPimStaticRpGroupListResultOutput) ToLookupPimStaticRpGroupListResultOutputWithContext(ctx context.Context) LookupPimStaticRpGroupListResultOutput {
	return o
}

func (o LookupPimStaticRpGroupListResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupPimStaticRpGroupListResult] {
	return pulumix.Output[LookupPimStaticRpGroupListResult]{
		OutputState: o.OutputState,
	}
}

// Group list address information.
func (o LookupPimStaticRpGroupListResultOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPimStaticRpGroupListResult) string { return v.Address }).(pulumi.StringOutput)
}

// Flag to treat Group Ranges as BiDir.
func (o LookupPimStaticRpGroupListResultOutput) Bidir() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPimStaticRpGroupListResult) bool { return v.Bidir }).(pulumi.BoolOutput)
}

// A device name from the provider configuration.
func (o LookupPimStaticRpGroupListResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPimStaticRpGroupListResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// The distinguished name of the object.
func (o LookupPimStaticRpGroupListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPimStaticRpGroupListResult) string { return v.Id }).(pulumi.StringOutput)
}

// Flag to override RP preference to use Static over Dynamic RP.
func (o LookupPimStaticRpGroupListResultOutput) Override() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPimStaticRpGroupListResult) bool { return v.Override }).(pulumi.BoolOutput)
}

// RP address.
func (o LookupPimStaticRpGroupListResultOutput) RpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPimStaticRpGroupListResult) string { return v.RpAddress }).(pulumi.StringOutput)
}

// VRF name.
func (o LookupPimStaticRpGroupListResultOutput) VrfName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPimStaticRpGroupListResult) string { return v.VrfName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPimStaticRpGroupListResultOutput{})
}
