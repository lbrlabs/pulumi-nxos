// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source can read a port-channel interface VRF association.
//
// - API Documentation: [nwRtVrfMbr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/nw:RtVrfMbr/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nxos.LookupPortChannelInterfaceVrf(ctx, &nxos.LookupPortChannelInterfaceVrfArgs{
//				InterfaceId: "po1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPortChannelInterfaceVrf(ctx *pulumi.Context, args *LookupPortChannelInterfaceVrfArgs, opts ...pulumi.InvokeOption) (*LookupPortChannelInterfaceVrfResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPortChannelInterfaceVrfResult
	err := ctx.Invoke("nxos:index/getPortChannelInterfaceVrf:getPortChannelInterfaceVrf", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPortChannelInterfaceVrf.
type LookupPortChannelInterfaceVrfArgs struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Must match first field in the output of `show intf brief`. Example: `po1`.
	InterfaceId string `pulumi:"interfaceId"`
}

// A collection of values returned by getPortChannelInterfaceVrf.
type LookupPortChannelInterfaceVrfResult struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// The distinguished name of the object.
	Id string `pulumi:"id"`
	// Must match first field in the output of `show intf brief`. Example: `po1`.
	InterfaceId string `pulumi:"interfaceId"`
	// DN of VRF. For example: `sys/inst-VRF1`.
	VrfDn string `pulumi:"vrfDn"`
}

func LookupPortChannelInterfaceVrfOutput(ctx *pulumi.Context, args LookupPortChannelInterfaceVrfOutputArgs, opts ...pulumi.InvokeOption) LookupPortChannelInterfaceVrfResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPortChannelInterfaceVrfResult, error) {
			args := v.(LookupPortChannelInterfaceVrfArgs)
			r, err := LookupPortChannelInterfaceVrf(ctx, &args, opts...)
			var s LookupPortChannelInterfaceVrfResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPortChannelInterfaceVrfResultOutput)
}

// A collection of arguments for invoking getPortChannelInterfaceVrf.
type LookupPortChannelInterfaceVrfOutputArgs struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// Must match first field in the output of `show intf brief`. Example: `po1`.
	InterfaceId pulumi.StringInput `pulumi:"interfaceId"`
}

func (LookupPortChannelInterfaceVrfOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPortChannelInterfaceVrfArgs)(nil)).Elem()
}

// A collection of values returned by getPortChannelInterfaceVrf.
type LookupPortChannelInterfaceVrfResultOutput struct{ *pulumi.OutputState }

func (LookupPortChannelInterfaceVrfResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPortChannelInterfaceVrfResult)(nil)).Elem()
}

func (o LookupPortChannelInterfaceVrfResultOutput) ToLookupPortChannelInterfaceVrfResultOutput() LookupPortChannelInterfaceVrfResultOutput {
	return o
}

func (o LookupPortChannelInterfaceVrfResultOutput) ToLookupPortChannelInterfaceVrfResultOutputWithContext(ctx context.Context) LookupPortChannelInterfaceVrfResultOutput {
	return o
}

func (o LookupPortChannelInterfaceVrfResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupPortChannelInterfaceVrfResult] {
	return pulumix.Output[LookupPortChannelInterfaceVrfResult]{
		OutputState: o.OutputState,
	}
}

// A device name from the provider configuration.
func (o LookupPortChannelInterfaceVrfResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPortChannelInterfaceVrfResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// The distinguished name of the object.
func (o LookupPortChannelInterfaceVrfResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPortChannelInterfaceVrfResult) string { return v.Id }).(pulumi.StringOutput)
}

// Must match first field in the output of `show intf brief`. Example: `po1`.
func (o LookupPortChannelInterfaceVrfResultOutput) InterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPortChannelInterfaceVrfResult) string { return v.InterfaceId }).(pulumi.StringOutput)
}

// DN of VRF. For example: `sys/inst-VRF1`.
func (o LookupPortChannelInterfaceVrfResultOutput) VrfDn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPortChannelInterfaceVrfResult) string { return v.VrfDn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPortChannelInterfaceVrfResultOutput{})
}
