// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source can read the PIM interface configuration.
//
// - API Documentation: [pimIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:If/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nxos.LookupPimInterface(ctx, &nxos.LookupPimInterfaceArgs{
//				InterfaceId: "eth1/10",
//				VrfName:     "default",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPimInterface(ctx *pulumi.Context, args *LookupPimInterfaceArgs, opts ...pulumi.InvokeOption) (*LookupPimInterfaceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPimInterfaceResult
	err := ctx.Invoke("nxos:index/getPimInterface:getPimInterface", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPimInterface.
type LookupPimInterfaceArgs struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	InterfaceId string `pulumi:"interfaceId"`
	// VRF name.
	VrfName string `pulumi:"vrfName"`
}

// A collection of values returned by getPimInterface.
type LookupPimInterfaceResult struct {
	// Administrative state.
	AdminState string `pulumi:"adminState"`
	// BFD.
	Bfd string `pulumi:"bfd"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Designated Router priority level.
	DrPriority int `pulumi:"drPriority"`
	// The distinguished name of the object.
	Id string `pulumi:"id"`
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	InterfaceId string `pulumi:"interfaceId"`
	// Passive interface.
	Passive bool `pulumi:"passive"`
	// Sparse mode.
	SparseMode bool `pulumi:"sparseMode"`
	// VRF name.
	VrfName string `pulumi:"vrfName"`
}

func LookupPimInterfaceOutput(ctx *pulumi.Context, args LookupPimInterfaceOutputArgs, opts ...pulumi.InvokeOption) LookupPimInterfaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPimInterfaceResult, error) {
			args := v.(LookupPimInterfaceArgs)
			r, err := LookupPimInterface(ctx, &args, opts...)
			var s LookupPimInterfaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPimInterfaceResultOutput)
}

// A collection of arguments for invoking getPimInterface.
type LookupPimInterfaceOutputArgs struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
	InterfaceId pulumi.StringInput `pulumi:"interfaceId"`
	// VRF name.
	VrfName pulumi.StringInput `pulumi:"vrfName"`
}

func (LookupPimInterfaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPimInterfaceArgs)(nil)).Elem()
}

// A collection of values returned by getPimInterface.
type LookupPimInterfaceResultOutput struct{ *pulumi.OutputState }

func (LookupPimInterfaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPimInterfaceResult)(nil)).Elem()
}

func (o LookupPimInterfaceResultOutput) ToLookupPimInterfaceResultOutput() LookupPimInterfaceResultOutput {
	return o
}

func (o LookupPimInterfaceResultOutput) ToLookupPimInterfaceResultOutputWithContext(ctx context.Context) LookupPimInterfaceResultOutput {
	return o
}

func (o LookupPimInterfaceResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupPimInterfaceResult] {
	return pulumix.Output[LookupPimInterfaceResult]{
		OutputState: o.OutputState,
	}
}

// Administrative state.
func (o LookupPimInterfaceResultOutput) AdminState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) string { return v.AdminState }).(pulumi.StringOutput)
}

// BFD.
func (o LookupPimInterfaceResultOutput) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) string { return v.Bfd }).(pulumi.StringOutput)
}

// A device name from the provider configuration.
func (o LookupPimInterfaceResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// Designated Router priority level.
func (o LookupPimInterfaceResultOutput) DrPriority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) int { return v.DrPriority }).(pulumi.IntOutput)
}

// The distinguished name of the object.
func (o LookupPimInterfaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Must match first field in the output of `show intf brief`. Example: `eth1/1`.
func (o LookupPimInterfaceResultOutput) InterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) string { return v.InterfaceId }).(pulumi.StringOutput)
}

// Passive interface.
func (o LookupPimInterfaceResultOutput) Passive() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) bool { return v.Passive }).(pulumi.BoolOutput)
}

// Sparse mode.
func (o LookupPimInterfaceResultOutput) SparseMode() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) bool { return v.SparseMode }).(pulumi.BoolOutput)
}

// VRF name.
func (o LookupPimInterfaceResultOutput) VrfName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPimInterfaceResult) string { return v.VrfName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPimInterfaceResultOutput{})
}
