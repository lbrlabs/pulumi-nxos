// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source can read the OSPF Area configuration.
//
// - API Documentation: [ospfArea](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:Area/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nxos.LookupOspfArea(ctx, &nxos.LookupOspfAreaArgs{
//				AreaId:       "0.0.0.10",
//				InstanceName: "OSPF1",
//				VrfName:      "VRF1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupOspfArea(ctx *pulumi.Context, args *LookupOspfAreaArgs, opts ...pulumi.InvokeOption) (*LookupOspfAreaResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOspfAreaResult
	err := ctx.Invoke("nxos:index/getOspfArea:getOspfArea", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOspfArea.
type LookupOspfAreaArgs struct {
	// Area identifier to which a network or interface belongs in IPv4 address format.
	AreaId string `pulumi:"areaId"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// OSPF instance name.
	InstanceName string `pulumi:"instanceName"`
	// VRF name.
	VrfName string `pulumi:"vrfName"`
}

// A collection of values returned by getOspfArea.
type LookupOspfAreaResult struct {
	// Area identifier to which a network or interface belongs in IPv4 address format.
	AreaId string `pulumi:"areaId"`
	// Authentication type.
	AuthenticationType string `pulumi:"authenticationType"`
	// Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types.
	Cost int `pulumi:"cost"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// The distinguished name of the object.
	Id string `pulumi:"id"`
	// OSPF instance name.
	InstanceName string `pulumi:"instanceName"`
	// Area type.
	Type string `pulumi:"type"`
	// VRF name.
	VrfName string `pulumi:"vrfName"`
}

func LookupOspfAreaOutput(ctx *pulumi.Context, args LookupOspfAreaOutputArgs, opts ...pulumi.InvokeOption) LookupOspfAreaResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOspfAreaResult, error) {
			args := v.(LookupOspfAreaArgs)
			r, err := LookupOspfArea(ctx, &args, opts...)
			var s LookupOspfAreaResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOspfAreaResultOutput)
}

// A collection of arguments for invoking getOspfArea.
type LookupOspfAreaOutputArgs struct {
	// Area identifier to which a network or interface belongs in IPv4 address format.
	AreaId pulumi.StringInput `pulumi:"areaId"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// OSPF instance name.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// VRF name.
	VrfName pulumi.StringInput `pulumi:"vrfName"`
}

func (LookupOspfAreaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOspfAreaArgs)(nil)).Elem()
}

// A collection of values returned by getOspfArea.
type LookupOspfAreaResultOutput struct{ *pulumi.OutputState }

func (LookupOspfAreaResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOspfAreaResult)(nil)).Elem()
}

func (o LookupOspfAreaResultOutput) ToLookupOspfAreaResultOutput() LookupOspfAreaResultOutput {
	return o
}

func (o LookupOspfAreaResultOutput) ToLookupOspfAreaResultOutputWithContext(ctx context.Context) LookupOspfAreaResultOutput {
	return o
}

func (o LookupOspfAreaResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupOspfAreaResult] {
	return pulumix.Output[LookupOspfAreaResult]{
		OutputState: o.OutputState,
	}
}

// Area identifier to which a network or interface belongs in IPv4 address format.
func (o LookupOspfAreaResultOutput) AreaId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOspfAreaResult) string { return v.AreaId }).(pulumi.StringOutput)
}

// Authentication type.
func (o LookupOspfAreaResultOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOspfAreaResult) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types.
func (o LookupOspfAreaResultOutput) Cost() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOspfAreaResult) int { return v.Cost }).(pulumi.IntOutput)
}

// A device name from the provider configuration.
func (o LookupOspfAreaResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOspfAreaResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// The distinguished name of the object.
func (o LookupOspfAreaResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOspfAreaResult) string { return v.Id }).(pulumi.StringOutput)
}

// OSPF instance name.
func (o LookupOspfAreaResultOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOspfAreaResult) string { return v.InstanceName }).(pulumi.StringOutput)
}

// Area type.
func (o LookupOspfAreaResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOspfAreaResult) string { return v.Type }).(pulumi.StringOutput)
}

// VRF name.
func (o LookupOspfAreaResultOutput) VrfName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOspfAreaResult) string { return v.VrfName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOspfAreaResultOutput{})
}
