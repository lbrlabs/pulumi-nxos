// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source can read the default QoS policy map match class map police configuration.
//
// - API Documentation: [ipqosPolice](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:Police/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nxos.LookupDefaultQosPolicyMapMatchClassMapPolice(ctx, &nxos.LookupDefaultQosPolicyMapMatchClassMapPoliceArgs{
//				ClassMapName:  "Voice",
//				PolicyMapName: "PM1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDefaultQosPolicyMapMatchClassMapPolice(ctx *pulumi.Context, args *LookupDefaultQosPolicyMapMatchClassMapPoliceArgs, opts ...pulumi.InvokeOption) (*LookupDefaultQosPolicyMapMatchClassMapPoliceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDefaultQosPolicyMapMatchClassMapPoliceResult
	err := ctx.Invoke("nxos:index/getDefaultQosPolicyMapMatchClassMapPolice:getDefaultQosPolicyMapMatchClassMapPolice", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDefaultQosPolicyMapMatchClassMapPolice.
type LookupDefaultQosPolicyMapMatchClassMapPoliceArgs struct {
	// Class map name.
	ClassMapName string `pulumi:"classMapName"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Policy map name.
	PolicyMapName string `pulumi:"policyMapName"`
}

// A collection of values returned by getDefaultQosPolicyMapMatchClassMapPolice.
type LookupDefaultQosPolicyMapMatchClassMapPoliceResult struct {
	// CIR burst rate.
	BcRate int `pulumi:"bcRate"`
	// CIR burst rate unit.
	BcUnit string `pulumi:"bcUnit"`
	// PIR burst rate.
	BeRate int `pulumi:"beRate"`
	// PIR burst rate unit.
	BeUnit string `pulumi:"beUnit"`
	// CIR rate.
	CirRate int `pulumi:"cirRate"`
	// CIR rate unit.
	CirUnit string `pulumi:"cirUnit"`
	// Class map name.
	ClassMapName string `pulumi:"classMapName"`
	// Conform action.
	ConformAction string `pulumi:"conformAction"`
	// Set CoS for conforming traffic.
	ConformSetCos int `pulumi:"conformSetCos"`
	// Set DSCP for conforming traffic.
	ConformSetDscp int `pulumi:"conformSetDscp"`
	// Set precedence for conforming traffic.
	ConformSetPrecedence string `pulumi:"conformSetPrecedence"`
	// Set qos-group for conforming traffic.
	ConformSetQosGroup int `pulumi:"conformSetQosGroup"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Exceed action.
	ExceedAction string `pulumi:"exceedAction"`
	// Set CoS for exceeding traffic.
	ExceedSetCos int `pulumi:"exceedSetCos"`
	// Set DSCP for exceeding traffic.
	ExceedSetDscp int `pulumi:"exceedSetDscp"`
	// Set precedence for exceeding traffic.
	ExceedSetPrecedence string `pulumi:"exceedSetPrecedence"`
	// Set qos-group for exceeding traffic.
	ExceedSetQosGroup int `pulumi:"exceedSetQosGroup"`
	// The distinguished name of the object.
	Id string `pulumi:"id"`
	// PIR rate.
	PirRate int `pulumi:"pirRate"`
	// PIR rate unit.
	PirUnit string `pulumi:"pirUnit"`
	// Policy map name.
	PolicyMapName string `pulumi:"policyMapName"`
	// Violate action.
	ViolateAction string `pulumi:"violateAction"`
	// Set CoS for violating traffic.
	ViolateSetCos int `pulumi:"violateSetCos"`
	// Set DSCP for violating traffic.
	ViolateSetDscp int `pulumi:"violateSetDscp"`
	// Set precedence for violating traffic.
	ViolateSetPrecedence string `pulumi:"violateSetPrecedence"`
	// Set qos-group for violating traffic.
	ViolateSetQosGroup int `pulumi:"violateSetQosGroup"`
}

func LookupDefaultQosPolicyMapMatchClassMapPoliceOutput(ctx *pulumi.Context, args LookupDefaultQosPolicyMapMatchClassMapPoliceOutputArgs, opts ...pulumi.InvokeOption) LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDefaultQosPolicyMapMatchClassMapPoliceResult, error) {
			args := v.(LookupDefaultQosPolicyMapMatchClassMapPoliceArgs)
			r, err := LookupDefaultQosPolicyMapMatchClassMapPolice(ctx, &args, opts...)
			var s LookupDefaultQosPolicyMapMatchClassMapPoliceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput)
}

// A collection of arguments for invoking getDefaultQosPolicyMapMatchClassMapPolice.
type LookupDefaultQosPolicyMapMatchClassMapPoliceOutputArgs struct {
	// Class map name.
	ClassMapName pulumi.StringInput `pulumi:"classMapName"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// Policy map name.
	PolicyMapName pulumi.StringInput `pulumi:"policyMapName"`
}

func (LookupDefaultQosPolicyMapMatchClassMapPoliceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDefaultQosPolicyMapMatchClassMapPoliceArgs)(nil)).Elem()
}

// A collection of values returned by getDefaultQosPolicyMapMatchClassMapPolice.
type LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput struct{ *pulumi.OutputState }

func (LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDefaultQosPolicyMapMatchClassMapPoliceResult)(nil)).Elem()
}

func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ToLookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput() LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput {
	return o
}

func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ToLookupDefaultQosPolicyMapMatchClassMapPoliceResultOutputWithContext(ctx context.Context) LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput {
	return o
}

func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupDefaultQosPolicyMapMatchClassMapPoliceResult] {
	return pulumix.Output[LookupDefaultQosPolicyMapMatchClassMapPoliceResult]{
		OutputState: o.OutputState,
	}
}

// CIR burst rate.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) BcRate() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) int { return v.BcRate }).(pulumi.IntOutput)
}

// CIR burst rate unit.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) BcUnit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) string { return v.BcUnit }).(pulumi.StringOutput)
}

// PIR burst rate.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) BeRate() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) int { return v.BeRate }).(pulumi.IntOutput)
}

// PIR burst rate unit.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) BeUnit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) string { return v.BeUnit }).(pulumi.StringOutput)
}

// CIR rate.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) CirRate() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) int { return v.CirRate }).(pulumi.IntOutput)
}

// CIR rate unit.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) CirUnit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) string { return v.CirUnit }).(pulumi.StringOutput)
}

// Class map name.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ClassMapName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) string { return v.ClassMapName }).(pulumi.StringOutput)
}

// Conform action.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ConformAction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) string { return v.ConformAction }).(pulumi.StringOutput)
}

// Set CoS for conforming traffic.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ConformSetCos() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) int { return v.ConformSetCos }).(pulumi.IntOutput)
}

// Set DSCP for conforming traffic.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ConformSetDscp() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) int { return v.ConformSetDscp }).(pulumi.IntOutput)
}

// Set precedence for conforming traffic.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ConformSetPrecedence() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) string { return v.ConformSetPrecedence }).(pulumi.StringOutput)
}

// Set qos-group for conforming traffic.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ConformSetQosGroup() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) int { return v.ConformSetQosGroup }).(pulumi.IntOutput)
}

// A device name from the provider configuration.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// Exceed action.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ExceedAction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) string { return v.ExceedAction }).(pulumi.StringOutput)
}

// Set CoS for exceeding traffic.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ExceedSetCos() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) int { return v.ExceedSetCos }).(pulumi.IntOutput)
}

// Set DSCP for exceeding traffic.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ExceedSetDscp() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) int { return v.ExceedSetDscp }).(pulumi.IntOutput)
}

// Set precedence for exceeding traffic.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ExceedSetPrecedence() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) string { return v.ExceedSetPrecedence }).(pulumi.StringOutput)
}

// Set qos-group for exceeding traffic.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ExceedSetQosGroup() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) int { return v.ExceedSetQosGroup }).(pulumi.IntOutput)
}

// The distinguished name of the object.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) string { return v.Id }).(pulumi.StringOutput)
}

// PIR rate.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) PirRate() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) int { return v.PirRate }).(pulumi.IntOutput)
}

// PIR rate unit.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) PirUnit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) string { return v.PirUnit }).(pulumi.StringOutput)
}

// Policy map name.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) PolicyMapName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) string { return v.PolicyMapName }).(pulumi.StringOutput)
}

// Violate action.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ViolateAction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) string { return v.ViolateAction }).(pulumi.StringOutput)
}

// Set CoS for violating traffic.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ViolateSetCos() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) int { return v.ViolateSetCos }).(pulumi.IntOutput)
}

// Set DSCP for violating traffic.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ViolateSetDscp() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) int { return v.ViolateSetDscp }).(pulumi.IntOutput)
}

// Set precedence for violating traffic.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ViolateSetPrecedence() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) string { return v.ViolateSetPrecedence }).(pulumi.StringOutput)
}

// Set qos-group for violating traffic.
func (o LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput) ViolateSetQosGroup() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDefaultQosPolicyMapMatchClassMapPoliceResult) int { return v.ViolateSetQosGroup }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDefaultQosPolicyMapMatchClassMapPoliceResultOutput{})
}
