// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource can manage the default QoS class map DSCP configuration.
//
// - API Documentation: [ipqosDscp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:Dscp/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nxos.NewDefaultQosClassMapDscp(ctx, "example", &nxos.DefaultQosClassMapDscpArgs{
//				ClassMapName: pulumi.String("Voice"),
//				Value:        pulumi.String("ef"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import nxos:index/defaultQosClassMapDscp:DefaultQosClassMapDscp example "sys/ipqos/dflt/c/name-[Voice]/dscp-[ef]"
//
// ```
type DefaultQosClassMapDscp struct {
	pulumi.CustomResourceState

	// Class map name.
	ClassMapName pulumi.StringOutput `pulumi:"classMapName"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// DSCP value. - Default value: `0`
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewDefaultQosClassMapDscp registers a new resource with the given unique name, arguments, and options.
func NewDefaultQosClassMapDscp(ctx *pulumi.Context,
	name string, args *DefaultQosClassMapDscpArgs, opts ...pulumi.ResourceOption) (*DefaultQosClassMapDscp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClassMapName == nil {
		return nil, errors.New("invalid value for required argument 'ClassMapName'")
	}
	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DefaultQosClassMapDscp
	err := ctx.RegisterResource("nxos:index/defaultQosClassMapDscp:DefaultQosClassMapDscp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDefaultQosClassMapDscp gets an existing DefaultQosClassMapDscp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDefaultQosClassMapDscp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DefaultQosClassMapDscpState, opts ...pulumi.ResourceOption) (*DefaultQosClassMapDscp, error) {
	var resource DefaultQosClassMapDscp
	err := ctx.ReadResource("nxos:index/defaultQosClassMapDscp:DefaultQosClassMapDscp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DefaultQosClassMapDscp resources.
type defaultQosClassMapDscpState struct {
	// Class map name.
	ClassMapName *string `pulumi:"classMapName"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// DSCP value. - Default value: `0`
	Value *string `pulumi:"value"`
}

type DefaultQosClassMapDscpState struct {
	// Class map name.
	ClassMapName pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// DSCP value. - Default value: `0`
	Value pulumi.StringPtrInput
}

func (DefaultQosClassMapDscpState) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultQosClassMapDscpState)(nil)).Elem()
}

type defaultQosClassMapDscpArgs struct {
	// Class map name.
	ClassMapName string `pulumi:"classMapName"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// DSCP value. - Default value: `0`
	Value string `pulumi:"value"`
}

// The set of arguments for constructing a DefaultQosClassMapDscp resource.
type DefaultQosClassMapDscpArgs struct {
	// Class map name.
	ClassMapName pulumi.StringInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// DSCP value. - Default value: `0`
	Value pulumi.StringInput
}

func (DefaultQosClassMapDscpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultQosClassMapDscpArgs)(nil)).Elem()
}

type DefaultQosClassMapDscpInput interface {
	pulumi.Input

	ToDefaultQosClassMapDscpOutput() DefaultQosClassMapDscpOutput
	ToDefaultQosClassMapDscpOutputWithContext(ctx context.Context) DefaultQosClassMapDscpOutput
}

func (*DefaultQosClassMapDscp) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultQosClassMapDscp)(nil)).Elem()
}

func (i *DefaultQosClassMapDscp) ToDefaultQosClassMapDscpOutput() DefaultQosClassMapDscpOutput {
	return i.ToDefaultQosClassMapDscpOutputWithContext(context.Background())
}

func (i *DefaultQosClassMapDscp) ToDefaultQosClassMapDscpOutputWithContext(ctx context.Context) DefaultQosClassMapDscpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultQosClassMapDscpOutput)
}

func (i *DefaultQosClassMapDscp) ToOutput(ctx context.Context) pulumix.Output[*DefaultQosClassMapDscp] {
	return pulumix.Output[*DefaultQosClassMapDscp]{
		OutputState: i.ToDefaultQosClassMapDscpOutputWithContext(ctx).OutputState,
	}
}

// DefaultQosClassMapDscpArrayInput is an input type that accepts DefaultQosClassMapDscpArray and DefaultQosClassMapDscpArrayOutput values.
// You can construct a concrete instance of `DefaultQosClassMapDscpArrayInput` via:
//
//	DefaultQosClassMapDscpArray{ DefaultQosClassMapDscpArgs{...} }
type DefaultQosClassMapDscpArrayInput interface {
	pulumi.Input

	ToDefaultQosClassMapDscpArrayOutput() DefaultQosClassMapDscpArrayOutput
	ToDefaultQosClassMapDscpArrayOutputWithContext(context.Context) DefaultQosClassMapDscpArrayOutput
}

type DefaultQosClassMapDscpArray []DefaultQosClassMapDscpInput

func (DefaultQosClassMapDscpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DefaultQosClassMapDscp)(nil)).Elem()
}

func (i DefaultQosClassMapDscpArray) ToDefaultQosClassMapDscpArrayOutput() DefaultQosClassMapDscpArrayOutput {
	return i.ToDefaultQosClassMapDscpArrayOutputWithContext(context.Background())
}

func (i DefaultQosClassMapDscpArray) ToDefaultQosClassMapDscpArrayOutputWithContext(ctx context.Context) DefaultQosClassMapDscpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultQosClassMapDscpArrayOutput)
}

func (i DefaultQosClassMapDscpArray) ToOutput(ctx context.Context) pulumix.Output[[]*DefaultQosClassMapDscp] {
	return pulumix.Output[[]*DefaultQosClassMapDscp]{
		OutputState: i.ToDefaultQosClassMapDscpArrayOutputWithContext(ctx).OutputState,
	}
}

// DefaultQosClassMapDscpMapInput is an input type that accepts DefaultQosClassMapDscpMap and DefaultQosClassMapDscpMapOutput values.
// You can construct a concrete instance of `DefaultQosClassMapDscpMapInput` via:
//
//	DefaultQosClassMapDscpMap{ "key": DefaultQosClassMapDscpArgs{...} }
type DefaultQosClassMapDscpMapInput interface {
	pulumi.Input

	ToDefaultQosClassMapDscpMapOutput() DefaultQosClassMapDscpMapOutput
	ToDefaultQosClassMapDscpMapOutputWithContext(context.Context) DefaultQosClassMapDscpMapOutput
}

type DefaultQosClassMapDscpMap map[string]DefaultQosClassMapDscpInput

func (DefaultQosClassMapDscpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DefaultQosClassMapDscp)(nil)).Elem()
}

func (i DefaultQosClassMapDscpMap) ToDefaultQosClassMapDscpMapOutput() DefaultQosClassMapDscpMapOutput {
	return i.ToDefaultQosClassMapDscpMapOutputWithContext(context.Background())
}

func (i DefaultQosClassMapDscpMap) ToDefaultQosClassMapDscpMapOutputWithContext(ctx context.Context) DefaultQosClassMapDscpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultQosClassMapDscpMapOutput)
}

func (i DefaultQosClassMapDscpMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*DefaultQosClassMapDscp] {
	return pulumix.Output[map[string]*DefaultQosClassMapDscp]{
		OutputState: i.ToDefaultQosClassMapDscpMapOutputWithContext(ctx).OutputState,
	}
}

type DefaultQosClassMapDscpOutput struct{ *pulumi.OutputState }

func (DefaultQosClassMapDscpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultQosClassMapDscp)(nil)).Elem()
}

func (o DefaultQosClassMapDscpOutput) ToDefaultQosClassMapDscpOutput() DefaultQosClassMapDscpOutput {
	return o
}

func (o DefaultQosClassMapDscpOutput) ToDefaultQosClassMapDscpOutputWithContext(ctx context.Context) DefaultQosClassMapDscpOutput {
	return o
}

func (o DefaultQosClassMapDscpOutput) ToOutput(ctx context.Context) pulumix.Output[*DefaultQosClassMapDscp] {
	return pulumix.Output[*DefaultQosClassMapDscp]{
		OutputState: o.OutputState,
	}
}

// Class map name.
func (o DefaultQosClassMapDscpOutput) ClassMapName() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultQosClassMapDscp) pulumi.StringOutput { return v.ClassMapName }).(pulumi.StringOutput)
}

// A device name from the provider configuration.
func (o DefaultQosClassMapDscpOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DefaultQosClassMapDscp) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// DSCP value. - Default value: `0`
func (o DefaultQosClassMapDscpOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultQosClassMapDscp) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

type DefaultQosClassMapDscpArrayOutput struct{ *pulumi.OutputState }

func (DefaultQosClassMapDscpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DefaultQosClassMapDscp)(nil)).Elem()
}

func (o DefaultQosClassMapDscpArrayOutput) ToDefaultQosClassMapDscpArrayOutput() DefaultQosClassMapDscpArrayOutput {
	return o
}

func (o DefaultQosClassMapDscpArrayOutput) ToDefaultQosClassMapDscpArrayOutputWithContext(ctx context.Context) DefaultQosClassMapDscpArrayOutput {
	return o
}

func (o DefaultQosClassMapDscpArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*DefaultQosClassMapDscp] {
	return pulumix.Output[[]*DefaultQosClassMapDscp]{
		OutputState: o.OutputState,
	}
}

func (o DefaultQosClassMapDscpArrayOutput) Index(i pulumi.IntInput) DefaultQosClassMapDscpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DefaultQosClassMapDscp {
		return vs[0].([]*DefaultQosClassMapDscp)[vs[1].(int)]
	}).(DefaultQosClassMapDscpOutput)
}

type DefaultQosClassMapDscpMapOutput struct{ *pulumi.OutputState }

func (DefaultQosClassMapDscpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DefaultQosClassMapDscp)(nil)).Elem()
}

func (o DefaultQosClassMapDscpMapOutput) ToDefaultQosClassMapDscpMapOutput() DefaultQosClassMapDscpMapOutput {
	return o
}

func (o DefaultQosClassMapDscpMapOutput) ToDefaultQosClassMapDscpMapOutputWithContext(ctx context.Context) DefaultQosClassMapDscpMapOutput {
	return o
}

func (o DefaultQosClassMapDscpMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*DefaultQosClassMapDscp] {
	return pulumix.Output[map[string]*DefaultQosClassMapDscp]{
		OutputState: o.OutputState,
	}
}

func (o DefaultQosClassMapDscpMapOutput) MapIndex(k pulumi.StringInput) DefaultQosClassMapDscpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DefaultQosClassMapDscp {
		return vs[0].(map[string]*DefaultQosClassMapDscp)[vs[1].(string)]
	}).(DefaultQosClassMapDscpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultQosClassMapDscpInput)(nil)).Elem(), &DefaultQosClassMapDscp{})
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultQosClassMapDscpArrayInput)(nil)).Elem(), DefaultQosClassMapDscpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultQosClassMapDscpMapInput)(nil)).Elem(), DefaultQosClassMapDscpMap{})
	pulumi.RegisterOutputType(DefaultQosClassMapDscpOutput{})
	pulumi.RegisterOutputType(DefaultQosClassMapDscpArrayOutput{})
	pulumi.RegisterOutputType(DefaultQosClassMapDscpMapOutput{})
}
