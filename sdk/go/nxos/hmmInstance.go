// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource can manage the HMM Fabric Forwarding Instance configuration.
//
// - API Documentation: [hmmFwdInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Host%20Mobility/hmm:FwdInst/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nxos.NewHmmInstance(ctx, "example", &nxos.HmmInstanceArgs{
//				AdminState: pulumi.String("enabled"),
//				AnycastMac: pulumi.String("20:20:00:00:10:10"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import nxos:index/hmmInstance:HmmInstance example "sys/hmm/fwdinst"
//
// ```
type HmmInstance struct {
	pulumi.CustomResourceState

	// Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
	AdminState pulumi.StringOutput `pulumi:"adminState"`
	// Anycast Gateway MAC address. - Default value: `enabled`
	AnycastMac pulumi.StringOutput `pulumi:"anycastMac"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
}

// NewHmmInstance registers a new resource with the given unique name, arguments, and options.
func NewHmmInstance(ctx *pulumi.Context,
	name string, args *HmmInstanceArgs, opts ...pulumi.ResourceOption) (*HmmInstance, error) {
	if args == nil {
		args = &HmmInstanceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HmmInstance
	err := ctx.RegisterResource("nxos:index/hmmInstance:HmmInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHmmInstance gets an existing HmmInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHmmInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HmmInstanceState, opts ...pulumi.ResourceOption) (*HmmInstance, error) {
	var resource HmmInstance
	err := ctx.ReadResource("nxos:index/hmmInstance:HmmInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HmmInstance resources.
type hmmInstanceState struct {
	// Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
	AdminState *string `pulumi:"adminState"`
	// Anycast Gateway MAC address. - Default value: `enabled`
	AnycastMac *string `pulumi:"anycastMac"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
}

type HmmInstanceState struct {
	// Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
	AdminState pulumi.StringPtrInput
	// Anycast Gateway MAC address. - Default value: `enabled`
	AnycastMac pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
}

func (HmmInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*hmmInstanceState)(nil)).Elem()
}

type hmmInstanceArgs struct {
	// Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
	AdminState *string `pulumi:"adminState"`
	// Anycast Gateway MAC address. - Default value: `enabled`
	AnycastMac *string `pulumi:"anycastMac"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
}

// The set of arguments for constructing a HmmInstance resource.
type HmmInstanceArgs struct {
	// Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
	AdminState pulumi.StringPtrInput
	// Anycast Gateway MAC address. - Default value: `enabled`
	AnycastMac pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
}

func (HmmInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hmmInstanceArgs)(nil)).Elem()
}

type HmmInstanceInput interface {
	pulumi.Input

	ToHmmInstanceOutput() HmmInstanceOutput
	ToHmmInstanceOutputWithContext(ctx context.Context) HmmInstanceOutput
}

func (*HmmInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**HmmInstance)(nil)).Elem()
}

func (i *HmmInstance) ToHmmInstanceOutput() HmmInstanceOutput {
	return i.ToHmmInstanceOutputWithContext(context.Background())
}

func (i *HmmInstance) ToHmmInstanceOutputWithContext(ctx context.Context) HmmInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HmmInstanceOutput)
}

func (i *HmmInstance) ToOutput(ctx context.Context) pulumix.Output[*HmmInstance] {
	return pulumix.Output[*HmmInstance]{
		OutputState: i.ToHmmInstanceOutputWithContext(ctx).OutputState,
	}
}

// HmmInstanceArrayInput is an input type that accepts HmmInstanceArray and HmmInstanceArrayOutput values.
// You can construct a concrete instance of `HmmInstanceArrayInput` via:
//
//	HmmInstanceArray{ HmmInstanceArgs{...} }
type HmmInstanceArrayInput interface {
	pulumi.Input

	ToHmmInstanceArrayOutput() HmmInstanceArrayOutput
	ToHmmInstanceArrayOutputWithContext(context.Context) HmmInstanceArrayOutput
}

type HmmInstanceArray []HmmInstanceInput

func (HmmInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HmmInstance)(nil)).Elem()
}

func (i HmmInstanceArray) ToHmmInstanceArrayOutput() HmmInstanceArrayOutput {
	return i.ToHmmInstanceArrayOutputWithContext(context.Background())
}

func (i HmmInstanceArray) ToHmmInstanceArrayOutputWithContext(ctx context.Context) HmmInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HmmInstanceArrayOutput)
}

func (i HmmInstanceArray) ToOutput(ctx context.Context) pulumix.Output[[]*HmmInstance] {
	return pulumix.Output[[]*HmmInstance]{
		OutputState: i.ToHmmInstanceArrayOutputWithContext(ctx).OutputState,
	}
}

// HmmInstanceMapInput is an input type that accepts HmmInstanceMap and HmmInstanceMapOutput values.
// You can construct a concrete instance of `HmmInstanceMapInput` via:
//
//	HmmInstanceMap{ "key": HmmInstanceArgs{...} }
type HmmInstanceMapInput interface {
	pulumi.Input

	ToHmmInstanceMapOutput() HmmInstanceMapOutput
	ToHmmInstanceMapOutputWithContext(context.Context) HmmInstanceMapOutput
}

type HmmInstanceMap map[string]HmmInstanceInput

func (HmmInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HmmInstance)(nil)).Elem()
}

func (i HmmInstanceMap) ToHmmInstanceMapOutput() HmmInstanceMapOutput {
	return i.ToHmmInstanceMapOutputWithContext(context.Background())
}

func (i HmmInstanceMap) ToHmmInstanceMapOutputWithContext(ctx context.Context) HmmInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HmmInstanceMapOutput)
}

func (i HmmInstanceMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*HmmInstance] {
	return pulumix.Output[map[string]*HmmInstance]{
		OutputState: i.ToHmmInstanceMapOutputWithContext(ctx).OutputState,
	}
}

type HmmInstanceOutput struct{ *pulumi.OutputState }

func (HmmInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HmmInstance)(nil)).Elem()
}

func (o HmmInstanceOutput) ToHmmInstanceOutput() HmmInstanceOutput {
	return o
}

func (o HmmInstanceOutput) ToHmmInstanceOutputWithContext(ctx context.Context) HmmInstanceOutput {
	return o
}

func (o HmmInstanceOutput) ToOutput(ctx context.Context) pulumix.Output[*HmmInstance] {
	return pulumix.Output[*HmmInstance]{
		OutputState: o.OutputState,
	}
}

// Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
func (o HmmInstanceOutput) AdminState() pulumi.StringOutput {
	return o.ApplyT(func(v *HmmInstance) pulumi.StringOutput { return v.AdminState }).(pulumi.StringOutput)
}

// Anycast Gateway MAC address. - Default value: `enabled`
func (o HmmInstanceOutput) AnycastMac() pulumi.StringOutput {
	return o.ApplyT(func(v *HmmInstance) pulumi.StringOutput { return v.AnycastMac }).(pulumi.StringOutput)
}

// A device name from the provider configuration.
func (o HmmInstanceOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HmmInstance) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

type HmmInstanceArrayOutput struct{ *pulumi.OutputState }

func (HmmInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HmmInstance)(nil)).Elem()
}

func (o HmmInstanceArrayOutput) ToHmmInstanceArrayOutput() HmmInstanceArrayOutput {
	return o
}

func (o HmmInstanceArrayOutput) ToHmmInstanceArrayOutputWithContext(ctx context.Context) HmmInstanceArrayOutput {
	return o
}

func (o HmmInstanceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*HmmInstance] {
	return pulumix.Output[[]*HmmInstance]{
		OutputState: o.OutputState,
	}
}

func (o HmmInstanceArrayOutput) Index(i pulumi.IntInput) HmmInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HmmInstance {
		return vs[0].([]*HmmInstance)[vs[1].(int)]
	}).(HmmInstanceOutput)
}

type HmmInstanceMapOutput struct{ *pulumi.OutputState }

func (HmmInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HmmInstance)(nil)).Elem()
}

func (o HmmInstanceMapOutput) ToHmmInstanceMapOutput() HmmInstanceMapOutput {
	return o
}

func (o HmmInstanceMapOutput) ToHmmInstanceMapOutputWithContext(ctx context.Context) HmmInstanceMapOutput {
	return o
}

func (o HmmInstanceMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*HmmInstance] {
	return pulumix.Output[map[string]*HmmInstance]{
		OutputState: o.OutputState,
	}
}

func (o HmmInstanceMapOutput) MapIndex(k pulumi.StringInput) HmmInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HmmInstance {
		return vs[0].(map[string]*HmmInstance)[vs[1].(string)]
	}).(HmmInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HmmInstanceInput)(nil)).Elem(), &HmmInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*HmmInstanceArrayInput)(nil)).Elem(), HmmInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HmmInstanceMapInput)(nil)).Elem(), HmmInstanceMap{})
	pulumi.RegisterOutputType(HmmInstanceOutput{})
	pulumi.RegisterOutputType(HmmInstanceArrayOutput{})
	pulumi.RegisterOutputType(HmmInstanceMapOutput{})
}
