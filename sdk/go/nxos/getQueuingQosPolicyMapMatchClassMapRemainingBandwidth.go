// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source can read the queuing QoS policy map match class map remaining bandwidth configuration.
//
// - API Documentation: [ipqosSetRemBW](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:SetRemBW/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nxos.LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidth(ctx, &nxos.LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthArgs{
//				ClassMapName:  "c-out-q1",
//				PolicyMapName: "PM1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidth(ctx *pulumi.Context, args *LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthArgs, opts ...pulumi.InvokeOption) (*LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult
	err := ctx.Invoke("nxos:index/getQueuingQosPolicyMapMatchClassMapRemainingBandwidth:getQueuingQosPolicyMapMatchClassMapRemainingBandwidth", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQueuingQosPolicyMapMatchClassMapRemainingBandwidth.
type LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthArgs struct {
	// Class map name.
	ClassMapName string `pulumi:"classMapName"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Policy map name.
	PolicyMapName string `pulumi:"policyMapName"`
}

// A collection of values returned by getQueuingQosPolicyMapMatchClassMapRemainingBandwidth.
type LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult struct {
	// Class map name.
	ClassMapName string `pulumi:"classMapName"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// The distinguished name of the object.
	Id string `pulumi:"id"`
	// Policy map name.
	PolicyMapName string `pulumi:"policyMapName"`
	// Remaining bandwidth percent.
	Value int `pulumi:"value"`
}

func LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthOutput(ctx *pulumi.Context, args LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthOutputArgs, opts ...pulumi.InvokeOption) LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult, error) {
			args := v.(LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthArgs)
			r, err := LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidth(ctx, &args, opts...)
			var s LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput)
}

// A collection of arguments for invoking getQueuingQosPolicyMapMatchClassMapRemainingBandwidth.
type LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthOutputArgs struct {
	// Class map name.
	ClassMapName pulumi.StringInput `pulumi:"classMapName"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// Policy map name.
	PolicyMapName pulumi.StringInput `pulumi:"policyMapName"`
}

func (LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthArgs)(nil)).Elem()
}

// A collection of values returned by getQueuingQosPolicyMapMatchClassMapRemainingBandwidth.
type LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput struct{ *pulumi.OutputState }

func (LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult)(nil)).Elem()
}

func (o LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) ToLookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput() LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput {
	return o
}

func (o LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) ToLookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutputWithContext(ctx context.Context) LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput {
	return o
}

func (o LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult] {
	return pulumix.Output[LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult]{
		OutputState: o.OutputState,
	}
}

// Class map name.
func (o LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) ClassMapName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult) string { return v.ClassMapName }).(pulumi.StringOutput)
}

// A device name from the provider configuration.
func (o LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// The distinguished name of the object.
func (o LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult) string { return v.Id }).(pulumi.StringOutput)
}

// Policy map name.
func (o LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) PolicyMapName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult) string { return v.PolicyMapName }).(pulumi.StringOutput)
}

// Remaining bandwidth percent.
func (o LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResult) int { return v.Value }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthResultOutput{})
}
