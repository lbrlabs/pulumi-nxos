// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource can manage a Set Community configuration in a Route-Map Rule Entry.
//
// - API Documentation: [rtmapSetRegComm](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtmap:SetRegComm/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nxos.NewRouteMapRuleEntrySetRegularCommunity(ctx, "example", &nxos.RouteMapRuleEntrySetRegularCommunityArgs{
//				Additive:    pulumi.String("disabled"),
//				NoCommunity: pulumi.String("disabled"),
//				Order:       pulumi.Int(10),
//				RuleName:    pulumi.String("RULE1"),
//				SetCriteria: pulumi.String("none"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import nxos:index/routeMapRuleEntrySetRegularCommunity:RouteMapRuleEntrySetRegularCommunity example "sys/rpm/rtmap-[RULE1]/ent-[10]/sregcomm"
//
// ```
type RouteMapRuleEntrySetRegularCommunity struct {
	pulumi.CustomResourceState

	// Option to add to an existing community. - Choices: `enabled`, `disabled` - Default value: `disabled`
	Additive pulumi.StringOutput `pulumi:"additive"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// Option to have no community attribute. - Choices: `enabled`, `disabled` - Default value: `disabled`
	NoCommunity pulumi.StringOutput `pulumi:"noCommunity"`
	// Route-Map Rule Entry order. - Range: `0`-`65535`
	Order pulumi.IntOutput `pulumi:"order"`
	// Route Map rule name.
	RuleName pulumi.StringOutput `pulumi:"ruleName"`
	// Operation on the current community. - Choices: `none`, `append`, `replace`, `igp`, `pre-bestpath` - Default value:
	// `none`
	SetCriteria pulumi.StringOutput `pulumi:"setCriteria"`
}

// NewRouteMapRuleEntrySetRegularCommunity registers a new resource with the given unique name, arguments, and options.
func NewRouteMapRuleEntrySetRegularCommunity(ctx *pulumi.Context,
	name string, args *RouteMapRuleEntrySetRegularCommunityArgs, opts ...pulumi.ResourceOption) (*RouteMapRuleEntrySetRegularCommunity, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Order == nil {
		return nil, errors.New("invalid value for required argument 'Order'")
	}
	if args.RuleName == nil {
		return nil, errors.New("invalid value for required argument 'RuleName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RouteMapRuleEntrySetRegularCommunity
	err := ctx.RegisterResource("nxos:index/routeMapRuleEntrySetRegularCommunity:RouteMapRuleEntrySetRegularCommunity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouteMapRuleEntrySetRegularCommunity gets an existing RouteMapRuleEntrySetRegularCommunity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteMapRuleEntrySetRegularCommunity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteMapRuleEntrySetRegularCommunityState, opts ...pulumi.ResourceOption) (*RouteMapRuleEntrySetRegularCommunity, error) {
	var resource RouteMapRuleEntrySetRegularCommunity
	err := ctx.ReadResource("nxos:index/routeMapRuleEntrySetRegularCommunity:RouteMapRuleEntrySetRegularCommunity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouteMapRuleEntrySetRegularCommunity resources.
type routeMapRuleEntrySetRegularCommunityState struct {
	// Option to add to an existing community. - Choices: `enabled`, `disabled` - Default value: `disabled`
	Additive *string `pulumi:"additive"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Option to have no community attribute. - Choices: `enabled`, `disabled` - Default value: `disabled`
	NoCommunity *string `pulumi:"noCommunity"`
	// Route-Map Rule Entry order. - Range: `0`-`65535`
	Order *int `pulumi:"order"`
	// Route Map rule name.
	RuleName *string `pulumi:"ruleName"`
	// Operation on the current community. - Choices: `none`, `append`, `replace`, `igp`, `pre-bestpath` - Default value:
	// `none`
	SetCriteria *string `pulumi:"setCriteria"`
}

type RouteMapRuleEntrySetRegularCommunityState struct {
	// Option to add to an existing community. - Choices: `enabled`, `disabled` - Default value: `disabled`
	Additive pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Option to have no community attribute. - Choices: `enabled`, `disabled` - Default value: `disabled`
	NoCommunity pulumi.StringPtrInput
	// Route-Map Rule Entry order. - Range: `0`-`65535`
	Order pulumi.IntPtrInput
	// Route Map rule name.
	RuleName pulumi.StringPtrInput
	// Operation on the current community. - Choices: `none`, `append`, `replace`, `igp`, `pre-bestpath` - Default value:
	// `none`
	SetCriteria pulumi.StringPtrInput
}

func (RouteMapRuleEntrySetRegularCommunityState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeMapRuleEntrySetRegularCommunityState)(nil)).Elem()
}

type routeMapRuleEntrySetRegularCommunityArgs struct {
	// Option to add to an existing community. - Choices: `enabled`, `disabled` - Default value: `disabled`
	Additive *string `pulumi:"additive"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Option to have no community attribute. - Choices: `enabled`, `disabled` - Default value: `disabled`
	NoCommunity *string `pulumi:"noCommunity"`
	// Route-Map Rule Entry order. - Range: `0`-`65535`
	Order int `pulumi:"order"`
	// Route Map rule name.
	RuleName string `pulumi:"ruleName"`
	// Operation on the current community. - Choices: `none`, `append`, `replace`, `igp`, `pre-bestpath` - Default value:
	// `none`
	SetCriteria *string `pulumi:"setCriteria"`
}

// The set of arguments for constructing a RouteMapRuleEntrySetRegularCommunity resource.
type RouteMapRuleEntrySetRegularCommunityArgs struct {
	// Option to add to an existing community. - Choices: `enabled`, `disabled` - Default value: `disabled`
	Additive pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Option to have no community attribute. - Choices: `enabled`, `disabled` - Default value: `disabled`
	NoCommunity pulumi.StringPtrInput
	// Route-Map Rule Entry order. - Range: `0`-`65535`
	Order pulumi.IntInput
	// Route Map rule name.
	RuleName pulumi.StringInput
	// Operation on the current community. - Choices: `none`, `append`, `replace`, `igp`, `pre-bestpath` - Default value:
	// `none`
	SetCriteria pulumi.StringPtrInput
}

func (RouteMapRuleEntrySetRegularCommunityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeMapRuleEntrySetRegularCommunityArgs)(nil)).Elem()
}

type RouteMapRuleEntrySetRegularCommunityInput interface {
	pulumi.Input

	ToRouteMapRuleEntrySetRegularCommunityOutput() RouteMapRuleEntrySetRegularCommunityOutput
	ToRouteMapRuleEntrySetRegularCommunityOutputWithContext(ctx context.Context) RouteMapRuleEntrySetRegularCommunityOutput
}

func (*RouteMapRuleEntrySetRegularCommunity) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteMapRuleEntrySetRegularCommunity)(nil)).Elem()
}

func (i *RouteMapRuleEntrySetRegularCommunity) ToRouteMapRuleEntrySetRegularCommunityOutput() RouteMapRuleEntrySetRegularCommunityOutput {
	return i.ToRouteMapRuleEntrySetRegularCommunityOutputWithContext(context.Background())
}

func (i *RouteMapRuleEntrySetRegularCommunity) ToRouteMapRuleEntrySetRegularCommunityOutputWithContext(ctx context.Context) RouteMapRuleEntrySetRegularCommunityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleEntrySetRegularCommunityOutput)
}

func (i *RouteMapRuleEntrySetRegularCommunity) ToOutput(ctx context.Context) pulumix.Output[*RouteMapRuleEntrySetRegularCommunity] {
	return pulumix.Output[*RouteMapRuleEntrySetRegularCommunity]{
		OutputState: i.ToRouteMapRuleEntrySetRegularCommunityOutputWithContext(ctx).OutputState,
	}
}

// RouteMapRuleEntrySetRegularCommunityArrayInput is an input type that accepts RouteMapRuleEntrySetRegularCommunityArray and RouteMapRuleEntrySetRegularCommunityArrayOutput values.
// You can construct a concrete instance of `RouteMapRuleEntrySetRegularCommunityArrayInput` via:
//
//	RouteMapRuleEntrySetRegularCommunityArray{ RouteMapRuleEntrySetRegularCommunityArgs{...} }
type RouteMapRuleEntrySetRegularCommunityArrayInput interface {
	pulumi.Input

	ToRouteMapRuleEntrySetRegularCommunityArrayOutput() RouteMapRuleEntrySetRegularCommunityArrayOutput
	ToRouteMapRuleEntrySetRegularCommunityArrayOutputWithContext(context.Context) RouteMapRuleEntrySetRegularCommunityArrayOutput
}

type RouteMapRuleEntrySetRegularCommunityArray []RouteMapRuleEntrySetRegularCommunityInput

func (RouteMapRuleEntrySetRegularCommunityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouteMapRuleEntrySetRegularCommunity)(nil)).Elem()
}

func (i RouteMapRuleEntrySetRegularCommunityArray) ToRouteMapRuleEntrySetRegularCommunityArrayOutput() RouteMapRuleEntrySetRegularCommunityArrayOutput {
	return i.ToRouteMapRuleEntrySetRegularCommunityArrayOutputWithContext(context.Background())
}

func (i RouteMapRuleEntrySetRegularCommunityArray) ToRouteMapRuleEntrySetRegularCommunityArrayOutputWithContext(ctx context.Context) RouteMapRuleEntrySetRegularCommunityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleEntrySetRegularCommunityArrayOutput)
}

func (i RouteMapRuleEntrySetRegularCommunityArray) ToOutput(ctx context.Context) pulumix.Output[[]*RouteMapRuleEntrySetRegularCommunity] {
	return pulumix.Output[[]*RouteMapRuleEntrySetRegularCommunity]{
		OutputState: i.ToRouteMapRuleEntrySetRegularCommunityArrayOutputWithContext(ctx).OutputState,
	}
}

// RouteMapRuleEntrySetRegularCommunityMapInput is an input type that accepts RouteMapRuleEntrySetRegularCommunityMap and RouteMapRuleEntrySetRegularCommunityMapOutput values.
// You can construct a concrete instance of `RouteMapRuleEntrySetRegularCommunityMapInput` via:
//
//	RouteMapRuleEntrySetRegularCommunityMap{ "key": RouteMapRuleEntrySetRegularCommunityArgs{...} }
type RouteMapRuleEntrySetRegularCommunityMapInput interface {
	pulumi.Input

	ToRouteMapRuleEntrySetRegularCommunityMapOutput() RouteMapRuleEntrySetRegularCommunityMapOutput
	ToRouteMapRuleEntrySetRegularCommunityMapOutputWithContext(context.Context) RouteMapRuleEntrySetRegularCommunityMapOutput
}

type RouteMapRuleEntrySetRegularCommunityMap map[string]RouteMapRuleEntrySetRegularCommunityInput

func (RouteMapRuleEntrySetRegularCommunityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouteMapRuleEntrySetRegularCommunity)(nil)).Elem()
}

func (i RouteMapRuleEntrySetRegularCommunityMap) ToRouteMapRuleEntrySetRegularCommunityMapOutput() RouteMapRuleEntrySetRegularCommunityMapOutput {
	return i.ToRouteMapRuleEntrySetRegularCommunityMapOutputWithContext(context.Background())
}

func (i RouteMapRuleEntrySetRegularCommunityMap) ToRouteMapRuleEntrySetRegularCommunityMapOutputWithContext(ctx context.Context) RouteMapRuleEntrySetRegularCommunityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleEntrySetRegularCommunityMapOutput)
}

func (i RouteMapRuleEntrySetRegularCommunityMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*RouteMapRuleEntrySetRegularCommunity] {
	return pulumix.Output[map[string]*RouteMapRuleEntrySetRegularCommunity]{
		OutputState: i.ToRouteMapRuleEntrySetRegularCommunityMapOutputWithContext(ctx).OutputState,
	}
}

type RouteMapRuleEntrySetRegularCommunityOutput struct{ *pulumi.OutputState }

func (RouteMapRuleEntrySetRegularCommunityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteMapRuleEntrySetRegularCommunity)(nil)).Elem()
}

func (o RouteMapRuleEntrySetRegularCommunityOutput) ToRouteMapRuleEntrySetRegularCommunityOutput() RouteMapRuleEntrySetRegularCommunityOutput {
	return o
}

func (o RouteMapRuleEntrySetRegularCommunityOutput) ToRouteMapRuleEntrySetRegularCommunityOutputWithContext(ctx context.Context) RouteMapRuleEntrySetRegularCommunityOutput {
	return o
}

func (o RouteMapRuleEntrySetRegularCommunityOutput) ToOutput(ctx context.Context) pulumix.Output[*RouteMapRuleEntrySetRegularCommunity] {
	return pulumix.Output[*RouteMapRuleEntrySetRegularCommunity]{
		OutputState: o.OutputState,
	}
}

// Option to add to an existing community. - Choices: `enabled`, `disabled` - Default value: `disabled`
func (o RouteMapRuleEntrySetRegularCommunityOutput) Additive() pulumi.StringOutput {
	return o.ApplyT(func(v *RouteMapRuleEntrySetRegularCommunity) pulumi.StringOutput { return v.Additive }).(pulumi.StringOutput)
}

// A device name from the provider configuration.
func (o RouteMapRuleEntrySetRegularCommunityOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteMapRuleEntrySetRegularCommunity) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// Option to have no community attribute. - Choices: `enabled`, `disabled` - Default value: `disabled`
func (o RouteMapRuleEntrySetRegularCommunityOutput) NoCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v *RouteMapRuleEntrySetRegularCommunity) pulumi.StringOutput { return v.NoCommunity }).(pulumi.StringOutput)
}

// Route-Map Rule Entry order. - Range: `0`-`65535`
func (o RouteMapRuleEntrySetRegularCommunityOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v *RouteMapRuleEntrySetRegularCommunity) pulumi.IntOutput { return v.Order }).(pulumi.IntOutput)
}

// Route Map rule name.
func (o RouteMapRuleEntrySetRegularCommunityOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *RouteMapRuleEntrySetRegularCommunity) pulumi.StringOutput { return v.RuleName }).(pulumi.StringOutput)
}

// Operation on the current community. - Choices: `none`, `append`, `replace`, `igp`, `pre-bestpath` - Default value:
// `none`
func (o RouteMapRuleEntrySetRegularCommunityOutput) SetCriteria() pulumi.StringOutput {
	return o.ApplyT(func(v *RouteMapRuleEntrySetRegularCommunity) pulumi.StringOutput { return v.SetCriteria }).(pulumi.StringOutput)
}

type RouteMapRuleEntrySetRegularCommunityArrayOutput struct{ *pulumi.OutputState }

func (RouteMapRuleEntrySetRegularCommunityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouteMapRuleEntrySetRegularCommunity)(nil)).Elem()
}

func (o RouteMapRuleEntrySetRegularCommunityArrayOutput) ToRouteMapRuleEntrySetRegularCommunityArrayOutput() RouteMapRuleEntrySetRegularCommunityArrayOutput {
	return o
}

func (o RouteMapRuleEntrySetRegularCommunityArrayOutput) ToRouteMapRuleEntrySetRegularCommunityArrayOutputWithContext(ctx context.Context) RouteMapRuleEntrySetRegularCommunityArrayOutput {
	return o
}

func (o RouteMapRuleEntrySetRegularCommunityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*RouteMapRuleEntrySetRegularCommunity] {
	return pulumix.Output[[]*RouteMapRuleEntrySetRegularCommunity]{
		OutputState: o.OutputState,
	}
}

func (o RouteMapRuleEntrySetRegularCommunityArrayOutput) Index(i pulumi.IntInput) RouteMapRuleEntrySetRegularCommunityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouteMapRuleEntrySetRegularCommunity {
		return vs[0].([]*RouteMapRuleEntrySetRegularCommunity)[vs[1].(int)]
	}).(RouteMapRuleEntrySetRegularCommunityOutput)
}

type RouteMapRuleEntrySetRegularCommunityMapOutput struct{ *pulumi.OutputState }

func (RouteMapRuleEntrySetRegularCommunityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouteMapRuleEntrySetRegularCommunity)(nil)).Elem()
}

func (o RouteMapRuleEntrySetRegularCommunityMapOutput) ToRouteMapRuleEntrySetRegularCommunityMapOutput() RouteMapRuleEntrySetRegularCommunityMapOutput {
	return o
}

func (o RouteMapRuleEntrySetRegularCommunityMapOutput) ToRouteMapRuleEntrySetRegularCommunityMapOutputWithContext(ctx context.Context) RouteMapRuleEntrySetRegularCommunityMapOutput {
	return o
}

func (o RouteMapRuleEntrySetRegularCommunityMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*RouteMapRuleEntrySetRegularCommunity] {
	return pulumix.Output[map[string]*RouteMapRuleEntrySetRegularCommunity]{
		OutputState: o.OutputState,
	}
}

func (o RouteMapRuleEntrySetRegularCommunityMapOutput) MapIndex(k pulumi.StringInput) RouteMapRuleEntrySetRegularCommunityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouteMapRuleEntrySetRegularCommunity {
		return vs[0].(map[string]*RouteMapRuleEntrySetRegularCommunity)[vs[1].(string)]
	}).(RouteMapRuleEntrySetRegularCommunityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMapRuleEntrySetRegularCommunityInput)(nil)).Elem(), &RouteMapRuleEntrySetRegularCommunity{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMapRuleEntrySetRegularCommunityArrayInput)(nil)).Elem(), RouteMapRuleEntrySetRegularCommunityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMapRuleEntrySetRegularCommunityMapInput)(nil)).Elem(), RouteMapRuleEntrySetRegularCommunityMap{})
	pulumi.RegisterOutputType(RouteMapRuleEntrySetRegularCommunityOutput{})
	pulumi.RegisterOutputType(RouteMapRuleEntrySetRegularCommunityArrayOutput{})
	pulumi.RegisterOutputType(RouteMapRuleEntrySetRegularCommunityMapOutput{})
}
