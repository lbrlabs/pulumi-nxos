// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source can read a Match Route Prefix List in Route-Map Rule Entry configuration.
//
// - API Documentation: [rtmapRsRtDstAtt](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtmap:RsRtDstAtt/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nxos.LookupRouteMapRuleEntryMatchRoutePrefixList(ctx, &nxos.LookupRouteMapRuleEntryMatchRoutePrefixListArgs{
//				Order:        10,
//				PrefixListDn: "sys/rpm/pfxlistv4-[LIST1]",
//				RuleName:     "RULE1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRouteMapRuleEntryMatchRoutePrefixList(ctx *pulumi.Context, args *LookupRouteMapRuleEntryMatchRoutePrefixListArgs, opts ...pulumi.InvokeOption) (*LookupRouteMapRuleEntryMatchRoutePrefixListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRouteMapRuleEntryMatchRoutePrefixListResult
	err := ctx.Invoke("nxos:index/getRouteMapRuleEntryMatchRoutePrefixList:getRouteMapRuleEntryMatchRoutePrefixList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouteMapRuleEntryMatchRoutePrefixList.
type LookupRouteMapRuleEntryMatchRoutePrefixListArgs struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Route-Map Rule Entry order.
	Order int `pulumi:"order"`
	// DN of Prefix List. For example: `sys/rpm/pfxlistv4-[LIST1]`
	PrefixListDn string `pulumi:"prefixListDn"`
	// Route Map rule name.
	RuleName string `pulumi:"ruleName"`
}

// A collection of values returned by getRouteMapRuleEntryMatchRoutePrefixList.
type LookupRouteMapRuleEntryMatchRoutePrefixListResult struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// The distinguished name of the object.
	Id string `pulumi:"id"`
	// Route-Map Rule Entry order.
	Order int `pulumi:"order"`
	// DN of Prefix List. For example: `sys/rpm/pfxlistv4-[LIST1]`
	PrefixListDn string `pulumi:"prefixListDn"`
	// Route Map rule name.
	RuleName string `pulumi:"ruleName"`
}

func LookupRouteMapRuleEntryMatchRoutePrefixListOutput(ctx *pulumi.Context, args LookupRouteMapRuleEntryMatchRoutePrefixListOutputArgs, opts ...pulumi.InvokeOption) LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRouteMapRuleEntryMatchRoutePrefixListResult, error) {
			args := v.(LookupRouteMapRuleEntryMatchRoutePrefixListArgs)
			r, err := LookupRouteMapRuleEntryMatchRoutePrefixList(ctx, &args, opts...)
			var s LookupRouteMapRuleEntryMatchRoutePrefixListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput)
}

// A collection of arguments for invoking getRouteMapRuleEntryMatchRoutePrefixList.
type LookupRouteMapRuleEntryMatchRoutePrefixListOutputArgs struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// Route-Map Rule Entry order.
	Order pulumi.IntInput `pulumi:"order"`
	// DN of Prefix List. For example: `sys/rpm/pfxlistv4-[LIST1]`
	PrefixListDn pulumi.StringInput `pulumi:"prefixListDn"`
	// Route Map rule name.
	RuleName pulumi.StringInput `pulumi:"ruleName"`
}

func (LookupRouteMapRuleEntryMatchRoutePrefixListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteMapRuleEntryMatchRoutePrefixListArgs)(nil)).Elem()
}

// A collection of values returned by getRouteMapRuleEntryMatchRoutePrefixList.
type LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput struct{ *pulumi.OutputState }

func (LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteMapRuleEntryMatchRoutePrefixListResult)(nil)).Elem()
}

func (o LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) ToLookupRouteMapRuleEntryMatchRoutePrefixListResultOutput() LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput {
	return o
}

func (o LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) ToLookupRouteMapRuleEntryMatchRoutePrefixListResultOutputWithContext(ctx context.Context) LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput {
	return o
}

func (o LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupRouteMapRuleEntryMatchRoutePrefixListResult] {
	return pulumix.Output[LookupRouteMapRuleEntryMatchRoutePrefixListResult]{
		OutputState: o.OutputState,
	}
}

// A device name from the provider configuration.
func (o LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouteMapRuleEntryMatchRoutePrefixListResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// The distinguished name of the object.
func (o LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteMapRuleEntryMatchRoutePrefixListResult) string { return v.Id }).(pulumi.StringOutput)
}

// Route-Map Rule Entry order.
func (o LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRouteMapRuleEntryMatchRoutePrefixListResult) int { return v.Order }).(pulumi.IntOutput)
}

// DN of Prefix List. For example: `sys/rpm/pfxlistv4-[LIST1]`
func (o LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) PrefixListDn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteMapRuleEntryMatchRoutePrefixListResult) string { return v.PrefixListDn }).(pulumi.StringOutput)
}

// Route Map rule name.
func (o LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteMapRuleEntryMatchRoutePrefixListResult) string { return v.RuleName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRouteMapRuleEntryMatchRoutePrefixListResultOutput{})
}
