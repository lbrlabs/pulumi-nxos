// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource can manage a Set Community item in a Route-Map Rule Entry.
//
// - API Documentation: [rtregcomItem](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtregcom:Item/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nxos.NewRouteMapRuleEntrySetRegularCommunityItem(ctx, "example", &nxos.RouteMapRuleEntrySetRegularCommunityItemArgs{
//				Community: pulumi.String("regular:as2-nn2:65001:123"),
//				Order:     pulumi.Int(10),
//				RuleName:  pulumi.String("RULE1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import nxos:index/routeMapRuleEntrySetRegularCommunityItem:RouteMapRuleEntrySetRegularCommunityItem example "sys/rpm/rtmap-[RULE1]/ent-[10]/sregcomm/item-[regular:as2-nn2:65001:123]"
//
// ```
type RouteMapRuleEntrySetRegularCommunityItem struct {
	pulumi.CustomResourceState

	// Set Community.
	Community pulumi.StringOutput `pulumi:"community"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// Route-Map Rule Entry order. - Range: `0`-`65535`
	Order pulumi.IntOutput `pulumi:"order"`
	// Route Map rule name.
	RuleName pulumi.StringOutput `pulumi:"ruleName"`
}

// NewRouteMapRuleEntrySetRegularCommunityItem registers a new resource with the given unique name, arguments, and options.
func NewRouteMapRuleEntrySetRegularCommunityItem(ctx *pulumi.Context,
	name string, args *RouteMapRuleEntrySetRegularCommunityItemArgs, opts ...pulumi.ResourceOption) (*RouteMapRuleEntrySetRegularCommunityItem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Community == nil {
		return nil, errors.New("invalid value for required argument 'Community'")
	}
	if args.Order == nil {
		return nil, errors.New("invalid value for required argument 'Order'")
	}
	if args.RuleName == nil {
		return nil, errors.New("invalid value for required argument 'RuleName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RouteMapRuleEntrySetRegularCommunityItem
	err := ctx.RegisterResource("nxos:index/routeMapRuleEntrySetRegularCommunityItem:RouteMapRuleEntrySetRegularCommunityItem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouteMapRuleEntrySetRegularCommunityItem gets an existing RouteMapRuleEntrySetRegularCommunityItem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteMapRuleEntrySetRegularCommunityItem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteMapRuleEntrySetRegularCommunityItemState, opts ...pulumi.ResourceOption) (*RouteMapRuleEntrySetRegularCommunityItem, error) {
	var resource RouteMapRuleEntrySetRegularCommunityItem
	err := ctx.ReadResource("nxos:index/routeMapRuleEntrySetRegularCommunityItem:RouteMapRuleEntrySetRegularCommunityItem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouteMapRuleEntrySetRegularCommunityItem resources.
type routeMapRuleEntrySetRegularCommunityItemState struct {
	// Set Community.
	Community *string `pulumi:"community"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Route-Map Rule Entry order. - Range: `0`-`65535`
	Order *int `pulumi:"order"`
	// Route Map rule name.
	RuleName *string `pulumi:"ruleName"`
}

type RouteMapRuleEntrySetRegularCommunityItemState struct {
	// Set Community.
	Community pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Route-Map Rule Entry order. - Range: `0`-`65535`
	Order pulumi.IntPtrInput
	// Route Map rule name.
	RuleName pulumi.StringPtrInput
}

func (RouteMapRuleEntrySetRegularCommunityItemState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeMapRuleEntrySetRegularCommunityItemState)(nil)).Elem()
}

type routeMapRuleEntrySetRegularCommunityItemArgs struct {
	// Set Community.
	Community string `pulumi:"community"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Route-Map Rule Entry order. - Range: `0`-`65535`
	Order int `pulumi:"order"`
	// Route Map rule name.
	RuleName string `pulumi:"ruleName"`
}

// The set of arguments for constructing a RouteMapRuleEntrySetRegularCommunityItem resource.
type RouteMapRuleEntrySetRegularCommunityItemArgs struct {
	// Set Community.
	Community pulumi.StringInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Route-Map Rule Entry order. - Range: `0`-`65535`
	Order pulumi.IntInput
	// Route Map rule name.
	RuleName pulumi.StringInput
}

func (RouteMapRuleEntrySetRegularCommunityItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeMapRuleEntrySetRegularCommunityItemArgs)(nil)).Elem()
}

type RouteMapRuleEntrySetRegularCommunityItemInput interface {
	pulumi.Input

	ToRouteMapRuleEntrySetRegularCommunityItemOutput() RouteMapRuleEntrySetRegularCommunityItemOutput
	ToRouteMapRuleEntrySetRegularCommunityItemOutputWithContext(ctx context.Context) RouteMapRuleEntrySetRegularCommunityItemOutput
}

func (*RouteMapRuleEntrySetRegularCommunityItem) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteMapRuleEntrySetRegularCommunityItem)(nil)).Elem()
}

func (i *RouteMapRuleEntrySetRegularCommunityItem) ToRouteMapRuleEntrySetRegularCommunityItemOutput() RouteMapRuleEntrySetRegularCommunityItemOutput {
	return i.ToRouteMapRuleEntrySetRegularCommunityItemOutputWithContext(context.Background())
}

func (i *RouteMapRuleEntrySetRegularCommunityItem) ToRouteMapRuleEntrySetRegularCommunityItemOutputWithContext(ctx context.Context) RouteMapRuleEntrySetRegularCommunityItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleEntrySetRegularCommunityItemOutput)
}

func (i *RouteMapRuleEntrySetRegularCommunityItem) ToOutput(ctx context.Context) pulumix.Output[*RouteMapRuleEntrySetRegularCommunityItem] {
	return pulumix.Output[*RouteMapRuleEntrySetRegularCommunityItem]{
		OutputState: i.ToRouteMapRuleEntrySetRegularCommunityItemOutputWithContext(ctx).OutputState,
	}
}

// RouteMapRuleEntrySetRegularCommunityItemArrayInput is an input type that accepts RouteMapRuleEntrySetRegularCommunityItemArray and RouteMapRuleEntrySetRegularCommunityItemArrayOutput values.
// You can construct a concrete instance of `RouteMapRuleEntrySetRegularCommunityItemArrayInput` via:
//
//	RouteMapRuleEntrySetRegularCommunityItemArray{ RouteMapRuleEntrySetRegularCommunityItemArgs{...} }
type RouteMapRuleEntrySetRegularCommunityItemArrayInput interface {
	pulumi.Input

	ToRouteMapRuleEntrySetRegularCommunityItemArrayOutput() RouteMapRuleEntrySetRegularCommunityItemArrayOutput
	ToRouteMapRuleEntrySetRegularCommunityItemArrayOutputWithContext(context.Context) RouteMapRuleEntrySetRegularCommunityItemArrayOutput
}

type RouteMapRuleEntrySetRegularCommunityItemArray []RouteMapRuleEntrySetRegularCommunityItemInput

func (RouteMapRuleEntrySetRegularCommunityItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouteMapRuleEntrySetRegularCommunityItem)(nil)).Elem()
}

func (i RouteMapRuleEntrySetRegularCommunityItemArray) ToRouteMapRuleEntrySetRegularCommunityItemArrayOutput() RouteMapRuleEntrySetRegularCommunityItemArrayOutput {
	return i.ToRouteMapRuleEntrySetRegularCommunityItemArrayOutputWithContext(context.Background())
}

func (i RouteMapRuleEntrySetRegularCommunityItemArray) ToRouteMapRuleEntrySetRegularCommunityItemArrayOutputWithContext(ctx context.Context) RouteMapRuleEntrySetRegularCommunityItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleEntrySetRegularCommunityItemArrayOutput)
}

func (i RouteMapRuleEntrySetRegularCommunityItemArray) ToOutput(ctx context.Context) pulumix.Output[[]*RouteMapRuleEntrySetRegularCommunityItem] {
	return pulumix.Output[[]*RouteMapRuleEntrySetRegularCommunityItem]{
		OutputState: i.ToRouteMapRuleEntrySetRegularCommunityItemArrayOutputWithContext(ctx).OutputState,
	}
}

// RouteMapRuleEntrySetRegularCommunityItemMapInput is an input type that accepts RouteMapRuleEntrySetRegularCommunityItemMap and RouteMapRuleEntrySetRegularCommunityItemMapOutput values.
// You can construct a concrete instance of `RouteMapRuleEntrySetRegularCommunityItemMapInput` via:
//
//	RouteMapRuleEntrySetRegularCommunityItemMap{ "key": RouteMapRuleEntrySetRegularCommunityItemArgs{...} }
type RouteMapRuleEntrySetRegularCommunityItemMapInput interface {
	pulumi.Input

	ToRouteMapRuleEntrySetRegularCommunityItemMapOutput() RouteMapRuleEntrySetRegularCommunityItemMapOutput
	ToRouteMapRuleEntrySetRegularCommunityItemMapOutputWithContext(context.Context) RouteMapRuleEntrySetRegularCommunityItemMapOutput
}

type RouteMapRuleEntrySetRegularCommunityItemMap map[string]RouteMapRuleEntrySetRegularCommunityItemInput

func (RouteMapRuleEntrySetRegularCommunityItemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouteMapRuleEntrySetRegularCommunityItem)(nil)).Elem()
}

func (i RouteMapRuleEntrySetRegularCommunityItemMap) ToRouteMapRuleEntrySetRegularCommunityItemMapOutput() RouteMapRuleEntrySetRegularCommunityItemMapOutput {
	return i.ToRouteMapRuleEntrySetRegularCommunityItemMapOutputWithContext(context.Background())
}

func (i RouteMapRuleEntrySetRegularCommunityItemMap) ToRouteMapRuleEntrySetRegularCommunityItemMapOutputWithContext(ctx context.Context) RouteMapRuleEntrySetRegularCommunityItemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleEntrySetRegularCommunityItemMapOutput)
}

func (i RouteMapRuleEntrySetRegularCommunityItemMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*RouteMapRuleEntrySetRegularCommunityItem] {
	return pulumix.Output[map[string]*RouteMapRuleEntrySetRegularCommunityItem]{
		OutputState: i.ToRouteMapRuleEntrySetRegularCommunityItemMapOutputWithContext(ctx).OutputState,
	}
}

type RouteMapRuleEntrySetRegularCommunityItemOutput struct{ *pulumi.OutputState }

func (RouteMapRuleEntrySetRegularCommunityItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteMapRuleEntrySetRegularCommunityItem)(nil)).Elem()
}

func (o RouteMapRuleEntrySetRegularCommunityItemOutput) ToRouteMapRuleEntrySetRegularCommunityItemOutput() RouteMapRuleEntrySetRegularCommunityItemOutput {
	return o
}

func (o RouteMapRuleEntrySetRegularCommunityItemOutput) ToRouteMapRuleEntrySetRegularCommunityItemOutputWithContext(ctx context.Context) RouteMapRuleEntrySetRegularCommunityItemOutput {
	return o
}

func (o RouteMapRuleEntrySetRegularCommunityItemOutput) ToOutput(ctx context.Context) pulumix.Output[*RouteMapRuleEntrySetRegularCommunityItem] {
	return pulumix.Output[*RouteMapRuleEntrySetRegularCommunityItem]{
		OutputState: o.OutputState,
	}
}

// Set Community.
func (o RouteMapRuleEntrySetRegularCommunityItemOutput) Community() pulumi.StringOutput {
	return o.ApplyT(func(v *RouteMapRuleEntrySetRegularCommunityItem) pulumi.StringOutput { return v.Community }).(pulumi.StringOutput)
}

// A device name from the provider configuration.
func (o RouteMapRuleEntrySetRegularCommunityItemOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteMapRuleEntrySetRegularCommunityItem) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// Route-Map Rule Entry order. - Range: `0`-`65535`
func (o RouteMapRuleEntrySetRegularCommunityItemOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v *RouteMapRuleEntrySetRegularCommunityItem) pulumi.IntOutput { return v.Order }).(pulumi.IntOutput)
}

// Route Map rule name.
func (o RouteMapRuleEntrySetRegularCommunityItemOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *RouteMapRuleEntrySetRegularCommunityItem) pulumi.StringOutput { return v.RuleName }).(pulumi.StringOutput)
}

type RouteMapRuleEntrySetRegularCommunityItemArrayOutput struct{ *pulumi.OutputState }

func (RouteMapRuleEntrySetRegularCommunityItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouteMapRuleEntrySetRegularCommunityItem)(nil)).Elem()
}

func (o RouteMapRuleEntrySetRegularCommunityItemArrayOutput) ToRouteMapRuleEntrySetRegularCommunityItemArrayOutput() RouteMapRuleEntrySetRegularCommunityItemArrayOutput {
	return o
}

func (o RouteMapRuleEntrySetRegularCommunityItemArrayOutput) ToRouteMapRuleEntrySetRegularCommunityItemArrayOutputWithContext(ctx context.Context) RouteMapRuleEntrySetRegularCommunityItemArrayOutput {
	return o
}

func (o RouteMapRuleEntrySetRegularCommunityItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*RouteMapRuleEntrySetRegularCommunityItem] {
	return pulumix.Output[[]*RouteMapRuleEntrySetRegularCommunityItem]{
		OutputState: o.OutputState,
	}
}

func (o RouteMapRuleEntrySetRegularCommunityItemArrayOutput) Index(i pulumi.IntInput) RouteMapRuleEntrySetRegularCommunityItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouteMapRuleEntrySetRegularCommunityItem {
		return vs[0].([]*RouteMapRuleEntrySetRegularCommunityItem)[vs[1].(int)]
	}).(RouteMapRuleEntrySetRegularCommunityItemOutput)
}

type RouteMapRuleEntrySetRegularCommunityItemMapOutput struct{ *pulumi.OutputState }

func (RouteMapRuleEntrySetRegularCommunityItemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouteMapRuleEntrySetRegularCommunityItem)(nil)).Elem()
}

func (o RouteMapRuleEntrySetRegularCommunityItemMapOutput) ToRouteMapRuleEntrySetRegularCommunityItemMapOutput() RouteMapRuleEntrySetRegularCommunityItemMapOutput {
	return o
}

func (o RouteMapRuleEntrySetRegularCommunityItemMapOutput) ToRouteMapRuleEntrySetRegularCommunityItemMapOutputWithContext(ctx context.Context) RouteMapRuleEntrySetRegularCommunityItemMapOutput {
	return o
}

func (o RouteMapRuleEntrySetRegularCommunityItemMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*RouteMapRuleEntrySetRegularCommunityItem] {
	return pulumix.Output[map[string]*RouteMapRuleEntrySetRegularCommunityItem]{
		OutputState: o.OutputState,
	}
}

func (o RouteMapRuleEntrySetRegularCommunityItemMapOutput) MapIndex(k pulumi.StringInput) RouteMapRuleEntrySetRegularCommunityItemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouteMapRuleEntrySetRegularCommunityItem {
		return vs[0].(map[string]*RouteMapRuleEntrySetRegularCommunityItem)[vs[1].(string)]
	}).(RouteMapRuleEntrySetRegularCommunityItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMapRuleEntrySetRegularCommunityItemInput)(nil)).Elem(), &RouteMapRuleEntrySetRegularCommunityItem{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMapRuleEntrySetRegularCommunityItemArrayInput)(nil)).Elem(), RouteMapRuleEntrySetRegularCommunityItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMapRuleEntrySetRegularCommunityItemMapInput)(nil)).Elem(), RouteMapRuleEntrySetRegularCommunityItemMap{})
	pulumi.RegisterOutputType(RouteMapRuleEntrySetRegularCommunityItemOutput{})
	pulumi.RegisterOutputType(RouteMapRuleEntrySetRegularCommunityItemArrayOutput{})
	pulumi.RegisterOutputType(RouteMapRuleEntrySetRegularCommunityItemMapOutput{})
}
