// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source can read a VRF Address Family.
//
// - API Documentation: [rtctrlDomAf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:DomAf/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nxos.LookupVrfAddressFamily(ctx, &nxos.LookupVrfAddressFamilyArgs{
//				AddressFamily: "ipv4-ucast",
//				Vrf:           "VRF1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVrfAddressFamily(ctx *pulumi.Context, args *LookupVrfAddressFamilyArgs, opts ...pulumi.InvokeOption) (*LookupVrfAddressFamilyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVrfAddressFamilyResult
	err := ctx.Invoke("nxos:index/getVrfAddressFamily:getVrfAddressFamily", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVrfAddressFamily.
type LookupVrfAddressFamilyArgs struct {
	// Address family.
	AddressFamily string `pulumi:"addressFamily"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// VRF name.
	Vrf string `pulumi:"vrf"`
}

// A collection of values returned by getVrfAddressFamily.
type LookupVrfAddressFamilyResult struct {
	// Address family.
	AddressFamily string `pulumi:"addressFamily"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// The distinguished name of the object.
	Id string `pulumi:"id"`
	// VRF name.
	Vrf string `pulumi:"vrf"`
}

func LookupVrfAddressFamilyOutput(ctx *pulumi.Context, args LookupVrfAddressFamilyOutputArgs, opts ...pulumi.InvokeOption) LookupVrfAddressFamilyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVrfAddressFamilyResult, error) {
			args := v.(LookupVrfAddressFamilyArgs)
			r, err := LookupVrfAddressFamily(ctx, &args, opts...)
			var s LookupVrfAddressFamilyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVrfAddressFamilyResultOutput)
}

// A collection of arguments for invoking getVrfAddressFamily.
type LookupVrfAddressFamilyOutputArgs struct {
	// Address family.
	AddressFamily pulumi.StringInput `pulumi:"addressFamily"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// VRF name.
	Vrf pulumi.StringInput `pulumi:"vrf"`
}

func (LookupVrfAddressFamilyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVrfAddressFamilyArgs)(nil)).Elem()
}

// A collection of values returned by getVrfAddressFamily.
type LookupVrfAddressFamilyResultOutput struct{ *pulumi.OutputState }

func (LookupVrfAddressFamilyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVrfAddressFamilyResult)(nil)).Elem()
}

func (o LookupVrfAddressFamilyResultOutput) ToLookupVrfAddressFamilyResultOutput() LookupVrfAddressFamilyResultOutput {
	return o
}

func (o LookupVrfAddressFamilyResultOutput) ToLookupVrfAddressFamilyResultOutputWithContext(ctx context.Context) LookupVrfAddressFamilyResultOutput {
	return o
}

func (o LookupVrfAddressFamilyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupVrfAddressFamilyResult] {
	return pulumix.Output[LookupVrfAddressFamilyResult]{
		OutputState: o.OutputState,
	}
}

// Address family.
func (o LookupVrfAddressFamilyResultOutput) AddressFamily() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrfAddressFamilyResult) string { return v.AddressFamily }).(pulumi.StringOutput)
}

// A device name from the provider configuration.
func (o LookupVrfAddressFamilyResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVrfAddressFamilyResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// The distinguished name of the object.
func (o LookupVrfAddressFamilyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrfAddressFamilyResult) string { return v.Id }).(pulumi.StringOutput)
}

// VRF name.
func (o LookupVrfAddressFamilyResultOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrfAddressFamilyResult) string { return v.Vrf }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVrfAddressFamilyResultOutput{})
}
