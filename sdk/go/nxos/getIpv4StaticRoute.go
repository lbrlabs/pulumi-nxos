// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nxos

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source can read an IPv4 static route.
//
// - API Documentation: [ipv4Route](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/ipv4:Route/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nxos.LookupIpv4StaticRoute(ctx, &nxos.LookupIpv4StaticRouteArgs{
//				Prefix:  "1.1.1.0/24",
//				VrfName: "default",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupIpv4StaticRoute(ctx *pulumi.Context, args *LookupIpv4StaticRouteArgs, opts ...pulumi.InvokeOption) (*LookupIpv4StaticRouteResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIpv4StaticRouteResult
	err := ctx.Invoke("nxos:index/getIpv4StaticRoute:getIpv4StaticRoute", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpv4StaticRoute.
type LookupIpv4StaticRouteArgs struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Prefix.
	Prefix string `pulumi:"prefix"`
	// VRF name.
	VrfName string `pulumi:"vrfName"`
}

// A collection of values returned by getIpv4StaticRoute.
type LookupIpv4StaticRouteResult struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// The distinguished name of the object.
	Id string `pulumi:"id"`
	// List of next hops.
	NextHops []GetIpv4StaticRouteNextHop `pulumi:"nextHops"`
	// Prefix.
	Prefix string `pulumi:"prefix"`
	// VRF name.
	VrfName string `pulumi:"vrfName"`
}

func LookupIpv4StaticRouteOutput(ctx *pulumi.Context, args LookupIpv4StaticRouteOutputArgs, opts ...pulumi.InvokeOption) LookupIpv4StaticRouteResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIpv4StaticRouteResult, error) {
			args := v.(LookupIpv4StaticRouteArgs)
			r, err := LookupIpv4StaticRoute(ctx, &args, opts...)
			var s LookupIpv4StaticRouteResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIpv4StaticRouteResultOutput)
}

// A collection of arguments for invoking getIpv4StaticRoute.
type LookupIpv4StaticRouteOutputArgs struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// Prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// VRF name.
	VrfName pulumi.StringInput `pulumi:"vrfName"`
}

func (LookupIpv4StaticRouteOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpv4StaticRouteArgs)(nil)).Elem()
}

// A collection of values returned by getIpv4StaticRoute.
type LookupIpv4StaticRouteResultOutput struct{ *pulumi.OutputState }

func (LookupIpv4StaticRouteResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpv4StaticRouteResult)(nil)).Elem()
}

func (o LookupIpv4StaticRouteResultOutput) ToLookupIpv4StaticRouteResultOutput() LookupIpv4StaticRouteResultOutput {
	return o
}

func (o LookupIpv4StaticRouteResultOutput) ToLookupIpv4StaticRouteResultOutputWithContext(ctx context.Context) LookupIpv4StaticRouteResultOutput {
	return o
}

func (o LookupIpv4StaticRouteResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupIpv4StaticRouteResult] {
	return pulumix.Output[LookupIpv4StaticRouteResult]{
		OutputState: o.OutputState,
	}
}

// A device name from the provider configuration.
func (o LookupIpv4StaticRouteResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIpv4StaticRouteResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// The distinguished name of the object.
func (o LookupIpv4StaticRouteResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4StaticRouteResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of next hops.
func (o LookupIpv4StaticRouteResultOutput) NextHops() GetIpv4StaticRouteNextHopArrayOutput {
	return o.ApplyT(func(v LookupIpv4StaticRouteResult) []GetIpv4StaticRouteNextHop { return v.NextHops }).(GetIpv4StaticRouteNextHopArrayOutput)
}

// Prefix.
func (o LookupIpv4StaticRouteResultOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4StaticRouteResult) string { return v.Prefix }).(pulumi.StringOutput)
}

// VRF name.
func (o LookupIpv4StaticRouteResultOutput) VrfName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv4StaticRouteResult) string { return v.VrfName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIpv4StaticRouteResultOutput{})
}
