// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the default QoS policy map match class map police configuration.
 *
 * - API Documentation: [ipqosPolice](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:Police/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getDefaultQosPolicyMapMatchClassMapPolice({
 *     classMapName: "Voice",
 *     policyMapName: "PM1",
 * });
 * ```
 */
export function getDefaultQosPolicyMapMatchClassMapPolice(args: GetDefaultQosPolicyMapMatchClassMapPoliceArgs, opts?: pulumi.InvokeOptions): Promise<GetDefaultQosPolicyMapMatchClassMapPoliceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getDefaultQosPolicyMapMatchClassMapPolice:getDefaultQosPolicyMapMatchClassMapPolice", {
        "classMapName": args.classMapName,
        "device": args.device,
        "policyMapName": args.policyMapName,
    }, opts);
}

/**
 * A collection of arguments for invoking getDefaultQosPolicyMapMatchClassMapPolice.
 */
export interface GetDefaultQosPolicyMapMatchClassMapPoliceArgs {
    /**
     * Class map name.
     */
    classMapName: string;
    /**
     * A device name from the provider configuration.
     */
    device?: string;
    /**
     * Policy map name.
     */
    policyMapName: string;
}

/**
 * A collection of values returned by getDefaultQosPolicyMapMatchClassMapPolice.
 */
export interface GetDefaultQosPolicyMapMatchClassMapPoliceResult {
    /**
     * CIR burst rate.
     */
    readonly bcRate: number;
    /**
     * CIR burst rate unit.
     */
    readonly bcUnit: string;
    /**
     * PIR burst rate.
     */
    readonly beRate: number;
    /**
     * PIR burst rate unit.
     */
    readonly beUnit: string;
    /**
     * CIR rate.
     */
    readonly cirRate: number;
    /**
     * CIR rate unit.
     */
    readonly cirUnit: string;
    /**
     * Class map name.
     */
    readonly classMapName: string;
    /**
     * Conform action.
     */
    readonly conformAction: string;
    /**
     * Set CoS for conforming traffic.
     */
    readonly conformSetCos: number;
    /**
     * Set DSCP for conforming traffic.
     */
    readonly conformSetDscp: number;
    /**
     * Set precedence for conforming traffic.
     */
    readonly conformSetPrecedence: string;
    /**
     * Set qos-group for conforming traffic.
     */
    readonly conformSetQosGroup: number;
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * Exceed action.
     */
    readonly exceedAction: string;
    /**
     * Set CoS for exceeding traffic.
     */
    readonly exceedSetCos: number;
    /**
     * Set DSCP for exceeding traffic.
     */
    readonly exceedSetDscp: number;
    /**
     * Set precedence for exceeding traffic.
     */
    readonly exceedSetPrecedence: string;
    /**
     * Set qos-group for exceeding traffic.
     */
    readonly exceedSetQosGroup: number;
    /**
     * The distinguished name of the object.
     */
    readonly id: string;
    /**
     * PIR rate.
     */
    readonly pirRate: number;
    /**
     * PIR rate unit.
     */
    readonly pirUnit: string;
    /**
     * Policy map name.
     */
    readonly policyMapName: string;
    /**
     * Violate action.
     */
    readonly violateAction: string;
    /**
     * Set CoS for violating traffic.
     */
    readonly violateSetCos: number;
    /**
     * Set DSCP for violating traffic.
     */
    readonly violateSetDscp: number;
    /**
     * Set precedence for violating traffic.
     */
    readonly violateSetPrecedence: string;
    /**
     * Set qos-group for violating traffic.
     */
    readonly violateSetQosGroup: number;
}
/**
 * This data source can read the default QoS policy map match class map police configuration.
 *
 * - API Documentation: [ipqosPolice](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:Police/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getDefaultQosPolicyMapMatchClassMapPolice({
 *     classMapName: "Voice",
 *     policyMapName: "PM1",
 * });
 * ```
 */
export function getDefaultQosPolicyMapMatchClassMapPoliceOutput(args: GetDefaultQosPolicyMapMatchClassMapPoliceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDefaultQosPolicyMapMatchClassMapPoliceResult> {
    return pulumi.output(args).apply((a: any) => getDefaultQosPolicyMapMatchClassMapPolice(a, opts))
}

/**
 * A collection of arguments for invoking getDefaultQosPolicyMapMatchClassMapPolice.
 */
export interface GetDefaultQosPolicyMapMatchClassMapPoliceOutputArgs {
    /**
     * Class map name.
     */
    classMapName: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Policy map name.
     */
    policyMapName: pulumi.Input<string>;
}
