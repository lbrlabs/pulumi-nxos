// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the vPC interface configuration.
 *
 * - API Documentation: [vpcIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/vpc:If/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getVpcInterface({
 *     vpcInterfaceId: 1,
 * });
 * ```
 */
export function getVpcInterface(args: GetVpcInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcInterfaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getVpcInterface:getVpcInterface", {
        "device": args.device,
        "vpcInterfaceId": args.vpcInterfaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcInterface.
 */
export interface GetVpcInterfaceArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: string;
    /**
     * The vPC interface identifier.
     */
    vpcInterfaceId: number;
}

/**
 * A collection of values returned by getVpcInterface.
 */
export interface GetVpcInterfaceResult {
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * The distinguished name of the object.
     */
    readonly id: string;
    /**
     * Port-channel interface DN.
     */
    readonly portChannelInterfaceDn: string;
    /**
     * The vPC interface identifier.
     */
    readonly vpcInterfaceId: number;
}
/**
 * This data source can read the vPC interface configuration.
 *
 * - API Documentation: [vpcIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/vpc:If/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getVpcInterface({
 *     vpcInterfaceId: 1,
 * });
 * ```
 */
export function getVpcInterfaceOutput(args: GetVpcInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getVpcInterface(a, opts))
}

/**
 * A collection of arguments for invoking getVpcInterface.
 */
export interface GetVpcInterfaceOutputArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * The vPC interface identifier.
     */
    vpcInterfaceId: pulumi.Input<number>;
}
