// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the BGP peer address family prefix list control configuration.
 *
 * - API Documentation: [bgpPfxCtrlP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:PfxCtrlP/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getBgpPeerAddressFamilyPrefixListControl({
 *     address: "192.168.0.1",
 *     addressFamily: "ipv4-ucast",
 *     asn: "65001",
 *     direction: "in",
 *     vrf: "default",
 * });
 * ```
 */
export function getBgpPeerAddressFamilyPrefixListControl(args: GetBgpPeerAddressFamilyPrefixListControlArgs, opts?: pulumi.InvokeOptions): Promise<GetBgpPeerAddressFamilyPrefixListControlResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getBgpPeerAddressFamilyPrefixListControl:getBgpPeerAddressFamilyPrefixListControl", {
        "address": args.address,
        "addressFamily": args.addressFamily,
        "asn": args.asn,
        "device": args.device,
        "direction": args.direction,
        "vrf": args.vrf,
    }, opts);
}

/**
 * A collection of arguments for invoking getBgpPeerAddressFamilyPrefixListControl.
 */
export interface GetBgpPeerAddressFamilyPrefixListControlArgs {
    /**
     * Peer address.
     */
    address: string;
    /**
     * Address Family.
     */
    addressFamily: string;
    /**
     * Autonomous system number.
     */
    asn: string;
    /**
     * A device name from the provider configuration.
     */
    device?: string;
    /**
     * Route Control direction.
     */
    direction: string;
    /**
     * VRF name.
     */
    vrf: string;
}

/**
 * A collection of values returned by getBgpPeerAddressFamilyPrefixListControl.
 */
export interface GetBgpPeerAddressFamilyPrefixListControlResult {
    /**
     * Peer address.
     */
    readonly address: string;
    /**
     * Address Family.
     */
    readonly addressFamily: string;
    /**
     * Autonomous system number.
     */
    readonly asn: string;
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * Route Control direction.
     */
    readonly direction: string;
    /**
     * The distinguished name of the object.
     */
    readonly id: string;
    /**
     * Route Control Prefix-List name.
     */
    readonly list: string;
    /**
     * VRF name.
     */
    readonly vrf: string;
}
/**
 * This data source can read the BGP peer address family prefix list control configuration.
 *
 * - API Documentation: [bgpPfxCtrlP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:PfxCtrlP/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getBgpPeerAddressFamilyPrefixListControl({
 *     address: "192.168.0.1",
 *     addressFamily: "ipv4-ucast",
 *     asn: "65001",
 *     direction: "in",
 *     vrf: "default",
 * });
 * ```
 */
export function getBgpPeerAddressFamilyPrefixListControlOutput(args: GetBgpPeerAddressFamilyPrefixListControlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBgpPeerAddressFamilyPrefixListControlResult> {
    return pulumi.output(args).apply((a: any) => getBgpPeerAddressFamilyPrefixListControl(a, opts))
}

/**
 * A collection of arguments for invoking getBgpPeerAddressFamilyPrefixListControl.
 */
export interface GetBgpPeerAddressFamilyPrefixListControlOutputArgs {
    /**
     * Peer address.
     */
    address: pulumi.Input<string>;
    /**
     * Address Family.
     */
    addressFamily: pulumi.Input<string>;
    /**
     * Autonomous system number.
     */
    asn: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Route Control direction.
     */
    direction: pulumi.Input<string>;
    /**
     * VRF name.
     */
    vrf: pulumi.Input<string>;
}
