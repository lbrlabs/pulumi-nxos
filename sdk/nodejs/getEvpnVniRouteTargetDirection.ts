// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read a EVPN VNI Route Target direction.
 *
 * - API Documentation: [rtctrlRttP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:RttP/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getEvpnVniRouteTargetDirection({
 *     direction: "import",
 *     encap: "vxlan-123456",
 * });
 * ```
 */
export function getEvpnVniRouteTargetDirection(args: GetEvpnVniRouteTargetDirectionArgs, opts?: pulumi.InvokeOptions): Promise<GetEvpnVniRouteTargetDirectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getEvpnVniRouteTargetDirection:getEvpnVniRouteTargetDirection", {
        "device": args.device,
        "direction": args.direction,
        "encap": args.encap,
    }, opts);
}

/**
 * A collection of arguments for invoking getEvpnVniRouteTargetDirection.
 */
export interface GetEvpnVniRouteTargetDirectionArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: string;
    /**
     * Route Target direction.
     */
    direction: string;
    /**
     * Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.
     */
    encap: string;
}

/**
 * A collection of values returned by getEvpnVniRouteTargetDirection.
 */
export interface GetEvpnVniRouteTargetDirectionResult {
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * Route Target direction.
     */
    readonly direction: string;
    /**
     * Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.
     */
    readonly encap: string;
    /**
     * The distinguished name of the object.
     */
    readonly id: string;
}
/**
 * This data source can read a EVPN VNI Route Target direction.
 *
 * - API Documentation: [rtctrlRttP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:RttP/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getEvpnVniRouteTargetDirection({
 *     direction: "import",
 *     encap: "vxlan-123456",
 * });
 * ```
 */
export function getEvpnVniRouteTargetDirectionOutput(args: GetEvpnVniRouteTargetDirectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEvpnVniRouteTargetDirectionResult> {
    return pulumi.output(args).apply((a: any) => getEvpnVniRouteTargetDirection(a, opts))
}

/**
 * A collection of arguments for invoking getEvpnVniRouteTargetDirection.
 */
export interface GetEvpnVniRouteTargetDirectionOutputArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Route Target direction.
     */
    direction: pulumi.Input<string>;
    /**
     * Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.
     */
    encap: pulumi.Input<string>;
}
