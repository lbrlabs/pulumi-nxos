// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read an IPv4 Prefix List entry configuration.
 *
 * - API Documentation: [rtpfxEntry](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtpfx:Entry/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getIpv4PrefixListRuleEntry({
 *     order: 10,
 *     ruleName: "RULE1",
 * });
 * ```
 */
export function getIpv4PrefixListRuleEntry(args: GetIpv4PrefixListRuleEntryArgs, opts?: pulumi.InvokeOptions): Promise<GetIpv4PrefixListRuleEntryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getIpv4PrefixListRuleEntry:getIpv4PrefixListRuleEntry", {
        "device": args.device,
        "order": args.order,
        "ruleName": args.ruleName,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpv4PrefixListRuleEntry.
 */
export interface GetIpv4PrefixListRuleEntryArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: string;
    /**
     * IPv4 Prefix List Rule Entry order.
     */
    order: number;
    /**
     * IPv4 Prefix List Rule name.
     */
    ruleName: string;
}

/**
 * A collection of values returned by getIpv4PrefixListRuleEntry.
 */
export interface GetIpv4PrefixListRuleEntryResult {
    /**
     * IPv4 Prefix List Rule Entry action.
     */
    readonly action: string;
    /**
     * IPv4 Prefix List Rule Entry criteria.
     */
    readonly criteria: string;
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * IPv4 Prefix List Rule Entry start range.
     */
    readonly fromRange: number;
    /**
     * The distinguished name of the object.
     */
    readonly id: string;
    /**
     * IPv4 Prefix List Rule Entry order.
     */
    readonly order: number;
    /**
     * IPv4 Prefix List Rule Entry prefix.
     */
    readonly prefix: string;
    /**
     * IPv4 Prefix List Rule name.
     */
    readonly ruleName: string;
    /**
     * IPv4 Prefix List Rule Entry end range.
     */
    readonly toRange: number;
}
/**
 * This data source can read an IPv4 Prefix List entry configuration.
 *
 * - API Documentation: [rtpfxEntry](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtpfx:Entry/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getIpv4PrefixListRuleEntry({
 *     order: 10,
 *     ruleName: "RULE1",
 * });
 * ```
 */
export function getIpv4PrefixListRuleEntryOutput(args: GetIpv4PrefixListRuleEntryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpv4PrefixListRuleEntryResult> {
    return pulumi.output(args).apply((a: any) => getIpv4PrefixListRuleEntry(a, opts))
}

/**
 * A collection of arguments for invoking getIpv4PrefixListRuleEntry.
 */
export interface GetIpv4PrefixListRuleEntryOutputArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * IPv4 Prefix List Rule Entry order.
     */
    order: pulumi.Input<number>;
    /**
     * IPv4 Prefix List Rule name.
     */
    ruleName: pulumi.Input<string>;
}
