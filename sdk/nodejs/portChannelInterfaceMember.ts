// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource can manage a port-channel interface member.
 *
 * - API Documentation: [pcRsMbrIfs](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Interfaces/pc:RsMbrIfs/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@lbrlabs/pulumi-nxos";
 *
 * const example = new nxos.PortChannelInterfaceMember("example", {
 *     interfaceDn: "sys/intf/phys-[eth1/11]",
 *     interfaceId: "po1",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import nxos:index/portChannelInterfaceMember:PortChannelInterfaceMember example "sys/intf/aggr-[po1]/rsmbrIfs-[sys/intf/phys-[eth1/11]]"
 * ```
 */
export class PortChannelInterfaceMember extends pulumi.CustomResource {
    /**
     * Get an existing PortChannelInterfaceMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PortChannelInterfaceMemberState, opts?: pulumi.CustomResourceOptions): PortChannelInterfaceMember {
        return new PortChannelInterfaceMember(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nxos:index/portChannelInterfaceMember:PortChannelInterfaceMember';

    /**
     * Returns true if the given object is an instance of PortChannelInterfaceMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PortChannelInterfaceMember {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PortChannelInterfaceMember.__pulumiType;
    }

    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * DN of interface. For example: `sys/intf/phys-[eth1/1]`.
     */
    public readonly interfaceDn!: pulumi.Output<string>;
    /**
     * Must match first field in the output of `show intf brief`. Example: `po1`.
     */
    public readonly interfaceId!: pulumi.Output<string>;

    /**
     * Create a PortChannelInterfaceMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PortChannelInterfaceMemberArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PortChannelInterfaceMemberArgs | PortChannelInterfaceMemberState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PortChannelInterfaceMemberState | undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["interfaceDn"] = state ? state.interfaceDn : undefined;
            resourceInputs["interfaceId"] = state ? state.interfaceId : undefined;
        } else {
            const args = argsOrState as PortChannelInterfaceMemberArgs | undefined;
            if ((!args || args.interfaceDn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'interfaceDn'");
            }
            if ((!args || args.interfaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'interfaceId'");
            }
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["interfaceDn"] = args ? args.interfaceDn : undefined;
            resourceInputs["interfaceId"] = args ? args.interfaceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PortChannelInterfaceMember.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PortChannelInterfaceMember resources.
 */
export interface PortChannelInterfaceMemberState {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * DN of interface. For example: `sys/intf/phys-[eth1/1]`.
     */
    interfaceDn?: pulumi.Input<string>;
    /**
     * Must match first field in the output of `show intf brief`. Example: `po1`.
     */
    interfaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PortChannelInterfaceMember resource.
 */
export interface PortChannelInterfaceMemberArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * DN of interface. For example: `sys/intf/phys-[eth1/1]`.
     */
    interfaceDn: pulumi.Input<string>;
    /**
     * Must match first field in the output of `show intf brief`. Example: `po1`.
     */
    interfaceId: pulumi.Input<string>;
}
