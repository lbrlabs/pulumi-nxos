// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the OSPF Area configuration.
 *
 * - API Documentation: [ospfArea](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:Area/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getOspfArea({
 *     areaId: "0.0.0.10",
 *     instanceName: "OSPF1",
 *     vrfName: "VRF1",
 * });
 * ```
 */
export function getOspfArea(args: GetOspfAreaArgs, opts?: pulumi.InvokeOptions): Promise<GetOspfAreaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getOspfArea:getOspfArea", {
        "areaId": args.areaId,
        "device": args.device,
        "instanceName": args.instanceName,
        "vrfName": args.vrfName,
    }, opts);
}

/**
 * A collection of arguments for invoking getOspfArea.
 */
export interface GetOspfAreaArgs {
    /**
     * Area identifier to which a network or interface belongs in IPv4 address format.
     */
    areaId: string;
    /**
     * A device name from the provider configuration.
     */
    device?: string;
    /**
     * OSPF instance name.
     */
    instanceName: string;
    /**
     * VRF name.
     */
    vrfName: string;
}

/**
 * A collection of values returned by getOspfArea.
 */
export interface GetOspfAreaResult {
    /**
     * Area identifier to which a network or interface belongs in IPv4 address format.
     */
    readonly areaId: string;
    /**
     * Authentication type.
     */
    readonly authenticationType: string;
    /**
     * Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types.
     */
    readonly cost: number;
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * The distinguished name of the object.
     */
    readonly id: string;
    /**
     * OSPF instance name.
     */
    readonly instanceName: string;
    /**
     * Area type.
     */
    readonly type: string;
    /**
     * VRF name.
     */
    readonly vrfName: string;
}
/**
 * This data source can read the OSPF Area configuration.
 *
 * - API Documentation: [ospfArea](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:Area/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getOspfArea({
 *     areaId: "0.0.0.10",
 *     instanceName: "OSPF1",
 *     vrfName: "VRF1",
 * });
 * ```
 */
export function getOspfAreaOutput(args: GetOspfAreaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOspfAreaResult> {
    return pulumi.output(args).apply((a: any) => getOspfArea(a, opts))
}

/**
 * A collection of arguments for invoking getOspfArea.
 */
export interface GetOspfAreaOutputArgs {
    /**
     * Area identifier to which a network or interface belongs in IPv4 address format.
     */
    areaId: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * OSPF instance name.
     */
    instanceName: pulumi.Input<string>;
    /**
     * VRF name.
     */
    vrfName: pulumi.Input<string>;
}
