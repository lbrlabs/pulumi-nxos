// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read an SVI interface.
 *
 * - API Documentation: [sviIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Interfaces/svi:If/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getSviInterface({
 *     interfaceId: "vlan293",
 * });
 * ```
 */
export function getSviInterface(args: GetSviInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetSviInterfaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getSviInterface:getSviInterface", {
        "device": args.device,
        "interfaceId": args.interfaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSviInterface.
 */
export interface GetSviInterfaceArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: string;
    /**
     * Must match first field in the output of `show intf brief`. Example: `vlan100`.
     */
    interfaceId: string;
}

/**
 * A collection of values returned by getSviInterface.
 */
export interface GetSviInterfaceResult {
    /**
     * Administrative port state.
     */
    readonly adminState: string;
    /**
     * Specifies the administrative port bandwidth.
     */
    readonly bandwidth: number;
    /**
     * Specifies the administrative port delay.
     */
    readonly delay: number;
    /**
     * Interface description.
     */
    readonly description: string;
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * The distinguished name of the object.
     */
    readonly id: string;
    /**
     * Must match first field in the output of `show intf brief`. Example: `vlan100`.
     */
    readonly interfaceId: string;
    /**
     * The administrative port medium type.
     */
    readonly medium: string;
    /**
     * Administrative port MTU.
     */
    readonly mtu: number;
}
/**
 * This data source can read an SVI interface.
 *
 * - API Documentation: [sviIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Interfaces/svi:If/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getSviInterface({
 *     interfaceId: "vlan293",
 * });
 * ```
 */
export function getSviInterfaceOutput(args: GetSviInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSviInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getSviInterface(a, opts))
}

/**
 * A collection of arguments for invoking getSviInterface.
 */
export interface GetSviInterfaceOutputArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Must match first field in the output of `show intf brief`. Example: `vlan100`.
     */
    interfaceId: pulumi.Input<string>;
}
