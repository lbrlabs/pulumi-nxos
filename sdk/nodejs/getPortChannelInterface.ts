// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the configuration of a port-channel interface.
 *
 * - API Documentation: [pcAggrIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Interfaces/pc:AggrIf/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getPortChannelInterface({
 *     interfaceId: "po1",
 * });
 * ```
 */
export function getPortChannelInterface(args: GetPortChannelInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetPortChannelInterfaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getPortChannelInterface:getPortChannelInterface", {
        "device": args.device,
        "interfaceId": args.interfaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPortChannelInterface.
 */
export interface GetPortChannelInterfaceArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: string;
    /**
     * Must match first field in the output of `show intf brief`. Example: `po1`.
     */
    interfaceId: string;
}

/**
 * A collection of values returned by getPortChannelInterface.
 */
export interface GetPortChannelInterfaceResult {
    /**
     * Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.
     */
    readonly accessVlan: string;
    /**
     * Administrative port state.
     */
    readonly adminState: string;
    /**
     * Administrative port auto-negotiation.
     */
    readonly autoNegotiation: string;
    /**
     * The bandwidth parameter for a routed interface, port channel, or subinterface.
     */
    readonly bandwidth: number;
    /**
     * The administrative port delay time.
     */
    readonly delay: number;
    /**
     * Interface description.
     */
    readonly description: string;
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * Duplex.
     */
    readonly duplex: string;
    /**
     * The distinguished name of the object.
     */
    readonly id: string;
    /**
     * Must match first field in the output of `show intf brief`. Example: `po1`.
     */
    readonly interfaceId: string;
    /**
     * Administrative port layer.
     */
    readonly layer: string;
    /**
     * Administrative link logging.
     */
    readonly linkLogging: string;
    /**
     * Maximum links.
     */
    readonly maximumLinks: number;
    /**
     * The administrative port medium type.
     */
    readonly medium: string;
    /**
     * Minimum links.
     */
    readonly minimumLinks: number;
    /**
     * Administrative port mode.
     */
    readonly mode: string;
    /**
     * Administrative port MTU.
     */
    readonly mtu: number;
    /**
     * Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.
     */
    readonly nativeVlan: string;
    /**
     * The aggregated interface protocol channel mode.
     */
    readonly portChannelMode: string;
    /**
     * Administrative port speed.
     */
    readonly speed: string;
    /**
     * Suspend Individual Port.
     */
    readonly suspendIndividual: string;
    /**
     * List of trunk VLANs.
     */
    readonly trunkVlans: string;
    /**
     * Port User Config Flags.
     */
    readonly userConfiguredFlags: string;
}
/**
 * This data source can read the configuration of a port-channel interface.
 *
 * - API Documentation: [pcAggrIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Interfaces/pc:AggrIf/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getPortChannelInterface({
 *     interfaceId: "po1",
 * });
 * ```
 */
export function getPortChannelInterfaceOutput(args: GetPortChannelInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPortChannelInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getPortChannelInterface(a, opts))
}

/**
 * A collection of arguments for invoking getPortChannelInterface.
 */
export interface GetPortChannelInterfaceOutputArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Must match first field in the output of `show intf brief`. Example: `po1`.
     */
    interfaceId: pulumi.Input<string>;
}
