// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the NVE interface configuration.
 *
 * - API Documentation: [nvoEp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Network%20Virtualization/nvo:Ep/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getNveInterface({});
 * ```
 */
export function getNveInterface(args?: GetNveInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetNveInterfaceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getNveInterface:getNveInterface", {
        "device": args.device,
    }, opts);
}

/**
 * A collection of arguments for invoking getNveInterface.
 */
export interface GetNveInterfaceArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: string;
}

/**
 * A collection of values returned by getNveInterface.
 */
export interface GetNveInterfaceResult {
    /**
     * Administrative state.
     */
    readonly adminState: string;
    /**
     * Enable or disable Virtual MAC Advertisement in VPC mode.
     */
    readonly advertiseVirtualMac: boolean;
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * Hold Down Time.
     */
    readonly holdDownTime: number;
    /**
     * Host Reachability Protocol.
     */
    readonly hostReachabilityProtocol: string;
    /**
     * The distinguished name of the object.
     */
    readonly id: string;
    /**
     * VxLAN Ingress Replication Protocol BGP.
     */
    readonly ingressReplicationProtocolBgp: boolean;
    /**
     * Base multicast group address for L2.
     */
    readonly multicastGroupL2: string;
    /**
     * Base multicast group address for L3.
     */
    readonly multicastGroupL3: string;
    /**
     * Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`.
     */
    readonly multisiteSourceInterface: string;
    /**
     * Source Interface associated with the NVE. Must match first field in the output of `show int brief`.
     */
    readonly sourceInterface: string;
    /**
     * Suppress ARP.
     */
    readonly suppressArp: boolean;
    /**
     * Suppress MAC Route.
     */
    readonly suppressMacRoute: boolean;
}
/**
 * This data source can read the NVE interface configuration.
 *
 * - API Documentation: [nvoEp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Network%20Virtualization/nvo:Ep/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nxos from "@pulumi/nxos";
 *
 * const example = nxos.getNveInterface({});
 * ```
 */
export function getNveInterfaceOutput(args?: GetNveInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNveInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getNveInterface(a, opts))
}

/**
 * A collection of arguments for invoking getNveInterface.
 */
export interface GetNveInterfaceOutputArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
}
