// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.nxos.NveInterfaceArgs;
import com.pulumi.nxos.Utilities;
import com.pulumi.nxos.inputs.NveInterfaceState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage the NVE interface configuration.
 * 
 * - API Documentation: [nvoEp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Network%20Virtualization/nvo:Ep/)
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.nxos.NveInterface;
 * import com.pulumi.nxos.NveInterfaceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new NveInterface(&#34;example&#34;, NveInterfaceArgs.builder()        
 *             .adminState(&#34;enabled&#34;)
 *             .advertiseVirtualMac(true)
 *             .holdDownTime(60)
 *             .hostReachabilityProtocol(&#34;bgp&#34;)
 *             .ingressReplicationProtocolBgp(true)
 *             .multicastGroupL2(&#34;0.0.0.0&#34;)
 *             .multicastGroupL3(&#34;0.0.0.0&#34;)
 *             .multisiteSourceInterface(&#34;unspecified&#34;)
 *             .sourceInterface(&#34;lo0&#34;)
 *             .suppressArp(true)
 *             .suppressMacRoute(false)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import nxos:index/nveInterface:NveInterface example &#34;sys/eps/epId-[1]&#34;
 * ```
 * 
 */
@ResourceType(type="nxos:index/nveInterface:NveInterface")
public class NveInterface extends com.pulumi.resources.CustomResource {
    /**
     * Administrative state. - Choices: `enabled`, `disabled` - Default value: `disabled`
     * 
     */
    @Export(name="adminState", refs={String.class}, tree="[0]")
    private Output<String> adminState;

    /**
     * @return Administrative state. - Choices: `enabled`, `disabled` - Default value: `disabled`
     * 
     */
    public Output<String> adminState() {
        return this.adminState;
    }
    /**
     * Enable or disable Virtual MAC Advertisement in VPC mode. - Default value: `false`
     * 
     */
    @Export(name="advertiseVirtualMac", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> advertiseVirtualMac;

    /**
     * @return Enable or disable Virtual MAC Advertisement in VPC mode. - Default value: `false`
     * 
     */
    public Output<Boolean> advertiseVirtualMac() {
        return this.advertiseVirtualMac;
    }
    /**
     * A device name from the provider configuration.
     * 
     */
    @Export(name="device", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Output<Optional<String>> device() {
        return Codegen.optional(this.device);
    }
    /**
     * Hold Down Time. - Range: `1`-`1500` - Default value: `180`
     * 
     */
    @Export(name="holdDownTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> holdDownTime;

    /**
     * @return Hold Down Time. - Range: `1`-`1500` - Default value: `180`
     * 
     */
    public Output<Integer> holdDownTime() {
        return this.holdDownTime;
    }
    /**
     * Host Reachability Protocol. - Choices: `Flood-and-learn`, `bgp`, `controller`, `openflow`, `openflowIR` - Default value:
     * `Flood-and-learn`
     * 
     */
    @Export(name="hostReachabilityProtocol", refs={String.class}, tree="[0]")
    private Output<String> hostReachabilityProtocol;

    /**
     * @return Host Reachability Protocol. - Choices: `Flood-and-learn`, `bgp`, `controller`, `openflow`, `openflowIR` - Default value:
     * `Flood-and-learn`
     * 
     */
    public Output<String> hostReachabilityProtocol() {
        return this.hostReachabilityProtocol;
    }
    /**
     * VxLAN Ingress Replication Protocol BGP. - Default value: `false`
     * 
     */
    @Export(name="ingressReplicationProtocolBgp", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> ingressReplicationProtocolBgp;

    /**
     * @return VxLAN Ingress Replication Protocol BGP. - Default value: `false`
     * 
     */
    public Output<Boolean> ingressReplicationProtocolBgp() {
        return this.ingressReplicationProtocolBgp;
    }
    /**
     * Base multicast group address for L2. - Default value: `0.0.0.0`
     * 
     */
    @Export(name="multicastGroupL2", refs={String.class}, tree="[0]")
    private Output<String> multicastGroupL2;

    /**
     * @return Base multicast group address for L2. - Default value: `0.0.0.0`
     * 
     */
    public Output<String> multicastGroupL2() {
        return this.multicastGroupL2;
    }
    /**
     * Base multicast group address for L3. - Default value: `0.0.0.0`
     * 
     */
    @Export(name="multicastGroupL3", refs={String.class}, tree="[0]")
    private Output<String> multicastGroupL3;

    /**
     * @return Base multicast group address for L3. - Default value: `0.0.0.0`
     * 
     */
    public Output<String> multicastGroupL3() {
        return this.multicastGroupL3;
    }
    /**
     * Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`. - Default
     * value: `unspecified`
     * 
     */
    @Export(name="multisiteSourceInterface", refs={String.class}, tree="[0]")
    private Output<String> multisiteSourceInterface;

    /**
     * @return Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`. - Default
     * value: `unspecified`
     * 
     */
    public Output<String> multisiteSourceInterface() {
        return this.multisiteSourceInterface;
    }
    /**
     * Source Interface associated with the NVE. Must match first field in the output of `show int brief`. - Default value:
     * `unspecified`
     * 
     */
    @Export(name="sourceInterface", refs={String.class}, tree="[0]")
    private Output<String> sourceInterface;

    /**
     * @return Source Interface associated with the NVE. Must match first field in the output of `show int brief`. - Default value:
     * `unspecified`
     * 
     */
    public Output<String> sourceInterface() {
        return this.sourceInterface;
    }
    /**
     * Suppress ARP. - Default value: `false`
     * 
     */
    @Export(name="suppressArp", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> suppressArp;

    /**
     * @return Suppress ARP. - Default value: `false`
     * 
     */
    public Output<Boolean> suppressArp() {
        return this.suppressArp;
    }
    /**
     * Suppress MAC Route. - Default value: `false`
     * 
     */
    @Export(name="suppressMacRoute", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> suppressMacRoute;

    /**
     * @return Suppress MAC Route. - Default value: `false`
     * 
     */
    public Output<Boolean> suppressMacRoute() {
        return this.suppressMacRoute;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NveInterface(String name) {
        this(name, NveInterfaceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NveInterface(String name, @Nullable NveInterfaceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NveInterface(String name, @Nullable NveInterfaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("nxos:index/nveInterface:NveInterface", name, args == null ? NveInterfaceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private NveInterface(String name, Output<String> id, @Nullable NveInterfaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("nxos:index/nveInterface:NveInterface", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NveInterface get(String name, Output<String> id, @Nullable NveInterfaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NveInterface(name, id, state, options);
    }
}
