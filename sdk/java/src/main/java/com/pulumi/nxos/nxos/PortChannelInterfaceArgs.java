// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.nxos;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PortChannelInterfaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final PortChannelInterfaceArgs Empty = new PortChannelInterfaceArgs();

    /**
     * Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`
     * 
     */
    @Import(name="accessVlan")
    private @Nullable Output<String> accessVlan;

    /**
     * @return Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`
     * 
     */
    public Optional<Output<String>> accessVlan() {
        return Optional.ofNullable(this.accessVlan);
    }

    /**
     * Administrative port state. - Choices: `up`, `down` - Default value: `up`
     * 
     */
    @Import(name="adminState")
    private @Nullable Output<String> adminState;

    /**
     * @return Administrative port state. - Choices: `up`, `down` - Default value: `up`
     * 
     */
    public Optional<Output<String>> adminState() {
        return Optional.ofNullable(this.adminState);
    }

    /**
     * Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`
     * 
     */
    @Import(name="autoNegotiation")
    private @Nullable Output<String> autoNegotiation;

    /**
     * @return Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`
     * 
     */
    public Optional<Output<String>> autoNegotiation() {
        return Optional.ofNullable(this.autoNegotiation);
    }

    /**
     * The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default
     * value: `0`
     * 
     */
    @Import(name="bandwidth")
    private @Nullable Output<Integer> bandwidth;

    /**
     * @return The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default
     * value: `0`
     * 
     */
    public Optional<Output<Integer>> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }

    /**
     * The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`
     * 
     */
    @Import(name="delay")
    private @Nullable Output<Integer> delay;

    /**
     * @return The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`
     * 
     */
    public Optional<Output<Integer>> delay() {
        return Optional.ofNullable(this.delay);
    }

    /**
     * Interface description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Interface description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`
     * 
     */
    @Import(name="duplex")
    private @Nullable Output<String> duplex;

    /**
     * @return Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`
     * 
     */
    public Optional<Output<String>> duplex() {
        return Optional.ofNullable(this.duplex);
    }

    /**
     * Must match first field in the output of `show intf brief`. Example: `po1`.
     * 
     */
    @Import(name="interfaceId", required=true)
    private Output<String> interfaceId;

    /**
     * @return Must match first field in the output of `show intf brief`. Example: `po1`.
     * 
     */
    public Output<String> interfaceId() {
        return this.interfaceId;
    }

    /**
     * Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`
     * 
     */
    @Import(name="layer")
    private @Nullable Output<String> layer;

    /**
     * @return Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`
     * 
     */
    public Optional<Output<String>> layer() {
        return Optional.ofNullable(this.layer);
    }

    /**
     * Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`
     * 
     */
    @Import(name="linkLogging")
    private @Nullable Output<String> linkLogging;

    /**
     * @return Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`
     * 
     */
    public Optional<Output<String>> linkLogging() {
        return Optional.ofNullable(this.linkLogging);
    }

    /**
     * Maximum links. - Range: `1`-`32` - Default value: `32`
     * 
     */
    @Import(name="maximumLinks")
    private @Nullable Output<Integer> maximumLinks;

    /**
     * @return Maximum links. - Range: `1`-`32` - Default value: `32`
     * 
     */
    public Optional<Output<Integer>> maximumLinks() {
        return Optional.ofNullable(this.maximumLinks);
    }

    /**
     * The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`
     * 
     */
    @Import(name="medium")
    private @Nullable Output<String> medium;

    /**
     * @return The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`
     * 
     */
    public Optional<Output<String>> medium() {
        return Optional.ofNullable(this.medium);
    }

    /**
     * Minimum links. - Range: `1`-`32` - Default value: `1`
     * 
     */
    @Import(name="minimumLinks")
    private @Nullable Output<Integer> minimumLinks;

    /**
     * @return Minimum links. - Range: `1`-`32` - Default value: `1`
     * 
     */
    public Optional<Output<Integer>> minimumLinks() {
        return Optional.ofNullable(this.minimumLinks);
    }

    /**
     * Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,
     * `trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,
     * `trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    @Import(name="mtu")
    private @Nullable Output<Integer> mtu;

    /**
     * @return Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    public Optional<Output<Integer>> mtu() {
        return Optional.ofNullable(this.mtu);
    }

    /**
     * Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`
     * 
     */
    @Import(name="nativeVlan")
    private @Nullable Output<String> nativeVlan;

    /**
     * @return Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`
     * 
     */
    public Optional<Output<String>> nativeVlan() {
        return Optional.ofNullable(this.nativeVlan);
    }

    /**
     * The aggregated interface protocol channel mode. - Choices: `on`, `static`, `active`, `passive`, `mac-pin` - Default
     * value: `on`
     * 
     */
    @Import(name="portChannelMode")
    private @Nullable Output<String> portChannelMode;

    /**
     * @return The aggregated interface protocol channel mode. - Choices: `on`, `static`, `active`, `passive`, `mac-pin` - Default
     * value: `on`
     * 
     */
    public Optional<Output<String>> portChannelMode() {
        return Optional.ofNullable(this.portChannelMode);
    }

    /**
     * Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,
     * `100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:
     * `auto`
     * 
     */
    @Import(name="speed")
    private @Nullable Output<String> speed;

    /**
     * @return Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,
     * `100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:
     * `auto`
     * 
     */
    public Optional<Output<String>> speed() {
        return Optional.ofNullable(this.speed);
    }

    /**
     * Suspend Individual Port. - Choices: `enable`, `disable` - Default value: `enable`
     * 
     */
    @Import(name="suspendIndividual")
    private @Nullable Output<String> suspendIndividual;

    /**
     * @return Suspend Individual Port. - Choices: `enable`, `disable` - Default value: `enable`
     * 
     */
    public Optional<Output<String>> suspendIndividual() {
        return Optional.ofNullable(this.suspendIndividual);
    }

    /**
     * List of trunk VLANs. - Default value: `1-4094`
     * 
     */
    @Import(name="trunkVlans")
    private @Nullable Output<String> trunkVlans;

    /**
     * @return List of trunk VLANs. - Default value: `1-4094`
     * 
     */
    public Optional<Output<String>> trunkVlans() {
        return Optional.ofNullable(this.trunkVlans);
    }

    /**
     * Port User Config Flags.
     * 
     */
    @Import(name="userConfiguredFlags")
    private @Nullable Output<String> userConfiguredFlags;

    /**
     * @return Port User Config Flags.
     * 
     */
    public Optional<Output<String>> userConfiguredFlags() {
        return Optional.ofNullable(this.userConfiguredFlags);
    }

    private PortChannelInterfaceArgs() {}

    private PortChannelInterfaceArgs(PortChannelInterfaceArgs $) {
        this.accessVlan = $.accessVlan;
        this.adminState = $.adminState;
        this.autoNegotiation = $.autoNegotiation;
        this.bandwidth = $.bandwidth;
        this.delay = $.delay;
        this.description = $.description;
        this.device = $.device;
        this.duplex = $.duplex;
        this.interfaceId = $.interfaceId;
        this.layer = $.layer;
        this.linkLogging = $.linkLogging;
        this.maximumLinks = $.maximumLinks;
        this.medium = $.medium;
        this.minimumLinks = $.minimumLinks;
        this.mode = $.mode;
        this.mtu = $.mtu;
        this.nativeVlan = $.nativeVlan;
        this.portChannelMode = $.portChannelMode;
        this.speed = $.speed;
        this.suspendIndividual = $.suspendIndividual;
        this.trunkVlans = $.trunkVlans;
        this.userConfiguredFlags = $.userConfiguredFlags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PortChannelInterfaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PortChannelInterfaceArgs $;

        public Builder() {
            $ = new PortChannelInterfaceArgs();
        }

        public Builder(PortChannelInterfaceArgs defaults) {
            $ = new PortChannelInterfaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessVlan Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`
         * 
         * @return builder
         * 
         */
        public Builder accessVlan(@Nullable Output<String> accessVlan) {
            $.accessVlan = accessVlan;
            return this;
        }

        /**
         * @param accessVlan Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`
         * 
         * @return builder
         * 
         */
        public Builder accessVlan(String accessVlan) {
            return accessVlan(Output.of(accessVlan));
        }

        /**
         * @param adminState Administrative port state. - Choices: `up`, `down` - Default value: `up`
         * 
         * @return builder
         * 
         */
        public Builder adminState(@Nullable Output<String> adminState) {
            $.adminState = adminState;
            return this;
        }

        /**
         * @param adminState Administrative port state. - Choices: `up`, `down` - Default value: `up`
         * 
         * @return builder
         * 
         */
        public Builder adminState(String adminState) {
            return adminState(Output.of(adminState));
        }

        /**
         * @param autoNegotiation Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`
         * 
         * @return builder
         * 
         */
        public Builder autoNegotiation(@Nullable Output<String> autoNegotiation) {
            $.autoNegotiation = autoNegotiation;
            return this;
        }

        /**
         * @param autoNegotiation Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`
         * 
         * @return builder
         * 
         */
        public Builder autoNegotiation(String autoNegotiation) {
            return autoNegotiation(Output.of(autoNegotiation));
        }

        /**
         * @param bandwidth The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default
         * value: `0`
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(@Nullable Output<Integer> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        /**
         * @param bandwidth The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default
         * value: `0`
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(Integer bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        /**
         * @param delay The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder delay(@Nullable Output<Integer> delay) {
            $.delay = delay;
            return this;
        }

        /**
         * @param delay The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder delay(Integer delay) {
            return delay(Output.of(delay));
        }

        /**
         * @param description Interface description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Interface description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param duplex Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`
         * 
         * @return builder
         * 
         */
        public Builder duplex(@Nullable Output<String> duplex) {
            $.duplex = duplex;
            return this;
        }

        /**
         * @param duplex Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`
         * 
         * @return builder
         * 
         */
        public Builder duplex(String duplex) {
            return duplex(Output.of(duplex));
        }

        /**
         * @param interfaceId Must match first field in the output of `show intf brief`. Example: `po1`.
         * 
         * @return builder
         * 
         */
        public Builder interfaceId(Output<String> interfaceId) {
            $.interfaceId = interfaceId;
            return this;
        }

        /**
         * @param interfaceId Must match first field in the output of `show intf brief`. Example: `po1`.
         * 
         * @return builder
         * 
         */
        public Builder interfaceId(String interfaceId) {
            return interfaceId(Output.of(interfaceId));
        }

        /**
         * @param layer Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`
         * 
         * @return builder
         * 
         */
        public Builder layer(@Nullable Output<String> layer) {
            $.layer = layer;
            return this;
        }

        /**
         * @param layer Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`
         * 
         * @return builder
         * 
         */
        public Builder layer(String layer) {
            return layer(Output.of(layer));
        }

        /**
         * @param linkLogging Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`
         * 
         * @return builder
         * 
         */
        public Builder linkLogging(@Nullable Output<String> linkLogging) {
            $.linkLogging = linkLogging;
            return this;
        }

        /**
         * @param linkLogging Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`
         * 
         * @return builder
         * 
         */
        public Builder linkLogging(String linkLogging) {
            return linkLogging(Output.of(linkLogging));
        }

        /**
         * @param maximumLinks Maximum links. - Range: `1`-`32` - Default value: `32`
         * 
         * @return builder
         * 
         */
        public Builder maximumLinks(@Nullable Output<Integer> maximumLinks) {
            $.maximumLinks = maximumLinks;
            return this;
        }

        /**
         * @param maximumLinks Maximum links. - Range: `1`-`32` - Default value: `32`
         * 
         * @return builder
         * 
         */
        public Builder maximumLinks(Integer maximumLinks) {
            return maximumLinks(Output.of(maximumLinks));
        }

        /**
         * @param medium The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`
         * 
         * @return builder
         * 
         */
        public Builder medium(@Nullable Output<String> medium) {
            $.medium = medium;
            return this;
        }

        /**
         * @param medium The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`
         * 
         * @return builder
         * 
         */
        public Builder medium(String medium) {
            return medium(Output.of(medium));
        }

        /**
         * @param minimumLinks Minimum links. - Range: `1`-`32` - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder minimumLinks(@Nullable Output<Integer> minimumLinks) {
            $.minimumLinks = minimumLinks;
            return this;
        }

        /**
         * @param minimumLinks Minimum links. - Range: `1`-`32` - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder minimumLinks(Integer minimumLinks) {
            return minimumLinks(Output.of(minimumLinks));
        }

        /**
         * @param mode Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,
         * `trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,
         * `trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param mtu Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder mtu(@Nullable Output<Integer> mtu) {
            $.mtu = mtu;
            return this;
        }

        /**
         * @param mtu Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder mtu(Integer mtu) {
            return mtu(Output.of(mtu));
        }

        /**
         * @param nativeVlan Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`
         * 
         * @return builder
         * 
         */
        public Builder nativeVlan(@Nullable Output<String> nativeVlan) {
            $.nativeVlan = nativeVlan;
            return this;
        }

        /**
         * @param nativeVlan Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`
         * 
         * @return builder
         * 
         */
        public Builder nativeVlan(String nativeVlan) {
            return nativeVlan(Output.of(nativeVlan));
        }

        /**
         * @param portChannelMode The aggregated interface protocol channel mode. - Choices: `on`, `static`, `active`, `passive`, `mac-pin` - Default
         * value: `on`
         * 
         * @return builder
         * 
         */
        public Builder portChannelMode(@Nullable Output<String> portChannelMode) {
            $.portChannelMode = portChannelMode;
            return this;
        }

        /**
         * @param portChannelMode The aggregated interface protocol channel mode. - Choices: `on`, `static`, `active`, `passive`, `mac-pin` - Default
         * value: `on`
         * 
         * @return builder
         * 
         */
        public Builder portChannelMode(String portChannelMode) {
            return portChannelMode(Output.of(portChannelMode));
        }

        /**
         * @param speed Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,
         * `100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:
         * `auto`
         * 
         * @return builder
         * 
         */
        public Builder speed(@Nullable Output<String> speed) {
            $.speed = speed;
            return this;
        }

        /**
         * @param speed Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,
         * `100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:
         * `auto`
         * 
         * @return builder
         * 
         */
        public Builder speed(String speed) {
            return speed(Output.of(speed));
        }

        /**
         * @param suspendIndividual Suspend Individual Port. - Choices: `enable`, `disable` - Default value: `enable`
         * 
         * @return builder
         * 
         */
        public Builder suspendIndividual(@Nullable Output<String> suspendIndividual) {
            $.suspendIndividual = suspendIndividual;
            return this;
        }

        /**
         * @param suspendIndividual Suspend Individual Port. - Choices: `enable`, `disable` - Default value: `enable`
         * 
         * @return builder
         * 
         */
        public Builder suspendIndividual(String suspendIndividual) {
            return suspendIndividual(Output.of(suspendIndividual));
        }

        /**
         * @param trunkVlans List of trunk VLANs. - Default value: `1-4094`
         * 
         * @return builder
         * 
         */
        public Builder trunkVlans(@Nullable Output<String> trunkVlans) {
            $.trunkVlans = trunkVlans;
            return this;
        }

        /**
         * @param trunkVlans List of trunk VLANs. - Default value: `1-4094`
         * 
         * @return builder
         * 
         */
        public Builder trunkVlans(String trunkVlans) {
            return trunkVlans(Output.of(trunkVlans));
        }

        /**
         * @param userConfiguredFlags Port User Config Flags.
         * 
         * @return builder
         * 
         */
        public Builder userConfiguredFlags(@Nullable Output<String> userConfiguredFlags) {
            $.userConfiguredFlags = userConfiguredFlags;
            return this;
        }

        /**
         * @param userConfiguredFlags Port User Config Flags.
         * 
         * @return builder
         * 
         */
        public Builder userConfiguredFlags(String userConfiguredFlags) {
            return userConfiguredFlags(Output.of(userConfiguredFlags));
        }

        public PortChannelInterfaceArgs build() {
            $.interfaceId = Objects.requireNonNull($.interfaceId, "expected parameter 'interfaceId' to be non-null");
            return $;
        }
    }

}
