// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.nxos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PimAnycastRpPeerState extends com.pulumi.resources.ResourceArgs {

    public static final PimAnycastRpPeerState Empty = new PimAnycastRpPeerState();

    /**
     * Anycast RP address.
     * 
     */
    @Import(name="address")
    private @Nullable Output<String> address;

    /**
     * @return Anycast RP address.
     * 
     */
    public Optional<Output<String>> address() {
        return Optional.ofNullable(this.address);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * RP set address.
     * 
     */
    @Import(name="rpSetAddress")
    private @Nullable Output<String> rpSetAddress;

    /**
     * @return RP set address.
     * 
     */
    public Optional<Output<String>> rpSetAddress() {
        return Optional.ofNullable(this.rpSetAddress);
    }

    /**
     * VRF name.
     * 
     */
    @Import(name="vrfName")
    private @Nullable Output<String> vrfName;

    /**
     * @return VRF name.
     * 
     */
    public Optional<Output<String>> vrfName() {
        return Optional.ofNullable(this.vrfName);
    }

    private PimAnycastRpPeerState() {}

    private PimAnycastRpPeerState(PimAnycastRpPeerState $) {
        this.address = $.address;
        this.device = $.device;
        this.rpSetAddress = $.rpSetAddress;
        this.vrfName = $.vrfName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PimAnycastRpPeerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PimAnycastRpPeerState $;

        public Builder() {
            $ = new PimAnycastRpPeerState();
        }

        public Builder(PimAnycastRpPeerState defaults) {
            $ = new PimAnycastRpPeerState(Objects.requireNonNull(defaults));
        }

        /**
         * @param address Anycast RP address.
         * 
         * @return builder
         * 
         */
        public Builder address(@Nullable Output<String> address) {
            $.address = address;
            return this;
        }

        /**
         * @param address Anycast RP address.
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            return address(Output.of(address));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param rpSetAddress RP set address.
         * 
         * @return builder
         * 
         */
        public Builder rpSetAddress(@Nullable Output<String> rpSetAddress) {
            $.rpSetAddress = rpSetAddress;
            return this;
        }

        /**
         * @param rpSetAddress RP set address.
         * 
         * @return builder
         * 
         */
        public Builder rpSetAddress(String rpSetAddress) {
            return rpSetAddress(Output.of(rpSetAddress));
        }

        /**
         * @param vrfName VRF name.
         * 
         * @return builder
         * 
         */
        public Builder vrfName(@Nullable Output<String> vrfName) {
            $.vrfName = vrfName;
            return this;
        }

        /**
         * @param vrfName VRF name.
         * 
         * @return builder
         * 
         */
        public Builder vrfName(String vrfName) {
            return vrfName(Output.of(vrfName));
        }

        public PimAnycastRpPeerState build() {
            return $;
        }
    }

}
