// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PimAnycastRpPeerArgs extends com.pulumi.resources.ResourceArgs {

    public static final PimAnycastRpPeerArgs Empty = new PimAnycastRpPeerArgs();

    /**
     * Anycast RP address.
     * 
     */
    @Import(name="address", required=true)
    private Output<String> address;

    /**
     * @return Anycast RP address.
     * 
     */
    public Output<String> address() {
        return this.address;
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * RP set address.
     * 
     */
    @Import(name="rpSetAddress", required=true)
    private Output<String> rpSetAddress;

    /**
     * @return RP set address.
     * 
     */
    public Output<String> rpSetAddress() {
        return this.rpSetAddress;
    }

    /**
     * VRF name.
     * 
     */
    @Import(name="vrfName", required=true)
    private Output<String> vrfName;

    /**
     * @return VRF name.
     * 
     */
    public Output<String> vrfName() {
        return this.vrfName;
    }

    private PimAnycastRpPeerArgs() {}

    private PimAnycastRpPeerArgs(PimAnycastRpPeerArgs $) {
        this.address = $.address;
        this.device = $.device;
        this.rpSetAddress = $.rpSetAddress;
        this.vrfName = $.vrfName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PimAnycastRpPeerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PimAnycastRpPeerArgs $;

        public Builder() {
            $ = new PimAnycastRpPeerArgs();
        }

        public Builder(PimAnycastRpPeerArgs defaults) {
            $ = new PimAnycastRpPeerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param address Anycast RP address.
         * 
         * @return builder
         * 
         */
        public Builder address(Output<String> address) {
            $.address = address;
            return this;
        }

        /**
         * @param address Anycast RP address.
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            return address(Output.of(address));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param rpSetAddress RP set address.
         * 
         * @return builder
         * 
         */
        public Builder rpSetAddress(Output<String> rpSetAddress) {
            $.rpSetAddress = rpSetAddress;
            return this;
        }

        /**
         * @param rpSetAddress RP set address.
         * 
         * @return builder
         * 
         */
        public Builder rpSetAddress(String rpSetAddress) {
            return rpSetAddress(Output.of(rpSetAddress));
        }

        /**
         * @param vrfName VRF name.
         * 
         * @return builder
         * 
         */
        public Builder vrfName(Output<String> vrfName) {
            $.vrfName = vrfName;
            return this;
        }

        /**
         * @param vrfName VRF name.
         * 
         * @return builder
         * 
         */
        public Builder vrfName(String vrfName) {
            return vrfName(Output.of(vrfName));
        }

        public PimAnycastRpPeerArgs build() {
            $.address = Objects.requireNonNull($.address, "expected parameter 'address' to be non-null");
            $.rpSetAddress = Objects.requireNonNull($.rpSetAddress, "expected parameter 'rpSetAddress' to be non-null");
            $.vrfName = Objects.requireNonNull($.vrfName, "expected parameter 'vrfName' to be non-null");
            return $;
        }
    }

}
