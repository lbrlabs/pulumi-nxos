// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOspfVrfArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOspfVrfArgs Empty = new GetOspfVrfArgs();

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * OSPF instance name.
     * 
     */
    @Import(name="instanceName", required=true)
    private Output<String> instanceName;

    /**
     * @return OSPF instance name.
     * 
     */
    public Output<String> instanceName() {
        return this.instanceName;
    }

    /**
     * VRF name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return VRF name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private GetOspfVrfArgs() {}

    private GetOspfVrfArgs(GetOspfVrfArgs $) {
        this.device = $.device;
        this.instanceName = $.instanceName;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOspfVrfArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOspfVrfArgs $;

        public Builder() {
            $ = new GetOspfVrfArgs();
        }

        public Builder(GetOspfVrfArgs defaults) {
            $ = new GetOspfVrfArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param instanceName OSPF instance name.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName OSPF instance name.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param name VRF name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name VRF name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetOspfVrfArgs build() {
            $.instanceName = Objects.requireNonNull($.instanceName, "expected parameter 'instanceName' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
