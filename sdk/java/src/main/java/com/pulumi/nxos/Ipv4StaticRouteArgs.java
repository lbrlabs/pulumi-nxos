// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.nxos.inputs.Ipv4StaticRouteNextHopArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class Ipv4StaticRouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final Ipv4StaticRouteArgs Empty = new Ipv4StaticRouteArgs();

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * List of next hops.
     * 
     */
    @Import(name="nextHops", required=true)
    private Output<List<Ipv4StaticRouteNextHopArgs>> nextHops;

    /**
     * @return List of next hops.
     * 
     */
    public Output<List<Ipv4StaticRouteNextHopArgs>> nextHops() {
        return this.nextHops;
    }

    /**
     * Prefix.
     * 
     */
    @Import(name="prefix", required=true)
    private Output<String> prefix;

    /**
     * @return Prefix.
     * 
     */
    public Output<String> prefix() {
        return this.prefix;
    }

    /**
     * VRF name.
     * 
     */
    @Import(name="vrfName", required=true)
    private Output<String> vrfName;

    /**
     * @return VRF name.
     * 
     */
    public Output<String> vrfName() {
        return this.vrfName;
    }

    private Ipv4StaticRouteArgs() {}

    private Ipv4StaticRouteArgs(Ipv4StaticRouteArgs $) {
        this.device = $.device;
        this.nextHops = $.nextHops;
        this.prefix = $.prefix;
        this.vrfName = $.vrfName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(Ipv4StaticRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Ipv4StaticRouteArgs $;

        public Builder() {
            $ = new Ipv4StaticRouteArgs();
        }

        public Builder(Ipv4StaticRouteArgs defaults) {
            $ = new Ipv4StaticRouteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param nextHops List of next hops.
         * 
         * @return builder
         * 
         */
        public Builder nextHops(Output<List<Ipv4StaticRouteNextHopArgs>> nextHops) {
            $.nextHops = nextHops;
            return this;
        }

        /**
         * @param nextHops List of next hops.
         * 
         * @return builder
         * 
         */
        public Builder nextHops(List<Ipv4StaticRouteNextHopArgs> nextHops) {
            return nextHops(Output.of(nextHops));
        }

        /**
         * @param nextHops List of next hops.
         * 
         * @return builder
         * 
         */
        public Builder nextHops(Ipv4StaticRouteNextHopArgs... nextHops) {
            return nextHops(List.of(nextHops));
        }

        /**
         * @param prefix Prefix.
         * 
         * @return builder
         * 
         */
        public Builder prefix(Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix Prefix.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param vrfName VRF name.
         * 
         * @return builder
         * 
         */
        public Builder vrfName(Output<String> vrfName) {
            $.vrfName = vrfName;
            return this;
        }

        /**
         * @param vrfName VRF name.
         * 
         * @return builder
         * 
         */
        public Builder vrfName(String vrfName) {
            return vrfName(Output.of(vrfName));
        }

        public Ipv4StaticRouteArgs build() {
            $.nextHops = Objects.requireNonNull($.nextHops, "expected parameter 'nextHops' to be non-null");
            $.prefix = Objects.requireNonNull($.prefix, "expected parameter 'prefix' to be non-null");
            $.vrfName = Objects.requireNonNull($.vrfName, "expected parameter 'vrfName' to be non-null");
            return $;
        }
    }

}
