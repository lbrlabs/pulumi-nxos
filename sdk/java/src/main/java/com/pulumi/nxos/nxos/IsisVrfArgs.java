// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.nxos;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IsisVrfArgs extends com.pulumi.resources.ResourceArgs {

    public static final IsisVrfArgs Empty = new IsisVrfArgs();

    /**
     * Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
     * 
     */
    @Import(name="adminState")
    private @Nullable Output<String> adminState;

    /**
     * @return Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
     * 
     */
    public Optional<Output<String>> adminState() {
        return Optional.ofNullable(this.adminState);
    }

    /**
     * Authentication Check for ISIS on Level-1. - Default value: `true`
     * 
     */
    @Import(name="authenticationCheckL1")
    private @Nullable Output<Boolean> authenticationCheckL1;

    /**
     * @return Authentication Check for ISIS on Level-1. - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> authenticationCheckL1() {
        return Optional.ofNullable(this.authenticationCheckL1);
    }

    /**
     * Authentication Check for ISIS on Level-2. - Default value: `true`
     * 
     */
    @Import(name="authenticationCheckL2")
    private @Nullable Output<Boolean> authenticationCheckL2;

    /**
     * @return Authentication Check for ISIS on Level-2. - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> authenticationCheckL2() {
        return Optional.ofNullable(this.authenticationCheckL2);
    }

    /**
     * Authentication Key for IS-IS on Level-1.
     * 
     */
    @Import(name="authenticationKeyL1")
    private @Nullable Output<String> authenticationKeyL1;

    /**
     * @return Authentication Key for IS-IS on Level-1.
     * 
     */
    public Optional<Output<String>> authenticationKeyL1() {
        return Optional.ofNullable(this.authenticationKeyL1);
    }

    /**
     * Authentication Key for IS-IS on Level-2.
     * 
     */
    @Import(name="authenticationKeyL2")
    private @Nullable Output<String> authenticationKeyL2;

    /**
     * @return Authentication Key for IS-IS on Level-2.
     * 
     */
    public Optional<Output<String>> authenticationKeyL2() {
        return Optional.ofNullable(this.authenticationKeyL2);
    }

    /**
     * IS-IS Authentication-Type for Level-1. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`
     * 
     */
    @Import(name="authenticationTypeL1")
    private @Nullable Output<String> authenticationTypeL1;

    /**
     * @return IS-IS Authentication-Type for Level-1. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`
     * 
     */
    public Optional<Output<String>> authenticationTypeL1() {
        return Optional.ofNullable(this.authenticationTypeL1);
    }

    /**
     * IS-IS Authentication-Type for Level-2. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`
     * 
     */
    @Import(name="authenticationTypeL2")
    private @Nullable Output<String> authenticationTypeL2;

    /**
     * @return IS-IS Authentication-Type for Level-2. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`
     * 
     */
    public Optional<Output<String>> authenticationTypeL2() {
        return Optional.ofNullable(this.authenticationTypeL2);
    }

    /**
     * The IS-IS domain bandwidth reference. This sets the default reference bandwidth used for calculating the IS-IS cost
     * metric. - Range: `0`-`4294967295` - Default value: `40000`
     * 
     */
    @Import(name="bandwidthReference")
    private @Nullable Output<Integer> bandwidthReference;

    /**
     * @return The IS-IS domain bandwidth reference. This sets the default reference bandwidth used for calculating the IS-IS cost
     * metric. - Range: `0`-`4294967295` - Default value: `40000`
     * 
     */
    public Optional<Output<Integer>> bandwidthReference() {
        return Optional.ofNullable(this.bandwidthReference);
    }

    /**
     * Bandwidth reference unit. - Choices: `mbps`, `gbps` - Default value: `mbps`
     * 
     */
    @Import(name="banwidthReferenceUnit")
    private @Nullable Output<String> banwidthReferenceUnit;

    /**
     * @return Bandwidth reference unit. - Choices: `mbps`, `gbps` - Default value: `mbps`
     * 
     */
    public Optional<Output<String>> banwidthReferenceUnit() {
        return Optional.ofNullable(this.banwidthReferenceUnit);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * IS-IS instance name.
     * 
     */
    @Import(name="instanceName", required=true)
    private Output<String> instanceName;

    /**
     * @return IS-IS instance name.
     * 
     */
    public Output<String> instanceName() {
        return this.instanceName;
    }

    /**
     * IS-IS domain type. - Choices: `l1`, `l2`, `l12` - Default value: `l12`
     * 
     */
    @Import(name="isType")
    private @Nullable Output<String> isType;

    /**
     * @return IS-IS domain type. - Choices: `l1`, `l2`, `l12` - Default value: `l12`
     * 
     */
    public Optional<Output<String>> isType() {
        return Optional.ofNullable(this.isType);
    }

    /**
     * IS-IS metric type. - Choices: `narrow`, `wide`, `transition` - Default value: `wide`
     * 
     */
    @Import(name="metricType")
    private @Nullable Output<String> metricType;

    /**
     * @return IS-IS metric type. - Choices: `narrow`, `wide`, `transition` - Default value: `wide`
     * 
     */
    public Optional<Output<String>> metricType() {
        return Optional.ofNullable(this.metricType);
    }

    /**
     * The configuration of link-state packet (LSP) maximum transmission units (MTU) is supported. You can enable up to 4352
     * bytes. - Range: `256`-`4352` - Default value: `1492`
     * 
     */
    @Import(name="mtu")
    private @Nullable Output<Integer> mtu;

    /**
     * @return The configuration of link-state packet (LSP) maximum transmission units (MTU) is supported. You can enable up to 4352
     * bytes. - Range: `256`-`4352` - Default value: `1492`
     * 
     */
    public Optional<Output<Integer>> mtu() {
        return Optional.ofNullable(this.mtu);
    }

    /**
     * VRF name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return VRF name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Holds IS-IS domain NET (address) value.
     * 
     */
    @Import(name="net")
    private @Nullable Output<String> net;

    /**
     * @return Holds IS-IS domain NET (address) value.
     * 
     */
    public Optional<Output<String>> net() {
        return Optional.ofNullable(this.net);
    }

    /**
     * IS-IS Domain passive-interface default level. - Choices: `l1`, `l2`, `l12`, `unknown` - Default value: `unknown`
     * 
     */
    @Import(name="passiveDefault")
    private @Nullable Output<String> passiveDefault;

    /**
     * @return IS-IS Domain passive-interface default level. - Choices: `l1`, `l2`, `l12`, `unknown` - Default value: `unknown`
     * 
     */
    public Optional<Output<String>> passiveDefault() {
        return Optional.ofNullable(this.passiveDefault);
    }

    private IsisVrfArgs() {}

    private IsisVrfArgs(IsisVrfArgs $) {
        this.adminState = $.adminState;
        this.authenticationCheckL1 = $.authenticationCheckL1;
        this.authenticationCheckL2 = $.authenticationCheckL2;
        this.authenticationKeyL1 = $.authenticationKeyL1;
        this.authenticationKeyL2 = $.authenticationKeyL2;
        this.authenticationTypeL1 = $.authenticationTypeL1;
        this.authenticationTypeL2 = $.authenticationTypeL2;
        this.bandwidthReference = $.bandwidthReference;
        this.banwidthReferenceUnit = $.banwidthReferenceUnit;
        this.device = $.device;
        this.instanceName = $.instanceName;
        this.isType = $.isType;
        this.metricType = $.metricType;
        this.mtu = $.mtu;
        this.name = $.name;
        this.net = $.net;
        this.passiveDefault = $.passiveDefault;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IsisVrfArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IsisVrfArgs $;

        public Builder() {
            $ = new IsisVrfArgs();
        }

        public Builder(IsisVrfArgs defaults) {
            $ = new IsisVrfArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminState Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
         * 
         * @return builder
         * 
         */
        public Builder adminState(@Nullable Output<String> adminState) {
            $.adminState = adminState;
            return this;
        }

        /**
         * @param adminState Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
         * 
         * @return builder
         * 
         */
        public Builder adminState(String adminState) {
            return adminState(Output.of(adminState));
        }

        /**
         * @param authenticationCheckL1 Authentication Check for ISIS on Level-1. - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder authenticationCheckL1(@Nullable Output<Boolean> authenticationCheckL1) {
            $.authenticationCheckL1 = authenticationCheckL1;
            return this;
        }

        /**
         * @param authenticationCheckL1 Authentication Check for ISIS on Level-1. - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder authenticationCheckL1(Boolean authenticationCheckL1) {
            return authenticationCheckL1(Output.of(authenticationCheckL1));
        }

        /**
         * @param authenticationCheckL2 Authentication Check for ISIS on Level-2. - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder authenticationCheckL2(@Nullable Output<Boolean> authenticationCheckL2) {
            $.authenticationCheckL2 = authenticationCheckL2;
            return this;
        }

        /**
         * @param authenticationCheckL2 Authentication Check for ISIS on Level-2. - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder authenticationCheckL2(Boolean authenticationCheckL2) {
            return authenticationCheckL2(Output.of(authenticationCheckL2));
        }

        /**
         * @param authenticationKeyL1 Authentication Key for IS-IS on Level-1.
         * 
         * @return builder
         * 
         */
        public Builder authenticationKeyL1(@Nullable Output<String> authenticationKeyL1) {
            $.authenticationKeyL1 = authenticationKeyL1;
            return this;
        }

        /**
         * @param authenticationKeyL1 Authentication Key for IS-IS on Level-1.
         * 
         * @return builder
         * 
         */
        public Builder authenticationKeyL1(String authenticationKeyL1) {
            return authenticationKeyL1(Output.of(authenticationKeyL1));
        }

        /**
         * @param authenticationKeyL2 Authentication Key for IS-IS on Level-2.
         * 
         * @return builder
         * 
         */
        public Builder authenticationKeyL2(@Nullable Output<String> authenticationKeyL2) {
            $.authenticationKeyL2 = authenticationKeyL2;
            return this;
        }

        /**
         * @param authenticationKeyL2 Authentication Key for IS-IS on Level-2.
         * 
         * @return builder
         * 
         */
        public Builder authenticationKeyL2(String authenticationKeyL2) {
            return authenticationKeyL2(Output.of(authenticationKeyL2));
        }

        /**
         * @param authenticationTypeL1 IS-IS Authentication-Type for Level-1. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`
         * 
         * @return builder
         * 
         */
        public Builder authenticationTypeL1(@Nullable Output<String> authenticationTypeL1) {
            $.authenticationTypeL1 = authenticationTypeL1;
            return this;
        }

        /**
         * @param authenticationTypeL1 IS-IS Authentication-Type for Level-1. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`
         * 
         * @return builder
         * 
         */
        public Builder authenticationTypeL1(String authenticationTypeL1) {
            return authenticationTypeL1(Output.of(authenticationTypeL1));
        }

        /**
         * @param authenticationTypeL2 IS-IS Authentication-Type for Level-2. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`
         * 
         * @return builder
         * 
         */
        public Builder authenticationTypeL2(@Nullable Output<String> authenticationTypeL2) {
            $.authenticationTypeL2 = authenticationTypeL2;
            return this;
        }

        /**
         * @param authenticationTypeL2 IS-IS Authentication-Type for Level-2. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`
         * 
         * @return builder
         * 
         */
        public Builder authenticationTypeL2(String authenticationTypeL2) {
            return authenticationTypeL2(Output.of(authenticationTypeL2));
        }

        /**
         * @param bandwidthReference The IS-IS domain bandwidth reference. This sets the default reference bandwidth used for calculating the IS-IS cost
         * metric. - Range: `0`-`4294967295` - Default value: `40000`
         * 
         * @return builder
         * 
         */
        public Builder bandwidthReference(@Nullable Output<Integer> bandwidthReference) {
            $.bandwidthReference = bandwidthReference;
            return this;
        }

        /**
         * @param bandwidthReference The IS-IS domain bandwidth reference. This sets the default reference bandwidth used for calculating the IS-IS cost
         * metric. - Range: `0`-`4294967295` - Default value: `40000`
         * 
         * @return builder
         * 
         */
        public Builder bandwidthReference(Integer bandwidthReference) {
            return bandwidthReference(Output.of(bandwidthReference));
        }

        /**
         * @param banwidthReferenceUnit Bandwidth reference unit. - Choices: `mbps`, `gbps` - Default value: `mbps`
         * 
         * @return builder
         * 
         */
        public Builder banwidthReferenceUnit(@Nullable Output<String> banwidthReferenceUnit) {
            $.banwidthReferenceUnit = banwidthReferenceUnit;
            return this;
        }

        /**
         * @param banwidthReferenceUnit Bandwidth reference unit. - Choices: `mbps`, `gbps` - Default value: `mbps`
         * 
         * @return builder
         * 
         */
        public Builder banwidthReferenceUnit(String banwidthReferenceUnit) {
            return banwidthReferenceUnit(Output.of(banwidthReferenceUnit));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param instanceName IS-IS instance name.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName IS-IS instance name.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param isType IS-IS domain type. - Choices: `l1`, `l2`, `l12` - Default value: `l12`
         * 
         * @return builder
         * 
         */
        public Builder isType(@Nullable Output<String> isType) {
            $.isType = isType;
            return this;
        }

        /**
         * @param isType IS-IS domain type. - Choices: `l1`, `l2`, `l12` - Default value: `l12`
         * 
         * @return builder
         * 
         */
        public Builder isType(String isType) {
            return isType(Output.of(isType));
        }

        /**
         * @param metricType IS-IS metric type. - Choices: `narrow`, `wide`, `transition` - Default value: `wide`
         * 
         * @return builder
         * 
         */
        public Builder metricType(@Nullable Output<String> metricType) {
            $.metricType = metricType;
            return this;
        }

        /**
         * @param metricType IS-IS metric type. - Choices: `narrow`, `wide`, `transition` - Default value: `wide`
         * 
         * @return builder
         * 
         */
        public Builder metricType(String metricType) {
            return metricType(Output.of(metricType));
        }

        /**
         * @param mtu The configuration of link-state packet (LSP) maximum transmission units (MTU) is supported. You can enable up to 4352
         * bytes. - Range: `256`-`4352` - Default value: `1492`
         * 
         * @return builder
         * 
         */
        public Builder mtu(@Nullable Output<Integer> mtu) {
            $.mtu = mtu;
            return this;
        }

        /**
         * @param mtu The configuration of link-state packet (LSP) maximum transmission units (MTU) is supported. You can enable up to 4352
         * bytes. - Range: `256`-`4352` - Default value: `1492`
         * 
         * @return builder
         * 
         */
        public Builder mtu(Integer mtu) {
            return mtu(Output.of(mtu));
        }

        /**
         * @param name VRF name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name VRF name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param net Holds IS-IS domain NET (address) value.
         * 
         * @return builder
         * 
         */
        public Builder net(@Nullable Output<String> net) {
            $.net = net;
            return this;
        }

        /**
         * @param net Holds IS-IS domain NET (address) value.
         * 
         * @return builder
         * 
         */
        public Builder net(String net) {
            return net(Output.of(net));
        }

        /**
         * @param passiveDefault IS-IS Domain passive-interface default level. - Choices: `l1`, `l2`, `l12`, `unknown` - Default value: `unknown`
         * 
         * @return builder
         * 
         */
        public Builder passiveDefault(@Nullable Output<String> passiveDefault) {
            $.passiveDefault = passiveDefault;
            return this;
        }

        /**
         * @param passiveDefault IS-IS Domain passive-interface default level. - Choices: `l1`, `l2`, `l12`, `unknown` - Default value: `unknown`
         * 
         * @return builder
         * 
         */
        public Builder passiveDefault(String passiveDefault) {
            return passiveDefault(Output.of(passiveDefault));
        }

        public IsisVrfArgs build() {
            $.instanceName = Objects.requireNonNull($.instanceName, "expected parameter 'instanceName' to be non-null");
            return $;
        }
    }

}
