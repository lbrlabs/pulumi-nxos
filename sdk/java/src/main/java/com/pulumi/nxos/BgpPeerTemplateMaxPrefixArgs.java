// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BgpPeerTemplateMaxPrefixArgs extends com.pulumi.resources.ResourceArgs {

    public static final BgpPeerTemplateMaxPrefixArgs Empty = new BgpPeerTemplateMaxPrefixArgs();

    /**
     * Action to do when limit is exceeded. - Choices: `log`, `shut`, `restart` - Default value: `shut`
     * 
     */
    @Import(name="action")
    private @Nullable Output<String> action;

    /**
     * @return Action to do when limit is exceeded. - Choices: `log`, `shut`, `restart` - Default value: `shut`
     * 
     */
    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,
     * `vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,
     * `ipv4-mdt` - Default value: `ipv4-ucast`
     * 
     */
    @Import(name="addressFamily", required=true)
    private Output<String> addressFamily;

    /**
     * @return Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,
     * `vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,
     * `ipv4-mdt` - Default value: `ipv4-ucast`
     * 
     */
    public Output<String> addressFamily() {
        return this.addressFamily;
    }

    /**
     * Autonomous system number.
     * 
     */
    @Import(name="asn", required=true)
    private Output<String> asn;

    /**
     * @return Autonomous system number.
     * 
     */
    public Output<String> asn() {
        return this.asn;
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * Maximum number of prefixes allowed from the peer. - Range: `0`-`4294967295`
     * 
     */
    @Import(name="maximumPrefix")
    private @Nullable Output<Integer> maximumPrefix;

    /**
     * @return Maximum number of prefixes allowed from the peer. - Range: `0`-`4294967295`
     * 
     */
    public Optional<Output<Integer>> maximumPrefix() {
        return Optional.ofNullable(this.maximumPrefix);
    }

    /**
     * The period of time in minutes before restarting the peer when the prefix limit is reached. - Default value: `0`
     * 
     */
    @Import(name="restartTime")
    private @Nullable Output<Integer> restartTime;

    /**
     * @return The period of time in minutes before restarting the peer when the prefix limit is reached. - Default value: `0`
     * 
     */
    public Optional<Output<Integer>> restartTime() {
        return Optional.ofNullable(this.restartTime);
    }

    /**
     * Peer template name.
     * 
     */
    @Import(name="templateName", required=true)
    private Output<String> templateName;

    /**
     * @return Peer template name.
     * 
     */
    public Output<String> templateName() {
        return this.templateName;
    }

    /**
     * The period of time in minutes before restarting the peer when the prefix limit is reached. - Range: `0`-`100` - Default
     * value: `0`
     * 
     */
    @Import(name="threshold")
    private @Nullable Output<Integer> threshold;

    /**
     * @return The period of time in minutes before restarting the peer when the prefix limit is reached. - Range: `0`-`100` - Default
     * value: `0`
     * 
     */
    public Optional<Output<Integer>> threshold() {
        return Optional.ofNullable(this.threshold);
    }

    private BgpPeerTemplateMaxPrefixArgs() {}

    private BgpPeerTemplateMaxPrefixArgs(BgpPeerTemplateMaxPrefixArgs $) {
        this.action = $.action;
        this.addressFamily = $.addressFamily;
        this.asn = $.asn;
        this.device = $.device;
        this.maximumPrefix = $.maximumPrefix;
        this.restartTime = $.restartTime;
        this.templateName = $.templateName;
        this.threshold = $.threshold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BgpPeerTemplateMaxPrefixArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BgpPeerTemplateMaxPrefixArgs $;

        public Builder() {
            $ = new BgpPeerTemplateMaxPrefixArgs();
        }

        public Builder(BgpPeerTemplateMaxPrefixArgs defaults) {
            $ = new BgpPeerTemplateMaxPrefixArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Action to do when limit is exceeded. - Choices: `log`, `shut`, `restart` - Default value: `shut`
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Action to do when limit is exceeded. - Choices: `log`, `shut`, `restart` - Default value: `shut`
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param addressFamily Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,
         * `vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,
         * `ipv4-mdt` - Default value: `ipv4-ucast`
         * 
         * @return builder
         * 
         */
        public Builder addressFamily(Output<String> addressFamily) {
            $.addressFamily = addressFamily;
            return this;
        }

        /**
         * @param addressFamily Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,
         * `vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,
         * `ipv4-mdt` - Default value: `ipv4-ucast`
         * 
         * @return builder
         * 
         */
        public Builder addressFamily(String addressFamily) {
            return addressFamily(Output.of(addressFamily));
        }

        /**
         * @param asn Autonomous system number.
         * 
         * @return builder
         * 
         */
        public Builder asn(Output<String> asn) {
            $.asn = asn;
            return this;
        }

        /**
         * @param asn Autonomous system number.
         * 
         * @return builder
         * 
         */
        public Builder asn(String asn) {
            return asn(Output.of(asn));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param maximumPrefix Maximum number of prefixes allowed from the peer. - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefix(@Nullable Output<Integer> maximumPrefix) {
            $.maximumPrefix = maximumPrefix;
            return this;
        }

        /**
         * @param maximumPrefix Maximum number of prefixes allowed from the peer. - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefix(Integer maximumPrefix) {
            return maximumPrefix(Output.of(maximumPrefix));
        }

        /**
         * @param restartTime The period of time in minutes before restarting the peer when the prefix limit is reached. - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder restartTime(@Nullable Output<Integer> restartTime) {
            $.restartTime = restartTime;
            return this;
        }

        /**
         * @param restartTime The period of time in minutes before restarting the peer when the prefix limit is reached. - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder restartTime(Integer restartTime) {
            return restartTime(Output.of(restartTime));
        }

        /**
         * @param templateName Peer template name.
         * 
         * @return builder
         * 
         */
        public Builder templateName(Output<String> templateName) {
            $.templateName = templateName;
            return this;
        }

        /**
         * @param templateName Peer template name.
         * 
         * @return builder
         * 
         */
        public Builder templateName(String templateName) {
            return templateName(Output.of(templateName));
        }

        /**
         * @param threshold The period of time in minutes before restarting the peer when the prefix limit is reached. - Range: `0`-`100` - Default
         * value: `0`
         * 
         * @return builder
         * 
         */
        public Builder threshold(@Nullable Output<Integer> threshold) {
            $.threshold = threshold;
            return this;
        }

        /**
         * @param threshold The period of time in minutes before restarting the peer when the prefix limit is reached. - Range: `0`-`100` - Default
         * value: `0`
         * 
         * @return builder
         * 
         */
        public Builder threshold(Integer threshold) {
            return threshold(Output.of(threshold));
        }

        public BgpPeerTemplateMaxPrefixArgs build() {
            $.addressFamily = Objects.requireNonNull($.addressFamily, "expected parameter 'addressFamily' to be non-null");
            $.asn = Objects.requireNonNull($.asn, "expected parameter 'asn' to be non-null");
            $.templateName = Objects.requireNonNull($.templateName, "expected parameter 'templateName' to be non-null");
            return $;
        }
    }

}
