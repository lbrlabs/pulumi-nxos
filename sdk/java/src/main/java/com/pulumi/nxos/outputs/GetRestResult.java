// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRestResult {
    /**
     * @return Class name of object being retrieved.
     * 
     */
    private String className;
    /**
     * @return Map of key-value pairs which represents the attributes of object being retrieved.
     * 
     */
    private Map<String,String> content;
    /**
     * @return A device name from the provider configuration.
     * 
     */
    private @Nullable String device;
    /**
     * @return Distinguished name of object to be retrieved, e.g. sys/intf/phys-[eth1/1].
     * 
     */
    private String dn;
    /**
     * @return The distinguished name of the object.
     * 
     */
    private String id;

    private GetRestResult() {}
    /**
     * @return Class name of object being retrieved.
     * 
     */
    public String className() {
        return this.className;
    }
    /**
     * @return Map of key-value pairs which represents the attributes of object being retrieved.
     * 
     */
    public Map<String,String> content() {
        return this.content;
    }
    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    /**
     * @return Distinguished name of object to be retrieved, e.g. sys/intf/phys-[eth1/1].
     * 
     */
    public String dn() {
        return this.dn;
    }
    /**
     * @return The distinguished name of the object.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRestResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String className;
        private Map<String,String> content;
        private @Nullable String device;
        private String dn;
        private String id;
        public Builder() {}
        public Builder(GetRestResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.className = defaults.className;
    	      this.content = defaults.content;
    	      this.device = defaults.device;
    	      this.dn = defaults.dn;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder className(String className) {
            this.className = Objects.requireNonNull(className);
            return this;
        }
        @CustomType.Setter
        public Builder content(Map<String,String> content) {
            this.content = Objects.requireNonNull(content);
            return this;
        }
        @CustomType.Setter
        public Builder device(@Nullable String device) {
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder dn(String dn) {
            this.dn = Objects.requireNonNull(dn);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public GetRestResult build() {
            final var o = new GetRestResult();
            o.className = className;
            o.content = content;
            o.device = device;
            o.dn = dn;
            o.id = id;
            return o;
        }
    }
}
