// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.nxos;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PimVrfArgs extends com.pulumi.resources.ResourceArgs {

    public static final PimVrfArgs Empty = new PimVrfArgs();

    /**
     * Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
     * 
     */
    @Import(name="adminState")
    private @Nullable Output<String> adminState;

    /**
     * @return Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
     * 
     */
    public Optional<Output<String>> adminState() {
        return Optional.ofNullable(this.adminState);
    }

    /**
     * BFD. - Default value: `false`
     * 
     */
    @Import(name="bfd")
    private @Nullable Output<Boolean> bfd;

    /**
     * @return BFD. - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> bfd() {
        return Optional.ofNullable(this.bfd);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * VRF name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return VRF name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private PimVrfArgs() {}

    private PimVrfArgs(PimVrfArgs $) {
        this.adminState = $.adminState;
        this.bfd = $.bfd;
        this.device = $.device;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PimVrfArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PimVrfArgs $;

        public Builder() {
            $ = new PimVrfArgs();
        }

        public Builder(PimVrfArgs defaults) {
            $ = new PimVrfArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminState Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
         * 
         * @return builder
         * 
         */
        public Builder adminState(@Nullable Output<String> adminState) {
            $.adminState = adminState;
            return this;
        }

        /**
         * @param adminState Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`
         * 
         * @return builder
         * 
         */
        public Builder adminState(String adminState) {
            return adminState(Output.of(adminState));
        }

        /**
         * @param bfd BFD. - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder bfd(@Nullable Output<Boolean> bfd) {
            $.bfd = bfd;
            return this;
        }

        /**
         * @param bfd BFD. - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder bfd(Boolean bfd) {
            return bfd(Output.of(bfd));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param name VRF name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name VRF name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public PimVrfArgs build() {
            return $;
        }
    }

}
