// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.nxos.PhysicalInterfaceArgs;
import com.pulumi.nxos.Utilities;
import com.pulumi.nxos.inputs.PhysicalInterfaceState;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a physical interface.
 * 
 * - API Documentation: [l1PhysIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/l1:PhysIf/)
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.nxos.PhysicalInterface;
 * import com.pulumi.nxos.PhysicalInterfaceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new PhysicalInterface(&#34;example&#34;, PhysicalInterfaceArgs.builder()        
 *             .accessVlan(&#34;unknown&#34;)
 *             .adminState(&#34;up&#34;)
 *             .autoNegotiation(&#34;on&#34;)
 *             .bandwidth(1000)
 *             .delay(10)
 *             .description(&#34;My Description&#34;)
 *             .duplex(&#34;auto&#34;)
 *             .fecMode(&#34;auto&#34;)
 *             .interfaceId(&#34;eth1/10&#34;)
 *             .layer(&#34;Layer3&#34;)
 *             .linkDebounceDown(200)
 *             .linkDebounceUp(0)
 *             .linkLogging(&#34;enable&#34;)
 *             .medium(&#34;broadcast&#34;)
 *             .mode(&#34;access&#34;)
 *             .mtu(1500)
 *             .nativeVlan(&#34;unknown&#34;)
 *             .speed(&#34;auto&#34;)
 *             .speedGroup(&#34;auto&#34;)
 *             .trunkVlans(&#34;1-4094&#34;)
 *             .uniDirectionalEthernet(&#34;disable&#34;)
 *             .userConfiguredFlags(&#34;admin_layer,admin_mtu,admin_state&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import nxos:index/physicalInterface:PhysicalInterface example &#34;sys/intf/phys-[eth1/10]&#34;
 * ```
 * 
 */
@ResourceType(type="nxos:index/physicalInterface:PhysicalInterface")
public class PhysicalInterface extends com.pulumi.resources.CustomResource {
    /**
     * Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`
     * 
     */
    @Export(name="accessVlan", refs={String.class}, tree="[0]")
    private Output<String> accessVlan;

    /**
     * @return Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`
     * 
     */
    public Output<String> accessVlan() {
        return this.accessVlan;
    }
    /**
     * Administrative port state. - Choices: `up`, `down` - Default value: `up`
     * 
     */
    @Export(name="adminState", refs={String.class}, tree="[0]")
    private Output<String> adminState;

    /**
     * @return Administrative port state. - Choices: `up`, `down` - Default value: `up`
     * 
     */
    public Output<String> adminState() {
        return this.adminState;
    }
    /**
     * Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`
     * 
     */
    @Export(name="autoNegotiation", refs={String.class}, tree="[0]")
    private Output<String> autoNegotiation;

    /**
     * @return Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`
     * 
     */
    public Output<String> autoNegotiation() {
        return this.autoNegotiation;
    }
    /**
     * The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default
     * value: `0`
     * 
     */
    @Export(name="bandwidth", refs={Integer.class}, tree="[0]")
    private Output<Integer> bandwidth;

    /**
     * @return The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default
     * value: `0`
     * 
     */
    public Output<Integer> bandwidth() {
        return this.bandwidth;
    }
    /**
     * The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`
     * 
     */
    @Export(name="delay", refs={Integer.class}, tree="[0]")
    private Output<Integer> delay;

    /**
     * @return The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`
     * 
     */
    public Output<Integer> delay() {
        return this.delay;
    }
    /**
     * Interface description.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Interface description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * A device name from the provider configuration.
     * 
     */
    @Export(name="device", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Output<Optional<String>> device() {
        return Codegen.optional(this.device);
    }
    /**
     * Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`
     * 
     */
    @Export(name="duplex", refs={String.class}, tree="[0]")
    private Output<String> duplex;

    /**
     * @return Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`
     * 
     */
    public Output<String> duplex() {
        return this.duplex;
    }
    /**
     * FEC mode. - Choices: `fc-fec`, `rs-fec`, `fec-off`, `auto`, `rs-ieee`, `rs-cons16`, `kp-fec` - Default value: `auto`
     * 
     */
    @Export(name="fecMode", refs={String.class}, tree="[0]")
    private Output<String> fecMode;

    /**
     * @return FEC mode. - Choices: `fc-fec`, `rs-fec`, `fec-off`, `auto`, `rs-ieee`, `rs-cons16`, `kp-fec` - Default value: `auto`
     * 
     */
    public Output<String> fecMode() {
        return this.fecMode;
    }
    /**
     * Must match first field in the output of `show intf brief`. Example: `eth1/1`.
     * 
     */
    @Export(name="interfaceId", refs={String.class}, tree="[0]")
    private Output<String> interfaceId;

    /**
     * @return Must match first field in the output of `show intf brief`. Example: `eth1/1`.
     * 
     */
    public Output<String> interfaceId() {
        return this.interfaceId;
    }
    /**
     * Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`
     * 
     */
    @Export(name="layer", refs={String.class}, tree="[0]")
    private Output<String> layer;

    /**
     * @return Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`
     * 
     */
    public Output<String> layer() {
        return this.layer;
    }
    /**
     * Administrative port link debounce interval. - Range: `0`-`20000` - Default value: `100`
     * 
     */
    @Export(name="linkDebounceDown", refs={Integer.class}, tree="[0]")
    private Output<Integer> linkDebounceDown;

    /**
     * @return Administrative port link debounce interval. - Range: `0`-`20000` - Default value: `100`
     * 
     */
    public Output<Integer> linkDebounceDown() {
        return this.linkDebounceDown;
    }
    /**
     * Link Debounce Interval - LinkUp Event. - Range: `0`-`20000` - Default value: `0`
     * 
     */
    @Export(name="linkDebounceUp", refs={Integer.class}, tree="[0]")
    private Output<Integer> linkDebounceUp;

    /**
     * @return Link Debounce Interval - LinkUp Event. - Range: `0`-`20000` - Default value: `0`
     * 
     */
    public Output<Integer> linkDebounceUp() {
        return this.linkDebounceUp;
    }
    /**
     * Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`
     * 
     */
    @Export(name="linkLogging", refs={String.class}, tree="[0]")
    private Output<String> linkLogging;

    /**
     * @return Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`
     * 
     */
    public Output<String> linkLogging() {
        return this.linkLogging;
    }
    /**
     * The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`
     * 
     */
    @Export(name="medium", refs={String.class}, tree="[0]")
    private Output<String> medium;

    /**
     * @return The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`
     * 
     */
    public Output<String> medium() {
        return this.medium;
    }
    /**
     * Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,
     * `trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`
     * 
     */
    @Export(name="mode", refs={String.class}, tree="[0]")
    private Output<String> mode;

    /**
     * @return Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,
     * `trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`
     * 
     */
    public Output<String> mode() {
        return this.mode;
    }
    /**
     * Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    @Export(name="mtu", refs={Integer.class}, tree="[0]")
    private Output<Integer> mtu;

    /**
     * @return Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    public Output<Integer> mtu() {
        return this.mtu;
    }
    /**
     * Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`
     * 
     */
    @Export(name="nativeVlan", refs={String.class}, tree="[0]")
    private Output<String> nativeVlan;

    /**
     * @return Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`
     * 
     */
    public Output<String> nativeVlan() {
        return this.nativeVlan;
    }
    /**
     * Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,
     * `100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:
     * `auto`
     * 
     */
    @Export(name="speed", refs={String.class}, tree="[0]")
    private Output<String> speed;

    /**
     * @return Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,
     * `100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:
     * `auto`
     * 
     */
    public Output<String> speed() {
        return this.speed;
    }
    /**
     * Speed group. - Choices: `unknown`, `1000`, `10000`, `40000`, `auto`, `25000` - Default value: `auto`
     * 
     */
    @Export(name="speedGroup", refs={String.class}, tree="[0]")
    private Output<String> speedGroup;

    /**
     * @return Speed group. - Choices: `unknown`, `1000`, `10000`, `40000`, `auto`, `25000` - Default value: `auto`
     * 
     */
    public Output<String> speedGroup() {
        return this.speedGroup;
    }
    /**
     * List of trunk VLANs. - Default value: `1-4094`
     * 
     */
    @Export(name="trunkVlans", refs={String.class}, tree="[0]")
    private Output<String> trunkVlans;

    /**
     * @return List of trunk VLANs. - Default value: `1-4094`
     * 
     */
    public Output<String> trunkVlans() {
        return this.trunkVlans;
    }
    /**
     * UDE (Uni-Directional Ethernet). - Choices: `disable`, `send-only`, `receive-only` - Default value: `disable`
     * 
     */
    @Export(name="uniDirectionalEthernet", refs={String.class}, tree="[0]")
    private Output<String> uniDirectionalEthernet;

    /**
     * @return UDE (Uni-Directional Ethernet). - Choices: `disable`, `send-only`, `receive-only` - Default value: `disable`
     * 
     */
    public Output<String> uniDirectionalEthernet() {
        return this.uniDirectionalEthernet;
    }
    /**
     * Port User Config Flags.
     * 
     */
    @Export(name="userConfiguredFlags", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userConfiguredFlags;

    /**
     * @return Port User Config Flags.
     * 
     */
    public Output<Optional<String>> userConfiguredFlags() {
        return Codegen.optional(this.userConfiguredFlags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PhysicalInterface(String name) {
        this(name, PhysicalInterfaceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PhysicalInterface(String name, PhysicalInterfaceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PhysicalInterface(String name, PhysicalInterfaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("nxos:index/physicalInterface:PhysicalInterface", name, args == null ? PhysicalInterfaceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PhysicalInterface(String name, Output<String> id, @Nullable PhysicalInterfaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("nxos:index/physicalInterface:PhysicalInterface", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PhysicalInterface get(String name, Output<String> id, @Nullable PhysicalInterfaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PhysicalInterface(name, id, state, options);
    }
}
