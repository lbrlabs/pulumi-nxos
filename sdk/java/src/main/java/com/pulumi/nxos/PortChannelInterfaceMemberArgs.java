// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PortChannelInterfaceMemberArgs extends com.pulumi.resources.ResourceArgs {

    public static final PortChannelInterfaceMemberArgs Empty = new PortChannelInterfaceMemberArgs();

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * DN of interface. For example: `sys/intf/phys-[eth1/1]`.
     * 
     */
    @Import(name="interfaceDn", required=true)
    private Output<String> interfaceDn;

    /**
     * @return DN of interface. For example: `sys/intf/phys-[eth1/1]`.
     * 
     */
    public Output<String> interfaceDn() {
        return this.interfaceDn;
    }

    /**
     * Must match first field in the output of `show intf brief`. Example: `po1`.
     * 
     */
    @Import(name="interfaceId", required=true)
    private Output<String> interfaceId;

    /**
     * @return Must match first field in the output of `show intf brief`. Example: `po1`.
     * 
     */
    public Output<String> interfaceId() {
        return this.interfaceId;
    }

    private PortChannelInterfaceMemberArgs() {}

    private PortChannelInterfaceMemberArgs(PortChannelInterfaceMemberArgs $) {
        this.device = $.device;
        this.interfaceDn = $.interfaceDn;
        this.interfaceId = $.interfaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PortChannelInterfaceMemberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PortChannelInterfaceMemberArgs $;

        public Builder() {
            $ = new PortChannelInterfaceMemberArgs();
        }

        public Builder(PortChannelInterfaceMemberArgs defaults) {
            $ = new PortChannelInterfaceMemberArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param interfaceDn DN of interface. For example: `sys/intf/phys-[eth1/1]`.
         * 
         * @return builder
         * 
         */
        public Builder interfaceDn(Output<String> interfaceDn) {
            $.interfaceDn = interfaceDn;
            return this;
        }

        /**
         * @param interfaceDn DN of interface. For example: `sys/intf/phys-[eth1/1]`.
         * 
         * @return builder
         * 
         */
        public Builder interfaceDn(String interfaceDn) {
            return interfaceDn(Output.of(interfaceDn));
        }

        /**
         * @param interfaceId Must match first field in the output of `show intf brief`. Example: `po1`.
         * 
         * @return builder
         * 
         */
        public Builder interfaceId(Output<String> interfaceId) {
            $.interfaceId = interfaceId;
            return this;
        }

        /**
         * @param interfaceId Must match first field in the output of `show intf brief`. Example: `po1`.
         * 
         * @return builder
         * 
         */
        public Builder interfaceId(String interfaceId) {
            return interfaceId(Output.of(interfaceId));
        }

        public PortChannelInterfaceMemberArgs build() {
            $.interfaceDn = Objects.requireNonNull($.interfaceDn, "expected parameter 'interfaceDn' to be non-null");
            $.interfaceId = Objects.requireNonNull($.interfaceId, "expected parameter 'interfaceId' to be non-null");
            return $;
        }
    }

}
