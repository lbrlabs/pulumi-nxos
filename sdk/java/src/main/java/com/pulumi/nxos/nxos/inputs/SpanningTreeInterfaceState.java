// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.nxos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpanningTreeInterfaceState extends com.pulumi.resources.ResourceArgs {

    public static final SpanningTreeInterfaceState Empty = new SpanningTreeInterfaceState();

    /**
     * The administrative state of the object or policy. - Choices: `enabled`, `disabled` - Default value: `enabled`
     * 
     */
    @Import(name="adminState")
    private @Nullable Output<String> adminState;

    /**
     * @return The administrative state of the object or policy. - Choices: `enabled`, `disabled` - Default value: `enabled`
     * 
     */
    public Optional<Output<String>> adminState() {
        return Optional.ofNullable(this.adminState);
    }

    /**
     * BPDU filter mode. - Choices: `default`, `enable`, `disable` - Default value: `default`
     * 
     */
    @Import(name="bpduFilter")
    private @Nullable Output<String> bpduFilter;

    /**
     * @return BPDU filter mode. - Choices: `default`, `enable`, `disable` - Default value: `default`
     * 
     */
    public Optional<Output<String>> bpduFilter() {
        return Optional.ofNullable(this.bpduFilter);
    }

    /**
     * BPDU guard mode. - Choices: `default`, `enable`, `disable` - Default value: `default`
     * 
     */
    @Import(name="bpduGuard")
    private @Nullable Output<String> bpduGuard;

    /**
     * @return BPDU guard mode. - Choices: `default`, `enable`, `disable` - Default value: `default`
     * 
     */
    public Optional<Output<String>> bpduGuard() {
        return Optional.ofNullable(this.bpduGuard);
    }

    /**
     * Port path cost. - Range: `0`-`200000000` - Default value: `0`
     * 
     */
    @Import(name="cost")
    private @Nullable Output<Integer> cost;

    /**
     * @return Port path cost. - Range: `0`-`200000000` - Default value: `0`
     * 
     */
    public Optional<Output<Integer>> cost() {
        return Optional.ofNullable(this.cost);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * Guard mode. - Choices: `default`, `root`, `loop`, `none` - Default value: `default`
     * 
     */
    @Import(name="guard")
    private @Nullable Output<String> guard;

    /**
     * @return Guard mode. - Choices: `default`, `root`, `loop`, `none` - Default value: `default`
     * 
     */
    public Optional<Output<String>> guard() {
        return Optional.ofNullable(this.guard);
    }

    /**
     * Must match first field in the output of `show intf brief`. Example: `eth1/1`.
     * 
     */
    @Import(name="interfaceId")
    private @Nullable Output<String> interfaceId;

    /**
     * @return Must match first field in the output of `show intf brief`. Example: `eth1/1`.
     * 
     */
    public Optional<Output<String>> interfaceId() {
        return Optional.ofNullable(this.interfaceId);
    }

    /**
     * Link type. - Choices: `auto`, `p2p`, `shared` - Default value: `auto`
     * 
     */
    @Import(name="linkType")
    private @Nullable Output<String> linkType;

    /**
     * @return Link type. - Choices: `auto`, `p2p`, `shared` - Default value: `auto`
     * 
     */
    public Optional<Output<String>> linkType() {
        return Optional.ofNullable(this.linkType);
    }

    /**
     * Port mode. - Choices: `default`, `edge`, `network`, `normal`, `trunk` - Default value: `default`
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return Port mode. - Choices: `default`, `edge`, `network`, `normal`, `trunk` - Default value: `default`
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * Port priority. - Range: `0`-`224` - Default value: `128`
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Port priority. - Range: `0`-`224` - Default value: `128`
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    private SpanningTreeInterfaceState() {}

    private SpanningTreeInterfaceState(SpanningTreeInterfaceState $) {
        this.adminState = $.adminState;
        this.bpduFilter = $.bpduFilter;
        this.bpduGuard = $.bpduGuard;
        this.cost = $.cost;
        this.device = $.device;
        this.guard = $.guard;
        this.interfaceId = $.interfaceId;
        this.linkType = $.linkType;
        this.mode = $.mode;
        this.priority = $.priority;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpanningTreeInterfaceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpanningTreeInterfaceState $;

        public Builder() {
            $ = new SpanningTreeInterfaceState();
        }

        public Builder(SpanningTreeInterfaceState defaults) {
            $ = new SpanningTreeInterfaceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminState The administrative state of the object or policy. - Choices: `enabled`, `disabled` - Default value: `enabled`
         * 
         * @return builder
         * 
         */
        public Builder adminState(@Nullable Output<String> adminState) {
            $.adminState = adminState;
            return this;
        }

        /**
         * @param adminState The administrative state of the object or policy. - Choices: `enabled`, `disabled` - Default value: `enabled`
         * 
         * @return builder
         * 
         */
        public Builder adminState(String adminState) {
            return adminState(Output.of(adminState));
        }

        /**
         * @param bpduFilter BPDU filter mode. - Choices: `default`, `enable`, `disable` - Default value: `default`
         * 
         * @return builder
         * 
         */
        public Builder bpduFilter(@Nullable Output<String> bpduFilter) {
            $.bpduFilter = bpduFilter;
            return this;
        }

        /**
         * @param bpduFilter BPDU filter mode. - Choices: `default`, `enable`, `disable` - Default value: `default`
         * 
         * @return builder
         * 
         */
        public Builder bpduFilter(String bpduFilter) {
            return bpduFilter(Output.of(bpduFilter));
        }

        /**
         * @param bpduGuard BPDU guard mode. - Choices: `default`, `enable`, `disable` - Default value: `default`
         * 
         * @return builder
         * 
         */
        public Builder bpduGuard(@Nullable Output<String> bpduGuard) {
            $.bpduGuard = bpduGuard;
            return this;
        }

        /**
         * @param bpduGuard BPDU guard mode. - Choices: `default`, `enable`, `disable` - Default value: `default`
         * 
         * @return builder
         * 
         */
        public Builder bpduGuard(String bpduGuard) {
            return bpduGuard(Output.of(bpduGuard));
        }

        /**
         * @param cost Port path cost. - Range: `0`-`200000000` - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder cost(@Nullable Output<Integer> cost) {
            $.cost = cost;
            return this;
        }

        /**
         * @param cost Port path cost. - Range: `0`-`200000000` - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder cost(Integer cost) {
            return cost(Output.of(cost));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param guard Guard mode. - Choices: `default`, `root`, `loop`, `none` - Default value: `default`
         * 
         * @return builder
         * 
         */
        public Builder guard(@Nullable Output<String> guard) {
            $.guard = guard;
            return this;
        }

        /**
         * @param guard Guard mode. - Choices: `default`, `root`, `loop`, `none` - Default value: `default`
         * 
         * @return builder
         * 
         */
        public Builder guard(String guard) {
            return guard(Output.of(guard));
        }

        /**
         * @param interfaceId Must match first field in the output of `show intf brief`. Example: `eth1/1`.
         * 
         * @return builder
         * 
         */
        public Builder interfaceId(@Nullable Output<String> interfaceId) {
            $.interfaceId = interfaceId;
            return this;
        }

        /**
         * @param interfaceId Must match first field in the output of `show intf brief`. Example: `eth1/1`.
         * 
         * @return builder
         * 
         */
        public Builder interfaceId(String interfaceId) {
            return interfaceId(Output.of(interfaceId));
        }

        /**
         * @param linkType Link type. - Choices: `auto`, `p2p`, `shared` - Default value: `auto`
         * 
         * @return builder
         * 
         */
        public Builder linkType(@Nullable Output<String> linkType) {
            $.linkType = linkType;
            return this;
        }

        /**
         * @param linkType Link type. - Choices: `auto`, `p2p`, `shared` - Default value: `auto`
         * 
         * @return builder
         * 
         */
        public Builder linkType(String linkType) {
            return linkType(Output.of(linkType));
        }

        /**
         * @param mode Port mode. - Choices: `default`, `edge`, `network`, `normal`, `trunk` - Default value: `default`
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode Port mode. - Choices: `default`, `edge`, `network`, `normal`, `trunk` - Default value: `default`
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param priority Port priority. - Range: `0`-`224` - Default value: `128`
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Port priority. - Range: `0`-`224` - Default value: `128`
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        public SpanningTreeInterfaceState build() {
            return $;
        }
    }

}
