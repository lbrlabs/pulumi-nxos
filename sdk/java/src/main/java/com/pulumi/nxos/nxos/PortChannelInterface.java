// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.nxos;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.nxos.Utilities;
import com.pulumi.nxos.nxos.PortChannelInterfaceArgs;
import com.pulumi.nxos.nxos.inputs.PortChannelInterfaceState;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="nxos:nxos/portChannelInterface:PortChannelInterface")
public class PortChannelInterface extends com.pulumi.resources.CustomResource {
    /**
     * Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`
     * 
     */
    @Export(name="accessVlan", refs={String.class}, tree="[0]")
    private Output<String> accessVlan;

    /**
     * @return Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`
     * 
     */
    public Output<String> accessVlan() {
        return this.accessVlan;
    }
    /**
     * Administrative port state. - Choices: `up`, `down` - Default value: `up`
     * 
     */
    @Export(name="adminState", refs={String.class}, tree="[0]")
    private Output<String> adminState;

    /**
     * @return Administrative port state. - Choices: `up`, `down` - Default value: `up`
     * 
     */
    public Output<String> adminState() {
        return this.adminState;
    }
    /**
     * Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`
     * 
     */
    @Export(name="autoNegotiation", refs={String.class}, tree="[0]")
    private Output<String> autoNegotiation;

    /**
     * @return Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`
     * 
     */
    public Output<String> autoNegotiation() {
        return this.autoNegotiation;
    }
    /**
     * The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default
     * value: `0`
     * 
     */
    @Export(name="bandwidth", refs={Integer.class}, tree="[0]")
    private Output<Integer> bandwidth;

    /**
     * @return The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default
     * value: `0`
     * 
     */
    public Output<Integer> bandwidth() {
        return this.bandwidth;
    }
    /**
     * The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`
     * 
     */
    @Export(name="delay", refs={Integer.class}, tree="[0]")
    private Output<Integer> delay;

    /**
     * @return The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`
     * 
     */
    public Output<Integer> delay() {
        return this.delay;
    }
    /**
     * Interface description.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Interface description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * A device name from the provider configuration.
     * 
     */
    @Export(name="device", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Output<Optional<String>> device() {
        return Codegen.optional(this.device);
    }
    /**
     * Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`
     * 
     */
    @Export(name="duplex", refs={String.class}, tree="[0]")
    private Output<String> duplex;

    /**
     * @return Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`
     * 
     */
    public Output<String> duplex() {
        return this.duplex;
    }
    /**
     * Must match first field in the output of `show intf brief`. Example: `po1`.
     * 
     */
    @Export(name="interfaceId", refs={String.class}, tree="[0]")
    private Output<String> interfaceId;

    /**
     * @return Must match first field in the output of `show intf brief`. Example: `po1`.
     * 
     */
    public Output<String> interfaceId() {
        return this.interfaceId;
    }
    /**
     * Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`
     * 
     */
    @Export(name="layer", refs={String.class}, tree="[0]")
    private Output<String> layer;

    /**
     * @return Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`
     * 
     */
    public Output<String> layer() {
        return this.layer;
    }
    /**
     * Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`
     * 
     */
    @Export(name="linkLogging", refs={String.class}, tree="[0]")
    private Output<String> linkLogging;

    /**
     * @return Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`
     * 
     */
    public Output<String> linkLogging() {
        return this.linkLogging;
    }
    /**
     * Maximum links. - Range: `1`-`32` - Default value: `32`
     * 
     */
    @Export(name="maximumLinks", refs={Integer.class}, tree="[0]")
    private Output<Integer> maximumLinks;

    /**
     * @return Maximum links. - Range: `1`-`32` - Default value: `32`
     * 
     */
    public Output<Integer> maximumLinks() {
        return this.maximumLinks;
    }
    /**
     * The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`
     * 
     */
    @Export(name="medium", refs={String.class}, tree="[0]")
    private Output<String> medium;

    /**
     * @return The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`
     * 
     */
    public Output<String> medium() {
        return this.medium;
    }
    /**
     * Minimum links. - Range: `1`-`32` - Default value: `1`
     * 
     */
    @Export(name="minimumLinks", refs={Integer.class}, tree="[0]")
    private Output<Integer> minimumLinks;

    /**
     * @return Minimum links. - Range: `1`-`32` - Default value: `1`
     * 
     */
    public Output<Integer> minimumLinks() {
        return this.minimumLinks;
    }
    /**
     * Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,
     * `trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`
     * 
     */
    @Export(name="mode", refs={String.class}, tree="[0]")
    private Output<String> mode;

    /**
     * @return Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,
     * `trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`
     * 
     */
    public Output<String> mode() {
        return this.mode;
    }
    /**
     * Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    @Export(name="mtu", refs={Integer.class}, tree="[0]")
    private Output<Integer> mtu;

    /**
     * @return Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    public Output<Integer> mtu() {
        return this.mtu;
    }
    /**
     * Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`
     * 
     */
    @Export(name="nativeVlan", refs={String.class}, tree="[0]")
    private Output<String> nativeVlan;

    /**
     * @return Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`
     * 
     */
    public Output<String> nativeVlan() {
        return this.nativeVlan;
    }
    /**
     * The aggregated interface protocol channel mode. - Choices: `on`, `static`, `active`, `passive`, `mac-pin` - Default
     * value: `on`
     * 
     */
    @Export(name="portChannelMode", refs={String.class}, tree="[0]")
    private Output<String> portChannelMode;

    /**
     * @return The aggregated interface protocol channel mode. - Choices: `on`, `static`, `active`, `passive`, `mac-pin` - Default
     * value: `on`
     * 
     */
    public Output<String> portChannelMode() {
        return this.portChannelMode;
    }
    /**
     * Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,
     * `100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:
     * `auto`
     * 
     */
    @Export(name="speed", refs={String.class}, tree="[0]")
    private Output<String> speed;

    /**
     * @return Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,
     * `100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:
     * `auto`
     * 
     */
    public Output<String> speed() {
        return this.speed;
    }
    /**
     * Suspend Individual Port. - Choices: `enable`, `disable` - Default value: `enable`
     * 
     */
    @Export(name="suspendIndividual", refs={String.class}, tree="[0]")
    private Output<String> suspendIndividual;

    /**
     * @return Suspend Individual Port. - Choices: `enable`, `disable` - Default value: `enable`
     * 
     */
    public Output<String> suspendIndividual() {
        return this.suspendIndividual;
    }
    /**
     * List of trunk VLANs. - Default value: `1-4094`
     * 
     */
    @Export(name="trunkVlans", refs={String.class}, tree="[0]")
    private Output<String> trunkVlans;

    /**
     * @return List of trunk VLANs. - Default value: `1-4094`
     * 
     */
    public Output<String> trunkVlans() {
        return this.trunkVlans;
    }
    /**
     * Port User Config Flags.
     * 
     */
    @Export(name="userConfiguredFlags", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userConfiguredFlags;

    /**
     * @return Port User Config Flags.
     * 
     */
    public Output<Optional<String>> userConfiguredFlags() {
        return Codegen.optional(this.userConfiguredFlags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PortChannelInterface(String name) {
        this(name, PortChannelInterfaceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PortChannelInterface(String name, PortChannelInterfaceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PortChannelInterface(String name, PortChannelInterfaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("nxos:nxos/portChannelInterface:PortChannelInterface", name, args == null ? PortChannelInterfaceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PortChannelInterface(String name, Output<String> id, @Nullable PortChannelInterfaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("nxos:nxos/portChannelInterface:PortChannelInterface", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PortChannelInterface get(String name, Output<String> id, @Nullable PortChannelInterfaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PortChannelInterface(name, id, state, options);
    }
}
