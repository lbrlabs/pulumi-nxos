// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EvpnVniRouteTargetState extends com.pulumi.resources.ResourceArgs {

    public static final EvpnVniRouteTargetState Empty = new EvpnVniRouteTargetState();

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * Route Target direction. - Choices: `import`, `export`
     * 
     */
    @Import(name="direction")
    private @Nullable Output<String> direction;

    /**
     * @return Route Target direction. - Choices: `import`, `export`
     * 
     */
    public Optional<Output<String>> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.
     * 
     */
    @Import(name="encap")
    private @Nullable Output<String> encap;

    /**
     * @return Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.
     * 
     */
    public Optional<Output<String>> encap() {
        return Optional.ofNullable(this.encap);
    }

    /**
     * Route Target in NX-OS DME format.
     * 
     */
    @Import(name="routeTarget")
    private @Nullable Output<String> routeTarget;

    /**
     * @return Route Target in NX-OS DME format.
     * 
     */
    public Optional<Output<String>> routeTarget() {
        return Optional.ofNullable(this.routeTarget);
    }

    private EvpnVniRouteTargetState() {}

    private EvpnVniRouteTargetState(EvpnVniRouteTargetState $) {
        this.device = $.device;
        this.direction = $.direction;
        this.encap = $.encap;
        this.routeTarget = $.routeTarget;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EvpnVniRouteTargetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EvpnVniRouteTargetState $;

        public Builder() {
            $ = new EvpnVniRouteTargetState();
        }

        public Builder(EvpnVniRouteTargetState defaults) {
            $ = new EvpnVniRouteTargetState(Objects.requireNonNull(defaults));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param direction Route Target direction. - Choices: `import`, `export`
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable Output<String> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction Route Target direction. - Choices: `import`, `export`
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        /**
         * @param encap Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.
         * 
         * @return builder
         * 
         */
        public Builder encap(@Nullable Output<String> encap) {
            $.encap = encap;
            return this;
        }

        /**
         * @param encap Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.
         * 
         * @return builder
         * 
         */
        public Builder encap(String encap) {
            return encap(Output.of(encap));
        }

        /**
         * @param routeTarget Route Target in NX-OS DME format.
         * 
         * @return builder
         * 
         */
        public Builder routeTarget(@Nullable Output<String> routeTarget) {
            $.routeTarget = routeTarget;
            return this;
        }

        /**
         * @param routeTarget Route Target in NX-OS DME format.
         * 
         * @return builder
         * 
         */
        public Builder routeTarget(String routeTarget) {
            return routeTarget(Output.of(routeTarget));
        }

        public EvpnVniRouteTargetState build() {
            return $;
        }
    }

}
