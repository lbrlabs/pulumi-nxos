// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.nxos.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPimInterfaceResult {
    private String adminState;
    private String bfd;
    private @Nullable String device;
    private Integer drPriority;
    private String id;
    private String interfaceId;
    private Boolean passive;
    private Boolean sparseMode;
    private String vrfName;

    private GetPimInterfaceResult() {}
    public String adminState() {
        return this.adminState;
    }
    public String bfd() {
        return this.bfd;
    }
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    public Integer drPriority() {
        return this.drPriority;
    }
    public String id() {
        return this.id;
    }
    public String interfaceId() {
        return this.interfaceId;
    }
    public Boolean passive() {
        return this.passive;
    }
    public Boolean sparseMode() {
        return this.sparseMode;
    }
    public String vrfName() {
        return this.vrfName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPimInterfaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String adminState;
        private String bfd;
        private @Nullable String device;
        private Integer drPriority;
        private String id;
        private String interfaceId;
        private Boolean passive;
        private Boolean sparseMode;
        private String vrfName;
        public Builder() {}
        public Builder(GetPimInterfaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminState = defaults.adminState;
    	      this.bfd = defaults.bfd;
    	      this.device = defaults.device;
    	      this.drPriority = defaults.drPriority;
    	      this.id = defaults.id;
    	      this.interfaceId = defaults.interfaceId;
    	      this.passive = defaults.passive;
    	      this.sparseMode = defaults.sparseMode;
    	      this.vrfName = defaults.vrfName;
        }

        @CustomType.Setter
        public Builder adminState(String adminState) {
            this.adminState = Objects.requireNonNull(adminState);
            return this;
        }
        @CustomType.Setter
        public Builder bfd(String bfd) {
            this.bfd = Objects.requireNonNull(bfd);
            return this;
        }
        @CustomType.Setter
        public Builder device(@Nullable String device) {
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder drPriority(Integer drPriority) {
            this.drPriority = Objects.requireNonNull(drPriority);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder interfaceId(String interfaceId) {
            this.interfaceId = Objects.requireNonNull(interfaceId);
            return this;
        }
        @CustomType.Setter
        public Builder passive(Boolean passive) {
            this.passive = Objects.requireNonNull(passive);
            return this;
        }
        @CustomType.Setter
        public Builder sparseMode(Boolean sparseMode) {
            this.sparseMode = Objects.requireNonNull(sparseMode);
            return this;
        }
        @CustomType.Setter
        public Builder vrfName(String vrfName) {
            this.vrfName = Objects.requireNonNull(vrfName);
            return this;
        }
        public GetPimInterfaceResult build() {
            final var o = new GetPimInterfaceResult();
            o.adminState = adminState;
            o.bfd = bfd;
            o.device = device;
            o.drPriority = drPriority;
            o.id = id;
            o.interfaceId = interfaceId;
            o.passive = passive;
            o.sparseMode = sparseMode;
            o.vrfName = vrfName;
            return o;
        }
    }
}
