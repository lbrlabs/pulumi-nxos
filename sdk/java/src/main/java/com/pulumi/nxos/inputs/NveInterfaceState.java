// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NveInterfaceState extends com.pulumi.resources.ResourceArgs {

    public static final NveInterfaceState Empty = new NveInterfaceState();

    /**
     * Administrative state. - Choices: `enabled`, `disabled` - Default value: `disabled`
     * 
     */
    @Import(name="adminState")
    private @Nullable Output<String> adminState;

    /**
     * @return Administrative state. - Choices: `enabled`, `disabled` - Default value: `disabled`
     * 
     */
    public Optional<Output<String>> adminState() {
        return Optional.ofNullable(this.adminState);
    }

    /**
     * Enable or disable Virtual MAC Advertisement in VPC mode. - Default value: `false`
     * 
     */
    @Import(name="advertiseVirtualMac")
    private @Nullable Output<Boolean> advertiseVirtualMac;

    /**
     * @return Enable or disable Virtual MAC Advertisement in VPC mode. - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> advertiseVirtualMac() {
        return Optional.ofNullable(this.advertiseVirtualMac);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * Hold Down Time. - Range: `1`-`1500` - Default value: `180`
     * 
     */
    @Import(name="holdDownTime")
    private @Nullable Output<Integer> holdDownTime;

    /**
     * @return Hold Down Time. - Range: `1`-`1500` - Default value: `180`
     * 
     */
    public Optional<Output<Integer>> holdDownTime() {
        return Optional.ofNullable(this.holdDownTime);
    }

    /**
     * Host Reachability Protocol. - Choices: `Flood-and-learn`, `bgp`, `controller`, `openflow`, `openflowIR` - Default value:
     * `Flood-and-learn`
     * 
     */
    @Import(name="hostReachabilityProtocol")
    private @Nullable Output<String> hostReachabilityProtocol;

    /**
     * @return Host Reachability Protocol. - Choices: `Flood-and-learn`, `bgp`, `controller`, `openflow`, `openflowIR` - Default value:
     * `Flood-and-learn`
     * 
     */
    public Optional<Output<String>> hostReachabilityProtocol() {
        return Optional.ofNullable(this.hostReachabilityProtocol);
    }

    /**
     * VxLAN Ingress Replication Protocol BGP. - Default value: `false`
     * 
     */
    @Import(name="ingressReplicationProtocolBgp")
    private @Nullable Output<Boolean> ingressReplicationProtocolBgp;

    /**
     * @return VxLAN Ingress Replication Protocol BGP. - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> ingressReplicationProtocolBgp() {
        return Optional.ofNullable(this.ingressReplicationProtocolBgp);
    }

    /**
     * Base multicast group address for L2. - Default value: `0.0.0.0`
     * 
     */
    @Import(name="multicastGroupL2")
    private @Nullable Output<String> multicastGroupL2;

    /**
     * @return Base multicast group address for L2. - Default value: `0.0.0.0`
     * 
     */
    public Optional<Output<String>> multicastGroupL2() {
        return Optional.ofNullable(this.multicastGroupL2);
    }

    /**
     * Base multicast group address for L3. - Default value: `0.0.0.0`
     * 
     */
    @Import(name="multicastGroupL3")
    private @Nullable Output<String> multicastGroupL3;

    /**
     * @return Base multicast group address for L3. - Default value: `0.0.0.0`
     * 
     */
    public Optional<Output<String>> multicastGroupL3() {
        return Optional.ofNullable(this.multicastGroupL3);
    }

    /**
     * Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`. - Default
     * value: `unspecified`
     * 
     */
    @Import(name="multisiteSourceInterface")
    private @Nullable Output<String> multisiteSourceInterface;

    /**
     * @return Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`. - Default
     * value: `unspecified`
     * 
     */
    public Optional<Output<String>> multisiteSourceInterface() {
        return Optional.ofNullable(this.multisiteSourceInterface);
    }

    /**
     * Source Interface associated with the NVE. Must match first field in the output of `show int brief`. - Default value:
     * `unspecified`
     * 
     */
    @Import(name="sourceInterface")
    private @Nullable Output<String> sourceInterface;

    /**
     * @return Source Interface associated with the NVE. Must match first field in the output of `show int brief`. - Default value:
     * `unspecified`
     * 
     */
    public Optional<Output<String>> sourceInterface() {
        return Optional.ofNullable(this.sourceInterface);
    }

    /**
     * Suppress ARP. - Default value: `false`
     * 
     */
    @Import(name="suppressArp")
    private @Nullable Output<Boolean> suppressArp;

    /**
     * @return Suppress ARP. - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> suppressArp() {
        return Optional.ofNullable(this.suppressArp);
    }

    /**
     * Suppress MAC Route. - Default value: `false`
     * 
     */
    @Import(name="suppressMacRoute")
    private @Nullable Output<Boolean> suppressMacRoute;

    /**
     * @return Suppress MAC Route. - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> suppressMacRoute() {
        return Optional.ofNullable(this.suppressMacRoute);
    }

    private NveInterfaceState() {}

    private NveInterfaceState(NveInterfaceState $) {
        this.adminState = $.adminState;
        this.advertiseVirtualMac = $.advertiseVirtualMac;
        this.device = $.device;
        this.holdDownTime = $.holdDownTime;
        this.hostReachabilityProtocol = $.hostReachabilityProtocol;
        this.ingressReplicationProtocolBgp = $.ingressReplicationProtocolBgp;
        this.multicastGroupL2 = $.multicastGroupL2;
        this.multicastGroupL3 = $.multicastGroupL3;
        this.multisiteSourceInterface = $.multisiteSourceInterface;
        this.sourceInterface = $.sourceInterface;
        this.suppressArp = $.suppressArp;
        this.suppressMacRoute = $.suppressMacRoute;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NveInterfaceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NveInterfaceState $;

        public Builder() {
            $ = new NveInterfaceState();
        }

        public Builder(NveInterfaceState defaults) {
            $ = new NveInterfaceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminState Administrative state. - Choices: `enabled`, `disabled` - Default value: `disabled`
         * 
         * @return builder
         * 
         */
        public Builder adminState(@Nullable Output<String> adminState) {
            $.adminState = adminState;
            return this;
        }

        /**
         * @param adminState Administrative state. - Choices: `enabled`, `disabled` - Default value: `disabled`
         * 
         * @return builder
         * 
         */
        public Builder adminState(String adminState) {
            return adminState(Output.of(adminState));
        }

        /**
         * @param advertiseVirtualMac Enable or disable Virtual MAC Advertisement in VPC mode. - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder advertiseVirtualMac(@Nullable Output<Boolean> advertiseVirtualMac) {
            $.advertiseVirtualMac = advertiseVirtualMac;
            return this;
        }

        /**
         * @param advertiseVirtualMac Enable or disable Virtual MAC Advertisement in VPC mode. - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder advertiseVirtualMac(Boolean advertiseVirtualMac) {
            return advertiseVirtualMac(Output.of(advertiseVirtualMac));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param holdDownTime Hold Down Time. - Range: `1`-`1500` - Default value: `180`
         * 
         * @return builder
         * 
         */
        public Builder holdDownTime(@Nullable Output<Integer> holdDownTime) {
            $.holdDownTime = holdDownTime;
            return this;
        }

        /**
         * @param holdDownTime Hold Down Time. - Range: `1`-`1500` - Default value: `180`
         * 
         * @return builder
         * 
         */
        public Builder holdDownTime(Integer holdDownTime) {
            return holdDownTime(Output.of(holdDownTime));
        }

        /**
         * @param hostReachabilityProtocol Host Reachability Protocol. - Choices: `Flood-and-learn`, `bgp`, `controller`, `openflow`, `openflowIR` - Default value:
         * `Flood-and-learn`
         * 
         * @return builder
         * 
         */
        public Builder hostReachabilityProtocol(@Nullable Output<String> hostReachabilityProtocol) {
            $.hostReachabilityProtocol = hostReachabilityProtocol;
            return this;
        }

        /**
         * @param hostReachabilityProtocol Host Reachability Protocol. - Choices: `Flood-and-learn`, `bgp`, `controller`, `openflow`, `openflowIR` - Default value:
         * `Flood-and-learn`
         * 
         * @return builder
         * 
         */
        public Builder hostReachabilityProtocol(String hostReachabilityProtocol) {
            return hostReachabilityProtocol(Output.of(hostReachabilityProtocol));
        }

        /**
         * @param ingressReplicationProtocolBgp VxLAN Ingress Replication Protocol BGP. - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ingressReplicationProtocolBgp(@Nullable Output<Boolean> ingressReplicationProtocolBgp) {
            $.ingressReplicationProtocolBgp = ingressReplicationProtocolBgp;
            return this;
        }

        /**
         * @param ingressReplicationProtocolBgp VxLAN Ingress Replication Protocol BGP. - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ingressReplicationProtocolBgp(Boolean ingressReplicationProtocolBgp) {
            return ingressReplicationProtocolBgp(Output.of(ingressReplicationProtocolBgp));
        }

        /**
         * @param multicastGroupL2 Base multicast group address for L2. - Default value: `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder multicastGroupL2(@Nullable Output<String> multicastGroupL2) {
            $.multicastGroupL2 = multicastGroupL2;
            return this;
        }

        /**
         * @param multicastGroupL2 Base multicast group address for L2. - Default value: `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder multicastGroupL2(String multicastGroupL2) {
            return multicastGroupL2(Output.of(multicastGroupL2));
        }

        /**
         * @param multicastGroupL3 Base multicast group address for L3. - Default value: `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder multicastGroupL3(@Nullable Output<String> multicastGroupL3) {
            $.multicastGroupL3 = multicastGroupL3;
            return this;
        }

        /**
         * @param multicastGroupL3 Base multicast group address for L3. - Default value: `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder multicastGroupL3(String multicastGroupL3) {
            return multicastGroupL3(Output.of(multicastGroupL3));
        }

        /**
         * @param multisiteSourceInterface Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`. - Default
         * value: `unspecified`
         * 
         * @return builder
         * 
         */
        public Builder multisiteSourceInterface(@Nullable Output<String> multisiteSourceInterface) {
            $.multisiteSourceInterface = multisiteSourceInterface;
            return this;
        }

        /**
         * @param multisiteSourceInterface Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`. - Default
         * value: `unspecified`
         * 
         * @return builder
         * 
         */
        public Builder multisiteSourceInterface(String multisiteSourceInterface) {
            return multisiteSourceInterface(Output.of(multisiteSourceInterface));
        }

        /**
         * @param sourceInterface Source Interface associated with the NVE. Must match first field in the output of `show int brief`. - Default value:
         * `unspecified`
         * 
         * @return builder
         * 
         */
        public Builder sourceInterface(@Nullable Output<String> sourceInterface) {
            $.sourceInterface = sourceInterface;
            return this;
        }

        /**
         * @param sourceInterface Source Interface associated with the NVE. Must match first field in the output of `show int brief`. - Default value:
         * `unspecified`
         * 
         * @return builder
         * 
         */
        public Builder sourceInterface(String sourceInterface) {
            return sourceInterface(Output.of(sourceInterface));
        }

        /**
         * @param suppressArp Suppress ARP. - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder suppressArp(@Nullable Output<Boolean> suppressArp) {
            $.suppressArp = suppressArp;
            return this;
        }

        /**
         * @param suppressArp Suppress ARP. - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder suppressArp(Boolean suppressArp) {
            return suppressArp(Output.of(suppressArp));
        }

        /**
         * @param suppressMacRoute Suppress MAC Route. - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder suppressMacRoute(@Nullable Output<Boolean> suppressMacRoute) {
            $.suppressMacRoute = suppressMacRoute;
            return this;
        }

        /**
         * @param suppressMacRoute Suppress MAC Route. - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder suppressMacRoute(Boolean suppressMacRoute) {
            return suppressMacRoute(Output.of(suppressMacRoute));
        }

        public NveInterfaceState build() {
            return $;
        }
    }

}
