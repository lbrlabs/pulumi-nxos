// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIsisInterfaceResult {
    /**
     * @return Authentication Check for ISIS without specific level.
     * 
     */
    private Boolean authenticationCheck;
    /**
     * @return Authentication Check for ISIS on Level-1.
     * 
     */
    private Boolean authenticationCheckL1;
    /**
     * @return Authentication Check for ISIS on Level-2.
     * 
     */
    private Boolean authenticationCheckL2;
    /**
     * @return Authentication Key for IS-IS without specific level.
     * 
     */
    private String authenticationKey;
    /**
     * @return Authentication Key for IS-IS on Level-1.
     * 
     */
    private String authenticationKeyL1;
    /**
     * @return Authentication Key for IS-IS on Level-2.
     * 
     */
    private String authenticationKeyL2;
    /**
     * @return IS-IS Authentication-Type without specific level.
     * 
     */
    private String authenticationType;
    /**
     * @return IS-IS Authentication-Type for Level-1.
     * 
     */
    private String authenticationTypeL1;
    /**
     * @return IS-IS Authentication-Type for Level-2.
     * 
     */
    private String authenticationTypeL2;
    /**
     * @return Circuit type.
     * 
     */
    private String circuitType;
    /**
     * @return A device name from the provider configuration.
     * 
     */
    private @Nullable String device;
    /**
     * @return Hello interval.
     * 
     */
    private Integer helloInterval;
    /**
     * @return Hello interval Level-1.
     * 
     */
    private Integer helloIntervalL1;
    /**
     * @return Hello interval Level-2.
     * 
     */
    private Integer helloIntervalL2;
    /**
     * @return Hello multiplier.
     * 
     */
    private Integer helloMultiplier;
    /**
     * @return Hello multiplier Level-1.
     * 
     */
    private Integer helloMultiplierL1;
    /**
     * @return Hello multiplier Level-2.
     * 
     */
    private Integer helloMultiplierL2;
    /**
     * @return Hello padding.
     * 
     */
    private String helloPadding;
    /**
     * @return The distinguished name of the object.
     * 
     */
    private String id;
    /**
     * @return Must match first field in the output of `show intf brief`. Example: `eth1/1`.
     * 
     */
    private String interfaceId;
    /**
     * @return Interface metric Level-1.
     * 
     */
    private Integer metricL1;
    /**
     * @return Interface metric Level-2.
     * 
     */
    private Integer metricL2;
    /**
     * @return MTU Check for IS-IS without specific level.
     * 
     */
    private Boolean mtuCheck;
    /**
     * @return MTU Check for IS-IS on Level-1.
     * 
     */
    private Boolean mtuCheckL1;
    /**
     * @return MTU Check for IS-IS on Level-2.
     * 
     */
    private Boolean mtuCheckL2;
    /**
     * @return Enabling Point-to-Point Network Type on IS-IS Interface.
     * 
     */
    private String networkTypeP2p;
    /**
     * @return IS-IS Passive Interface Info.
     * 
     */
    private String passive;
    /**
     * @return Circuit priority.
     * 
     */
    private Integer priorityL1;
    /**
     * @return Circuit priority.
     * 
     */
    private Integer priorityL2;
    /**
     * @return VRF.
     * 
     */
    private String vrf;

    private GetIsisInterfaceResult() {}
    /**
     * @return Authentication Check for ISIS without specific level.
     * 
     */
    public Boolean authenticationCheck() {
        return this.authenticationCheck;
    }
    /**
     * @return Authentication Check for ISIS on Level-1.
     * 
     */
    public Boolean authenticationCheckL1() {
        return this.authenticationCheckL1;
    }
    /**
     * @return Authentication Check for ISIS on Level-2.
     * 
     */
    public Boolean authenticationCheckL2() {
        return this.authenticationCheckL2;
    }
    /**
     * @return Authentication Key for IS-IS without specific level.
     * 
     */
    public String authenticationKey() {
        return this.authenticationKey;
    }
    /**
     * @return Authentication Key for IS-IS on Level-1.
     * 
     */
    public String authenticationKeyL1() {
        return this.authenticationKeyL1;
    }
    /**
     * @return Authentication Key for IS-IS on Level-2.
     * 
     */
    public String authenticationKeyL2() {
        return this.authenticationKeyL2;
    }
    /**
     * @return IS-IS Authentication-Type without specific level.
     * 
     */
    public String authenticationType() {
        return this.authenticationType;
    }
    /**
     * @return IS-IS Authentication-Type for Level-1.
     * 
     */
    public String authenticationTypeL1() {
        return this.authenticationTypeL1;
    }
    /**
     * @return IS-IS Authentication-Type for Level-2.
     * 
     */
    public String authenticationTypeL2() {
        return this.authenticationTypeL2;
    }
    /**
     * @return Circuit type.
     * 
     */
    public String circuitType() {
        return this.circuitType;
    }
    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    /**
     * @return Hello interval.
     * 
     */
    public Integer helloInterval() {
        return this.helloInterval;
    }
    /**
     * @return Hello interval Level-1.
     * 
     */
    public Integer helloIntervalL1() {
        return this.helloIntervalL1;
    }
    /**
     * @return Hello interval Level-2.
     * 
     */
    public Integer helloIntervalL2() {
        return this.helloIntervalL2;
    }
    /**
     * @return Hello multiplier.
     * 
     */
    public Integer helloMultiplier() {
        return this.helloMultiplier;
    }
    /**
     * @return Hello multiplier Level-1.
     * 
     */
    public Integer helloMultiplierL1() {
        return this.helloMultiplierL1;
    }
    /**
     * @return Hello multiplier Level-2.
     * 
     */
    public Integer helloMultiplierL2() {
        return this.helloMultiplierL2;
    }
    /**
     * @return Hello padding.
     * 
     */
    public String helloPadding() {
        return this.helloPadding;
    }
    /**
     * @return The distinguished name of the object.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Must match first field in the output of `show intf brief`. Example: `eth1/1`.
     * 
     */
    public String interfaceId() {
        return this.interfaceId;
    }
    /**
     * @return Interface metric Level-1.
     * 
     */
    public Integer metricL1() {
        return this.metricL1;
    }
    /**
     * @return Interface metric Level-2.
     * 
     */
    public Integer metricL2() {
        return this.metricL2;
    }
    /**
     * @return MTU Check for IS-IS without specific level.
     * 
     */
    public Boolean mtuCheck() {
        return this.mtuCheck;
    }
    /**
     * @return MTU Check for IS-IS on Level-1.
     * 
     */
    public Boolean mtuCheckL1() {
        return this.mtuCheckL1;
    }
    /**
     * @return MTU Check for IS-IS on Level-2.
     * 
     */
    public Boolean mtuCheckL2() {
        return this.mtuCheckL2;
    }
    /**
     * @return Enabling Point-to-Point Network Type on IS-IS Interface.
     * 
     */
    public String networkTypeP2p() {
        return this.networkTypeP2p;
    }
    /**
     * @return IS-IS Passive Interface Info.
     * 
     */
    public String passive() {
        return this.passive;
    }
    /**
     * @return Circuit priority.
     * 
     */
    public Integer priorityL1() {
        return this.priorityL1;
    }
    /**
     * @return Circuit priority.
     * 
     */
    public Integer priorityL2() {
        return this.priorityL2;
    }
    /**
     * @return VRF.
     * 
     */
    public String vrf() {
        return this.vrf;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIsisInterfaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean authenticationCheck;
        private Boolean authenticationCheckL1;
        private Boolean authenticationCheckL2;
        private String authenticationKey;
        private String authenticationKeyL1;
        private String authenticationKeyL2;
        private String authenticationType;
        private String authenticationTypeL1;
        private String authenticationTypeL2;
        private String circuitType;
        private @Nullable String device;
        private Integer helloInterval;
        private Integer helloIntervalL1;
        private Integer helloIntervalL2;
        private Integer helloMultiplier;
        private Integer helloMultiplierL1;
        private Integer helloMultiplierL2;
        private String helloPadding;
        private String id;
        private String interfaceId;
        private Integer metricL1;
        private Integer metricL2;
        private Boolean mtuCheck;
        private Boolean mtuCheckL1;
        private Boolean mtuCheckL2;
        private String networkTypeP2p;
        private String passive;
        private Integer priorityL1;
        private Integer priorityL2;
        private String vrf;
        public Builder() {}
        public Builder(GetIsisInterfaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationCheck = defaults.authenticationCheck;
    	      this.authenticationCheckL1 = defaults.authenticationCheckL1;
    	      this.authenticationCheckL2 = defaults.authenticationCheckL2;
    	      this.authenticationKey = defaults.authenticationKey;
    	      this.authenticationKeyL1 = defaults.authenticationKeyL1;
    	      this.authenticationKeyL2 = defaults.authenticationKeyL2;
    	      this.authenticationType = defaults.authenticationType;
    	      this.authenticationTypeL1 = defaults.authenticationTypeL1;
    	      this.authenticationTypeL2 = defaults.authenticationTypeL2;
    	      this.circuitType = defaults.circuitType;
    	      this.device = defaults.device;
    	      this.helloInterval = defaults.helloInterval;
    	      this.helloIntervalL1 = defaults.helloIntervalL1;
    	      this.helloIntervalL2 = defaults.helloIntervalL2;
    	      this.helloMultiplier = defaults.helloMultiplier;
    	      this.helloMultiplierL1 = defaults.helloMultiplierL1;
    	      this.helloMultiplierL2 = defaults.helloMultiplierL2;
    	      this.helloPadding = defaults.helloPadding;
    	      this.id = defaults.id;
    	      this.interfaceId = defaults.interfaceId;
    	      this.metricL1 = defaults.metricL1;
    	      this.metricL2 = defaults.metricL2;
    	      this.mtuCheck = defaults.mtuCheck;
    	      this.mtuCheckL1 = defaults.mtuCheckL1;
    	      this.mtuCheckL2 = defaults.mtuCheckL2;
    	      this.networkTypeP2p = defaults.networkTypeP2p;
    	      this.passive = defaults.passive;
    	      this.priorityL1 = defaults.priorityL1;
    	      this.priorityL2 = defaults.priorityL2;
    	      this.vrf = defaults.vrf;
        }

        @CustomType.Setter
        public Builder authenticationCheck(Boolean authenticationCheck) {
            this.authenticationCheck = Objects.requireNonNull(authenticationCheck);
            return this;
        }
        @CustomType.Setter
        public Builder authenticationCheckL1(Boolean authenticationCheckL1) {
            this.authenticationCheckL1 = Objects.requireNonNull(authenticationCheckL1);
            return this;
        }
        @CustomType.Setter
        public Builder authenticationCheckL2(Boolean authenticationCheckL2) {
            this.authenticationCheckL2 = Objects.requireNonNull(authenticationCheckL2);
            return this;
        }
        @CustomType.Setter
        public Builder authenticationKey(String authenticationKey) {
            this.authenticationKey = Objects.requireNonNull(authenticationKey);
            return this;
        }
        @CustomType.Setter
        public Builder authenticationKeyL1(String authenticationKeyL1) {
            this.authenticationKeyL1 = Objects.requireNonNull(authenticationKeyL1);
            return this;
        }
        @CustomType.Setter
        public Builder authenticationKeyL2(String authenticationKeyL2) {
            this.authenticationKeyL2 = Objects.requireNonNull(authenticationKeyL2);
            return this;
        }
        @CustomType.Setter
        public Builder authenticationType(String authenticationType) {
            this.authenticationType = Objects.requireNonNull(authenticationType);
            return this;
        }
        @CustomType.Setter
        public Builder authenticationTypeL1(String authenticationTypeL1) {
            this.authenticationTypeL1 = Objects.requireNonNull(authenticationTypeL1);
            return this;
        }
        @CustomType.Setter
        public Builder authenticationTypeL2(String authenticationTypeL2) {
            this.authenticationTypeL2 = Objects.requireNonNull(authenticationTypeL2);
            return this;
        }
        @CustomType.Setter
        public Builder circuitType(String circuitType) {
            this.circuitType = Objects.requireNonNull(circuitType);
            return this;
        }
        @CustomType.Setter
        public Builder device(@Nullable String device) {
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder helloInterval(Integer helloInterval) {
            this.helloInterval = Objects.requireNonNull(helloInterval);
            return this;
        }
        @CustomType.Setter
        public Builder helloIntervalL1(Integer helloIntervalL1) {
            this.helloIntervalL1 = Objects.requireNonNull(helloIntervalL1);
            return this;
        }
        @CustomType.Setter
        public Builder helloIntervalL2(Integer helloIntervalL2) {
            this.helloIntervalL2 = Objects.requireNonNull(helloIntervalL2);
            return this;
        }
        @CustomType.Setter
        public Builder helloMultiplier(Integer helloMultiplier) {
            this.helloMultiplier = Objects.requireNonNull(helloMultiplier);
            return this;
        }
        @CustomType.Setter
        public Builder helloMultiplierL1(Integer helloMultiplierL1) {
            this.helloMultiplierL1 = Objects.requireNonNull(helloMultiplierL1);
            return this;
        }
        @CustomType.Setter
        public Builder helloMultiplierL2(Integer helloMultiplierL2) {
            this.helloMultiplierL2 = Objects.requireNonNull(helloMultiplierL2);
            return this;
        }
        @CustomType.Setter
        public Builder helloPadding(String helloPadding) {
            this.helloPadding = Objects.requireNonNull(helloPadding);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder interfaceId(String interfaceId) {
            this.interfaceId = Objects.requireNonNull(interfaceId);
            return this;
        }
        @CustomType.Setter
        public Builder metricL1(Integer metricL1) {
            this.metricL1 = Objects.requireNonNull(metricL1);
            return this;
        }
        @CustomType.Setter
        public Builder metricL2(Integer metricL2) {
            this.metricL2 = Objects.requireNonNull(metricL2);
            return this;
        }
        @CustomType.Setter
        public Builder mtuCheck(Boolean mtuCheck) {
            this.mtuCheck = Objects.requireNonNull(mtuCheck);
            return this;
        }
        @CustomType.Setter
        public Builder mtuCheckL1(Boolean mtuCheckL1) {
            this.mtuCheckL1 = Objects.requireNonNull(mtuCheckL1);
            return this;
        }
        @CustomType.Setter
        public Builder mtuCheckL2(Boolean mtuCheckL2) {
            this.mtuCheckL2 = Objects.requireNonNull(mtuCheckL2);
            return this;
        }
        @CustomType.Setter
        public Builder networkTypeP2p(String networkTypeP2p) {
            this.networkTypeP2p = Objects.requireNonNull(networkTypeP2p);
            return this;
        }
        @CustomType.Setter
        public Builder passive(String passive) {
            this.passive = Objects.requireNonNull(passive);
            return this;
        }
        @CustomType.Setter
        public Builder priorityL1(Integer priorityL1) {
            this.priorityL1 = Objects.requireNonNull(priorityL1);
            return this;
        }
        @CustomType.Setter
        public Builder priorityL2(Integer priorityL2) {
            this.priorityL2 = Objects.requireNonNull(priorityL2);
            return this;
        }
        @CustomType.Setter
        public Builder vrf(String vrf) {
            this.vrf = Objects.requireNonNull(vrf);
            return this;
        }
        public GetIsisInterfaceResult build() {
            final var o = new GetIsisInterfaceResult();
            o.authenticationCheck = authenticationCheck;
            o.authenticationCheckL1 = authenticationCheckL1;
            o.authenticationCheckL2 = authenticationCheckL2;
            o.authenticationKey = authenticationKey;
            o.authenticationKeyL1 = authenticationKeyL1;
            o.authenticationKeyL2 = authenticationKeyL2;
            o.authenticationType = authenticationType;
            o.authenticationTypeL1 = authenticationTypeL1;
            o.authenticationTypeL2 = authenticationTypeL2;
            o.circuitType = circuitType;
            o.device = device;
            o.helloInterval = helloInterval;
            o.helloIntervalL1 = helloIntervalL1;
            o.helloIntervalL2 = helloIntervalL2;
            o.helloMultiplier = helloMultiplier;
            o.helloMultiplierL1 = helloMultiplierL1;
            o.helloMultiplierL2 = helloMultiplierL2;
            o.helloPadding = helloPadding;
            o.id = id;
            o.interfaceId = interfaceId;
            o.metricL1 = metricL1;
            o.metricL2 = metricL2;
            o.mtuCheck = mtuCheck;
            o.mtuCheckL1 = mtuCheckL1;
            o.mtuCheckL2 = mtuCheckL2;
            o.networkTypeP2p = networkTypeP2p;
            o.passive = passive;
            o.priorityL1 = priorityL1;
            o.priorityL2 = priorityL2;
            o.vrf = vrf;
            return o;
        }
    }
}
