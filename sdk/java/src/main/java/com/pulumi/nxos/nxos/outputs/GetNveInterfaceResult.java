// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.nxos.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNveInterfaceResult {
    private String adminState;
    private Boolean advertiseVirtualMac;
    private @Nullable String device;
    private Integer holdDownTime;
    private String hostReachabilityProtocol;
    private String id;
    private Boolean ingressReplicationProtocolBgp;
    private String multicastGroupL2;
    private String multicastGroupL3;
    private String multisiteSourceInterface;
    private String sourceInterface;
    private Boolean suppressArp;
    private Boolean suppressMacRoute;

    private GetNveInterfaceResult() {}
    public String adminState() {
        return this.adminState;
    }
    public Boolean advertiseVirtualMac() {
        return this.advertiseVirtualMac;
    }
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    public Integer holdDownTime() {
        return this.holdDownTime;
    }
    public String hostReachabilityProtocol() {
        return this.hostReachabilityProtocol;
    }
    public String id() {
        return this.id;
    }
    public Boolean ingressReplicationProtocolBgp() {
        return this.ingressReplicationProtocolBgp;
    }
    public String multicastGroupL2() {
        return this.multicastGroupL2;
    }
    public String multicastGroupL3() {
        return this.multicastGroupL3;
    }
    public String multisiteSourceInterface() {
        return this.multisiteSourceInterface;
    }
    public String sourceInterface() {
        return this.sourceInterface;
    }
    public Boolean suppressArp() {
        return this.suppressArp;
    }
    public Boolean suppressMacRoute() {
        return this.suppressMacRoute;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNveInterfaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String adminState;
        private Boolean advertiseVirtualMac;
        private @Nullable String device;
        private Integer holdDownTime;
        private String hostReachabilityProtocol;
        private String id;
        private Boolean ingressReplicationProtocolBgp;
        private String multicastGroupL2;
        private String multicastGroupL3;
        private String multisiteSourceInterface;
        private String sourceInterface;
        private Boolean suppressArp;
        private Boolean suppressMacRoute;
        public Builder() {}
        public Builder(GetNveInterfaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminState = defaults.adminState;
    	      this.advertiseVirtualMac = defaults.advertiseVirtualMac;
    	      this.device = defaults.device;
    	      this.holdDownTime = defaults.holdDownTime;
    	      this.hostReachabilityProtocol = defaults.hostReachabilityProtocol;
    	      this.id = defaults.id;
    	      this.ingressReplicationProtocolBgp = defaults.ingressReplicationProtocolBgp;
    	      this.multicastGroupL2 = defaults.multicastGroupL2;
    	      this.multicastGroupL3 = defaults.multicastGroupL3;
    	      this.multisiteSourceInterface = defaults.multisiteSourceInterface;
    	      this.sourceInterface = defaults.sourceInterface;
    	      this.suppressArp = defaults.suppressArp;
    	      this.suppressMacRoute = defaults.suppressMacRoute;
        }

        @CustomType.Setter
        public Builder adminState(String adminState) {
            this.adminState = Objects.requireNonNull(adminState);
            return this;
        }
        @CustomType.Setter
        public Builder advertiseVirtualMac(Boolean advertiseVirtualMac) {
            this.advertiseVirtualMac = Objects.requireNonNull(advertiseVirtualMac);
            return this;
        }
        @CustomType.Setter
        public Builder device(@Nullable String device) {
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder holdDownTime(Integer holdDownTime) {
            this.holdDownTime = Objects.requireNonNull(holdDownTime);
            return this;
        }
        @CustomType.Setter
        public Builder hostReachabilityProtocol(String hostReachabilityProtocol) {
            this.hostReachabilityProtocol = Objects.requireNonNull(hostReachabilityProtocol);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ingressReplicationProtocolBgp(Boolean ingressReplicationProtocolBgp) {
            this.ingressReplicationProtocolBgp = Objects.requireNonNull(ingressReplicationProtocolBgp);
            return this;
        }
        @CustomType.Setter
        public Builder multicastGroupL2(String multicastGroupL2) {
            this.multicastGroupL2 = Objects.requireNonNull(multicastGroupL2);
            return this;
        }
        @CustomType.Setter
        public Builder multicastGroupL3(String multicastGroupL3) {
            this.multicastGroupL3 = Objects.requireNonNull(multicastGroupL3);
            return this;
        }
        @CustomType.Setter
        public Builder multisiteSourceInterface(String multisiteSourceInterface) {
            this.multisiteSourceInterface = Objects.requireNonNull(multisiteSourceInterface);
            return this;
        }
        @CustomType.Setter
        public Builder sourceInterface(String sourceInterface) {
            this.sourceInterface = Objects.requireNonNull(sourceInterface);
            return this;
        }
        @CustomType.Setter
        public Builder suppressArp(Boolean suppressArp) {
            this.suppressArp = Objects.requireNonNull(suppressArp);
            return this;
        }
        @CustomType.Setter
        public Builder suppressMacRoute(Boolean suppressMacRoute) {
            this.suppressMacRoute = Objects.requireNonNull(suppressMacRoute);
            return this;
        }
        public GetNveInterfaceResult build() {
            final var o = new GetNveInterfaceResult();
            o.adminState = adminState;
            o.advertiseVirtualMac = advertiseVirtualMac;
            o.device = device;
            o.holdDownTime = holdDownTime;
            o.hostReachabilityProtocol = hostReachabilityProtocol;
            o.id = id;
            o.ingressReplicationProtocolBgp = ingressReplicationProtocolBgp;
            o.multicastGroupL2 = multicastGroupL2;
            o.multicastGroupL3 = multicastGroupL3;
            o.multisiteSourceInterface = multisiteSourceInterface;
            o.sourceInterface = sourceInterface;
            o.suppressArp = suppressArp;
            o.suppressMacRoute = suppressMacRoute;
            return o;
        }
    }
}
