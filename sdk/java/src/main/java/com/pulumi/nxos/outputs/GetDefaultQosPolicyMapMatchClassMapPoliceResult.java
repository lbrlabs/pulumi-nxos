// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDefaultQosPolicyMapMatchClassMapPoliceResult {
    /**
     * @return CIR burst rate.
     * 
     */
    private Integer bcRate;
    /**
     * @return CIR burst rate unit.
     * 
     */
    private String bcUnit;
    /**
     * @return PIR burst rate.
     * 
     */
    private Integer beRate;
    /**
     * @return PIR burst rate unit.
     * 
     */
    private String beUnit;
    /**
     * @return CIR rate.
     * 
     */
    private Integer cirRate;
    /**
     * @return CIR rate unit.
     * 
     */
    private String cirUnit;
    /**
     * @return Class map name.
     * 
     */
    private String classMapName;
    /**
     * @return Conform action.
     * 
     */
    private String conformAction;
    /**
     * @return Set CoS for conforming traffic.
     * 
     */
    private Integer conformSetCos;
    /**
     * @return Set DSCP for conforming traffic.
     * 
     */
    private Integer conformSetDscp;
    /**
     * @return Set precedence for conforming traffic.
     * 
     */
    private String conformSetPrecedence;
    /**
     * @return Set qos-group for conforming traffic.
     * 
     */
    private Integer conformSetQosGroup;
    /**
     * @return A device name from the provider configuration.
     * 
     */
    private @Nullable String device;
    /**
     * @return Exceed action.
     * 
     */
    private String exceedAction;
    /**
     * @return Set CoS for exceeding traffic.
     * 
     */
    private Integer exceedSetCos;
    /**
     * @return Set DSCP for exceeding traffic.
     * 
     */
    private Integer exceedSetDscp;
    /**
     * @return Set precedence for exceeding traffic.
     * 
     */
    private String exceedSetPrecedence;
    /**
     * @return Set qos-group for exceeding traffic.
     * 
     */
    private Integer exceedSetQosGroup;
    /**
     * @return The distinguished name of the object.
     * 
     */
    private String id;
    /**
     * @return PIR rate.
     * 
     */
    private Integer pirRate;
    /**
     * @return PIR rate unit.
     * 
     */
    private String pirUnit;
    /**
     * @return Policy map name.
     * 
     */
    private String policyMapName;
    /**
     * @return Violate action.
     * 
     */
    private String violateAction;
    /**
     * @return Set CoS for violating traffic.
     * 
     */
    private Integer violateSetCos;
    /**
     * @return Set DSCP for violating traffic.
     * 
     */
    private Integer violateSetDscp;
    /**
     * @return Set precedence for violating traffic.
     * 
     */
    private String violateSetPrecedence;
    /**
     * @return Set qos-group for violating traffic.
     * 
     */
    private Integer violateSetQosGroup;

    private GetDefaultQosPolicyMapMatchClassMapPoliceResult() {}
    /**
     * @return CIR burst rate.
     * 
     */
    public Integer bcRate() {
        return this.bcRate;
    }
    /**
     * @return CIR burst rate unit.
     * 
     */
    public String bcUnit() {
        return this.bcUnit;
    }
    /**
     * @return PIR burst rate.
     * 
     */
    public Integer beRate() {
        return this.beRate;
    }
    /**
     * @return PIR burst rate unit.
     * 
     */
    public String beUnit() {
        return this.beUnit;
    }
    /**
     * @return CIR rate.
     * 
     */
    public Integer cirRate() {
        return this.cirRate;
    }
    /**
     * @return CIR rate unit.
     * 
     */
    public String cirUnit() {
        return this.cirUnit;
    }
    /**
     * @return Class map name.
     * 
     */
    public String classMapName() {
        return this.classMapName;
    }
    /**
     * @return Conform action.
     * 
     */
    public String conformAction() {
        return this.conformAction;
    }
    /**
     * @return Set CoS for conforming traffic.
     * 
     */
    public Integer conformSetCos() {
        return this.conformSetCos;
    }
    /**
     * @return Set DSCP for conforming traffic.
     * 
     */
    public Integer conformSetDscp() {
        return this.conformSetDscp;
    }
    /**
     * @return Set precedence for conforming traffic.
     * 
     */
    public String conformSetPrecedence() {
        return this.conformSetPrecedence;
    }
    /**
     * @return Set qos-group for conforming traffic.
     * 
     */
    public Integer conformSetQosGroup() {
        return this.conformSetQosGroup;
    }
    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    /**
     * @return Exceed action.
     * 
     */
    public String exceedAction() {
        return this.exceedAction;
    }
    /**
     * @return Set CoS for exceeding traffic.
     * 
     */
    public Integer exceedSetCos() {
        return this.exceedSetCos;
    }
    /**
     * @return Set DSCP for exceeding traffic.
     * 
     */
    public Integer exceedSetDscp() {
        return this.exceedSetDscp;
    }
    /**
     * @return Set precedence for exceeding traffic.
     * 
     */
    public String exceedSetPrecedence() {
        return this.exceedSetPrecedence;
    }
    /**
     * @return Set qos-group for exceeding traffic.
     * 
     */
    public Integer exceedSetQosGroup() {
        return this.exceedSetQosGroup;
    }
    /**
     * @return The distinguished name of the object.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return PIR rate.
     * 
     */
    public Integer pirRate() {
        return this.pirRate;
    }
    /**
     * @return PIR rate unit.
     * 
     */
    public String pirUnit() {
        return this.pirUnit;
    }
    /**
     * @return Policy map name.
     * 
     */
    public String policyMapName() {
        return this.policyMapName;
    }
    /**
     * @return Violate action.
     * 
     */
    public String violateAction() {
        return this.violateAction;
    }
    /**
     * @return Set CoS for violating traffic.
     * 
     */
    public Integer violateSetCos() {
        return this.violateSetCos;
    }
    /**
     * @return Set DSCP for violating traffic.
     * 
     */
    public Integer violateSetDscp() {
        return this.violateSetDscp;
    }
    /**
     * @return Set precedence for violating traffic.
     * 
     */
    public String violateSetPrecedence() {
        return this.violateSetPrecedence;
    }
    /**
     * @return Set qos-group for violating traffic.
     * 
     */
    public Integer violateSetQosGroup() {
        return this.violateSetQosGroup;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDefaultQosPolicyMapMatchClassMapPoliceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer bcRate;
        private String bcUnit;
        private Integer beRate;
        private String beUnit;
        private Integer cirRate;
        private String cirUnit;
        private String classMapName;
        private String conformAction;
        private Integer conformSetCos;
        private Integer conformSetDscp;
        private String conformSetPrecedence;
        private Integer conformSetQosGroup;
        private @Nullable String device;
        private String exceedAction;
        private Integer exceedSetCos;
        private Integer exceedSetDscp;
        private String exceedSetPrecedence;
        private Integer exceedSetQosGroup;
        private String id;
        private Integer pirRate;
        private String pirUnit;
        private String policyMapName;
        private String violateAction;
        private Integer violateSetCos;
        private Integer violateSetDscp;
        private String violateSetPrecedence;
        private Integer violateSetQosGroup;
        public Builder() {}
        public Builder(GetDefaultQosPolicyMapMatchClassMapPoliceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bcRate = defaults.bcRate;
    	      this.bcUnit = defaults.bcUnit;
    	      this.beRate = defaults.beRate;
    	      this.beUnit = defaults.beUnit;
    	      this.cirRate = defaults.cirRate;
    	      this.cirUnit = defaults.cirUnit;
    	      this.classMapName = defaults.classMapName;
    	      this.conformAction = defaults.conformAction;
    	      this.conformSetCos = defaults.conformSetCos;
    	      this.conformSetDscp = defaults.conformSetDscp;
    	      this.conformSetPrecedence = defaults.conformSetPrecedence;
    	      this.conformSetQosGroup = defaults.conformSetQosGroup;
    	      this.device = defaults.device;
    	      this.exceedAction = defaults.exceedAction;
    	      this.exceedSetCos = defaults.exceedSetCos;
    	      this.exceedSetDscp = defaults.exceedSetDscp;
    	      this.exceedSetPrecedence = defaults.exceedSetPrecedence;
    	      this.exceedSetQosGroup = defaults.exceedSetQosGroup;
    	      this.id = defaults.id;
    	      this.pirRate = defaults.pirRate;
    	      this.pirUnit = defaults.pirUnit;
    	      this.policyMapName = defaults.policyMapName;
    	      this.violateAction = defaults.violateAction;
    	      this.violateSetCos = defaults.violateSetCos;
    	      this.violateSetDscp = defaults.violateSetDscp;
    	      this.violateSetPrecedence = defaults.violateSetPrecedence;
    	      this.violateSetQosGroup = defaults.violateSetQosGroup;
        }

        @CustomType.Setter
        public Builder bcRate(Integer bcRate) {
            this.bcRate = Objects.requireNonNull(bcRate);
            return this;
        }
        @CustomType.Setter
        public Builder bcUnit(String bcUnit) {
            this.bcUnit = Objects.requireNonNull(bcUnit);
            return this;
        }
        @CustomType.Setter
        public Builder beRate(Integer beRate) {
            this.beRate = Objects.requireNonNull(beRate);
            return this;
        }
        @CustomType.Setter
        public Builder beUnit(String beUnit) {
            this.beUnit = Objects.requireNonNull(beUnit);
            return this;
        }
        @CustomType.Setter
        public Builder cirRate(Integer cirRate) {
            this.cirRate = Objects.requireNonNull(cirRate);
            return this;
        }
        @CustomType.Setter
        public Builder cirUnit(String cirUnit) {
            this.cirUnit = Objects.requireNonNull(cirUnit);
            return this;
        }
        @CustomType.Setter
        public Builder classMapName(String classMapName) {
            this.classMapName = Objects.requireNonNull(classMapName);
            return this;
        }
        @CustomType.Setter
        public Builder conformAction(String conformAction) {
            this.conformAction = Objects.requireNonNull(conformAction);
            return this;
        }
        @CustomType.Setter
        public Builder conformSetCos(Integer conformSetCos) {
            this.conformSetCos = Objects.requireNonNull(conformSetCos);
            return this;
        }
        @CustomType.Setter
        public Builder conformSetDscp(Integer conformSetDscp) {
            this.conformSetDscp = Objects.requireNonNull(conformSetDscp);
            return this;
        }
        @CustomType.Setter
        public Builder conformSetPrecedence(String conformSetPrecedence) {
            this.conformSetPrecedence = Objects.requireNonNull(conformSetPrecedence);
            return this;
        }
        @CustomType.Setter
        public Builder conformSetQosGroup(Integer conformSetQosGroup) {
            this.conformSetQosGroup = Objects.requireNonNull(conformSetQosGroup);
            return this;
        }
        @CustomType.Setter
        public Builder device(@Nullable String device) {
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder exceedAction(String exceedAction) {
            this.exceedAction = Objects.requireNonNull(exceedAction);
            return this;
        }
        @CustomType.Setter
        public Builder exceedSetCos(Integer exceedSetCos) {
            this.exceedSetCos = Objects.requireNonNull(exceedSetCos);
            return this;
        }
        @CustomType.Setter
        public Builder exceedSetDscp(Integer exceedSetDscp) {
            this.exceedSetDscp = Objects.requireNonNull(exceedSetDscp);
            return this;
        }
        @CustomType.Setter
        public Builder exceedSetPrecedence(String exceedSetPrecedence) {
            this.exceedSetPrecedence = Objects.requireNonNull(exceedSetPrecedence);
            return this;
        }
        @CustomType.Setter
        public Builder exceedSetQosGroup(Integer exceedSetQosGroup) {
            this.exceedSetQosGroup = Objects.requireNonNull(exceedSetQosGroup);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder pirRate(Integer pirRate) {
            this.pirRate = Objects.requireNonNull(pirRate);
            return this;
        }
        @CustomType.Setter
        public Builder pirUnit(String pirUnit) {
            this.pirUnit = Objects.requireNonNull(pirUnit);
            return this;
        }
        @CustomType.Setter
        public Builder policyMapName(String policyMapName) {
            this.policyMapName = Objects.requireNonNull(policyMapName);
            return this;
        }
        @CustomType.Setter
        public Builder violateAction(String violateAction) {
            this.violateAction = Objects.requireNonNull(violateAction);
            return this;
        }
        @CustomType.Setter
        public Builder violateSetCos(Integer violateSetCos) {
            this.violateSetCos = Objects.requireNonNull(violateSetCos);
            return this;
        }
        @CustomType.Setter
        public Builder violateSetDscp(Integer violateSetDscp) {
            this.violateSetDscp = Objects.requireNonNull(violateSetDscp);
            return this;
        }
        @CustomType.Setter
        public Builder violateSetPrecedence(String violateSetPrecedence) {
            this.violateSetPrecedence = Objects.requireNonNull(violateSetPrecedence);
            return this;
        }
        @CustomType.Setter
        public Builder violateSetQosGroup(Integer violateSetQosGroup) {
            this.violateSetQosGroup = Objects.requireNonNull(violateSetQosGroup);
            return this;
        }
        public GetDefaultQosPolicyMapMatchClassMapPoliceResult build() {
            final var o = new GetDefaultQosPolicyMapMatchClassMapPoliceResult();
            o.bcRate = bcRate;
            o.bcUnit = bcUnit;
            o.beRate = beRate;
            o.beUnit = beUnit;
            o.cirRate = cirRate;
            o.cirUnit = cirUnit;
            o.classMapName = classMapName;
            o.conformAction = conformAction;
            o.conformSetCos = conformSetCos;
            o.conformSetDscp = conformSetDscp;
            o.conformSetPrecedence = conformSetPrecedence;
            o.conformSetQosGroup = conformSetQosGroup;
            o.device = device;
            o.exceedAction = exceedAction;
            o.exceedSetCos = exceedSetCos;
            o.exceedSetDscp = exceedSetDscp;
            o.exceedSetPrecedence = exceedSetPrecedence;
            o.exceedSetQosGroup = exceedSetQosGroup;
            o.id = id;
            o.pirRate = pirRate;
            o.pirUnit = pirUnit;
            o.policyMapName = policyMapName;
            o.violateAction = violateAction;
            o.violateSetCos = violateSetCos;
            o.violateSetDscp = violateSetDscp;
            o.violateSetPrecedence = violateSetPrecedence;
            o.violateSetQosGroup = violateSetQosGroup;
            return o;
        }
    }
}
