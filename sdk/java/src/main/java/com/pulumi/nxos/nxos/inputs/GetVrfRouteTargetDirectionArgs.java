// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.nxos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetVrfRouteTargetDirectionArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVrfRouteTargetDirectionArgs Empty = new GetVrfRouteTargetDirectionArgs();

    @Import(name="addressFamily", required=true)
    private Output<String> addressFamily;

    public Output<String> addressFamily() {
        return this.addressFamily;
    }

    @Import(name="device")
    private @Nullable Output<String> device;

    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    @Import(name="direction", required=true)
    private Output<String> direction;

    public Output<String> direction() {
        return this.direction;
    }

    @Import(name="routeTargetAddressFamily", required=true)
    private Output<String> routeTargetAddressFamily;

    public Output<String> routeTargetAddressFamily() {
        return this.routeTargetAddressFamily;
    }

    @Import(name="vrf", required=true)
    private Output<String> vrf;

    public Output<String> vrf() {
        return this.vrf;
    }

    private GetVrfRouteTargetDirectionArgs() {}

    private GetVrfRouteTargetDirectionArgs(GetVrfRouteTargetDirectionArgs $) {
        this.addressFamily = $.addressFamily;
        this.device = $.device;
        this.direction = $.direction;
        this.routeTargetAddressFamily = $.routeTargetAddressFamily;
        this.vrf = $.vrf;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVrfRouteTargetDirectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVrfRouteTargetDirectionArgs $;

        public Builder() {
            $ = new GetVrfRouteTargetDirectionArgs();
        }

        public Builder(GetVrfRouteTargetDirectionArgs defaults) {
            $ = new GetVrfRouteTargetDirectionArgs(Objects.requireNonNull(defaults));
        }

        public Builder addressFamily(Output<String> addressFamily) {
            $.addressFamily = addressFamily;
            return this;
        }

        public Builder addressFamily(String addressFamily) {
            return addressFamily(Output.of(addressFamily));
        }

        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        public Builder device(String device) {
            return device(Output.of(device));
        }

        public Builder direction(Output<String> direction) {
            $.direction = direction;
            return this;
        }

        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        public Builder routeTargetAddressFamily(Output<String> routeTargetAddressFamily) {
            $.routeTargetAddressFamily = routeTargetAddressFamily;
            return this;
        }

        public Builder routeTargetAddressFamily(String routeTargetAddressFamily) {
            return routeTargetAddressFamily(Output.of(routeTargetAddressFamily));
        }

        public Builder vrf(Output<String> vrf) {
            $.vrf = vrf;
            return this;
        }

        public Builder vrf(String vrf) {
            return vrf(Output.of(vrf));
        }

        public GetVrfRouteTargetDirectionArgs build() {
            $.addressFamily = Objects.requireNonNull($.addressFamily, "expected parameter 'addressFamily' to be non-null");
            $.direction = Objects.requireNonNull($.direction, "expected parameter 'direction' to be non-null");
            $.routeTargetAddressFamily = Objects.requireNonNull($.routeTargetAddressFamily, "expected parameter 'routeTargetAddressFamily' to be non-null");
            $.vrf = Objects.requireNonNull($.vrf, "expected parameter 'vrf' to be non-null");
            return $;
        }
    }

}
