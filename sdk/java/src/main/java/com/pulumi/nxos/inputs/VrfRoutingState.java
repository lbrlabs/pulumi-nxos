// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VrfRoutingState extends com.pulumi.resources.ResourceArgs {

    public static final VrfRoutingState Empty = new VrfRoutingState();

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * Route Distinguisher value in NX-OS DME format. - Default value: `unknown:unknown:0:0`
     * 
     */
    @Import(name="routeDistinguisher")
    private @Nullable Output<String> routeDistinguisher;

    /**
     * @return Route Distinguisher value in NX-OS DME format. - Default value: `unknown:unknown:0:0`
     * 
     */
    public Optional<Output<String>> routeDistinguisher() {
        return Optional.ofNullable(this.routeDistinguisher);
    }

    /**
     * VRF name.
     * 
     */
    @Import(name="vrf")
    private @Nullable Output<String> vrf;

    /**
     * @return VRF name.
     * 
     */
    public Optional<Output<String>> vrf() {
        return Optional.ofNullable(this.vrf);
    }

    private VrfRoutingState() {}

    private VrfRoutingState(VrfRoutingState $) {
        this.device = $.device;
        this.routeDistinguisher = $.routeDistinguisher;
        this.vrf = $.vrf;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VrfRoutingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VrfRoutingState $;

        public Builder() {
            $ = new VrfRoutingState();
        }

        public Builder(VrfRoutingState defaults) {
            $ = new VrfRoutingState(Objects.requireNonNull(defaults));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param routeDistinguisher Route Distinguisher value in NX-OS DME format. - Default value: `unknown:unknown:0:0`
         * 
         * @return builder
         * 
         */
        public Builder routeDistinguisher(@Nullable Output<String> routeDistinguisher) {
            $.routeDistinguisher = routeDistinguisher;
            return this;
        }

        /**
         * @param routeDistinguisher Route Distinguisher value in NX-OS DME format. - Default value: `unknown:unknown:0:0`
         * 
         * @return builder
         * 
         */
        public Builder routeDistinguisher(String routeDistinguisher) {
            return routeDistinguisher(Output.of(routeDistinguisher));
        }

        /**
         * @param vrf VRF name.
         * 
         * @return builder
         * 
         */
        public Builder vrf(@Nullable Output<String> vrf) {
            $.vrf = vrf;
            return this;
        }

        /**
         * @param vrf VRF name.
         * 
         * @return builder
         * 
         */
        public Builder vrf(String vrf) {
            return vrf(Output.of(vrf));
        }

        public VrfRoutingState build() {
            return $;
        }
    }

}
