// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nxos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OspfAreaState extends com.pulumi.resources.ResourceArgs {

    public static final OspfAreaState Empty = new OspfAreaState();

    /**
     * Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
     * 
     */
    @Import(name="areaId")
    private @Nullable Output<String> areaId;

    /**
     * @return Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
     * 
     */
    public Optional<Output<String>> areaId() {
        return Optional.ofNullable(this.areaId);
    }

    /**
     * Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`
     * 
     */
    @Import(name="authenticationType")
    private @Nullable Output<String> authenticationType;

    /**
     * @return Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`
     * 
     */
    public Optional<Output<String>> authenticationType() {
        return Optional.ofNullable(this.authenticationType);
    }

    /**
     * Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types. - Range: `0`-`16777215` - Default
     * value: `1`
     * 
     */
    @Import(name="cost")
    private @Nullable Output<Integer> cost;

    /**
     * @return Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types. - Range: `0`-`16777215` - Default
     * value: `1`
     * 
     */
    public Optional<Output<Integer>> cost() {
        return Optional.ofNullable(this.cost);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * OSPF instance name.
     * 
     */
    @Import(name="instanceName")
    private @Nullable Output<String> instanceName;

    /**
     * @return OSPF instance name.
     * 
     */
    public Optional<Output<String>> instanceName() {
        return Optional.ofNullable(this.instanceName);
    }

    /**
     * Area type. - Choices: `regular`, `stub`, `nssa` - Default value: `regular`
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Area type. - Choices: `regular`, `stub`, `nssa` - Default value: `regular`
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * VRF name.
     * 
     */
    @Import(name="vrfName")
    private @Nullable Output<String> vrfName;

    /**
     * @return VRF name.
     * 
     */
    public Optional<Output<String>> vrfName() {
        return Optional.ofNullable(this.vrfName);
    }

    private OspfAreaState() {}

    private OspfAreaState(OspfAreaState $) {
        this.areaId = $.areaId;
        this.authenticationType = $.authenticationType;
        this.cost = $.cost;
        this.device = $.device;
        this.instanceName = $.instanceName;
        this.type = $.type;
        this.vrfName = $.vrfName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OspfAreaState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OspfAreaState $;

        public Builder() {
            $ = new OspfAreaState();
        }

        public Builder(OspfAreaState defaults) {
            $ = new OspfAreaState(Objects.requireNonNull(defaults));
        }

        /**
         * @param areaId Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder areaId(@Nullable Output<String> areaId) {
            $.areaId = areaId;
            return this;
        }

        /**
         * @param areaId Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder areaId(String areaId) {
            return areaId(Output.of(areaId));
        }

        /**
         * @param authenticationType Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(@Nullable Output<String> authenticationType) {
            $.authenticationType = authenticationType;
            return this;
        }

        /**
         * @param authenticationType Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(String authenticationType) {
            return authenticationType(Output.of(authenticationType));
        }

        /**
         * @param cost Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types. - Range: `0`-`16777215` - Default
         * value: `1`
         * 
         * @return builder
         * 
         */
        public Builder cost(@Nullable Output<Integer> cost) {
            $.cost = cost;
            return this;
        }

        /**
         * @param cost Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types. - Range: `0`-`16777215` - Default
         * value: `1`
         * 
         * @return builder
         * 
         */
        public Builder cost(Integer cost) {
            return cost(Output.of(cost));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param instanceName OSPF instance name.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(@Nullable Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName OSPF instance name.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param type Area type. - Choices: `regular`, `stub`, `nssa` - Default value: `regular`
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Area type. - Choices: `regular`, `stub`, `nssa` - Default value: `regular`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param vrfName VRF name.
         * 
         * @return builder
         * 
         */
        public Builder vrfName(@Nullable Output<String> vrfName) {
            $.vrfName = vrfName;
            return this;
        }

        /**
         * @param vrfName VRF name.
         * 
         * @return builder
         * 
         */
        public Builder vrfName(String vrfName) {
            return vrfName(Output.of(vrfName));
        }

        public OspfAreaState build() {
            return $;
        }
    }

}
