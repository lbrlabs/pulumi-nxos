{
    "name": "nxos",
    "displayName": "Cisco NX-OS",
    "description": "A Pulumi package for creating and managing Cisco IOS XE Devices.",
    "keywords": [
        "pulumi",
        "nxos",
        "category/utility"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`NX-OS` Terraform Provider](https://github.com/CiscoDevNet/terraform-provider-NX-OS).",
    "repository": "https://github.com/lbrlabs/pulumi-nxos",
    "pluginDownloadURL": "github://api.github.com/lbrlabs",
    "publisher": "lbrlabs",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "Lbrlabs.PulumiPackage"
        },
        "go": {
            "importBasePath": "github.com/lbrlabs/pulumi-nxos/sdk/go/nxos",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageName": "@lbrlabs/pulumi-nxos",
            "packageDescription": "A Pulumi package for creating and managing Cisco IOS XE Devices.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/CiscoDevNet/terraform-provider-NX-OS)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-nxos` repo](https://github.com/lbrlabs/pulumi-nxos/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-NX-OS` repo](https://github.com/CiscoDevNet/terraform-provider-NX-OS/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "lbrlabs_pulumi_nxos",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/CiscoDevNet/terraform-provider-NX-OS)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-nxos` repo](https://github.com/lbrlabs/pulumi-nxos/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-NX-OS` repo](https://github.com/CiscoDevNet/terraform-provider-NX-OS/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "devices": {
                "type": "array",
                "items": {
                    "$ref": "#/types/nxos:config/devices:devices"
                },
                "description": "This can be used to manage a list of devices from a single provider. All devices must use the same credentials. Each\nresource and data source has an optional attribute named `device`, which can then select a device by its name from this\nlist.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Allow insecure HTTPS client. This can also be set as the NXOS_INSECURE environment variable. Defaults to `true`.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for the NX-OS device account. This can also be set as the NXOS_PASSWORD environment variable.\n",
                "secret": true
            },
            "retries": {
                "type": "integer",
                "description": "Number of retries for REST API calls. This can also be set as the NXOS_RETRIES environment variable. Defaults to `3`.\n"
            },
            "url": {
                "type": "string",
                "description": "URL of the Cisco NX-OS device. This can also be set as the NXOS_URL environment variable. If no URL is provided, the URL\nof the first device from the `devices` list is being used.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for the NX-OS device account. This can also be set as the NXOS_USERNAME environment variable.\n"
            }
        }
    },
    "types": {
        "nxos:config/devices:devices": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:index/ProviderDevice:ProviderDevice": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": []
                }
            }
        },
        "nxos:nxos/Ipv4StaticRouteNextHop:Ipv4StaticRouteNextHop": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "interfaceId": {
                    "type": "string"
                },
                "object": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "tag": {
                    "type": "integer"
                },
                "vrfName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "interfaceId",
                "vrfName"
            ]
        },
        "nxos:nxos/RestChildren:RestChildren": {
            "properties": {
                "className": {
                    "type": "string"
                },
                "content": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "rn": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "className",
                "rn"
            ]
        },
        "nxos:nxos/getIpv4StaticRouteNextHop:getIpv4StaticRouteNextHop": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "interfaceId": {
                    "type": "string"
                },
                "object": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "tag": {
                    "type": "integer"
                },
                "vrfName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "description",
                "interfaceId",
                "object",
                "preference",
                "tag",
                "vrfName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the NX-OS package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "devices": {
                "type": "array",
                "items": {
                    "$ref": "#/types/nxos:index/ProviderDevice:ProviderDevice"
                },
                "description": "This can be used to manage a list of devices from a single provider. All devices must use the same credentials. Each\nresource and data source has an optional attribute named `device`, which can then select a device by its name from this\nlist.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Allow insecure HTTPS client. This can also be set as the NXOS_INSECURE environment variable. Defaults to `true`.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for the NX-OS device account. This can also be set as the NXOS_PASSWORD environment variable.\n",
                "secret": true
            },
            "retries": {
                "type": "integer",
                "description": "Number of retries for REST API calls. This can also be set as the NXOS_RETRIES environment variable. Defaults to `3`.\n"
            },
            "url": {
                "type": "string",
                "description": "URL of the Cisco NX-OS device. This can also be set as the NXOS_URL environment variable. If no URL is provided, the URL\nof the first device from the `devices` list is being used.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for the NX-OS device account. This can also be set as the NXOS_USERNAME environment variable.\n"
            }
        },
        "inputProperties": {
            "devices": {
                "type": "array",
                "items": {
                    "$ref": "#/types/nxos:index/ProviderDevice:ProviderDevice"
                },
                "description": "This can be used to manage a list of devices from a single provider. All devices must use the same credentials. Each\nresource and data source has an optional attribute named `device`, which can then select a device by its name from this\nlist.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Allow insecure HTTPS client. This can also be set as the NXOS_INSECURE environment variable. Defaults to `true`.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for the NX-OS device account. This can also be set as the NXOS_PASSWORD environment variable.\n",
                "secret": true
            },
            "retries": {
                "type": "integer",
                "description": "Number of retries for REST API calls. This can also be set as the NXOS_RETRIES environment variable. Defaults to `3`.\n"
            },
            "url": {
                "type": "string",
                "description": "URL of the Cisco NX-OS device. This can also be set as the NXOS_URL environment variable. If no URL is provided, the URL\nof the first device from the `devices` list is being used.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for the NX-OS device account. This can also be set as the NXOS_USERNAME environment variable.\n"
            }
        }
    },
    "resources": {
        "nxos:nxos/bgp:Bgp": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Bgp resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpAddressFamily:BgpAddressFamily": {
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "criticalNexthopTimeout": {
                    "type": "integer",
                    "description": "The next-hop address tracking delay timer for critical next-hop reachability routes. - Range: `1`-`4294967295` - Default\nvalue: `3000`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "nonCriticalNexthopTimeout": {
                    "type": "integer",
                    "description": "The next-hop address tracking delay timer for non-critical next-hop reachability routes. - Range: `1`-`4294967295` -\nDefault value: `10000`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "addressFamily",
                "asn",
                "criticalNexthopTimeout",
                "nonCriticalNexthopTimeout",
                "vrf"
            ],
            "inputProperties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "criticalNexthopTimeout": {
                    "type": "integer",
                    "description": "The next-hop address tracking delay timer for critical next-hop reachability routes. - Range: `1`-`4294967295` - Default\nvalue: `3000`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "nonCriticalNexthopTimeout": {
                    "type": "integer",
                    "description": "The next-hop address tracking delay timer for non-critical next-hop reachability routes. - Range: `1`-`4294967295` -\nDefault value: `10000`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "addressFamily",
                "asn",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpAddressFamily resources.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "criticalNexthopTimeout": {
                        "type": "integer",
                        "description": "The next-hop address tracking delay timer for critical next-hop reachability routes. - Range: `1`-`4294967295` - Default\nvalue: `3000`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "nonCriticalNexthopTimeout": {
                        "type": "integer",
                        "description": "The next-hop address tracking delay timer for non-critical next-hop reachability routes. - Range: `1`-`4294967295` -\nDefault value: `10000`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpAdvertisedPrefix:BgpAdvertisedPrefix": {
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "IP address of the network or prefix to advertise.\n"
                },
                "routeMap": {
                    "type": "string",
                    "description": "Route map to modify attributes.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "addressFamily",
                "asn",
                "prefix",
                "vrf"
            ],
            "inputProperties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "IP address of the network or prefix to advertise.\n"
                },
                "routeMap": {
                    "type": "string",
                    "description": "Route map to modify attributes.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "addressFamily",
                "asn",
                "prefix",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpAdvertisedPrefix resources.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "IP address of the network or prefix to advertise.\n"
                    },
                    "routeMap": {
                        "type": "string",
                        "description": "Route map to modify attributes.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpGracefulRestart:BgpGracefulRestart": {
            "properties": {
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "restartInterval": {
                    "type": "integer",
                    "description": "The graceful restart interval. - Range: `1`-`3600` - Default value: `120`\n"
                },
                "staleInterval": {
                    "type": "integer",
                    "description": "The stale interval for routes advertised by the BGP peer. - Range: `1`-`3600` - Default value: `300`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "asn",
                "restartInterval",
                "staleInterval",
                "vrf"
            ],
            "inputProperties": {
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "restartInterval": {
                    "type": "integer",
                    "description": "The graceful restart interval. - Range: `1`-`3600` - Default value: `120`\n"
                },
                "staleInterval": {
                    "type": "integer",
                    "description": "The stale interval for routes advertised by the BGP peer. - Range: `1`-`3600` - Default value: `300`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "asn",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpGracefulRestart resources.\n",
                "properties": {
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "restartInterval": {
                        "type": "integer",
                        "description": "The graceful restart interval. - Range: `1`-`3600` - Default value: `120`\n"
                    },
                    "staleInterval": {
                        "type": "integer",
                        "description": "The stale interval for routes advertised by the BGP peer. - Range: `1`-`3600` - Default value: `300`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpInstance:BgpInstance": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "enhancedErrorHandling": {
                    "type": "boolean",
                    "description": "Enable BGP Enhanced Error Handling. - Default value: `true`\n"
                }
            },
            "required": [
                "adminState",
                "enhancedErrorHandling"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "enhancedErrorHandling": {
                    "type": "boolean",
                    "description": "Enable BGP Enhanced Error Handling. - Default value: `true`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpInstance resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "enhancedErrorHandling": {
                        "type": "boolean",
                        "description": "Enable BGP Enhanced Error Handling. - Default value: `true`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpPeer:BgpPeer": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Peer address.\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Peer description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "holdTime": {
                    "type": "integer",
                    "description": "BGP Hold Timer in seconds. The value must be greater than the keepalive timer - Range: `3`-`3600` - Default value: `180`\n"
                },
                "keepalive": {
                    "type": "integer",
                    "description": "BGP Keepalive Timer in seconds - Range: `0`-`3600` - Default value: `60`\n"
                },
                "peerTemplate": {
                    "type": "string",
                    "description": "Peer template name.\n"
                },
                "peerType": {
                    "type": "string",
                    "description": "Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:\n`fabric-internal`\n"
                },
                "remoteAsn": {
                    "type": "string",
                    "description": "Peer autonomous system number.\n"
                },
                "sourceInterface": {
                    "type": "string",
                    "description": "Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "asn",
                "holdTime",
                "keepalive",
                "peerType",
                "sourceInterface",
                "vrf"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Peer address.\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Peer description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "holdTime": {
                    "type": "integer",
                    "description": "BGP Hold Timer in seconds. The value must be greater than the keepalive timer - Range: `3`-`3600` - Default value: `180`\n"
                },
                "keepalive": {
                    "type": "integer",
                    "description": "BGP Keepalive Timer in seconds - Range: `0`-`3600` - Default value: `60`\n"
                },
                "peerTemplate": {
                    "type": "string",
                    "description": "Peer template name.\n"
                },
                "peerType": {
                    "type": "string",
                    "description": "Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:\n`fabric-internal`\n"
                },
                "remoteAsn": {
                    "type": "string",
                    "description": "Peer autonomous system number.\n"
                },
                "sourceInterface": {
                    "type": "string",
                    "description": "Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "asn",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpPeer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Peer address.\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Peer description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "holdTime": {
                        "type": "integer",
                        "description": "BGP Hold Timer in seconds. The value must be greater than the keepalive timer - Range: `3`-`3600` - Default value: `180`\n"
                    },
                    "keepalive": {
                        "type": "integer",
                        "description": "BGP Keepalive Timer in seconds - Range: `0`-`3600` - Default value: `60`\n"
                    },
                    "peerTemplate": {
                        "type": "string",
                        "description": "Peer template name.\n"
                    },
                    "peerType": {
                        "type": "string",
                        "description": "Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:\n`fabric-internal`\n"
                    },
                    "remoteAsn": {
                        "type": "string",
                        "description": "Peer autonomous system number.\n"
                    },
                    "sourceInterface": {
                        "type": "string",
                        "description": "Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpPeerAddressFamily:BgpPeerAddressFamily": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Peer address.\n"
                },
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "control": {
                    "type": "string",
                    "description": "Peer address-family control. Choices: `rr-client`, `nh-self`, `dis-peer-as-check`, `allow-self-as`, `default-originate`,\n`advertisement-interval`, `suppress-inactive`, `nh-self-all`. Can be an empty string. Allowed formats: - Single value.\nExample: `nh-self` - Multiple values (comma-separated). Example:\n`dis-peer-as-check,nh-self,rr-client,suppress-inactive`. In this case values must be in alphabetical order.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "sendCommunityExtended": {
                    "type": "string",
                    "description": "Send-community extended. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "sendCommunityStandard": {
                    "type": "string",
                    "description": "Send-community standard. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "addressFamily",
                "asn",
                "sendCommunityExtended",
                "sendCommunityStandard",
                "vrf"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Peer address.\n"
                },
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "control": {
                    "type": "string",
                    "description": "Peer address-family control. Choices: `rr-client`, `nh-self`, `dis-peer-as-check`, `allow-self-as`, `default-originate`,\n`advertisement-interval`, `suppress-inactive`, `nh-self-all`. Can be an empty string. Allowed formats: - Single value.\nExample: `nh-self` - Multiple values (comma-separated). Example:\n`dis-peer-as-check,nh-self,rr-client,suppress-inactive`. In this case values must be in alphabetical order.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "sendCommunityExtended": {
                    "type": "string",
                    "description": "Send-community extended. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "sendCommunityStandard": {
                    "type": "string",
                    "description": "Send-community standard. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "addressFamily",
                "asn",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpPeerAddressFamily resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Peer address.\n"
                    },
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "control": {
                        "type": "string",
                        "description": "Peer address-family control. Choices: `rr-client`, `nh-self`, `dis-peer-as-check`, `allow-self-as`, `default-originate`,\n`advertisement-interval`, `suppress-inactive`, `nh-self-all`. Can be an empty string. Allowed formats: - Single value.\nExample: `nh-self` - Multiple values (comma-separated). Example:\n`dis-peer-as-check,nh-self,rr-client,suppress-inactive`. In this case values must be in alphabetical order.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "sendCommunityExtended": {
                        "type": "string",
                        "description": "Send-community extended. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "sendCommunityStandard": {
                        "type": "string",
                        "description": "Send-community standard. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpPeerAddressFamilyPrefixListControl:BgpPeerAddressFamilyPrefixListControl": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Peer address.\n"
                },
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Control direction. - Choices: `in`, `out` - Default value: `in`\n"
                },
                "list": {
                    "type": "string",
                    "description": "Route Control Prefix-List name.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "addressFamily",
                "asn",
                "direction",
                "vrf"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Peer address.\n"
                },
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Control direction. - Choices: `in`, `out` - Default value: `in`\n"
                },
                "list": {
                    "type": "string",
                    "description": "Route Control Prefix-List name.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "addressFamily",
                "asn",
                "direction",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpPeerAddressFamilyPrefixListControl resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Peer address.\n"
                    },
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Control direction. - Choices: `in`, `out` - Default value: `in`\n"
                    },
                    "list": {
                        "type": "string",
                        "description": "Route Control Prefix-List name.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpPeerAddressFamilyRouteControl:BgpPeerAddressFamilyRouteControl": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Peer address.\n"
                },
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Control direction. - Choices: `in`, `out` - Default value: `in`\n"
                },
                "routeMapName": {
                    "type": "string",
                    "description": "Route Control Route-Map name.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "addressFamily",
                "asn",
                "direction",
                "vrf"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Peer address.\n"
                },
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Control direction. - Choices: `in`, `out` - Default value: `in`\n"
                },
                "routeMapName": {
                    "type": "string",
                    "description": "Route Control Route-Map name.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "addressFamily",
                "asn",
                "direction",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpPeerAddressFamilyRouteControl resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Peer address.\n"
                    },
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Control direction. - Choices: `in`, `out` - Default value: `in`\n"
                    },
                    "routeMapName": {
                        "type": "string",
                        "description": "Route Control Route-Map name.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpPeerTemplate:BgpPeerTemplate": {
            "properties": {
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Peer template description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "peerType": {
                    "type": "string",
                    "description": "Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:\n`fabric-internal`\n"
                },
                "remoteAsn": {
                    "type": "string",
                    "description": "Peer template autonomous system number.\n"
                },
                "sourceInterface": {
                    "type": "string",
                    "description": "Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Peer template name.\n"
                }
            },
            "required": [
                "asn",
                "peerType",
                "sourceInterface",
                "templateName"
            ],
            "inputProperties": {
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Peer template description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "peerType": {
                    "type": "string",
                    "description": "Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:\n`fabric-internal`\n"
                },
                "remoteAsn": {
                    "type": "string",
                    "description": "Peer template autonomous system number.\n"
                },
                "sourceInterface": {
                    "type": "string",
                    "description": "Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Peer template name.\n"
                }
            },
            "requiredInputs": [
                "asn",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpPeerTemplate resources.\n",
                "properties": {
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Peer template description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "peerType": {
                        "type": "string",
                        "description": "Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:\n`fabric-internal`\n"
                    },
                    "remoteAsn": {
                        "type": "string",
                        "description": "Peer template autonomous system number.\n"
                    },
                    "sourceInterface": {
                        "type": "string",
                        "description": "Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Peer template name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpPeerTemplateAddressFamily:BgpPeerTemplateAddressFamily": {
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "control": {
                    "type": "string",
                    "description": "Peer address-family control. Choices: `rr-client`, `nh-self`, `dis-peer-as-check`, `allow-self-as`, `default-originate`,\n`advertisement-interval`, `suppress-inactive`, `nh-self-all`. Can be an empty string. Allowed formats: - Single value.\nExample: `nh-self` - Multiple values (comma-separated). Example:\n`dis-peer-as-check,nh-self,rr-client,suppress-inactive`. In this case values must be in alphabetical order.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "sendCommunityExtended": {
                    "type": "string",
                    "description": "Send-community extended. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "sendCommunityStandard": {
                    "type": "string",
                    "description": "Send-community standard. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Peer template name.\n"
                }
            },
            "required": [
                "addressFamily",
                "asn",
                "sendCommunityExtended",
                "sendCommunityStandard",
                "templateName"
            ],
            "inputProperties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "control": {
                    "type": "string",
                    "description": "Peer address-family control. Choices: `rr-client`, `nh-self`, `dis-peer-as-check`, `allow-self-as`, `default-originate`,\n`advertisement-interval`, `suppress-inactive`, `nh-self-all`. Can be an empty string. Allowed formats: - Single value.\nExample: `nh-self` - Multiple values (comma-separated). Example:\n`dis-peer-as-check,nh-self,rr-client,suppress-inactive`. In this case values must be in alphabetical order.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "sendCommunityExtended": {
                    "type": "string",
                    "description": "Send-community extended. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "sendCommunityStandard": {
                    "type": "string",
                    "description": "Send-community standard. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Peer template name.\n"
                }
            },
            "requiredInputs": [
                "addressFamily",
                "asn",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpPeerTemplateAddressFamily resources.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "control": {
                        "type": "string",
                        "description": "Peer address-family control. Choices: `rr-client`, `nh-self`, `dis-peer-as-check`, `allow-self-as`, `default-originate`,\n`advertisement-interval`, `suppress-inactive`, `nh-self-all`. Can be an empty string. Allowed formats: - Single value.\nExample: `nh-self` - Multiple values (comma-separated). Example:\n`dis-peer-as-check,nh-self,rr-client,suppress-inactive`. In this case values must be in alphabetical order.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "sendCommunityExtended": {
                        "type": "string",
                        "description": "Send-community extended. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "sendCommunityStandard": {
                        "type": "string",
                        "description": "Send-community standard. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Peer template name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpPeerTemplateMaxPrefix:BgpPeerTemplateMaxPrefix": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action to do when limit is exceeded. - Choices: `log`, `shut`, `restart` - Default value: `shut`\n"
                },
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "maximumPrefix": {
                    "type": "integer",
                    "description": "Maximum number of prefixes allowed from the peer. - Range: `0`-`4294967295`\n"
                },
                "restartTime": {
                    "type": "integer",
                    "description": "The period of time in minutes before restarting the peer when the prefix limit is reached. - Default value: `0`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Peer template name.\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "The period of time in minutes before restarting the peer when the prefix limit is reached. - Range: `0`-`100` - Default\nvalue: `0`\n"
                }
            },
            "required": [
                "action",
                "addressFamily",
                "asn",
                "restartTime",
                "templateName",
                "threshold"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Action to do when limit is exceeded. - Choices: `log`, `shut`, `restart` - Default value: `shut`\n"
                },
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "maximumPrefix": {
                    "type": "integer",
                    "description": "Maximum number of prefixes allowed from the peer. - Range: `0`-`4294967295`\n"
                },
                "restartTime": {
                    "type": "integer",
                    "description": "The period of time in minutes before restarting the peer when the prefix limit is reached. - Default value: `0`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Peer template name.\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "The period of time in minutes before restarting the peer when the prefix limit is reached. - Range: `0`-`100` - Default\nvalue: `0`\n"
                }
            },
            "requiredInputs": [
                "addressFamily",
                "asn",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpPeerTemplateMaxPrefix resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Action to do when limit is exceeded. - Choices: `log`, `shut`, `restart` - Default value: `shut`\n"
                    },
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "maximumPrefix": {
                        "type": "integer",
                        "description": "Maximum number of prefixes allowed from the peer. - Range: `0`-`4294967295`\n"
                    },
                    "restartTime": {
                        "type": "integer",
                        "description": "The period of time in minutes before restarting the peer when the prefix limit is reached. - Default value: `0`\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Peer template name.\n"
                    },
                    "threshold": {
                        "type": "integer",
                        "description": "The period of time in minutes before restarting the peer when the prefix limit is reached. - Range: `0`-`100` - Default\nvalue: `0`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpRouteControl:BgpRouteControl": {
            "properties": {
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "enforceFirstAs": {
                    "type": "string",
                    "description": "Enforce First AS For Ebgp. Can be configured only for VRF default. - Choices: `enabled`, `disabled` - Default value:\n`enabled`\n"
                },
                "fibAccelerate": {
                    "type": "string",
                    "description": "Accelerate the hardware updates for IP/IPv6 adjacencies for neighbor. Can be configured only for VRF default. - Choices:\n`enabled`, `disabled` - Default value: `disabled`\n"
                },
                "logNeighborChanges": {
                    "type": "string",
                    "description": "Log Neighbor Changes. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "suppressRoutes": {
                    "type": "string",
                    "description": "Suppress Routes: Advertise only routes that are programmed in hardware to peers. Can be configured only for VRF default.\n- Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "asn",
                "enforceFirstAs",
                "fibAccelerate",
                "logNeighborChanges",
                "suppressRoutes",
                "vrf"
            ],
            "inputProperties": {
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "enforceFirstAs": {
                    "type": "string",
                    "description": "Enforce First AS For Ebgp. Can be configured only for VRF default. - Choices: `enabled`, `disabled` - Default value:\n`enabled`\n"
                },
                "fibAccelerate": {
                    "type": "string",
                    "description": "Accelerate the hardware updates for IP/IPv6 adjacencies for neighbor. Can be configured only for VRF default. - Choices:\n`enabled`, `disabled` - Default value: `disabled`\n"
                },
                "logNeighborChanges": {
                    "type": "string",
                    "description": "Log Neighbor Changes. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "suppressRoutes": {
                    "type": "string",
                    "description": "Suppress Routes: Advertise only routes that are programmed in hardware to peers. Can be configured only for VRF default.\n- Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "asn",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpRouteControl resources.\n",
                "properties": {
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "enforceFirstAs": {
                        "type": "string",
                        "description": "Enforce First AS For Ebgp. Can be configured only for VRF default. - Choices: `enabled`, `disabled` - Default value:\n`enabled`\n"
                    },
                    "fibAccelerate": {
                        "type": "string",
                        "description": "Accelerate the hardware updates for IP/IPv6 adjacencies for neighbor. Can be configured only for VRF default. - Choices:\n`enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "logNeighborChanges": {
                        "type": "string",
                        "description": "Log Neighbor Changes. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "suppressRoutes": {
                        "type": "string",
                        "description": "Suppress Routes: Advertise only routes that are programmed in hardware to peers. Can be configured only for VRF default.\n- Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpVrf:BgpVrf": {
            "properties": {
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                },
                "routerId": {
                    "type": "string",
                    "description": "Router ID.\n"
                }
            },
            "required": [
                "asn",
                "name"
            ],
            "inputProperties": {
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                },
                "routerId": {
                    "type": "string",
                    "description": "Router ID.\n"
                }
            },
            "requiredInputs": [
                "asn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpVrf resources.\n",
                "properties": {
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    },
                    "routerId": {
                        "type": "string",
                        "description": "Router ID.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bridgeDomain:BridgeDomain": {
            "properties": {
                "accessEncap": {
                    "type": "string",
                    "description": "Access encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "fabricEncap": {
                    "type": "string",
                    "description": "Fabric encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Bridge domain name.\n"
                }
            },
            "required": [
                "accessEncap",
                "fabricEncap",
                "name"
            ],
            "inputProperties": {
                "accessEncap": {
                    "type": "string",
                    "description": "Access encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "fabricEncap": {
                    "type": "string",
                    "description": "Fabric encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Bridge domain name.\n"
                }
            },
            "requiredInputs": [
                "fabricEncap"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BridgeDomain resources.\n",
                "properties": {
                    "accessEncap": {
                        "type": "string",
                        "description": "Access encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "fabricEncap": {
                        "type": "string",
                        "description": "Fabric encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Bridge domain name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/defaultQosClassMap:DefaultQosClassMap": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Class map name.\n"
                }
            },
            "required": [
                "matchType",
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Class map name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DefaultQosClassMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "matchType": {
                        "type": "string",
                        "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Class map name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/defaultQosClassMapDscp:DefaultQosClassMapDscp": {
            "properties": {
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "value": {
                    "type": "string",
                    "description": "DSCP value. - Default value: `0`\n"
                }
            },
            "required": [
                "classMapName",
                "value"
            ],
            "inputProperties": {
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "value": {
                    "type": "string",
                    "description": "DSCP value. - Default value: `0`\n"
                }
            },
            "requiredInputs": [
                "classMapName",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DefaultQosClassMapDscp resources.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "DSCP value. - Default value: `0`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/defaultQosPolicyInterfaceIn:DefaultQosPolicyInterfaceIn": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                }
            },
            "required": [
                "interfaceId"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DefaultQosPolicyInterfaceIn resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/defaultQosPolicyInterfaceInPolicyMap:DefaultQosPolicyInterfaceInPolicyMap": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "required": [
                "interfaceId",
                "policyMapName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "policyMapName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DefaultQosPolicyInterfaceInPolicyMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/defaultQosPolicyMap:DefaultQosPolicyMap": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "required": [
                "matchType",
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DefaultQosPolicyMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "matchType": {
                        "type": "string",
                        "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/defaultQosPolicyMapMatchClassMap:DefaultQosPolicyMapMatchClassMap": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "required": [
                "name",
                "policyMapName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "requiredInputs": [
                "policyMapName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DefaultQosPolicyMapMatchClassMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/defaultQosPolicyMapMatchClassMapPolice:DefaultQosPolicyMapMatchClassMapPolice": {
            "properties": {
                "bcRate": {
                    "type": "integer",
                    "description": "CIR burst rate. - Range: `0`-`536870912` - Default value: `200`\n"
                },
                "bcUnit": {
                    "type": "string",
                    "description": "CIR burst rate unit. - Choices: `unspecified`, `bytes`, `kbytes`, `mbytes`, `ms`, `us`, `packets` - Default value: `ms`\n"
                },
                "beRate": {
                    "type": "integer",
                    "description": "PIR burst rate. - Range: `0`-`536870912` - Default value: `0`\n"
                },
                "beUnit": {
                    "type": "string",
                    "description": "PIR burst rate unit. - Choices: `unspecified`, `bytes`, `kbytes`, `mbytes`, `ms`, `us`, `packets` - Default value:\n`unspecified`\n"
                },
                "cirRate": {
                    "type": "integer",
                    "description": "CIR rate. - Range: `0`-`100000000000` - Default value: `0`\n"
                },
                "cirUnit": {
                    "type": "string",
                    "description": "CIR rate unit. - Choices: `unspecified`, `bps`, `kbps`, `mbps`, `gbps`, `pps`, `pct` - Default value: `bps`\n"
                },
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "conformAction": {
                    "type": "string",
                    "description": "Conform action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `transmit`\n"
                },
                "conformSetCos": {
                    "type": "integer",
                    "description": "Set CoS for conforming traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "conformSetDscp": {
                    "type": "integer",
                    "description": "Set DSCP for conforming traffic. - Range: `0`-`63` - Default value: `0`\n"
                },
                "conformSetPrecedence": {
                    "type": "string",
                    "description": "Set precedence for conforming traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                },
                "conformSetQosGroup": {
                    "type": "integer",
                    "description": "Set qos-group for conforming traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "exceedAction": {
                    "type": "string",
                    "description": "Exceed action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `unspecified`\n"
                },
                "exceedSetCos": {
                    "type": "integer",
                    "description": "Set CoS for exceeding traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "exceedSetDscp": {
                    "type": "integer",
                    "description": "Set DSCP for exceeding traffic. - Range: `0`-`63` - Default value: `0`\n"
                },
                "exceedSetPrecedence": {
                    "type": "string",
                    "description": "Set precedence for exceeding traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                },
                "exceedSetQosGroup": {
                    "type": "integer",
                    "description": "Set qos-group for exceeding traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "pirRate": {
                    "type": "integer",
                    "description": "PIR rate. - Range: `0`-`100000000000` - Default value: `0`\n"
                },
                "pirUnit": {
                    "type": "string",
                    "description": "PIR rate unit. - Choices: `unspecified`, `bps`, `kbps`, `mbps`, `gbps`, `pps`, `pct` - Default value: `unspecified`\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                },
                "violateAction": {
                    "type": "string",
                    "description": "Violate action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `drop`\n"
                },
                "violateSetCos": {
                    "type": "integer",
                    "description": "Set CoS for violating traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "violateSetDscp": {
                    "type": "integer",
                    "description": "Set DSCP for violating traffic. - Range: `0`-`63` - Default value: `0`\n"
                },
                "violateSetPrecedence": {
                    "type": "string",
                    "description": "Set precedence for violating traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                },
                "violateSetQosGroup": {
                    "type": "integer",
                    "description": "Set qos-group for violating traffic. - Range: `0`-`7` - Default value: `0`\n"
                }
            },
            "required": [
                "bcRate",
                "bcUnit",
                "beRate",
                "beUnit",
                "cirRate",
                "cirUnit",
                "classMapName",
                "conformAction",
                "conformSetCos",
                "conformSetDscp",
                "conformSetPrecedence",
                "conformSetQosGroup",
                "exceedAction",
                "exceedSetCos",
                "exceedSetDscp",
                "exceedSetPrecedence",
                "exceedSetQosGroup",
                "pirRate",
                "pirUnit",
                "policyMapName",
                "violateAction",
                "violateSetCos",
                "violateSetDscp",
                "violateSetPrecedence",
                "violateSetQosGroup"
            ],
            "inputProperties": {
                "bcRate": {
                    "type": "integer",
                    "description": "CIR burst rate. - Range: `0`-`536870912` - Default value: `200`\n"
                },
                "bcUnit": {
                    "type": "string",
                    "description": "CIR burst rate unit. - Choices: `unspecified`, `bytes`, `kbytes`, `mbytes`, `ms`, `us`, `packets` - Default value: `ms`\n"
                },
                "beRate": {
                    "type": "integer",
                    "description": "PIR burst rate. - Range: `0`-`536870912` - Default value: `0`\n"
                },
                "beUnit": {
                    "type": "string",
                    "description": "PIR burst rate unit. - Choices: `unspecified`, `bytes`, `kbytes`, `mbytes`, `ms`, `us`, `packets` - Default value:\n`unspecified`\n"
                },
                "cirRate": {
                    "type": "integer",
                    "description": "CIR rate. - Range: `0`-`100000000000` - Default value: `0`\n"
                },
                "cirUnit": {
                    "type": "string",
                    "description": "CIR rate unit. - Choices: `unspecified`, `bps`, `kbps`, `mbps`, `gbps`, `pps`, `pct` - Default value: `bps`\n"
                },
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "conformAction": {
                    "type": "string",
                    "description": "Conform action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `transmit`\n"
                },
                "conformSetCos": {
                    "type": "integer",
                    "description": "Set CoS for conforming traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "conformSetDscp": {
                    "type": "integer",
                    "description": "Set DSCP for conforming traffic. - Range: `0`-`63` - Default value: `0`\n"
                },
                "conformSetPrecedence": {
                    "type": "string",
                    "description": "Set precedence for conforming traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                },
                "conformSetQosGroup": {
                    "type": "integer",
                    "description": "Set qos-group for conforming traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "exceedAction": {
                    "type": "string",
                    "description": "Exceed action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `unspecified`\n"
                },
                "exceedSetCos": {
                    "type": "integer",
                    "description": "Set CoS for exceeding traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "exceedSetDscp": {
                    "type": "integer",
                    "description": "Set DSCP for exceeding traffic. - Range: `0`-`63` - Default value: `0`\n"
                },
                "exceedSetPrecedence": {
                    "type": "string",
                    "description": "Set precedence for exceeding traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                },
                "exceedSetQosGroup": {
                    "type": "integer",
                    "description": "Set qos-group for exceeding traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "pirRate": {
                    "type": "integer",
                    "description": "PIR rate. - Range: `0`-`100000000000` - Default value: `0`\n"
                },
                "pirUnit": {
                    "type": "string",
                    "description": "PIR rate unit. - Choices: `unspecified`, `bps`, `kbps`, `mbps`, `gbps`, `pps`, `pct` - Default value: `unspecified`\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                },
                "violateAction": {
                    "type": "string",
                    "description": "Violate action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `drop`\n"
                },
                "violateSetCos": {
                    "type": "integer",
                    "description": "Set CoS for violating traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "violateSetDscp": {
                    "type": "integer",
                    "description": "Set DSCP for violating traffic. - Range: `0`-`63` - Default value: `0`\n"
                },
                "violateSetPrecedence": {
                    "type": "string",
                    "description": "Set precedence for violating traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                },
                "violateSetQosGroup": {
                    "type": "integer",
                    "description": "Set qos-group for violating traffic. - Range: `0`-`7` - Default value: `0`\n"
                }
            },
            "requiredInputs": [
                "cirRate",
                "classMapName",
                "policyMapName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DefaultQosPolicyMapMatchClassMapPolice resources.\n",
                "properties": {
                    "bcRate": {
                        "type": "integer",
                        "description": "CIR burst rate. - Range: `0`-`536870912` - Default value: `200`\n"
                    },
                    "bcUnit": {
                        "type": "string",
                        "description": "CIR burst rate unit. - Choices: `unspecified`, `bytes`, `kbytes`, `mbytes`, `ms`, `us`, `packets` - Default value: `ms`\n"
                    },
                    "beRate": {
                        "type": "integer",
                        "description": "PIR burst rate. - Range: `0`-`536870912` - Default value: `0`\n"
                    },
                    "beUnit": {
                        "type": "string",
                        "description": "PIR burst rate unit. - Choices: `unspecified`, `bytes`, `kbytes`, `mbytes`, `ms`, `us`, `packets` - Default value:\n`unspecified`\n"
                    },
                    "cirRate": {
                        "type": "integer",
                        "description": "CIR rate. - Range: `0`-`100000000000` - Default value: `0`\n"
                    },
                    "cirUnit": {
                        "type": "string",
                        "description": "CIR rate unit. - Choices: `unspecified`, `bps`, `kbps`, `mbps`, `gbps`, `pps`, `pct` - Default value: `bps`\n"
                    },
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "conformAction": {
                        "type": "string",
                        "description": "Conform action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `transmit`\n"
                    },
                    "conformSetCos": {
                        "type": "integer",
                        "description": "Set CoS for conforming traffic. - Range: `0`-`7` - Default value: `0`\n"
                    },
                    "conformSetDscp": {
                        "type": "integer",
                        "description": "Set DSCP for conforming traffic. - Range: `0`-`63` - Default value: `0`\n"
                    },
                    "conformSetPrecedence": {
                        "type": "string",
                        "description": "Set precedence for conforming traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                    },
                    "conformSetQosGroup": {
                        "type": "integer",
                        "description": "Set qos-group for conforming traffic. - Range: `0`-`7` - Default value: `0`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "exceedAction": {
                        "type": "string",
                        "description": "Exceed action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `unspecified`\n"
                    },
                    "exceedSetCos": {
                        "type": "integer",
                        "description": "Set CoS for exceeding traffic. - Range: `0`-`7` - Default value: `0`\n"
                    },
                    "exceedSetDscp": {
                        "type": "integer",
                        "description": "Set DSCP for exceeding traffic. - Range: `0`-`63` - Default value: `0`\n"
                    },
                    "exceedSetPrecedence": {
                        "type": "string",
                        "description": "Set precedence for exceeding traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                    },
                    "exceedSetQosGroup": {
                        "type": "integer",
                        "description": "Set qos-group for exceeding traffic. - Range: `0`-`7` - Default value: `0`\n"
                    },
                    "pirRate": {
                        "type": "integer",
                        "description": "PIR rate. - Range: `0`-`100000000000` - Default value: `0`\n"
                    },
                    "pirUnit": {
                        "type": "string",
                        "description": "PIR rate unit. - Choices: `unspecified`, `bps`, `kbps`, `mbps`, `gbps`, `pps`, `pct` - Default value: `unspecified`\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    },
                    "violateAction": {
                        "type": "string",
                        "description": "Violate action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `drop`\n"
                    },
                    "violateSetCos": {
                        "type": "integer",
                        "description": "Set CoS for violating traffic. - Range: `0`-`7` - Default value: `0`\n"
                    },
                    "violateSetDscp": {
                        "type": "integer",
                        "description": "Set DSCP for violating traffic. - Range: `0`-`63` - Default value: `0`\n"
                    },
                    "violateSetPrecedence": {
                        "type": "string",
                        "description": "Set precedence for violating traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                    },
                    "violateSetQosGroup": {
                        "type": "integer",
                        "description": "Set qos-group for violating traffic. - Range: `0`-`7` - Default value: `0`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/defaultQosPolicyMapMatchClassMapSetQosGroup:DefaultQosPolicyMapMatchClassMapSetQosGroup": {
            "properties": {
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                },
                "qosGroupId": {
                    "type": "integer",
                    "description": "QoS group ID. - Range: `0`-`7` - Default value: `0`\n"
                }
            },
            "required": [
                "classMapName",
                "policyMapName",
                "qosGroupId"
            ],
            "inputProperties": {
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                },
                "qosGroupId": {
                    "type": "integer",
                    "description": "QoS group ID. - Range: `0`-`7` - Default value: `0`\n"
                }
            },
            "requiredInputs": [
                "classMapName",
                "policyMapName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DefaultQosPolicyMapMatchClassMapSetQosGroup resources.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    },
                    "qosGroupId": {
                        "type": "integer",
                        "description": "QoS group ID. - Range: `0`-`7` - Default value: `0`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/dhcpRelayAddress:DhcpRelayAddress": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "IPv4 or IPv6 address.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "interfaceId",
                "vrf"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "IPv4 or IPv6 address.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "interfaceId",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DhcpRelayAddress resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "IPv4 or IPv6 address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/dhcpRelayInterface:DhcpRelayInterface": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                }
            },
            "required": [
                "interfaceId"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DhcpRelayInterface resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ethernet:Ethernet": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "System jumbo MTU. - Range: `576`-`9216` - Default value: `9216`\n"
                }
            },
            "required": [
                "mtu"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "System jumbo MTU. - Range: `576`-`9216` - Default value: `9216`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ethernet resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "System jumbo MTU. - Range: `576`-`9216` - Default value: `9216`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/evpn:Evpn": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Evpn resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/evpnVni:EvpnVni": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                },
                "routeDistinguisher": {
                    "type": "string",
                    "description": "Route Distinguisher value in NX-OS DME format. - Default value: `unknown:unknown:0:0`\n"
                }
            },
            "required": [
                "encap",
                "routeDistinguisher"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                },
                "routeDistinguisher": {
                    "type": "string",
                    "description": "Route Distinguisher value in NX-OS DME format. - Default value: `unknown:unknown:0:0`\n"
                }
            },
            "requiredInputs": [
                "encap"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EvpnVni resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    },
                    "routeDistinguisher": {
                        "type": "string",
                        "description": "Route Distinguisher value in NX-OS DME format. - Default value: `unknown:unknown:0:0`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/evpnVniRouteTarget:EvpnVniRouteTarget": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Target direction. - Choices: `import`, `export`\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                },
                "routeTarget": {
                    "type": "string",
                    "description": "Route Target in NX-OS DME format.\n"
                }
            },
            "required": [
                "direction",
                "encap",
                "routeTarget"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Target direction. - Choices: `import`, `export`\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                },
                "routeTarget": {
                    "type": "string",
                    "description": "Route Target in NX-OS DME format.\n"
                }
            },
            "requiredInputs": [
                "direction",
                "encap",
                "routeTarget"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EvpnVniRouteTarget resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Target direction. - Choices: `import`, `export`\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    },
                    "routeTarget": {
                        "type": "string",
                        "description": "Route Target in NX-OS DME format.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/evpnVniRouteTargetDirection:EvpnVniRouteTargetDirection": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Target direction. - Choices: `import`, `export`\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                }
            },
            "required": [
                "direction",
                "encap"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Target direction. - Choices: `import`, `export`\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                }
            },
            "requiredInputs": [
                "direction",
                "encap"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EvpnVniRouteTargetDirection resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Target direction. - Choices: `import`, `export`\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureBfd:FeatureBfd": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureBfd resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureBgp:FeatureBgp": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureBgp resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureDhcp:FeatureDhcp": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureDhcp resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureEvpn:FeatureEvpn": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureEvpn resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureHmm:FeatureHmm": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureHmm resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureHsrp:FeatureHsrp": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureHsrp resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureInterfaceVlan:FeatureInterfaceVlan": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureInterfaceVlan resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureIsis:FeatureIsis": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureIsis resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureLacp:FeatureLacp": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureLacp resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureLldp:FeatureLldp": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureLldp resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureMacsec:FeatureMacsec": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureMacsec resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureNetflow:FeatureNetflow": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureNetflow resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureNvOverlay:FeatureNvOverlay": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureNvOverlay resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureOspf:FeatureOspf": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureOspf resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureOspfv3:FeatureOspfv3": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureOspfv3 resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featurePim:FeaturePim": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeaturePim resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featurePtp:FeaturePtp": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeaturePtp resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featurePvlan:FeaturePvlan": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeaturePvlan resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureSsh:FeatureSsh": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureSsh resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureTacacs:FeatureTacacs": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureTacacs resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureTelnet:FeatureTelnet": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureTelnet resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureUdld:FeatureUdld": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureUdld resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureVnSegment:FeatureVnSegment": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureVnSegment resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/featureVpc:FeatureVpc": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureVpc resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/hmm:Hmm": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Hmm resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/hmmInstance:HmmInstance": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "anycastMac": {
                    "type": "string",
                    "description": "Anycast Gateway MAC address. - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState",
                "anycastMac"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "anycastMac": {
                    "type": "string",
                    "description": "Anycast Gateway MAC address. - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HmmInstance resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "anycastMac": {
                        "type": "string",
                        "description": "Anycast Gateway MAC address. - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/hmmInterface:HmmInterface": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `vlan10`.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "HMM Fabric Forwarding mode information for the interface. - Choices: `standard`, `anycastGW`, `proxyGW` - Default value:\n`standard`\n"
                }
            },
            "required": [
                "adminState",
                "interfaceId",
                "mode"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `vlan10`.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "HMM Fabric Forwarding mode information for the interface. - Choices: `standard`, `anycastGW`, `proxyGW` - Default value:\n`standard`\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HmmInterface resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `vlan10`.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "HMM Fabric Forwarding mode information for the interface. - Choices: `standard`, `anycastGW`, `proxyGW` - Default value:\n`standard`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ipv4AccessList:Ipv4AccessList": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Access list name.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Access list name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4AccessList resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Access list name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ipv4AccessListEntry:Ipv4AccessListEntry": {
            "properties": {
                "ack": {
                    "type": "boolean",
                    "description": "Match TCP ACK flag.\n"
                },
                "action": {
                    "type": "string",
                    "description": "Action. - Choices: `invalid`, `permit`, `deny` - Default value: `invalid`\n"
                },
                "destinationAddressGroup": {
                    "type": "string",
                    "description": "Destination address group.\n"
                },
                "destinationPort1": {
                    "type": "string",
                    "description": "First destination port number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "destinationPort2": {
                    "type": "string",
                    "description": "Second destination port number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "destinationPortGroup": {
                    "type": "string",
                    "description": "Destination port group.\n"
                },
                "destinationPortMask": {
                    "type": "string",
                    "description": "Destination port mask number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "destinationPortOperator": {
                    "type": "string",
                    "description": "Destination port operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                },
                "destinationPrefix": {
                    "type": "string",
                    "description": "Destination prefix.\n"
                },
                "destinationPrefixLength": {
                    "type": "string",
                    "description": "Destination prefix length.\n"
                },
                "destinationPrefixMask": {
                    "type": "string",
                    "description": "Destination prefix mask.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dscp": {
                    "type": "integer",
                    "description": "Match DSCP. - Range: `0`-`63`\n"
                },
                "est": {
                    "type": "boolean",
                    "description": "Match TCP EST flag.\n"
                },
                "fin": {
                    "type": "boolean",
                    "description": "Match TCP FIN flag.\n"
                },
                "fragment": {
                    "type": "boolean",
                    "description": "Match non-initial fragment.\n"
                },
                "httpOptionType": {
                    "type": "string",
                    "description": "HTTP option method. - Choices: `invalid`, `get`, `put`, `head`, `post`, `delete`, `trace`, `connect` - Default value:\n`invalid`\n"
                },
                "icmpCode": {
                    "type": "integer",
                    "description": "ICMP code. - Range: `0`-`256` - Default value: `256`\n"
                },
                "icmpType": {
                    "type": "integer",
                    "description": "ICMP type. - Range: `0`-`256` - Default value: `256`\n"
                },
                "logging": {
                    "type": "boolean",
                    "description": "Log matches against ACL entry. - Default value: `false`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Access list name.\n"
                },
                "packetLength1": {
                    "type": "string",
                    "description": "First packet length. Either `invalid` or a number between 19 and 9210. - Default value: `invalid`\n"
                },
                "packetLength2": {
                    "type": "string",
                    "description": "Second packet length. Either `invalid` or a number between 19 and 9210. - Default value: `invalid`\n"
                },
                "packetLengthOperator": {
                    "type": "string",
                    "description": "Packet length operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                },
                "precedence": {
                    "type": "string",
                    "description": "Precedence. Either `unspecified` or a number between 0 and 7. - Default value: `unspecified`\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol name or number. - Choices: `ip`, `icmp`, `igmp`, `tcp`, `udp`, `gre`, `esp`, `ahp`, `eigrp`, `ospf`, `nos`,\n`pim`, `pcp`, `udf`\n"
                },
                "protocolMask": {
                    "type": "string",
                    "description": "Protocol mask name or number. - Choices: `ip`, `icmp`, `igmp`, `tcp`, `udp`, `gre`, `esp`, `ahp`, `eigrp`, `ospf`,\n`nos`, `pim`, `pcp`, `udf`\n"
                },
                "psh": {
                    "type": "boolean",
                    "description": "Match TCP PSH flag.\n"
                },
                "redirect": {
                    "type": "string",
                    "description": "Redirect action.\n"
                },
                "remark": {
                    "type": "string",
                    "description": "ACL comment.\n"
                },
                "rev": {
                    "type": "boolean",
                    "description": "Match TCP REV flag.\n"
                },
                "rst": {
                    "type": "boolean",
                    "description": "Match TCP RST flag.\n"
                },
                "sequenceNumber": {
                    "type": "integer",
                    "description": "Sequence number.\n"
                },
                "sourceAddressGroup": {
                    "type": "string",
                    "description": "Source address group.\n"
                },
                "sourcePort1": {
                    "type": "string",
                    "description": "First source port name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "sourcePort2": {
                    "type": "string",
                    "description": "Second source port name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "sourcePortGroup": {
                    "type": "string",
                    "description": "Source port group.\n"
                },
                "sourcePortMask": {
                    "type": "string",
                    "description": "Source port mask name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "sourcePortOperator": {
                    "type": "string",
                    "description": "Source port operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                },
                "sourcePrefix": {
                    "type": "string",
                    "description": "Source prefix.\n"
                },
                "sourcePrefixLength": {
                    "type": "string",
                    "description": "Source prefix length.\n"
                },
                "sourcePrefixMask": {
                    "type": "string",
                    "description": "Source prefix mask.\n"
                },
                "syn": {
                    "type": "boolean",
                    "description": "Match TCP SYN flag.\n"
                },
                "timeRange": {
                    "type": "string",
                    "description": "Time range name.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "TTL. - Range: `0`-`255` - Default value: `0`\n"
                },
                "urg": {
                    "type": "boolean",
                    "description": "Match TCP URG flag.\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "VLAN ID. - Range: `0`-`4095` - Default value: `4095`\n"
                },
                "vni": {
                    "type": "string",
                    "description": "NVE VNI ID. Either `invalid` or a number between 0 and 16777216. - Default value: `invalid`\n"
                }
            },
            "required": [
                "action",
                "destinationPortOperator",
                "httpOptionType",
                "icmpCode",
                "icmpType",
                "logging",
                "name",
                "packetLength1",
                "packetLength2",
                "packetLengthOperator",
                "precedence",
                "sequenceNumber",
                "sourcePortOperator",
                "ttl",
                "vlan",
                "vni"
            ],
            "inputProperties": {
                "ack": {
                    "type": "boolean",
                    "description": "Match TCP ACK flag.\n"
                },
                "action": {
                    "type": "string",
                    "description": "Action. - Choices: `invalid`, `permit`, `deny` - Default value: `invalid`\n"
                },
                "destinationAddressGroup": {
                    "type": "string",
                    "description": "Destination address group.\n"
                },
                "destinationPort1": {
                    "type": "string",
                    "description": "First destination port number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "destinationPort2": {
                    "type": "string",
                    "description": "Second destination port number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "destinationPortGroup": {
                    "type": "string",
                    "description": "Destination port group.\n"
                },
                "destinationPortMask": {
                    "type": "string",
                    "description": "Destination port mask number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "destinationPortOperator": {
                    "type": "string",
                    "description": "Destination port operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                },
                "destinationPrefix": {
                    "type": "string",
                    "description": "Destination prefix.\n"
                },
                "destinationPrefixLength": {
                    "type": "string",
                    "description": "Destination prefix length.\n"
                },
                "destinationPrefixMask": {
                    "type": "string",
                    "description": "Destination prefix mask.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dscp": {
                    "type": "integer",
                    "description": "Match DSCP. - Range: `0`-`63`\n"
                },
                "est": {
                    "type": "boolean",
                    "description": "Match TCP EST flag.\n"
                },
                "fin": {
                    "type": "boolean",
                    "description": "Match TCP FIN flag.\n"
                },
                "fragment": {
                    "type": "boolean",
                    "description": "Match non-initial fragment.\n"
                },
                "httpOptionType": {
                    "type": "string",
                    "description": "HTTP option method. - Choices: `invalid`, `get`, `put`, `head`, `post`, `delete`, `trace`, `connect` - Default value:\n`invalid`\n"
                },
                "icmpCode": {
                    "type": "integer",
                    "description": "ICMP code. - Range: `0`-`256` - Default value: `256`\n"
                },
                "icmpType": {
                    "type": "integer",
                    "description": "ICMP type. - Range: `0`-`256` - Default value: `256`\n"
                },
                "logging": {
                    "type": "boolean",
                    "description": "Log matches against ACL entry. - Default value: `false`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Access list name.\n"
                },
                "packetLength1": {
                    "type": "string",
                    "description": "First packet length. Either `invalid` or a number between 19 and 9210. - Default value: `invalid`\n"
                },
                "packetLength2": {
                    "type": "string",
                    "description": "Second packet length. Either `invalid` or a number between 19 and 9210. - Default value: `invalid`\n"
                },
                "packetLengthOperator": {
                    "type": "string",
                    "description": "Packet length operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                },
                "precedence": {
                    "type": "string",
                    "description": "Precedence. Either `unspecified` or a number between 0 and 7. - Default value: `unspecified`\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol name or number. - Choices: `ip`, `icmp`, `igmp`, `tcp`, `udp`, `gre`, `esp`, `ahp`, `eigrp`, `ospf`, `nos`,\n`pim`, `pcp`, `udf`\n"
                },
                "protocolMask": {
                    "type": "string",
                    "description": "Protocol mask name or number. - Choices: `ip`, `icmp`, `igmp`, `tcp`, `udp`, `gre`, `esp`, `ahp`, `eigrp`, `ospf`,\n`nos`, `pim`, `pcp`, `udf`\n"
                },
                "psh": {
                    "type": "boolean",
                    "description": "Match TCP PSH flag.\n"
                },
                "redirect": {
                    "type": "string",
                    "description": "Redirect action.\n"
                },
                "remark": {
                    "type": "string",
                    "description": "ACL comment.\n"
                },
                "rev": {
                    "type": "boolean",
                    "description": "Match TCP REV flag.\n"
                },
                "rst": {
                    "type": "boolean",
                    "description": "Match TCP RST flag.\n"
                },
                "sequenceNumber": {
                    "type": "integer",
                    "description": "Sequence number.\n"
                },
                "sourceAddressGroup": {
                    "type": "string",
                    "description": "Source address group.\n"
                },
                "sourcePort1": {
                    "type": "string",
                    "description": "First source port name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "sourcePort2": {
                    "type": "string",
                    "description": "Second source port name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "sourcePortGroup": {
                    "type": "string",
                    "description": "Source port group.\n"
                },
                "sourcePortMask": {
                    "type": "string",
                    "description": "Source port mask name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "sourcePortOperator": {
                    "type": "string",
                    "description": "Source port operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                },
                "sourcePrefix": {
                    "type": "string",
                    "description": "Source prefix.\n"
                },
                "sourcePrefixLength": {
                    "type": "string",
                    "description": "Source prefix length.\n"
                },
                "sourcePrefixMask": {
                    "type": "string",
                    "description": "Source prefix mask.\n"
                },
                "syn": {
                    "type": "boolean",
                    "description": "Match TCP SYN flag.\n"
                },
                "timeRange": {
                    "type": "string",
                    "description": "Time range name.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "TTL. - Range: `0`-`255` - Default value: `0`\n"
                },
                "urg": {
                    "type": "boolean",
                    "description": "Match TCP URG flag.\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "VLAN ID. - Range: `0`-`4095` - Default value: `4095`\n"
                },
                "vni": {
                    "type": "string",
                    "description": "NVE VNI ID. Either `invalid` or a number between 0 and 16777216. - Default value: `invalid`\n"
                }
            },
            "requiredInputs": [
                "sequenceNumber"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4AccessListEntry resources.\n",
                "properties": {
                    "ack": {
                        "type": "boolean",
                        "description": "Match TCP ACK flag.\n"
                    },
                    "action": {
                        "type": "string",
                        "description": "Action. - Choices: `invalid`, `permit`, `deny` - Default value: `invalid`\n"
                    },
                    "destinationAddressGroup": {
                        "type": "string",
                        "description": "Destination address group.\n"
                    },
                    "destinationPort1": {
                        "type": "string",
                        "description": "First destination port number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                    },
                    "destinationPort2": {
                        "type": "string",
                        "description": "Second destination port number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                    },
                    "destinationPortGroup": {
                        "type": "string",
                        "description": "Destination port group.\n"
                    },
                    "destinationPortMask": {
                        "type": "string",
                        "description": "Destination port mask number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                    },
                    "destinationPortOperator": {
                        "type": "string",
                        "description": "Destination port operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                    },
                    "destinationPrefix": {
                        "type": "string",
                        "description": "Destination prefix.\n"
                    },
                    "destinationPrefixLength": {
                        "type": "string",
                        "description": "Destination prefix length.\n"
                    },
                    "destinationPrefixMask": {
                        "type": "string",
                        "description": "Destination prefix mask.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "Match DSCP. - Range: `0`-`63`\n"
                    },
                    "est": {
                        "type": "boolean",
                        "description": "Match TCP EST flag.\n"
                    },
                    "fin": {
                        "type": "boolean",
                        "description": "Match TCP FIN flag.\n"
                    },
                    "fragment": {
                        "type": "boolean",
                        "description": "Match non-initial fragment.\n"
                    },
                    "httpOptionType": {
                        "type": "string",
                        "description": "HTTP option method. - Choices: `invalid`, `get`, `put`, `head`, `post`, `delete`, `trace`, `connect` - Default value:\n`invalid`\n"
                    },
                    "icmpCode": {
                        "type": "integer",
                        "description": "ICMP code. - Range: `0`-`256` - Default value: `256`\n"
                    },
                    "icmpType": {
                        "type": "integer",
                        "description": "ICMP type. - Range: `0`-`256` - Default value: `256`\n"
                    },
                    "logging": {
                        "type": "boolean",
                        "description": "Log matches against ACL entry. - Default value: `false`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Access list name.\n"
                    },
                    "packetLength1": {
                        "type": "string",
                        "description": "First packet length. Either `invalid` or a number between 19 and 9210. - Default value: `invalid`\n"
                    },
                    "packetLength2": {
                        "type": "string",
                        "description": "Second packet length. Either `invalid` or a number between 19 and 9210. - Default value: `invalid`\n"
                    },
                    "packetLengthOperator": {
                        "type": "string",
                        "description": "Packet length operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                    },
                    "precedence": {
                        "type": "string",
                        "description": "Precedence. Either `unspecified` or a number between 0 and 7. - Default value: `unspecified`\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Protocol name or number. - Choices: `ip`, `icmp`, `igmp`, `tcp`, `udp`, `gre`, `esp`, `ahp`, `eigrp`, `ospf`, `nos`,\n`pim`, `pcp`, `udf`\n"
                    },
                    "protocolMask": {
                        "type": "string",
                        "description": "Protocol mask name or number. - Choices: `ip`, `icmp`, `igmp`, `tcp`, `udp`, `gre`, `esp`, `ahp`, `eigrp`, `ospf`,\n`nos`, `pim`, `pcp`, `udf`\n"
                    },
                    "psh": {
                        "type": "boolean",
                        "description": "Match TCP PSH flag.\n"
                    },
                    "redirect": {
                        "type": "string",
                        "description": "Redirect action.\n"
                    },
                    "remark": {
                        "type": "string",
                        "description": "ACL comment.\n"
                    },
                    "rev": {
                        "type": "boolean",
                        "description": "Match TCP REV flag.\n"
                    },
                    "rst": {
                        "type": "boolean",
                        "description": "Match TCP RST flag.\n"
                    },
                    "sequenceNumber": {
                        "type": "integer",
                        "description": "Sequence number.\n"
                    },
                    "sourceAddressGroup": {
                        "type": "string",
                        "description": "Source address group.\n"
                    },
                    "sourcePort1": {
                        "type": "string",
                        "description": "First source port name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                    },
                    "sourcePort2": {
                        "type": "string",
                        "description": "Second source port name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                    },
                    "sourcePortGroup": {
                        "type": "string",
                        "description": "Source port group.\n"
                    },
                    "sourcePortMask": {
                        "type": "string",
                        "description": "Source port mask name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                    },
                    "sourcePortOperator": {
                        "type": "string",
                        "description": "Source port operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                    },
                    "sourcePrefix": {
                        "type": "string",
                        "description": "Source prefix.\n"
                    },
                    "sourcePrefixLength": {
                        "type": "string",
                        "description": "Source prefix length.\n"
                    },
                    "sourcePrefixMask": {
                        "type": "string",
                        "description": "Source prefix mask.\n"
                    },
                    "syn": {
                        "type": "boolean",
                        "description": "Match TCP SYN flag.\n"
                    },
                    "timeRange": {
                        "type": "string",
                        "description": "Time range name.\n"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "TTL. - Range: `0`-`255` - Default value: `0`\n"
                    },
                    "urg": {
                        "type": "boolean",
                        "description": "Match TCP URG flag.\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "VLAN ID. - Range: `0`-`4095` - Default value: `4095`\n"
                    },
                    "vni": {
                        "type": "string",
                        "description": "NVE VNI ID. Either `invalid` or a number between 0 and 16777216. - Default value: `invalid`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ipv4AccessListPolicyEgressInterface:Ipv4AccessListPolicyEgressInterface": {
            "properties": {
                "accessListName": {
                    "type": "string",
                    "description": "Access list name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                }
            },
            "required": [
                "interfaceId"
            ],
            "inputProperties": {
                "accessListName": {
                    "type": "string",
                    "description": "Access list name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4AccessListPolicyEgressInterface resources.\n",
                "properties": {
                    "accessListName": {
                        "type": "string",
                        "description": "Access list name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ipv4AccessListPolicyIngressInterface:Ipv4AccessListPolicyIngressInterface": {
            "properties": {
                "accessListName": {
                    "type": "string",
                    "description": "Access list name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                }
            },
            "required": [
                "interfaceId"
            ],
            "inputProperties": {
                "accessListName": {
                    "type": "string",
                    "description": "Access list name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4AccessListPolicyIngressInterface resources.\n",
                "properties": {
                    "accessListName": {
                        "type": "string",
                        "description": "Access list name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ipv4Interface:Ipv4Interface": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dropGlean": {
                    "type": "string",
                    "description": "ip drop-glean enabled/disabled. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "forward": {
                    "type": "string",
                    "description": "ip forward enabled/disabled. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "unnumbered": {
                    "type": "string",
                    "description": "IP unnumbered. Reference to interface must match first field in the output of `show intf brief`. Example: `eth1/1`. -\nDefault value: `unspecified`\n"
                },
                "urpf": {
                    "type": "string",
                    "description": "URPF (unicast Reverse Path Forwarding). - Choices: `disabled`, `strict`, `loose`, `loose-allow-default`,\n`strict-allow-vni-hosts` - Default value: `disabled`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "dropGlean",
                "forward",
                "interfaceId",
                "unnumbered",
                "urpf",
                "vrf"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dropGlean": {
                    "type": "string",
                    "description": "ip drop-glean enabled/disabled. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "forward": {
                    "type": "string",
                    "description": "ip forward enabled/disabled. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "unnumbered": {
                    "type": "string",
                    "description": "IP unnumbered. Reference to interface must match first field in the output of `show intf brief`. Example: `eth1/1`. -\nDefault value: `unspecified`\n"
                },
                "urpf": {
                    "type": "string",
                    "description": "URPF (unicast Reverse Path Forwarding). - Choices: `disabled`, `strict`, `loose`, `loose-allow-default`,\n`strict-allow-vni-hosts` - Default value: `disabled`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4Interface resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dropGlean": {
                        "type": "string",
                        "description": "ip drop-glean enabled/disabled. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "forward": {
                        "type": "string",
                        "description": "ip forward enabled/disabled. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "unnumbered": {
                        "type": "string",
                        "description": "IP unnumbered. Reference to interface must match first field in the output of `show intf brief`. Example: `eth1/1`. -\nDefault value: `unspecified`\n"
                    },
                    "urpf": {
                        "type": "string",
                        "description": "URPF (unicast Reverse Path Forwarding). - Choices: `disabled`, `strict`, `loose`, `loose-allow-default`,\n`strict-allow-vni-hosts` - Default value: `disabled`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ipv4InterfaceAddress:Ipv4InterfaceAddress": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "IPv4 address.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Address type. - Choices: `primary`, `secondary` - Default value: `primary`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "interfaceId",
                "type",
                "vrf"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "IPv4 address.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Address type. - Choices: `primary`, `secondary` - Default value: `primary`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "interfaceId",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4InterfaceAddress resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "IPv4 address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Address type. - Choices: `primary`, `secondary` - Default value: `primary`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ipv4PrefixListRule:Ipv4PrefixListRule": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule name.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4PrefixListRule resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ipv4PrefixListRuleEntry:Ipv4PrefixListRuleEntry": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`\n"
                },
                "criteria": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule Entry criteria. - Choices: `exact`, `inexact` - Default value: `exact`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "fromRange": {
                    "type": "integer",
                    "description": "IPv4 Prefix List Rule Entry start range. - Range: `0`-`128` - Default value: `0`\n"
                },
                "order": {
                    "type": "integer",
                    "description": "IPv4 Prefix List Rule Entry order. - Range: `0`-`4294967294`\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule Entry prefix.\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule name.\n"
                },
                "toRange": {
                    "type": "integer",
                    "description": "IPv4 Prefix List Rule Entry end range. - Range: `0`-`128` - Default value: `0`\n"
                }
            },
            "required": [
                "action",
                "criteria",
                "fromRange",
                "order",
                "ruleName",
                "toRange"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`\n"
                },
                "criteria": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule Entry criteria. - Choices: `exact`, `inexact` - Default value: `exact`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "fromRange": {
                    "type": "integer",
                    "description": "IPv4 Prefix List Rule Entry start range. - Range: `0`-`128` - Default value: `0`\n"
                },
                "order": {
                    "type": "integer",
                    "description": "IPv4 Prefix List Rule Entry order. - Range: `0`-`4294967294`\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule Entry prefix.\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule name.\n"
                },
                "toRange": {
                    "type": "integer",
                    "description": "IPv4 Prefix List Rule Entry end range. - Range: `0`-`128` - Default value: `0`\n"
                }
            },
            "requiredInputs": [
                "order",
                "ruleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4PrefixListRuleEntry resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`\n"
                    },
                    "criteria": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule Entry criteria. - Choices: `exact`, `inexact` - Default value: `exact`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "fromRange": {
                        "type": "integer",
                        "description": "IPv4 Prefix List Rule Entry start range. - Range: `0`-`128` - Default value: `0`\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "IPv4 Prefix List Rule Entry order. - Range: `0`-`4294967294`\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule Entry prefix.\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule name.\n"
                    },
                    "toRange": {
                        "type": "integer",
                        "description": "IPv4 Prefix List Rule Entry end range. - Range: `0`-`128` - Default value: `0`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ipv4StaticRoute:Ipv4StaticRoute": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/Ipv4StaticRouteNextHop:Ipv4StaticRouteNextHop"
                    },
                    "description": "List of next hops.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "nextHops",
                "prefix",
                "vrfName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/Ipv4StaticRouteNextHop:Ipv4StaticRouteNextHop"
                    },
                    "description": "List of next hops.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "nextHops",
                "prefix",
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4StaticRoute resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "nextHops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/Ipv4StaticRouteNextHop:Ipv4StaticRouteNextHop"
                        },
                        "description": "List of next hops.\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "Prefix.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ipv4Vrf:Ipv4Vrf": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4Vrf resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/isis:Isis": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Isis resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/isisInstance:IsisInstance": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "IS-IS instance name.\n"
                }
            },
            "required": [
                "adminState",
                "name"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "IS-IS instance name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IsisInstance resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "IS-IS instance name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/isisInterface:IsisInterface": {
            "properties": {
                "authenticationCheck": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS without specific level. - Default value: `true`\n"
                },
                "authenticationCheckL1": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS on Level-1. - Default value: `true`\n"
                },
                "authenticationCheckL2": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS on Level-2. - Default value: `true`\n"
                },
                "authenticationKey": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS without specific level.\n"
                },
                "authenticationKeyL1": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS on Level-1.\n"
                },
                "authenticationKeyL2": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS on Level-2.\n"
                },
                "authenticationType": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type without specific level. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "authenticationTypeL1": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type for Level-1. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "authenticationTypeL2": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type for Level-2. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "circuitType": {
                    "type": "string",
                    "description": "Circuit type. - Choices: `l1`, `l2`, `l12` - Default value: `l12`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helloInterval": {
                    "type": "integer",
                    "description": "Hello interval. - Range: `1`-`65535` - Default value: `10`\n"
                },
                "helloIntervalL1": {
                    "type": "integer",
                    "description": "Hello interval Level-1. - Range: `1`-`65535` - Default value: `10`\n"
                },
                "helloIntervalL2": {
                    "type": "integer",
                    "description": "Hello interval Level-2. - Range: `1`-`65535` - Default value: `10`\n"
                },
                "helloMultiplier": {
                    "type": "integer",
                    "description": "Hello multiplier. - Range: `3`-`1000` - Default value: `3`\n"
                },
                "helloMultiplierL1": {
                    "type": "integer",
                    "description": "Hello multiplier Level-1. - Range: `3`-`1000` - Default value: `3`\n"
                },
                "helloMultiplierL2": {
                    "type": "integer",
                    "description": "Hello multiplier Level-2. - Range: `3`-`1000` - Default value: `3`\n"
                },
                "helloPadding": {
                    "type": "string",
                    "description": "Hello padding. - Choices: `always`, `transient`, `never` - Default value: `always`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "metricL1": {
                    "type": "integer",
                    "description": "Interface metric Level-1. - Range: `0`-`16777216` - Default value: `16777216`\n"
                },
                "metricL2": {
                    "type": "integer",
                    "description": "Interface metric Level-2. - Range: `0`-`16777216` - Default value: `16777216`\n"
                },
                "mtuCheck": {
                    "type": "boolean",
                    "description": "MTU Check for IS-IS without specific level. - Default value: `false`\n"
                },
                "mtuCheckL1": {
                    "type": "boolean",
                    "description": "MTU Check for IS-IS on Level-1. - Default value: `false`\n"
                },
                "mtuCheckL2": {
                    "type": "boolean",
                    "description": "MTU Check for IS-IS on Level-2. - Default value: `false`\n"
                },
                "networkTypeP2p": {
                    "type": "string",
                    "description": "Enabling Point-to-Point Network Type on IS-IS Interface. - Choices: `off`, `on`, `useAllISMac` - Default value: `off`\n"
                },
                "passive": {
                    "type": "string",
                    "description": "IS-IS Passive Interface Info. - Choices: `l1`, `l2`, `l12`, `noL1`, `noL2`, `noL12`, `inheritDef` - Default value:\n`inheritDef`\n"
                },
                "priorityL1": {
                    "type": "integer",
                    "description": "Circuit priority. - Range: `0`-`127` - Default value: `64`\n"
                },
                "priorityL2": {
                    "type": "integer",
                    "description": "Circuit priority. - Range: `0`-`127` - Default value: `64`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF.\n"
                }
            },
            "required": [
                "authenticationCheck",
                "authenticationCheckL1",
                "authenticationCheckL2",
                "authenticationType",
                "authenticationTypeL1",
                "authenticationTypeL2",
                "circuitType",
                "helloInterval",
                "helloIntervalL1",
                "helloIntervalL2",
                "helloMultiplier",
                "helloMultiplierL1",
                "helloMultiplierL2",
                "helloPadding",
                "interfaceId",
                "metricL1",
                "metricL2",
                "mtuCheck",
                "mtuCheckL1",
                "mtuCheckL2",
                "networkTypeP2p",
                "passive",
                "priorityL1",
                "priorityL2"
            ],
            "inputProperties": {
                "authenticationCheck": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS without specific level. - Default value: `true`\n"
                },
                "authenticationCheckL1": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS on Level-1. - Default value: `true`\n"
                },
                "authenticationCheckL2": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS on Level-2. - Default value: `true`\n"
                },
                "authenticationKey": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS without specific level.\n"
                },
                "authenticationKeyL1": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS on Level-1.\n"
                },
                "authenticationKeyL2": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS on Level-2.\n"
                },
                "authenticationType": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type without specific level. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "authenticationTypeL1": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type for Level-1. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "authenticationTypeL2": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type for Level-2. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "circuitType": {
                    "type": "string",
                    "description": "Circuit type. - Choices: `l1`, `l2`, `l12` - Default value: `l12`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helloInterval": {
                    "type": "integer",
                    "description": "Hello interval. - Range: `1`-`65535` - Default value: `10`\n"
                },
                "helloIntervalL1": {
                    "type": "integer",
                    "description": "Hello interval Level-1. - Range: `1`-`65535` - Default value: `10`\n"
                },
                "helloIntervalL2": {
                    "type": "integer",
                    "description": "Hello interval Level-2. - Range: `1`-`65535` - Default value: `10`\n"
                },
                "helloMultiplier": {
                    "type": "integer",
                    "description": "Hello multiplier. - Range: `3`-`1000` - Default value: `3`\n"
                },
                "helloMultiplierL1": {
                    "type": "integer",
                    "description": "Hello multiplier Level-1. - Range: `3`-`1000` - Default value: `3`\n"
                },
                "helloMultiplierL2": {
                    "type": "integer",
                    "description": "Hello multiplier Level-2. - Range: `3`-`1000` - Default value: `3`\n"
                },
                "helloPadding": {
                    "type": "string",
                    "description": "Hello padding. - Choices: `always`, `transient`, `never` - Default value: `always`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "metricL1": {
                    "type": "integer",
                    "description": "Interface metric Level-1. - Range: `0`-`16777216` - Default value: `16777216`\n"
                },
                "metricL2": {
                    "type": "integer",
                    "description": "Interface metric Level-2. - Range: `0`-`16777216` - Default value: `16777216`\n"
                },
                "mtuCheck": {
                    "type": "boolean",
                    "description": "MTU Check for IS-IS without specific level. - Default value: `false`\n"
                },
                "mtuCheckL1": {
                    "type": "boolean",
                    "description": "MTU Check for IS-IS on Level-1. - Default value: `false`\n"
                },
                "mtuCheckL2": {
                    "type": "boolean",
                    "description": "MTU Check for IS-IS on Level-2. - Default value: `false`\n"
                },
                "networkTypeP2p": {
                    "type": "string",
                    "description": "Enabling Point-to-Point Network Type on IS-IS Interface. - Choices: `off`, `on`, `useAllISMac` - Default value: `off`\n"
                },
                "passive": {
                    "type": "string",
                    "description": "IS-IS Passive Interface Info. - Choices: `l1`, `l2`, `l12`, `noL1`, `noL2`, `noL12`, `inheritDef` - Default value:\n`inheritDef`\n"
                },
                "priorityL1": {
                    "type": "integer",
                    "description": "Circuit priority. - Range: `0`-`127` - Default value: `64`\n"
                },
                "priorityL2": {
                    "type": "integer",
                    "description": "Circuit priority. - Range: `0`-`127` - Default value: `64`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF.\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IsisInterface resources.\n",
                "properties": {
                    "authenticationCheck": {
                        "type": "boolean",
                        "description": "Authentication Check for ISIS without specific level. - Default value: `true`\n"
                    },
                    "authenticationCheckL1": {
                        "type": "boolean",
                        "description": "Authentication Check for ISIS on Level-1. - Default value: `true`\n"
                    },
                    "authenticationCheckL2": {
                        "type": "boolean",
                        "description": "Authentication Check for ISIS on Level-2. - Default value: `true`\n"
                    },
                    "authenticationKey": {
                        "type": "string",
                        "description": "Authentication Key for IS-IS without specific level.\n"
                    },
                    "authenticationKeyL1": {
                        "type": "string",
                        "description": "Authentication Key for IS-IS on Level-1.\n"
                    },
                    "authenticationKeyL2": {
                        "type": "string",
                        "description": "Authentication Key for IS-IS on Level-2.\n"
                    },
                    "authenticationType": {
                        "type": "string",
                        "description": "IS-IS Authentication-Type without specific level. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                    },
                    "authenticationTypeL1": {
                        "type": "string",
                        "description": "IS-IS Authentication-Type for Level-1. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                    },
                    "authenticationTypeL2": {
                        "type": "string",
                        "description": "IS-IS Authentication-Type for Level-2. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                    },
                    "circuitType": {
                        "type": "string",
                        "description": "Circuit type. - Choices: `l1`, `l2`, `l12` - Default value: `l12`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helloInterval": {
                        "type": "integer",
                        "description": "Hello interval. - Range: `1`-`65535` - Default value: `10`\n"
                    },
                    "helloIntervalL1": {
                        "type": "integer",
                        "description": "Hello interval Level-1. - Range: `1`-`65535` - Default value: `10`\n"
                    },
                    "helloIntervalL2": {
                        "type": "integer",
                        "description": "Hello interval Level-2. - Range: `1`-`65535` - Default value: `10`\n"
                    },
                    "helloMultiplier": {
                        "type": "integer",
                        "description": "Hello multiplier. - Range: `3`-`1000` - Default value: `3`\n"
                    },
                    "helloMultiplierL1": {
                        "type": "integer",
                        "description": "Hello multiplier Level-1. - Range: `3`-`1000` - Default value: `3`\n"
                    },
                    "helloMultiplierL2": {
                        "type": "integer",
                        "description": "Hello multiplier Level-2. - Range: `3`-`1000` - Default value: `3`\n"
                    },
                    "helloPadding": {
                        "type": "string",
                        "description": "Hello padding. - Choices: `always`, `transient`, `never` - Default value: `always`\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "metricL1": {
                        "type": "integer",
                        "description": "Interface metric Level-1. - Range: `0`-`16777216` - Default value: `16777216`\n"
                    },
                    "metricL2": {
                        "type": "integer",
                        "description": "Interface metric Level-2. - Range: `0`-`16777216` - Default value: `16777216`\n"
                    },
                    "mtuCheck": {
                        "type": "boolean",
                        "description": "MTU Check for IS-IS without specific level. - Default value: `false`\n"
                    },
                    "mtuCheckL1": {
                        "type": "boolean",
                        "description": "MTU Check for IS-IS on Level-1. - Default value: `false`\n"
                    },
                    "mtuCheckL2": {
                        "type": "boolean",
                        "description": "MTU Check for IS-IS on Level-2. - Default value: `false`\n"
                    },
                    "networkTypeP2p": {
                        "type": "string",
                        "description": "Enabling Point-to-Point Network Type on IS-IS Interface. - Choices: `off`, `on`, `useAllISMac` - Default value: `off`\n"
                    },
                    "passive": {
                        "type": "string",
                        "description": "IS-IS Passive Interface Info. - Choices: `l1`, `l2`, `l12`, `noL1`, `noL2`, `noL12`, `inheritDef` - Default value:\n`inheritDef`\n"
                    },
                    "priorityL1": {
                        "type": "integer",
                        "description": "Circuit priority. - Range: `0`-`127` - Default value: `64`\n"
                    },
                    "priorityL2": {
                        "type": "integer",
                        "description": "Circuit priority. - Range: `0`-`127` - Default value: `64`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/isisVrf:IsisVrf": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "authenticationCheckL1": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS on Level-1. - Default value: `true`\n"
                },
                "authenticationCheckL2": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS on Level-2. - Default value: `true`\n"
                },
                "authenticationKeyL1": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS on Level-1.\n"
                },
                "authenticationKeyL2": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS on Level-2.\n"
                },
                "authenticationTypeL1": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type for Level-1. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "authenticationTypeL2": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type for Level-2. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "bandwidthReference": {
                    "type": "integer",
                    "description": "The IS-IS domain bandwidth reference. This sets the default reference bandwidth used for calculating the IS-IS cost\nmetric. - Range: `0`-`4294967295` - Default value: `40000`\n"
                },
                "banwidthReferenceUnit": {
                    "type": "string",
                    "description": "Bandwidth reference unit. - Choices: `mbps`, `gbps` - Default value: `mbps`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "IS-IS instance name.\n"
                },
                "isType": {
                    "type": "string",
                    "description": "IS-IS domain type. - Choices: `l1`, `l2`, `l12` - Default value: `l12`\n"
                },
                "metricType": {
                    "type": "string",
                    "description": "IS-IS metric type. - Choices: `narrow`, `wide`, `transition` - Default value: `wide`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "The configuration of link-state packet (LSP) maximum transmission units (MTU) is supported. You can enable up to 4352\nbytes. - Range: `256`-`4352` - Default value: `1492`\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                },
                "net": {
                    "type": "string",
                    "description": "Holds IS-IS domain NET (address) value.\n"
                },
                "passiveDefault": {
                    "type": "string",
                    "description": "IS-IS Domain passive-interface default level. - Choices: `l1`, `l2`, `l12`, `unknown` - Default value: `unknown`\n"
                }
            },
            "required": [
                "adminState",
                "authenticationCheckL1",
                "authenticationCheckL2",
                "authenticationTypeL1",
                "authenticationTypeL2",
                "bandwidthReference",
                "banwidthReferenceUnit",
                "instanceName",
                "isType",
                "metricType",
                "mtu",
                "name",
                "passiveDefault"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "authenticationCheckL1": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS on Level-1. - Default value: `true`\n"
                },
                "authenticationCheckL2": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS on Level-2. - Default value: `true`\n"
                },
                "authenticationKeyL1": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS on Level-1.\n"
                },
                "authenticationKeyL2": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS on Level-2.\n"
                },
                "authenticationTypeL1": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type for Level-1. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "authenticationTypeL2": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type for Level-2. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "bandwidthReference": {
                    "type": "integer",
                    "description": "The IS-IS domain bandwidth reference. This sets the default reference bandwidth used for calculating the IS-IS cost\nmetric. - Range: `0`-`4294967295` - Default value: `40000`\n"
                },
                "banwidthReferenceUnit": {
                    "type": "string",
                    "description": "Bandwidth reference unit. - Choices: `mbps`, `gbps` - Default value: `mbps`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "IS-IS instance name.\n"
                },
                "isType": {
                    "type": "string",
                    "description": "IS-IS domain type. - Choices: `l1`, `l2`, `l12` - Default value: `l12`\n"
                },
                "metricType": {
                    "type": "string",
                    "description": "IS-IS metric type. - Choices: `narrow`, `wide`, `transition` - Default value: `wide`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "The configuration of link-state packet (LSP) maximum transmission units (MTU) is supported. You can enable up to 4352\nbytes. - Range: `256`-`4352` - Default value: `1492`\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                },
                "net": {
                    "type": "string",
                    "description": "Holds IS-IS domain NET (address) value.\n"
                },
                "passiveDefault": {
                    "type": "string",
                    "description": "IS-IS Domain passive-interface default level. - Choices: `l1`, `l2`, `l12`, `unknown` - Default value: `unknown`\n"
                }
            },
            "requiredInputs": [
                "instanceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IsisVrf resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "authenticationCheckL1": {
                        "type": "boolean",
                        "description": "Authentication Check for ISIS on Level-1. - Default value: `true`\n"
                    },
                    "authenticationCheckL2": {
                        "type": "boolean",
                        "description": "Authentication Check for ISIS on Level-2. - Default value: `true`\n"
                    },
                    "authenticationKeyL1": {
                        "type": "string",
                        "description": "Authentication Key for IS-IS on Level-1.\n"
                    },
                    "authenticationKeyL2": {
                        "type": "string",
                        "description": "Authentication Key for IS-IS on Level-2.\n"
                    },
                    "authenticationTypeL1": {
                        "type": "string",
                        "description": "IS-IS Authentication-Type for Level-1. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                    },
                    "authenticationTypeL2": {
                        "type": "string",
                        "description": "IS-IS Authentication-Type for Level-2. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                    },
                    "bandwidthReference": {
                        "type": "integer",
                        "description": "The IS-IS domain bandwidth reference. This sets the default reference bandwidth used for calculating the IS-IS cost\nmetric. - Range: `0`-`4294967295` - Default value: `40000`\n"
                    },
                    "banwidthReferenceUnit": {
                        "type": "string",
                        "description": "Bandwidth reference unit. - Choices: `mbps`, `gbps` - Default value: `mbps`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "IS-IS instance name.\n"
                    },
                    "isType": {
                        "type": "string",
                        "description": "IS-IS domain type. - Choices: `l1`, `l2`, `l12` - Default value: `l12`\n"
                    },
                    "metricType": {
                        "type": "string",
                        "description": "IS-IS metric type. - Choices: `narrow`, `wide`, `transition` - Default value: `wide`\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "The configuration of link-state packet (LSP) maximum transmission units (MTU) is supported. You can enable up to 4352\nbytes. - Range: `256`-`4352` - Default value: `1492`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    },
                    "net": {
                        "type": "string",
                        "description": "Holds IS-IS domain NET (address) value.\n"
                    },
                    "passiveDefault": {
                        "type": "string",
                        "description": "IS-IS Domain passive-interface default level. - Choices: `l1`, `l2`, `l12`, `unknown` - Default value: `unknown`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/loopbackInterface:LoopbackInterface": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `lo123`.\n"
                }
            },
            "required": [
                "adminState",
                "interfaceId"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `lo123`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoopbackInterface resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `up`, `down` - Default value: `up`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `lo123`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/loopbackInterfaceVrf:LoopbackInterfaceVrf": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `lo123`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "required": [
                "interfaceId",
                "vrfDn"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `lo123`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "vrfDn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoopbackInterfaceVrf resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `lo123`.\n"
                    },
                    "vrfDn": {
                        "type": "string",
                        "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ntpServer:NtpServer": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "keyId": {
                    "type": "integer",
                    "description": "NTP provider key ID. Possible range is from `1` to `65535`. - Range: `1`-`65535`\n"
                },
                "maxPoll": {
                    "type": "integer",
                    "description": "NTP maximum interval default in seconds. Possible range is from `4` to `16`. - Range: `4`-`16` - Default value: `6`\n"
                },
                "minPoll": {
                    "type": "integer",
                    "description": "NTP minimum interval default in seconds. Possible range is from `4` to `16`. - Range: `4`-`16` - Default value: `4`\n"
                },
                "name": {
                    "type": "string",
                    "description": "NTP server.\n"
                },
                "type": {
                    "type": "string",
                    "description": "NTP provider type. Possible values are `server` or `peer`. - Choices: `server`, `peer`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "Identifies the VRF for the NTP providers. - Default value: `default`\n"
                }
            },
            "required": [
                "maxPoll",
                "minPoll",
                "name",
                "type",
                "vrf"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "keyId": {
                    "type": "integer",
                    "description": "NTP provider key ID. Possible range is from `1` to `65535`. - Range: `1`-`65535`\n"
                },
                "maxPoll": {
                    "type": "integer",
                    "description": "NTP maximum interval default in seconds. Possible range is from `4` to `16`. - Range: `4`-`16` - Default value: `6`\n"
                },
                "minPoll": {
                    "type": "integer",
                    "description": "NTP minimum interval default in seconds. Possible range is from `4` to `16`. - Range: `4`-`16` - Default value: `4`\n"
                },
                "name": {
                    "type": "string",
                    "description": "NTP server.\n"
                },
                "type": {
                    "type": "string",
                    "description": "NTP provider type. Possible values are `server` or `peer`. - Choices: `server`, `peer`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "Identifies the VRF for the NTP providers. - Default value: `default`\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NtpServer resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "keyId": {
                        "type": "integer",
                        "description": "NTP provider key ID. Possible range is from `1` to `65535`. - Range: `1`-`65535`\n"
                    },
                    "maxPoll": {
                        "type": "integer",
                        "description": "NTP maximum interval default in seconds. Possible range is from `4` to `16`. - Range: `4`-`16` - Default value: `6`\n"
                    },
                    "minPoll": {
                        "type": "integer",
                        "description": "NTP minimum interval default in seconds. Possible range is from `4` to `16`. - Range: `4`-`16` - Default value: `4`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NTP server.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "NTP provider type. Possible values are `server` or `peer`. - Choices: `server`, `peer`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "Identifies the VRF for the NTP providers. - Default value: `default`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/nveInterface:NveInterface": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "advertiseVirtualMac": {
                    "type": "boolean",
                    "description": "Enable or disable Virtual MAC Advertisement in VPC mode. - Default value: `false`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "holdDownTime": {
                    "type": "integer",
                    "description": "Hold Down Time. - Range: `1`-`1500` - Default value: `180`\n"
                },
                "hostReachabilityProtocol": {
                    "type": "string",
                    "description": "Host Reachability Protocol. - Choices: `Flood-and-learn`, `bgp`, `controller`, `openflow`, `openflowIR` - Default value:\n`Flood-and-learn`\n"
                },
                "ingressReplicationProtocolBgp": {
                    "type": "boolean",
                    "description": "VxLAN Ingress Replication Protocol BGP. - Default value: `false`\n"
                },
                "multicastGroupL2": {
                    "type": "string",
                    "description": "Base multicast group address for L2. - Default value: `0.0.0.0`\n"
                },
                "multicastGroupL3": {
                    "type": "string",
                    "description": "Base multicast group address for L3. - Default value: `0.0.0.0`\n"
                },
                "multisiteSourceInterface": {
                    "type": "string",
                    "description": "Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`. - Default\nvalue: `unspecified`\n"
                },
                "sourceInterface": {
                    "type": "string",
                    "description": "Source Interface associated with the NVE. Must match first field in the output of `show int brief`. - Default value:\n`unspecified`\n"
                },
                "suppressArp": {
                    "type": "boolean",
                    "description": "Suppress ARP. - Default value: `false`\n"
                },
                "suppressMacRoute": {
                    "type": "boolean",
                    "description": "Suppress MAC Route. - Default value: `false`\n"
                }
            },
            "required": [
                "adminState",
                "advertiseVirtualMac",
                "holdDownTime",
                "hostReachabilityProtocol",
                "ingressReplicationProtocolBgp",
                "multicastGroupL2",
                "multicastGroupL3",
                "multisiteSourceInterface",
                "sourceInterface",
                "suppressArp",
                "suppressMacRoute"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "advertiseVirtualMac": {
                    "type": "boolean",
                    "description": "Enable or disable Virtual MAC Advertisement in VPC mode. - Default value: `false`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "holdDownTime": {
                    "type": "integer",
                    "description": "Hold Down Time. - Range: `1`-`1500` - Default value: `180`\n"
                },
                "hostReachabilityProtocol": {
                    "type": "string",
                    "description": "Host Reachability Protocol. - Choices: `Flood-and-learn`, `bgp`, `controller`, `openflow`, `openflowIR` - Default value:\n`Flood-and-learn`\n"
                },
                "ingressReplicationProtocolBgp": {
                    "type": "boolean",
                    "description": "VxLAN Ingress Replication Protocol BGP. - Default value: `false`\n"
                },
                "multicastGroupL2": {
                    "type": "string",
                    "description": "Base multicast group address for L2. - Default value: `0.0.0.0`\n"
                },
                "multicastGroupL3": {
                    "type": "string",
                    "description": "Base multicast group address for L3. - Default value: `0.0.0.0`\n"
                },
                "multisiteSourceInterface": {
                    "type": "string",
                    "description": "Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`. - Default\nvalue: `unspecified`\n"
                },
                "sourceInterface": {
                    "type": "string",
                    "description": "Source Interface associated with the NVE. Must match first field in the output of `show int brief`. - Default value:\n`unspecified`\n"
                },
                "suppressArp": {
                    "type": "boolean",
                    "description": "Suppress ARP. - Default value: `false`\n"
                },
                "suppressMacRoute": {
                    "type": "boolean",
                    "description": "Suppress MAC Route. - Default value: `false`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NveInterface resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "advertiseVirtualMac": {
                        "type": "boolean",
                        "description": "Enable or disable Virtual MAC Advertisement in VPC mode. - Default value: `false`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "holdDownTime": {
                        "type": "integer",
                        "description": "Hold Down Time. - Range: `1`-`1500` - Default value: `180`\n"
                    },
                    "hostReachabilityProtocol": {
                        "type": "string",
                        "description": "Host Reachability Protocol. - Choices: `Flood-and-learn`, `bgp`, `controller`, `openflow`, `openflowIR` - Default value:\n`Flood-and-learn`\n"
                    },
                    "ingressReplicationProtocolBgp": {
                        "type": "boolean",
                        "description": "VxLAN Ingress Replication Protocol BGP. - Default value: `false`\n"
                    },
                    "multicastGroupL2": {
                        "type": "string",
                        "description": "Base multicast group address for L2. - Default value: `0.0.0.0`\n"
                    },
                    "multicastGroupL3": {
                        "type": "string",
                        "description": "Base multicast group address for L3. - Default value: `0.0.0.0`\n"
                    },
                    "multisiteSourceInterface": {
                        "type": "string",
                        "description": "Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`. - Default\nvalue: `unspecified`\n"
                    },
                    "sourceInterface": {
                        "type": "string",
                        "description": "Source Interface associated with the NVE. Must match first field in the output of `show int brief`. - Default value:\n`unspecified`\n"
                    },
                    "suppressArp": {
                        "type": "boolean",
                        "description": "Suppress ARP. - Default value: `false`\n"
                    },
                    "suppressMacRoute": {
                        "type": "boolean",
                        "description": "Suppress MAC Route. - Default value: `false`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/nveVni:NveVni": {
            "properties": {
                "associateVrf": {
                    "type": "boolean",
                    "description": "Configures VNI as L3 VNI. - Default value: `false`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "multicastGroup": {
                    "type": "string",
                    "description": "Configures multicast group address for VNI. - Default value: `0.0.0.0`\n"
                },
                "multisiteIngressReplication": {
                    "type": "string",
                    "description": "Enable or disable Multisite Ingress Replication for VNI(s). - Choices: `enable`, `disable`, `enableOptimized` - Default\nvalue: `disable`\n"
                },
                "suppressArp": {
                    "type": "string",
                    "description": "Enable or disable ARP suppression for VNI(s). - Choices: `enabled`, `disabled`, `off` - Default value: `off`\n"
                },
                "vni": {
                    "type": "integer",
                    "description": "Virtual Network ID. - Range: `1`-`16777214`\n"
                }
            },
            "required": [
                "associateVrf",
                "multicastGroup",
                "multisiteIngressReplication",
                "suppressArp",
                "vni"
            ],
            "inputProperties": {
                "associateVrf": {
                    "type": "boolean",
                    "description": "Configures VNI as L3 VNI. - Default value: `false`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "multicastGroup": {
                    "type": "string",
                    "description": "Configures multicast group address for VNI. - Default value: `0.0.0.0`\n"
                },
                "multisiteIngressReplication": {
                    "type": "string",
                    "description": "Enable or disable Multisite Ingress Replication for VNI(s). - Choices: `enable`, `disable`, `enableOptimized` - Default\nvalue: `disable`\n"
                },
                "suppressArp": {
                    "type": "string",
                    "description": "Enable or disable ARP suppression for VNI(s). - Choices: `enabled`, `disabled`, `off` - Default value: `off`\n"
                },
                "vni": {
                    "type": "integer",
                    "description": "Virtual Network ID. - Range: `1`-`16777214`\n"
                }
            },
            "requiredInputs": [
                "vni"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NveVni resources.\n",
                "properties": {
                    "associateVrf": {
                        "type": "boolean",
                        "description": "Configures VNI as L3 VNI. - Default value: `false`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "multicastGroup": {
                        "type": "string",
                        "description": "Configures multicast group address for VNI. - Default value: `0.0.0.0`\n"
                    },
                    "multisiteIngressReplication": {
                        "type": "string",
                        "description": "Enable or disable Multisite Ingress Replication for VNI(s). - Choices: `enable`, `disable`, `enableOptimized` - Default\nvalue: `disable`\n"
                    },
                    "suppressArp": {
                        "type": "string",
                        "description": "Enable or disable ARP suppression for VNI(s). - Choices: `enabled`, `disabled`, `off` - Default value: `off`\n"
                    },
                    "vni": {
                        "type": "integer",
                        "description": "Virtual Network ID. - Range: `1`-`16777214`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/nveVniContainer:NveVniContainer": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NveVniContainer resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/nveVniIngressReplication:NveVniIngressReplication": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Configure VxLAN Ingress Replication mode. - Choices: `bgp`, `unknown`, `static` - Default value: `unknown`\n"
                },
                "vni": {
                    "type": "integer",
                    "description": "Virtual Network ID. - Range: `1`-`16777214`\n"
                }
            },
            "required": [
                "protocol",
                "vni"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Configure VxLAN Ingress Replication mode. - Choices: `bgp`, `unknown`, `static` - Default value: `unknown`\n"
                },
                "vni": {
                    "type": "integer",
                    "description": "Virtual Network ID. - Range: `1`-`16777214`\n"
                }
            },
            "requiredInputs": [
                "vni"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NveVniIngressReplication resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Configure VxLAN Ingress Replication mode. - Choices: `bgp`, `unknown`, `static` - Default value: `unknown`\n"
                    },
                    "vni": {
                        "type": "integer",
                        "description": "Virtual Network ID. - Range: `1`-`16777214`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ospf:Ospf": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ospf resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ospfArea:OspfArea": {
            "properties": {
                "areaId": {
                    "type": "string",
                    "description": "Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`\n"
                },
                "authenticationType": {
                    "type": "string",
                    "description": "Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`\n"
                },
                "cost": {
                    "type": "integer",
                    "description": "Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types. - Range: `0`-`16777215` - Default\nvalue: `1`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Area type. - Choices: `regular`, `stub`, `nssa` - Default value: `regular`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "areaId",
                "authenticationType",
                "cost",
                "instanceName",
                "type",
                "vrfName"
            ],
            "inputProperties": {
                "areaId": {
                    "type": "string",
                    "description": "Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`\n"
                },
                "authenticationType": {
                    "type": "string",
                    "description": "Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`\n"
                },
                "cost": {
                    "type": "integer",
                    "description": "Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types. - Range: `0`-`16777215` - Default\nvalue: `1`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Area type. - Choices: `regular`, `stub`, `nssa` - Default value: `regular`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "areaId",
                "instanceName",
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OspfArea resources.\n",
                "properties": {
                    "areaId": {
                        "type": "string",
                        "description": "Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`\n"
                    },
                    "authenticationType": {
                        "type": "string",
                        "description": "Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`\n"
                    },
                    "cost": {
                        "type": "integer",
                        "description": "Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types. - Range: `0`-`16777215` - Default\nvalue: `1`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Area type. - Choices: `regular`, `stub`, `nssa` - Default value: `regular`\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ospfAuthentication:OspfAuthentication": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key used for authentication.\n"
                },
                "keyId": {
                    "type": "integer",
                    "description": "Key ID used for authentication. - Range: `0`-`255` - Default value: `0`\n"
                },
                "keySecureMode": {
                    "type": "boolean",
                    "description": "Encrypted authentication key or plain text key. - Default value: `false`\n"
                },
                "keychain": {
                    "type": "string",
                    "description": "Authentication keychain.\n"
                },
                "md5Key": {
                    "type": "string",
                    "description": "Key used for md5 authentication.\n"
                },
                "md5KeySecureMode": {
                    "type": "boolean",
                    "description": "Encrypted authentication md5 key or plain text key. - Default value: `false`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "instanceName",
                "interfaceId",
                "keyId",
                "keySecureMode",
                "md5KeySecureMode",
                "type",
                "vrfName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key used for authentication.\n"
                },
                "keyId": {
                    "type": "integer",
                    "description": "Key ID used for authentication. - Range: `0`-`255` - Default value: `0`\n"
                },
                "keySecureMode": {
                    "type": "boolean",
                    "description": "Encrypted authentication key or plain text key. - Default value: `false`\n"
                },
                "keychain": {
                    "type": "string",
                    "description": "Authentication keychain.\n"
                },
                "md5Key": {
                    "type": "string",
                    "description": "Key used for md5 authentication.\n"
                },
                "md5KeySecureMode": {
                    "type": "boolean",
                    "description": "Encrypted authentication md5 key or plain text key. - Default value: `false`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "instanceName",
                "interfaceId",
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OspfAuthentication resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key used for authentication.\n"
                    },
                    "keyId": {
                        "type": "integer",
                        "description": "Key ID used for authentication. - Range: `0`-`255` - Default value: `0`\n"
                    },
                    "keySecureMode": {
                        "type": "boolean",
                        "description": "Encrypted authentication key or plain text key. - Default value: `false`\n"
                    },
                    "keychain": {
                        "type": "string",
                        "description": "Authentication keychain.\n"
                    },
                    "md5Key": {
                        "type": "string",
                        "description": "Key used for md5 authentication.\n"
                    },
                    "md5KeySecureMode": {
                        "type": "boolean",
                        "description": "Encrypted authentication md5 key or plain text key. - Default value: `false`\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ospfInstance:OspfInstance": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                }
            },
            "required": [
                "adminState",
                "name"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OspfInstance resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ospfInterface:OspfInterface": {
            "properties": {
                "advertiseSecondaries": {
                    "type": "boolean",
                    "description": "Advertise secondary IP addresses. - Default value: `true`\n"
                },
                "area": {
                    "type": "string",
                    "description": "Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`\n"
                },
                "bfd": {
                    "type": "string",
                    "description": "Bidirectional Forwarding Detection (BFD). - Choices: `unspecified`, `enabled`, `disabled` - Default value: `unspecified`\n"
                },
                "cost": {
                    "type": "integer",
                    "description": "Specifies the cost of interface. - Range: `0`-`65535` - Default value: `0`\n"
                },
                "deadInterval": {
                    "type": "integer",
                    "description": "Dead interval, interval after which router declares that neighbor as down. - Range: `0`-`65535` - Default value: `0`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helloInterval": {
                    "type": "integer",
                    "description": "Hello interval, interval between hello packets that OSPF sends on the interface. - Range: `0`-`65535` - Default value:\n`10`\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "Network type. - Choices: `unspecified`, `p2p`, `bcast` - Default value: `unspecified`\n"
                },
                "passive": {
                    "type": "string",
                    "description": "Passive interface control. Interface can be configured as passive or non-passive. - Choices: `unspecified`, `enabled`,\n`disabled` - Default value: `unspecified`\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority, used in determining the designated router on this network. - Range: `0`-`255` - Default value: `1`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "advertiseSecondaries",
                "area",
                "bfd",
                "cost",
                "deadInterval",
                "helloInterval",
                "instanceName",
                "interfaceId",
                "networkType",
                "passive",
                "priority",
                "vrfName"
            ],
            "inputProperties": {
                "advertiseSecondaries": {
                    "type": "boolean",
                    "description": "Advertise secondary IP addresses. - Default value: `true`\n"
                },
                "area": {
                    "type": "string",
                    "description": "Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`\n"
                },
                "bfd": {
                    "type": "string",
                    "description": "Bidirectional Forwarding Detection (BFD). - Choices: `unspecified`, `enabled`, `disabled` - Default value: `unspecified`\n"
                },
                "cost": {
                    "type": "integer",
                    "description": "Specifies the cost of interface. - Range: `0`-`65535` - Default value: `0`\n"
                },
                "deadInterval": {
                    "type": "integer",
                    "description": "Dead interval, interval after which router declares that neighbor as down. - Range: `0`-`65535` - Default value: `0`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helloInterval": {
                    "type": "integer",
                    "description": "Hello interval, interval between hello packets that OSPF sends on the interface. - Range: `0`-`65535` - Default value:\n`10`\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "Network type. - Choices: `unspecified`, `p2p`, `bcast` - Default value: `unspecified`\n"
                },
                "passive": {
                    "type": "string",
                    "description": "Passive interface control. Interface can be configured as passive or non-passive. - Choices: `unspecified`, `enabled`,\n`disabled` - Default value: `unspecified`\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority, used in determining the designated router on this network. - Range: `0`-`255` - Default value: `1`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "instanceName",
                "interfaceId",
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OspfInterface resources.\n",
                "properties": {
                    "advertiseSecondaries": {
                        "type": "boolean",
                        "description": "Advertise secondary IP addresses. - Default value: `true`\n"
                    },
                    "area": {
                        "type": "string",
                        "description": "Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`\n"
                    },
                    "bfd": {
                        "type": "string",
                        "description": "Bidirectional Forwarding Detection (BFD). - Choices: `unspecified`, `enabled`, `disabled` - Default value: `unspecified`\n"
                    },
                    "cost": {
                        "type": "integer",
                        "description": "Specifies the cost of interface. - Range: `0`-`65535` - Default value: `0`\n"
                    },
                    "deadInterval": {
                        "type": "integer",
                        "description": "Dead interval, interval after which router declares that neighbor as down. - Range: `0`-`65535` - Default value: `0`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helloInterval": {
                        "type": "integer",
                        "description": "Hello interval, interval between hello packets that OSPF sends on the interface. - Range: `0`-`65535` - Default value:\n`10`\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "networkType": {
                        "type": "string",
                        "description": "Network type. - Choices: `unspecified`, `p2p`, `bcast` - Default value: `unspecified`\n"
                    },
                    "passive": {
                        "type": "string",
                        "description": "Passive interface control. Interface can be configured as passive or non-passive. - Choices: `unspecified`, `enabled`,\n`disabled` - Default value: `unspecified`\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority, used in determining the designated router on this network. - Range: `0`-`255` - Default value: `1`\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ospfVrf:OspfVrf": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "bandwidthReference": {
                    "type": "integer",
                    "description": "Bandwidth reference value. - Range: `0`-`4294967295` - Default value: `40000`\n"
                },
                "banwidthReferenceUnit": {
                    "type": "string",
                    "description": "Bandwidth reference unit. - Choices: `mbps`, `gbps` - Default value: `mbps`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "distance": {
                    "type": "integer",
                    "description": "Administrative distance preference. - Range: `1`-`255` - Default value: `110`\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                },
                "routerId": {
                    "type": "string",
                    "description": "Router ID. - Default value: `0.0.0.0`\n"
                }
            },
            "required": [
                "adminState",
                "bandwidthReference",
                "banwidthReferenceUnit",
                "distance",
                "instanceName",
                "name",
                "routerId"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "bandwidthReference": {
                    "type": "integer",
                    "description": "Bandwidth reference value. - Range: `0`-`4294967295` - Default value: `40000`\n"
                },
                "banwidthReferenceUnit": {
                    "type": "string",
                    "description": "Bandwidth reference unit. - Choices: `mbps`, `gbps` - Default value: `mbps`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "distance": {
                    "type": "integer",
                    "description": "Administrative distance preference. - Range: `1`-`255` - Default value: `110`\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                },
                "routerId": {
                    "type": "string",
                    "description": "Router ID. - Default value: `0.0.0.0`\n"
                }
            },
            "requiredInputs": [
                "instanceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OspfVrf resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "bandwidthReference": {
                        "type": "integer",
                        "description": "Bandwidth reference value. - Range: `0`-`4294967295` - Default value: `40000`\n"
                    },
                    "banwidthReferenceUnit": {
                        "type": "string",
                        "description": "Bandwidth reference unit. - Choices: `mbps`, `gbps` - Default value: `mbps`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "distance": {
                        "type": "integer",
                        "description": "Administrative distance preference. - Range: `1`-`255` - Default value: `110`\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    },
                    "routerId": {
                        "type": "string",
                        "description": "Router ID. - Default value: `0.0.0.0`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/physicalInterface:PhysicalInterface": {
            "properties": {
                "accessVlan": {
                    "type": "string",
                    "description": "Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                },
                "adminState": {
                    "type": "string",
                    "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "autoNegotiation": {
                    "type": "string",
                    "description": "Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`\n"
                },
                "bandwidth": {
                    "type": "integer",
                    "description": "The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default\nvalue: `0`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "duplex": {
                    "type": "string",
                    "description": "Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`\n"
                },
                "fecMode": {
                    "type": "string",
                    "description": "FEC mode. - Choices: `fc-fec`, `rs-fec`, `fec-off`, `auto`, `rs-ieee`, `rs-cons16`, `kp-fec` - Default value: `auto`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "layer": {
                    "type": "string",
                    "description": "Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`\n"
                },
                "linkDebounceDown": {
                    "type": "integer",
                    "description": "Administrative port link debounce interval. - Range: `0`-`20000` - Default value: `100`\n"
                },
                "linkDebounceUp": {
                    "type": "integer",
                    "description": "Link Debounce Interval - LinkUp Event. - Range: `0`-`20000` - Default value: `0`\n"
                },
                "linkLogging": {
                    "type": "string",
                    "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "medium": {
                    "type": "string",
                    "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,\n`trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                },
                "nativeVlan": {
                    "type": "string",
                    "description": "Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                },
                "speed": {
                    "type": "string",
                    "description": "Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,\n`100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:\n`auto`\n"
                },
                "speedGroup": {
                    "type": "string",
                    "description": "Speed group. - Choices: `unknown`, `1000`, `10000`, `40000`, `auto`, `25000` - Default value: `auto`\n"
                },
                "trunkVlans": {
                    "type": "string",
                    "description": "List of trunk VLANs. - Default value: `1-4094`\n"
                },
                "uniDirectionalEthernet": {
                    "type": "string",
                    "description": "UDE (Uni-Directional Ethernet). - Choices: `disable`, `send-only`, `receive-only` - Default value: `disable`\n"
                },
                "userConfiguredFlags": {
                    "type": "string",
                    "description": "Port User Config Flags.\n"
                }
            },
            "required": [
                "accessVlan",
                "adminState",
                "autoNegotiation",
                "bandwidth",
                "delay",
                "duplex",
                "fecMode",
                "interfaceId",
                "layer",
                "linkDebounceDown",
                "linkDebounceUp",
                "linkLogging",
                "medium",
                "mode",
                "mtu",
                "nativeVlan",
                "speed",
                "speedGroup",
                "trunkVlans",
                "uniDirectionalEthernet"
            ],
            "inputProperties": {
                "accessVlan": {
                    "type": "string",
                    "description": "Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                },
                "adminState": {
                    "type": "string",
                    "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "autoNegotiation": {
                    "type": "string",
                    "description": "Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`\n"
                },
                "bandwidth": {
                    "type": "integer",
                    "description": "The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default\nvalue: `0`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "duplex": {
                    "type": "string",
                    "description": "Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`\n"
                },
                "fecMode": {
                    "type": "string",
                    "description": "FEC mode. - Choices: `fc-fec`, `rs-fec`, `fec-off`, `auto`, `rs-ieee`, `rs-cons16`, `kp-fec` - Default value: `auto`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "layer": {
                    "type": "string",
                    "description": "Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`\n"
                },
                "linkDebounceDown": {
                    "type": "integer",
                    "description": "Administrative port link debounce interval. - Range: `0`-`20000` - Default value: `100`\n"
                },
                "linkDebounceUp": {
                    "type": "integer",
                    "description": "Link Debounce Interval - LinkUp Event. - Range: `0`-`20000` - Default value: `0`\n"
                },
                "linkLogging": {
                    "type": "string",
                    "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "medium": {
                    "type": "string",
                    "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,\n`trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                },
                "nativeVlan": {
                    "type": "string",
                    "description": "Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                },
                "speed": {
                    "type": "string",
                    "description": "Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,\n`100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:\n`auto`\n"
                },
                "speedGroup": {
                    "type": "string",
                    "description": "Speed group. - Choices: `unknown`, `1000`, `10000`, `40000`, `auto`, `25000` - Default value: `auto`\n"
                },
                "trunkVlans": {
                    "type": "string",
                    "description": "List of trunk VLANs. - Default value: `1-4094`\n"
                },
                "uniDirectionalEthernet": {
                    "type": "string",
                    "description": "UDE (Uni-Directional Ethernet). - Choices: `disable`, `send-only`, `receive-only` - Default value: `disable`\n"
                },
                "userConfiguredFlags": {
                    "type": "string",
                    "description": "Port User Config Flags.\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PhysicalInterface resources.\n",
                "properties": {
                    "accessVlan": {
                        "type": "string",
                        "description": "Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                    },
                    "adminState": {
                        "type": "string",
                        "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                    },
                    "autoNegotiation": {
                        "type": "string",
                        "description": "Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`\n"
                    },
                    "bandwidth": {
                        "type": "integer",
                        "description": "The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default\nvalue: `0`\n"
                    },
                    "delay": {
                        "type": "integer",
                        "description": "The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "duplex": {
                        "type": "string",
                        "description": "Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`\n"
                    },
                    "fecMode": {
                        "type": "string",
                        "description": "FEC mode. - Choices: `fc-fec`, `rs-fec`, `fec-off`, `auto`, `rs-ieee`, `rs-cons16`, `kp-fec` - Default value: `auto`\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "layer": {
                        "type": "string",
                        "description": "Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`\n"
                    },
                    "linkDebounceDown": {
                        "type": "integer",
                        "description": "Administrative port link debounce interval. - Range: `0`-`20000` - Default value: `100`\n"
                    },
                    "linkDebounceUp": {
                        "type": "integer",
                        "description": "Link Debounce Interval - LinkUp Event. - Range: `0`-`20000` - Default value: `0`\n"
                    },
                    "linkLogging": {
                        "type": "string",
                        "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                    },
                    "medium": {
                        "type": "string",
                        "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,\n`trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                    },
                    "nativeVlan": {
                        "type": "string",
                        "description": "Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                    },
                    "speed": {
                        "type": "string",
                        "description": "Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,\n`100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:\n`auto`\n"
                    },
                    "speedGroup": {
                        "type": "string",
                        "description": "Speed group. - Choices: `unknown`, `1000`, `10000`, `40000`, `auto`, `25000` - Default value: `auto`\n"
                    },
                    "trunkVlans": {
                        "type": "string",
                        "description": "List of trunk VLANs. - Default value: `1-4094`\n"
                    },
                    "uniDirectionalEthernet": {
                        "type": "string",
                        "description": "UDE (Uni-Directional Ethernet). - Choices: `disable`, `send-only`, `receive-only` - Default value: `disable`\n"
                    },
                    "userConfiguredFlags": {
                        "type": "string",
                        "description": "Port User Config Flags.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/physicalInterfaceVrf:PhysicalInterfaceVrf": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "required": [
                "interfaceId",
                "vrfDn"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "vrfDn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PhysicalInterfaceVrf resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "vrfDn": {
                        "type": "string",
                        "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/pim:Pim": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Pim resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/pimAnycastRp:PimAnycastRp": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "localInterface": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "sourceInterface": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "vrfName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "localInterface": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "sourceInterface": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimAnycastRp resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "localInterface": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "sourceInterface": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/pimAnycastRpPeer:PimAnycastRpPeer": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Anycast RP address.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "rpSetAddress": {
                    "type": "string",
                    "description": "RP set address.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "rpSetAddress",
                "vrfName"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Anycast RP address.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "rpSetAddress": {
                    "type": "string",
                    "description": "RP set address.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "rpSetAddress",
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimAnycastRpPeer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Anycast RP address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "rpSetAddress": {
                        "type": "string",
                        "description": "RP set address.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/pimInstance:PimInstance": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimInstance resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/pimInterface:PimInterface": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "bfd": {
                    "type": "string",
                    "description": "BFD. - Choices: `none`, `enabled`, `disabled` - Default value: `none`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "drPriority": {
                    "type": "integer",
                    "description": "Designated Router priority level. - Range: `1`-`4294967295` - Default value: `1`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "passive": {
                    "type": "boolean",
                    "description": "Passive interface. - Default value: `false`\n"
                },
                "sparseMode": {
                    "type": "boolean",
                    "description": "Sparse mode. - Default value: `false`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "adminState",
                "bfd",
                "drPriority",
                "interfaceId",
                "passive",
                "sparseMode",
                "vrfName"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "bfd": {
                    "type": "string",
                    "description": "BFD. - Choices: `none`, `enabled`, `disabled` - Default value: `none`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "drPriority": {
                    "type": "integer",
                    "description": "Designated Router priority level. - Range: `1`-`4294967295` - Default value: `1`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "passive": {
                    "type": "boolean",
                    "description": "Passive interface. - Default value: `false`\n"
                },
                "sparseMode": {
                    "type": "boolean",
                    "description": "Sparse mode. - Default value: `false`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimInterface resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "bfd": {
                        "type": "string",
                        "description": "BFD. - Choices: `none`, `enabled`, `disabled` - Default value: `none`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "drPriority": {
                        "type": "integer",
                        "description": "Designated Router priority level. - Range: `1`-`4294967295` - Default value: `1`\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "passive": {
                        "type": "boolean",
                        "description": "Passive interface. - Default value: `false`\n"
                    },
                    "sparseMode": {
                        "type": "boolean",
                        "description": "Sparse mode. - Default value: `false`\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/pimSsmPolicy:PimSsmPolicy": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy name.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "name",
                "vrfName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy name.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimSsmPolicy resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy name.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/pimSsmRange:PimSsmRange": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "groupList1": {
                    "type": "string",
                    "description": "Group list 1. - Default value: `0.0.0.0`\n"
                },
                "groupList2": {
                    "type": "string",
                    "description": "Group list 2. - Default value: `0.0.0.0`\n"
                },
                "groupList3": {
                    "type": "string",
                    "description": "Group list 3. - Default value: `0.0.0.0`\n"
                },
                "groupList4": {
                    "type": "string",
                    "description": "Group list 4. - Default value: `0.0.0.0`\n"
                },
                "prefixList": {
                    "type": "string",
                    "description": "Prefix list name.\n"
                },
                "routeMap": {
                    "type": "string",
                    "description": "Route map name.\n"
                },
                "ssmNone": {
                    "type": "boolean",
                    "description": "Exclude standard SSM range (232.0.0.0/8). - Default value: `false`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "groupList1",
                "groupList2",
                "groupList3",
                "groupList4",
                "ssmNone",
                "vrfName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "groupList1": {
                    "type": "string",
                    "description": "Group list 1. - Default value: `0.0.0.0`\n"
                },
                "groupList2": {
                    "type": "string",
                    "description": "Group list 2. - Default value: `0.0.0.0`\n"
                },
                "groupList3": {
                    "type": "string",
                    "description": "Group list 3. - Default value: `0.0.0.0`\n"
                },
                "groupList4": {
                    "type": "string",
                    "description": "Group list 4. - Default value: `0.0.0.0`\n"
                },
                "prefixList": {
                    "type": "string",
                    "description": "Prefix list name.\n"
                },
                "routeMap": {
                    "type": "string",
                    "description": "Route map name.\n"
                },
                "ssmNone": {
                    "type": "boolean",
                    "description": "Exclude standard SSM range (232.0.0.0/8). - Default value: `false`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimSsmRange resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "groupList1": {
                        "type": "string",
                        "description": "Group list 1. - Default value: `0.0.0.0`\n"
                    },
                    "groupList2": {
                        "type": "string",
                        "description": "Group list 2. - Default value: `0.0.0.0`\n"
                    },
                    "groupList3": {
                        "type": "string",
                        "description": "Group list 3. - Default value: `0.0.0.0`\n"
                    },
                    "groupList4": {
                        "type": "string",
                        "description": "Group list 4. - Default value: `0.0.0.0`\n"
                    },
                    "prefixList": {
                        "type": "string",
                        "description": "Prefix list name.\n"
                    },
                    "routeMap": {
                        "type": "string",
                        "description": "Route map name.\n"
                    },
                    "ssmNone": {
                        "type": "boolean",
                        "description": "Exclude standard SSM range (232.0.0.0/8). - Default value: `false`\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/pimStaticRp:PimStaticRp": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Address.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "vrfName"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Address.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimStaticRp resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/pimStaticRpGroupList:PimStaticRpGroupList": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Group list address information.\n"
                },
                "bidir": {
                    "type": "boolean",
                    "description": "Flag to treat Group Ranges as BiDir. - Default value: `false`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "override": {
                    "type": "boolean",
                    "description": "Flag to override RP preference to use Static over Dynamic RP. - Default value: `false`\n"
                },
                "rpAddress": {
                    "type": "string",
                    "description": "RP address.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "bidir",
                "override",
                "rpAddress",
                "vrfName"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Group list address information.\n"
                },
                "bidir": {
                    "type": "boolean",
                    "description": "Flag to treat Group Ranges as BiDir. - Default value: `false`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "override": {
                    "type": "boolean",
                    "description": "Flag to override RP preference to use Static over Dynamic RP. - Default value: `false`\n"
                },
                "rpAddress": {
                    "type": "string",
                    "description": "RP address.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "rpAddress",
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimStaticRpGroupList resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Group list address information.\n"
                    },
                    "bidir": {
                        "type": "boolean",
                        "description": "Flag to treat Group Ranges as BiDir. - Default value: `false`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "override": {
                        "type": "boolean",
                        "description": "Flag to override RP preference to use Static over Dynamic RP. - Default value: `false`\n"
                    },
                    "rpAddress": {
                        "type": "string",
                        "description": "RP address.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/pimStaticRpPolicy:PimStaticRpPolicy": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy name.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "name",
                "vrfName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy name.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimStaticRpPolicy resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy name.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/pimVrf:PimVrf": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "bfd": {
                    "type": "boolean",
                    "description": "BFD. - Default value: `false`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "adminState",
                "bfd",
                "name"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "bfd": {
                    "type": "boolean",
                    "description": "BFD. - Default value: `false`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimVrf resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "bfd": {
                        "type": "boolean",
                        "description": "BFD. - Default value: `false`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/portChannelInterface:PortChannelInterface": {
            "properties": {
                "accessVlan": {
                    "type": "string",
                    "description": "Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                },
                "adminState": {
                    "type": "string",
                    "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "autoNegotiation": {
                    "type": "string",
                    "description": "Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`\n"
                },
                "bandwidth": {
                    "type": "integer",
                    "description": "The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default\nvalue: `0`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "duplex": {
                    "type": "string",
                    "description": "Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                },
                "layer": {
                    "type": "string",
                    "description": "Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`\n"
                },
                "linkLogging": {
                    "type": "string",
                    "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "maximumLinks": {
                    "type": "integer",
                    "description": "Maximum links. - Range: `1`-`32` - Default value: `32`\n"
                },
                "medium": {
                    "type": "string",
                    "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                },
                "minimumLinks": {
                    "type": "integer",
                    "description": "Minimum links. - Range: `1`-`32` - Default value: `1`\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,\n`trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                },
                "nativeVlan": {
                    "type": "string",
                    "description": "Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                },
                "portChannelMode": {
                    "type": "string",
                    "description": "The aggregated interface protocol channel mode. - Choices: `on`, `static`, `active`, `passive`, `mac-pin` - Default\nvalue: `on`\n"
                },
                "speed": {
                    "type": "string",
                    "description": "Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,\n`100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:\n`auto`\n"
                },
                "suspendIndividual": {
                    "type": "string",
                    "description": "Suspend Individual Port. - Choices: `enable`, `disable` - Default value: `enable`\n"
                },
                "trunkVlans": {
                    "type": "string",
                    "description": "List of trunk VLANs. - Default value: `1-4094`\n"
                },
                "userConfiguredFlags": {
                    "type": "string",
                    "description": "Port User Config Flags.\n"
                }
            },
            "required": [
                "accessVlan",
                "adminState",
                "autoNegotiation",
                "bandwidth",
                "delay",
                "duplex",
                "interfaceId",
                "layer",
                "linkLogging",
                "maximumLinks",
                "medium",
                "minimumLinks",
                "mode",
                "mtu",
                "nativeVlan",
                "portChannelMode",
                "speed",
                "suspendIndividual",
                "trunkVlans"
            ],
            "inputProperties": {
                "accessVlan": {
                    "type": "string",
                    "description": "Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                },
                "adminState": {
                    "type": "string",
                    "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "autoNegotiation": {
                    "type": "string",
                    "description": "Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`\n"
                },
                "bandwidth": {
                    "type": "integer",
                    "description": "The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default\nvalue: `0`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "duplex": {
                    "type": "string",
                    "description": "Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                },
                "layer": {
                    "type": "string",
                    "description": "Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`\n"
                },
                "linkLogging": {
                    "type": "string",
                    "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "maximumLinks": {
                    "type": "integer",
                    "description": "Maximum links. - Range: `1`-`32` - Default value: `32`\n"
                },
                "medium": {
                    "type": "string",
                    "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                },
                "minimumLinks": {
                    "type": "integer",
                    "description": "Minimum links. - Range: `1`-`32` - Default value: `1`\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,\n`trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                },
                "nativeVlan": {
                    "type": "string",
                    "description": "Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                },
                "portChannelMode": {
                    "type": "string",
                    "description": "The aggregated interface protocol channel mode. - Choices: `on`, `static`, `active`, `passive`, `mac-pin` - Default\nvalue: `on`\n"
                },
                "speed": {
                    "type": "string",
                    "description": "Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,\n`100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:\n`auto`\n"
                },
                "suspendIndividual": {
                    "type": "string",
                    "description": "Suspend Individual Port. - Choices: `enable`, `disable` - Default value: `enable`\n"
                },
                "trunkVlans": {
                    "type": "string",
                    "description": "List of trunk VLANs. - Default value: `1-4094`\n"
                },
                "userConfiguredFlags": {
                    "type": "string",
                    "description": "Port User Config Flags.\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PortChannelInterface resources.\n",
                "properties": {
                    "accessVlan": {
                        "type": "string",
                        "description": "Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                    },
                    "adminState": {
                        "type": "string",
                        "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                    },
                    "autoNegotiation": {
                        "type": "string",
                        "description": "Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`\n"
                    },
                    "bandwidth": {
                        "type": "integer",
                        "description": "The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default\nvalue: `0`\n"
                    },
                    "delay": {
                        "type": "integer",
                        "description": "The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "duplex": {
                        "type": "string",
                        "description": "Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                    },
                    "layer": {
                        "type": "string",
                        "description": "Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`\n"
                    },
                    "linkLogging": {
                        "type": "string",
                        "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                    },
                    "maximumLinks": {
                        "type": "integer",
                        "description": "Maximum links. - Range: `1`-`32` - Default value: `32`\n"
                    },
                    "medium": {
                        "type": "string",
                        "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                    },
                    "minimumLinks": {
                        "type": "integer",
                        "description": "Minimum links. - Range: `1`-`32` - Default value: `1`\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,\n`trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                    },
                    "nativeVlan": {
                        "type": "string",
                        "description": "Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                    },
                    "portChannelMode": {
                        "type": "string",
                        "description": "The aggregated interface protocol channel mode. - Choices: `on`, `static`, `active`, `passive`, `mac-pin` - Default\nvalue: `on`\n"
                    },
                    "speed": {
                        "type": "string",
                        "description": "Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,\n`100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:\n`auto`\n"
                    },
                    "suspendIndividual": {
                        "type": "string",
                        "description": "Suspend Individual Port. - Choices: `enable`, `disable` - Default value: `enable`\n"
                    },
                    "trunkVlans": {
                        "type": "string",
                        "description": "List of trunk VLANs. - Default value: `1-4094`\n"
                    },
                    "userConfiguredFlags": {
                        "type": "string",
                        "description": "Port User Config Flags.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/portChannelInterfaceMember:PortChannelInterfaceMember": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceDn": {
                    "type": "string",
                    "description": "DN of interface. For example: `sys/intf/phys-[eth1/1]`.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                }
            },
            "required": [
                "interfaceDn",
                "interfaceId"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceDn": {
                    "type": "string",
                    "description": "DN of interface. For example: `sys/intf/phys-[eth1/1]`.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceDn",
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PortChannelInterfaceMember resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceDn": {
                        "type": "string",
                        "description": "DN of interface. For example: `sys/intf/phys-[eth1/1]`.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/portChannelInterfaceVrf:PortChannelInterfaceVrf": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "required": [
                "interfaceId",
                "vrfDn"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "vrfDn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PortChannelInterfaceVrf resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                    },
                    "vrfDn": {
                        "type": "string",
                        "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/queuingQosPolicyMap:QueuingQosPolicyMap": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "required": [
                "matchType",
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QueuingQosPolicyMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "matchType": {
                        "type": "string",
                        "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/queuingQosPolicyMapMatchClassMap:QueuingQosPolicyMapMatchClassMap": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "required": [
                "name",
                "policyMapName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "requiredInputs": [
                "policyMapName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QueuingQosPolicyMapMatchClassMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/queuingQosPolicyMapMatchClassMapPriority:QueuingQosPolicyMapMatchClassMapPriority": {
            "properties": {
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "level": {
                    "type": "integer",
                    "description": "Priority level. - Range: `1`-`8`\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "required": [
                "classMapName",
                "level",
                "policyMapName"
            ],
            "inputProperties": {
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "level": {
                    "type": "integer",
                    "description": "Priority level. - Range: `1`-`8`\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "requiredInputs": [
                "classMapName",
                "level",
                "policyMapName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QueuingQosPolicyMapMatchClassMapPriority resources.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "level": {
                        "type": "integer",
                        "description": "Priority level. - Range: `1`-`8`\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/queuingQosPolicyMapMatchClassMapRemainingBandwidth:QueuingQosPolicyMapMatchClassMapRemainingBandwidth": {
            "properties": {
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                },
                "value": {
                    "type": "integer",
                    "description": "Remaining bandwidth percent. - Range: `0`-`100`\n"
                }
            },
            "required": [
                "classMapName",
                "policyMapName",
                "value"
            ],
            "inputProperties": {
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                },
                "value": {
                    "type": "integer",
                    "description": "Remaining bandwidth percent. - Range: `0`-`100`\n"
                }
            },
            "requiredInputs": [
                "classMapName",
                "policyMapName",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QueuingQosPolicyMapMatchClassMapRemainingBandwidth resources.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    },
                    "value": {
                        "type": "integer",
                        "description": "Remaining bandwidth percent. - Range: `0`-`100`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/queuingQosPolicySystemOut:QueuingQosPolicySystemOut": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QueuingQosPolicySystemOut resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/queuingQosPolicySystemOutPolicyMap:QueuingQosPolicySystemOutPolicyMap": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "required": [
                "policyMapName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "requiredInputs": [
                "policyMapName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QueuingQosPolicySystemOutPolicyMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/rest:Rest": {
            "properties": {
                "childrens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/RestChildren:RestChildren"
                    },
                    "description": "List of children.\n"
                },
                "className": {
                    "type": "string",
                    "description": "Which class object is being created. (Make sure there is no colon in the classname)\n"
                },
                "content": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of key-value pairs that need to be passed to the Model object as parameters.\n"
                },
                "delete": {
                    "type": "boolean",
                    "description": "Delete object during destroy operation. Default value is `true`.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dn": {
                    "type": "string",
                    "description": "Distinguished name of object being managed including its relative name, e.g. sys/intf/phys-[eth1/1].\n"
                }
            },
            "required": [
                "className",
                "delete",
                "dn"
            ],
            "inputProperties": {
                "childrens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/RestChildren:RestChildren"
                    },
                    "description": "List of children.\n"
                },
                "className": {
                    "type": "string",
                    "description": "Which class object is being created. (Make sure there is no colon in the classname)\n"
                },
                "content": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of key-value pairs that need to be passed to the Model object as parameters.\n"
                },
                "delete": {
                    "type": "boolean",
                    "description": "Delete object during destroy operation. Default value is `true`.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dn": {
                    "type": "string",
                    "description": "Distinguished name of object being managed including its relative name, e.g. sys/intf/phys-[eth1/1].\n"
                }
            },
            "requiredInputs": [
                "className",
                "dn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Rest resources.\n",
                "properties": {
                    "childrens": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/RestChildren:RestChildren"
                        },
                        "description": "List of children.\n"
                    },
                    "className": {
                        "type": "string",
                        "description": "Which class object is being created. (Make sure there is no colon in the classname)\n"
                    },
                    "content": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of key-value pairs that need to be passed to the Model object as parameters.\n"
                    },
                    "delete": {
                        "type": "boolean",
                        "description": "Delete object during destroy operation. Default value is `true`.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dn": {
                        "type": "string",
                        "description": "Distinguished name of object being managed including its relative name, e.g. sys/intf/phys-[eth1/1].\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/routeMapRule:RouteMapRule": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Route-Map Rule name.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Route-Map Rule name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RouteMapRule resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Route-Map Rule name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/routeMapRuleEntry:RouteMapRuleEntry": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Route-Map Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                }
            },
            "required": [
                "action",
                "order",
                "ruleName"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Route-Map Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                }
            },
            "requiredInputs": [
                "order",
                "ruleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RouteMapRuleEntry resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Route-Map Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/routeMapRuleEntryMatchRoute:RouteMapRuleEntryMatchRoute": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                }
            },
            "required": [
                "order",
                "ruleName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                }
            },
            "requiredInputs": [
                "order",
                "ruleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RouteMapRuleEntryMatchRoute resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/routeMapRuleEntryMatchRoutePrefixList:RouteMapRuleEntryMatchRoutePrefixList": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "prefixListDn": {
                    "type": "string",
                    "description": "DN of Prefix List. For example: `sys/rpm/pfxlistv4-[LIST1]`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                }
            },
            "required": [
                "order",
                "prefixListDn",
                "ruleName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "prefixListDn": {
                    "type": "string",
                    "description": "DN of Prefix List. For example: `sys/rpm/pfxlistv4-[LIST1]`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                }
            },
            "requiredInputs": [
                "order",
                "prefixListDn",
                "ruleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RouteMapRuleEntryMatchRoutePrefixList resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                    },
                    "prefixListDn": {
                        "type": "string",
                        "description": "DN of Prefix List. For example: `sys/rpm/pfxlistv4-[LIST1]`\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/routeMapRuleEntrySetRegularCommunity:RouteMapRuleEntrySetRegularCommunity": {
            "properties": {
                "additive": {
                    "type": "string",
                    "description": "Option to add to an existing community. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "noCommunity": {
                    "type": "string",
                    "description": "Option to have no community attribute. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                },
                "setCriteria": {
                    "type": "string",
                    "description": "Operation on the current community. - Choices: `none`, `append`, `replace`, `igp`, `pre-bestpath` - Default value:\n`none`\n"
                }
            },
            "required": [
                "additive",
                "noCommunity",
                "order",
                "ruleName",
                "setCriteria"
            ],
            "inputProperties": {
                "additive": {
                    "type": "string",
                    "description": "Option to add to an existing community. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "noCommunity": {
                    "type": "string",
                    "description": "Option to have no community attribute. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                },
                "setCriteria": {
                    "type": "string",
                    "description": "Operation on the current community. - Choices: `none`, `append`, `replace`, `igp`, `pre-bestpath` - Default value:\n`none`\n"
                }
            },
            "requiredInputs": [
                "order",
                "ruleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RouteMapRuleEntrySetRegularCommunity resources.\n",
                "properties": {
                    "additive": {
                        "type": "string",
                        "description": "Option to add to an existing community. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "noCommunity": {
                        "type": "string",
                        "description": "Option to have no community attribute. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    },
                    "setCriteria": {
                        "type": "string",
                        "description": "Operation on the current community. - Choices: `none`, `append`, `replace`, `igp`, `pre-bestpath` - Default value:\n`none`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/routeMapRuleEntrySetRegularCommunityItem:RouteMapRuleEntrySetRegularCommunityItem": {
            "properties": {
                "community": {
                    "type": "string",
                    "description": "Set Community.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                }
            },
            "required": [
                "community",
                "order",
                "ruleName"
            ],
            "inputProperties": {
                "community": {
                    "type": "string",
                    "description": "Set Community.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                }
            },
            "requiredInputs": [
                "community",
                "order",
                "ruleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RouteMapRuleEntrySetRegularCommunityItem resources.\n",
                "properties": {
                    "community": {
                        "type": "string",
                        "description": "Set Community.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/spanningTreeInterface:SpanningTreeInterface": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "The administrative state of the object or policy. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "bpduFilter": {
                    "type": "string",
                    "description": "BPDU filter mode. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "bpduGuard": {
                    "type": "string",
                    "description": "BPDU guard mode. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "cost": {
                    "type": "integer",
                    "description": "Port path cost. - Range: `0`-`200000000` - Default value: `0`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "guard": {
                    "type": "string",
                    "description": "Guard mode. - Choices: `default`, `root`, `loop`, `none` - Default value: `default`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "linkType": {
                    "type": "string",
                    "description": "Link type. - Choices: `auto`, `p2p`, `shared` - Default value: `auto`\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Port mode. - Choices: `default`, `edge`, `network`, `normal`, `trunk` - Default value: `default`\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Port priority. - Range: `0`-`224` - Default value: `128`\n"
                }
            },
            "required": [
                "adminState",
                "bpduFilter",
                "bpduGuard",
                "cost",
                "guard",
                "interfaceId",
                "linkType",
                "mode",
                "priority"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "The administrative state of the object or policy. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "bpduFilter": {
                    "type": "string",
                    "description": "BPDU filter mode. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "bpduGuard": {
                    "type": "string",
                    "description": "BPDU guard mode. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "cost": {
                    "type": "integer",
                    "description": "Port path cost. - Range: `0`-`200000000` - Default value: `0`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "guard": {
                    "type": "string",
                    "description": "Guard mode. - Choices: `default`, `root`, `loop`, `none` - Default value: `default`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "linkType": {
                    "type": "string",
                    "description": "Link type. - Choices: `auto`, `p2p`, `shared` - Default value: `auto`\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Port mode. - Choices: `default`, `edge`, `network`, `normal`, `trunk` - Default value: `default`\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Port priority. - Range: `0`-`224` - Default value: `128`\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpanningTreeInterface resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "The administrative state of the object or policy. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "bpduFilter": {
                        "type": "string",
                        "description": "BPDU filter mode. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                    },
                    "bpduGuard": {
                        "type": "string",
                        "description": "BPDU guard mode. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                    },
                    "cost": {
                        "type": "integer",
                        "description": "Port path cost. - Range: `0`-`200000000` - Default value: `0`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "guard": {
                        "type": "string",
                        "description": "Guard mode. - Choices: `default`, `root`, `loop`, `none` - Default value: `default`\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "linkType": {
                        "type": "string",
                        "description": "Link type. - Choices: `auto`, `p2p`, `shared` - Default value: `auto`\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Port mode. - Choices: `default`, `edge`, `network`, `normal`, `trunk` - Default value: `default`\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Port priority. - Range: `0`-`224` - Default value: `128`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/subinterface:Subinterface": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "bandwidth": {
                    "type": "integer",
                    "description": "Specifies the administrative port bandwidth. - Range: `0`-`3200000000` - Default value: `0`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "Specifies the administrative port delay. - Range: `1`-`16777215` - Default value: `1`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Subinterface encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1.10`.\n"
                },
                "linkLogging": {
                    "type": "string",
                    "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "medium": {
                    "type": "string",
                    "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                }
            },
            "required": [
                "adminState",
                "bandwidth",
                "delay",
                "encap",
                "interfaceId",
                "linkLogging",
                "medium",
                "mtu"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "bandwidth": {
                    "type": "integer",
                    "description": "Specifies the administrative port bandwidth. - Range: `0`-`3200000000` - Default value: `0`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "Specifies the administrative port delay. - Range: `1`-`16777215` - Default value: `1`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Subinterface encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1.10`.\n"
                },
                "linkLogging": {
                    "type": "string",
                    "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "medium": {
                    "type": "string",
                    "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Subinterface resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `up`, `down` - Default value: `up`\n"
                    },
                    "bandwidth": {
                        "type": "integer",
                        "description": "Specifies the administrative port bandwidth. - Range: `0`-`3200000000` - Default value: `0`\n"
                    },
                    "delay": {
                        "type": "integer",
                        "description": "Specifies the administrative port delay. - Range: `1`-`16777215` - Default value: `1`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Subinterface encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1.10`.\n"
                    },
                    "linkLogging": {
                        "type": "string",
                        "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                    },
                    "medium": {
                        "type": "string",
                        "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/subinterfaceVrf:SubinterfaceVrf": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1.10`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "required": [
                "interfaceId",
                "vrfDn"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1.10`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "vrfDn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SubinterfaceVrf resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1.10`.\n"
                    },
                    "vrfDn": {
                        "type": "string",
                        "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/sviInterface:SviInterface": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "bandwidth": {
                    "type": "integer",
                    "description": "Specifies the administrative port bandwidth. - Range: `1`-`400000000` - Default value: `1000000`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "Specifies the administrative port delay. - Range: `1`-`16777215` - Default value: `1`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `vlan100`.\n"
                },
                "medium": {
                    "type": "string",
                    "description": "The administrative port medium type. - Choices: `bcast`, `p2p` - Default value: `bcast`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                }
            },
            "required": [
                "adminState",
                "bandwidth",
                "delay",
                "interfaceId",
                "medium",
                "mtu"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "bandwidth": {
                    "type": "integer",
                    "description": "Specifies the administrative port bandwidth. - Range: `1`-`400000000` - Default value: `1000000`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "Specifies the administrative port delay. - Range: `1`-`16777215` - Default value: `1`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `vlan100`.\n"
                },
                "medium": {
                    "type": "string",
                    "description": "The administrative port medium type. - Choices: `bcast`, `p2p` - Default value: `bcast`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SviInterface resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                    },
                    "bandwidth": {
                        "type": "integer",
                        "description": "Specifies the administrative port bandwidth. - Range: `1`-`400000000` - Default value: `1000000`\n"
                    },
                    "delay": {
                        "type": "integer",
                        "description": "Specifies the administrative port delay. - Range: `1`-`16777215` - Default value: `1`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `vlan100`.\n"
                    },
                    "medium": {
                        "type": "string",
                        "description": "The administrative port medium type. - Choices: `bcast`, `p2p` - Default value: `bcast`\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/sviInterfaceVrf:SviInterfaceVrf": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `vlan100`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "required": [
                "interfaceId",
                "vrfDn"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `vlan100`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "vrfDn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SviInterfaceVrf resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `vlan100`.\n"
                    },
                    "vrfDn": {
                        "type": "string",
                        "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/system:System": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The system name (hostname).\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The system name (hostname).\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering System resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The system name (hostname).\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/vpcDomain:VpcDomain": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "vPC suspend locally. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "autoRecovery": {
                    "type": "string",
                    "description": "Auto Recovery. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "autoRecoveryInterval": {
                    "type": "integer",
                    "description": "Auto Recovery interval. - Range: `60`-`3600` - Default value: `240`\n"
                },
                "delayRestoreOrphanPort": {
                    "type": "integer",
                    "description": "Delay restore for orphan ports. - Range: `0`-`300` - Default value: `0`\n"
                },
                "delayRestoreSvi": {
                    "type": "integer",
                    "description": "Delay restore for SVI. - Range: `1`-`3600` - Default value: `10`\n"
                },
                "delayRestoreVpc": {
                    "type": "integer",
                    "description": "Delay restore for vPC links. - Range: `1`-`3600` - Default value: `30`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "domainId": {
                    "type": "integer",
                    "description": "Domain id. - Range: `1`-`1000`\n"
                },
                "dscp": {
                    "type": "integer",
                    "description": "DSCP. - Range: `0`-`63` - Default value: `0`\n"
                },
                "fastConvergence": {
                    "type": "string",
                    "description": "Fast Convergence. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "gracefulConsistencyCheck": {
                    "type": "string",
                    "description": "Graceful Type-1 Consistency Check. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "l3PeerRouter": {
                    "type": "string",
                    "description": "L3 Peer Router. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "l3PeerRouterSyslog": {
                    "type": "string",
                    "description": "L3 Peer Router Syslog. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "l3PeerRouterSyslogInterval": {
                    "type": "integer",
                    "description": "L3 Peer Router Syslog Interval. - Range: `1`-`3600` - Default value: `3600`\n"
                },
                "peerGateway": {
                    "type": "string",
                    "description": "Peer Gateway. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "peerIp": {
                    "type": "string",
                    "description": "vPC peer IP address.\n"
                },
                "peerSwitch": {
                    "type": "string",
                    "description": "vPC pair switches. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "rolePriority": {
                    "type": "integer",
                    "description": "Role priority. - Range: `1`-`65535` - Default value: `32667`\n"
                },
                "sysMac": {
                    "type": "string",
                    "description": "System MAC.\n"
                },
                "systemPriority": {
                    "type": "integer",
                    "description": "System priority. - Range: `1`-`65535` - Default value: `32667`\n"
                },
                "track": {
                    "type": "integer",
                    "description": "Tracking object to suspend vPC if object goes down. - Range: `0`-`500` - Default value: `0`\n"
                },
                "virtualIp": {
                    "type": "string",
                    "description": "vPC virtual IP address (vIP).\n"
                }
            },
            "required": [
                "adminState",
                "autoRecovery",
                "autoRecoveryInterval",
                "delayRestoreOrphanPort",
                "delayRestoreSvi",
                "delayRestoreVpc",
                "domainId",
                "dscp",
                "fastConvergence",
                "gracefulConsistencyCheck",
                "l3PeerRouter",
                "l3PeerRouterSyslog",
                "l3PeerRouterSyslogInterval",
                "peerGateway",
                "peerSwitch",
                "rolePriority",
                "systemPriority",
                "track"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "vPC suspend locally. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "autoRecovery": {
                    "type": "string",
                    "description": "Auto Recovery. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "autoRecoveryInterval": {
                    "type": "integer",
                    "description": "Auto Recovery interval. - Range: `60`-`3600` - Default value: `240`\n"
                },
                "delayRestoreOrphanPort": {
                    "type": "integer",
                    "description": "Delay restore for orphan ports. - Range: `0`-`300` - Default value: `0`\n"
                },
                "delayRestoreSvi": {
                    "type": "integer",
                    "description": "Delay restore for SVI. - Range: `1`-`3600` - Default value: `10`\n"
                },
                "delayRestoreVpc": {
                    "type": "integer",
                    "description": "Delay restore for vPC links. - Range: `1`-`3600` - Default value: `30`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "domainId": {
                    "type": "integer",
                    "description": "Domain id. - Range: `1`-`1000`\n"
                },
                "dscp": {
                    "type": "integer",
                    "description": "DSCP. - Range: `0`-`63` - Default value: `0`\n"
                },
                "fastConvergence": {
                    "type": "string",
                    "description": "Fast Convergence. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "gracefulConsistencyCheck": {
                    "type": "string",
                    "description": "Graceful Type-1 Consistency Check. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "l3PeerRouter": {
                    "type": "string",
                    "description": "L3 Peer Router. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "l3PeerRouterSyslog": {
                    "type": "string",
                    "description": "L3 Peer Router Syslog. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "l3PeerRouterSyslogInterval": {
                    "type": "integer",
                    "description": "L3 Peer Router Syslog Interval. - Range: `1`-`3600` - Default value: `3600`\n"
                },
                "peerGateway": {
                    "type": "string",
                    "description": "Peer Gateway. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "peerIp": {
                    "type": "string",
                    "description": "vPC peer IP address.\n"
                },
                "peerSwitch": {
                    "type": "string",
                    "description": "vPC pair switches. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "rolePriority": {
                    "type": "integer",
                    "description": "Role priority. - Range: `1`-`65535` - Default value: `32667`\n"
                },
                "sysMac": {
                    "type": "string",
                    "description": "System MAC.\n"
                },
                "systemPriority": {
                    "type": "integer",
                    "description": "System priority. - Range: `1`-`65535` - Default value: `32667`\n"
                },
                "track": {
                    "type": "integer",
                    "description": "Tracking object to suspend vPC if object goes down. - Range: `0`-`500` - Default value: `0`\n"
                },
                "virtualIp": {
                    "type": "string",
                    "description": "vPC virtual IP address (vIP).\n"
                }
            },
            "requiredInputs": [
                "domainId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcDomain resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "vPC suspend locally. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "autoRecovery": {
                        "type": "string",
                        "description": "Auto Recovery. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "autoRecoveryInterval": {
                        "type": "integer",
                        "description": "Auto Recovery interval. - Range: `60`-`3600` - Default value: `240`\n"
                    },
                    "delayRestoreOrphanPort": {
                        "type": "integer",
                        "description": "Delay restore for orphan ports. - Range: `0`-`300` - Default value: `0`\n"
                    },
                    "delayRestoreSvi": {
                        "type": "integer",
                        "description": "Delay restore for SVI. - Range: `1`-`3600` - Default value: `10`\n"
                    },
                    "delayRestoreVpc": {
                        "type": "integer",
                        "description": "Delay restore for vPC links. - Range: `1`-`3600` - Default value: `30`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "domainId": {
                        "type": "integer",
                        "description": "Domain id. - Range: `1`-`1000`\n"
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "DSCP. - Range: `0`-`63` - Default value: `0`\n"
                    },
                    "fastConvergence": {
                        "type": "string",
                        "description": "Fast Convergence. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "gracefulConsistencyCheck": {
                        "type": "string",
                        "description": "Graceful Type-1 Consistency Check. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "l3PeerRouter": {
                        "type": "string",
                        "description": "L3 Peer Router. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "l3PeerRouterSyslog": {
                        "type": "string",
                        "description": "L3 Peer Router Syslog. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "l3PeerRouterSyslogInterval": {
                        "type": "integer",
                        "description": "L3 Peer Router Syslog Interval. - Range: `1`-`3600` - Default value: `3600`\n"
                    },
                    "peerGateway": {
                        "type": "string",
                        "description": "Peer Gateway. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "peerIp": {
                        "type": "string",
                        "description": "vPC peer IP address.\n"
                    },
                    "peerSwitch": {
                        "type": "string",
                        "description": "vPC pair switches. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "rolePriority": {
                        "type": "integer",
                        "description": "Role priority. - Range: `1`-`65535` - Default value: `32667`\n"
                    },
                    "sysMac": {
                        "type": "string",
                        "description": "System MAC.\n"
                    },
                    "systemPriority": {
                        "type": "integer",
                        "description": "System priority. - Range: `1`-`65535` - Default value: `32667`\n"
                    },
                    "track": {
                        "type": "integer",
                        "description": "Tracking object to suspend vPC if object goes down. - Range: `0`-`500` - Default value: `0`\n"
                    },
                    "virtualIp": {
                        "type": "string",
                        "description": "vPC virtual IP address (vIP).\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/vpcInstance:VpcInstance": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcInstance resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/vpcInterface:VpcInterface": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "portChannelInterfaceDn": {
                    "type": "string",
                    "description": "Port-channel interface DN.\n"
                },
                "vpcInterfaceId": {
                    "type": "integer",
                    "description": "The vPC interface identifier. - Range: `1`-`16384`\n"
                }
            },
            "required": [
                "vpcInterfaceId"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "portChannelInterfaceDn": {
                    "type": "string",
                    "description": "Port-channel interface DN.\n"
                },
                "vpcInterfaceId": {
                    "type": "integer",
                    "description": "The vPC interface identifier. - Range: `1`-`16384`\n"
                }
            },
            "requiredInputs": [
                "vpcInterfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcInterface resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "portChannelInterfaceDn": {
                        "type": "string",
                        "description": "Port-channel interface DN.\n"
                    },
                    "vpcInterfaceId": {
                        "type": "integer",
                        "description": "The vPC interface identifier. - Range: `1`-`16384`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/vrf:Vrf": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "VRF description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Encap for this Context, supported formats: `unknown`, `vlan-%d` or `vxlan-%d`. - Default value: `unknown`\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "encap",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "VRF description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Encap for this Context, supported formats: `unknown`, `vlan-%d` or `vxlan-%d`. - Default value: `unknown`\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vrf resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "VRF description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Encap for this Context, supported formats: `unknown`, `vlan-%d` or `vxlan-%d`. - Default value: `unknown`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/vrfAddressFamily:VrfAddressFamily": {
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "addressFamily",
                "vrf"
            ],
            "inputProperties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "addressFamily",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrfAddressFamily resources.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/vrfRouteTarget:VrfRouteTarget": {
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Target direction. - Choices: `import`, `export`\n"
                },
                "routeTarget": {
                    "type": "string",
                    "description": "Route Target in NX-OS DME format.\n"
                },
                "routeTargetAddressFamily": {
                    "type": "string",
                    "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "addressFamily",
                "direction",
                "routeTarget",
                "routeTargetAddressFamily",
                "vrf"
            ],
            "inputProperties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Target direction. - Choices: `import`, `export`\n"
                },
                "routeTarget": {
                    "type": "string",
                    "description": "Route Target in NX-OS DME format.\n"
                },
                "routeTargetAddressFamily": {
                    "type": "string",
                    "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "addressFamily",
                "direction",
                "routeTarget",
                "routeTargetAddressFamily",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrfRouteTarget resources.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Target direction. - Choices: `import`, `export`\n"
                    },
                    "routeTarget": {
                        "type": "string",
                        "description": "Route Target in NX-OS DME format.\n"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string",
                        "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/vrfRouteTargetAddressFamily:VrfRouteTargetAddressFamily": {
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "routeTargetAddressFamily": {
                    "type": "string",
                    "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "addressFamily",
                "routeTargetAddressFamily",
                "vrf"
            ],
            "inputProperties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "routeTargetAddressFamily": {
                    "type": "string",
                    "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "addressFamily",
                "routeTargetAddressFamily",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrfRouteTargetAddressFamily resources.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string",
                        "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/vrfRouteTargetDirection:VrfRouteTargetDirection": {
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Target direction. - Choices: `import`, `export`\n"
                },
                "routeTargetAddressFamily": {
                    "type": "string",
                    "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "addressFamily",
                "direction",
                "routeTargetAddressFamily",
                "vrf"
            ],
            "inputProperties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Target direction. - Choices: `import`, `export`\n"
                },
                "routeTargetAddressFamily": {
                    "type": "string",
                    "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "addressFamily",
                "direction",
                "routeTargetAddressFamily",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrfRouteTargetDirection resources.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Target direction. - Choices: `import`, `export`\n"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string",
                        "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/vrfRouting:VrfRouting": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "routeDistinguisher": {
                    "type": "string",
                    "description": "Route Distinguisher value in NX-OS DME format. - Default value: `unknown:unknown:0:0`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "routeDistinguisher",
                "vrf"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "routeDistinguisher": {
                    "type": "string",
                    "description": "Route Distinguisher value in NX-OS DME format. - Default value: `unknown:unknown:0:0`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrfRouting resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "routeDistinguisher": {
                        "type": "string",
                        "description": "Route Distinguisher value in NX-OS DME format. - Default value: `unknown:unknown:0:0`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "nxos:nxos/getBgp:getBgp": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBgp.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getBgpAddressFamily:getBgpAddressFamily": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpAddressFamily.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "asn",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpAddressFamily.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "criticalNexthopTimeout": {
                        "type": "integer"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "nonCriticalNexthopTimeout": {
                        "type": "integer"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "asn",
                    "criticalNexthopTimeout",
                    "id",
                    "nonCriticalNexthopTimeout",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getBgpAdvertisedPrefix:getBgpAdvertisedPrefix": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpAdvertisedPrefix.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "asn",
                    "prefix",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpAdvertisedPrefix.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "routeMap": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "asn",
                    "id",
                    "prefix",
                    "routeMap",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getBgpGracefulRestart:getBgpGracefulRestart": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpGracefulRestart.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpGracefulRestart.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "restartInterval": {
                        "type": "integer"
                    },
                    "staleInterval": {
                        "type": "integer"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "id",
                    "restartInterval",
                    "staleInterval",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getBgpInstance:getBgpInstance": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpInstance.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBgpInstance.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "enhancedErrorHandling": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "asn",
                    "enhancedErrorHandling",
                    "id"
                ]
            }
        },
        "nxos:nxos/getBgpPeer:getBgpPeer": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpPeer.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "asn",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpPeer.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "holdTime": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "keepalive": {
                        "type": "integer"
                    },
                    "peerTemplate": {
                        "type": "string"
                    },
                    "peerType": {
                        "type": "string"
                    },
                    "remoteAsn": {
                        "type": "string"
                    },
                    "sourceInterface": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "asn",
                    "description",
                    "holdTime",
                    "id",
                    "keepalive",
                    "peerTemplate",
                    "peerType",
                    "remoteAsn",
                    "sourceInterface",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getBgpPeerAddressFamily:getBgpPeerAddressFamily": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpPeerAddressFamily.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "addressFamily",
                    "asn",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpPeerAddressFamily.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "control": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "sendCommunityExtended": {
                        "type": "string"
                    },
                    "sendCommunityStandard": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "addressFamily",
                    "asn",
                    "control",
                    "id",
                    "sendCommunityExtended",
                    "sendCommunityStandard",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getBgpPeerAddressFamilyPrefixListControl:getBgpPeerAddressFamilyPrefixListControl": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpPeerAddressFamilyPrefixListControl.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "addressFamily",
                    "asn",
                    "direction",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpPeerAddressFamilyPrefixListControl.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "list": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "addressFamily",
                    "asn",
                    "direction",
                    "id",
                    "list",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getBgpPeerAddressFamilyRouteControl:getBgpPeerAddressFamilyRouteControl": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpPeerAddressFamilyRouteControl.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "addressFamily",
                    "asn",
                    "direction",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpPeerAddressFamilyRouteControl.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "routeMapName": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "addressFamily",
                    "asn",
                    "direction",
                    "id",
                    "routeMapName",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getBgpPeerTemplate:getBgpPeerTemplate": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpPeerTemplate.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpPeerTemplate.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "peerType": {
                        "type": "string"
                    },
                    "remoteAsn": {
                        "type": "string"
                    },
                    "sourceInterface": {
                        "type": "string"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "description",
                    "id",
                    "peerType",
                    "remoteAsn",
                    "sourceInterface",
                    "templateName"
                ]
            }
        },
        "nxos:nxos/getBgpPeerTemplateAddressFamily:getBgpPeerTemplateAddressFamily": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpPeerTemplateAddressFamily.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "asn",
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpPeerTemplateAddressFamily.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "control": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "sendCommunityExtended": {
                        "type": "string"
                    },
                    "sendCommunityStandard": {
                        "type": "string"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "asn",
                    "control",
                    "id",
                    "sendCommunityExtended",
                    "sendCommunityStandard",
                    "templateName"
                ]
            }
        },
        "nxos:nxos/getBgpPeerTemplateMaxPrefix:getBgpPeerTemplateMaxPrefix": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpPeerTemplateMaxPrefix.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "asn",
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpPeerTemplateMaxPrefix.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "maximumPrefix": {
                        "type": "integer"
                    },
                    "restartTime": {
                        "type": "integer"
                    },
                    "templateName": {
                        "type": "string"
                    },
                    "threshold": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "addressFamily",
                    "asn",
                    "id",
                    "maximumPrefix",
                    "restartTime",
                    "templateName",
                    "threshold"
                ]
            }
        },
        "nxos:nxos/getBgpRouteControl:getBgpRouteControl": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpRouteControl.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpRouteControl.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "enforceFirstAs": {
                        "type": "string"
                    },
                    "fibAccelerate": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "logNeighborChanges": {
                        "type": "string"
                    },
                    "suppressRoutes": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "enforceFirstAs",
                    "fibAccelerate",
                    "id",
                    "logNeighborChanges",
                    "suppressRoutes",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getBgpVrf:getBgpVrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpVrf.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpVrf.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "routerId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "id",
                    "name",
                    "routerId"
                ]
            }
        },
        "nxos:nxos/getBridgeDomain:getBridgeDomain": {
            "inputs": {
                "description": "A collection of arguments for invoking getBridgeDomain.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "fabricEncap": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "fabricEncap"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBridgeDomain.\n",
                "properties": {
                    "accessEncap": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "fabricEncap": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessEncap",
                    "fabricEncap",
                    "id",
                    "name"
                ]
            }
        },
        "nxos:nxos/getDefaultQosClassMap:getDefaultQosClassMap": {
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultQosClassMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultQosClassMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "matchType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "matchType",
                    "name"
                ]
            }
        },
        "nxos:nxos/getDefaultQosClassMapDscp:getDefaultQosClassMapDscp": {
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultQosClassMapDscp.\n",
                "properties": {
                    "classMapName": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "value"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultQosClassMapDscp.\n",
                "properties": {
                    "classMapName": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "id",
                    "value"
                ]
            }
        },
        "nxos:nxos/getDefaultQosPolicyInterfaceIn:getDefaultQosPolicyInterfaceIn": {
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultQosPolicyInterfaceIn.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultQosPolicyInterfaceIn.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId"
                ]
            }
        },
        "nxos:nxos/getDefaultQosPolicyInterfaceInPolicyMap:getDefaultQosPolicyInterfaceInPolicyMap": {
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultQosPolicyInterfaceInPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultQosPolicyInterfaceInPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "policyMapName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId",
                    "policyMapName"
                ]
            }
        },
        "nxos:nxos/getDefaultQosPolicyMap:getDefaultQosPolicyMap": {
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultQosPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultQosPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "matchType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "matchType",
                    "name"
                ]
            }
        },
        "nxos:nxos/getDefaultQosPolicyMapMatchClassMap:getDefaultQosPolicyMapMatchClassMap": {
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultQosPolicyMapMatchClassMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyMapName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "policyMapName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultQosPolicyMapMatchClassMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyMapName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "policyMapName"
                ]
            }
        },
        "nxos:nxos/getDefaultQosPolicyMapMatchClassMapPolice:getDefaultQosPolicyMapMatchClassMapPolice": {
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultQosPolicyMapMatchClassMapPolice.\n",
                "properties": {
                    "classMapName": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "policyMapName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "policyMapName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultQosPolicyMapMatchClassMapPolice.\n",
                "properties": {
                    "bcRate": {
                        "type": "integer"
                    },
                    "bcUnit": {
                        "type": "string"
                    },
                    "beRate": {
                        "type": "integer"
                    },
                    "beUnit": {
                        "type": "string"
                    },
                    "cirRate": {
                        "type": "integer"
                    },
                    "cirUnit": {
                        "type": "string"
                    },
                    "classMapName": {
                        "type": "string"
                    },
                    "conformAction": {
                        "type": "string"
                    },
                    "conformSetCos": {
                        "type": "integer"
                    },
                    "conformSetDscp": {
                        "type": "integer"
                    },
                    "conformSetPrecedence": {
                        "type": "string"
                    },
                    "conformSetQosGroup": {
                        "type": "integer"
                    },
                    "device": {
                        "type": "string"
                    },
                    "exceedAction": {
                        "type": "string"
                    },
                    "exceedSetCos": {
                        "type": "integer"
                    },
                    "exceedSetDscp": {
                        "type": "integer"
                    },
                    "exceedSetPrecedence": {
                        "type": "string"
                    },
                    "exceedSetQosGroup": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "pirRate": {
                        "type": "integer"
                    },
                    "pirUnit": {
                        "type": "string"
                    },
                    "policyMapName": {
                        "type": "string"
                    },
                    "violateAction": {
                        "type": "string"
                    },
                    "violateSetCos": {
                        "type": "integer"
                    },
                    "violateSetDscp": {
                        "type": "integer"
                    },
                    "violateSetPrecedence": {
                        "type": "string"
                    },
                    "violateSetQosGroup": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "bcRate",
                    "bcUnit",
                    "beRate",
                    "beUnit",
                    "cirRate",
                    "cirUnit",
                    "classMapName",
                    "conformAction",
                    "conformSetCos",
                    "conformSetDscp",
                    "conformSetPrecedence",
                    "conformSetQosGroup",
                    "exceedAction",
                    "exceedSetCos",
                    "exceedSetDscp",
                    "exceedSetPrecedence",
                    "exceedSetQosGroup",
                    "id",
                    "pirRate",
                    "pirUnit",
                    "policyMapName",
                    "violateAction",
                    "violateSetCos",
                    "violateSetDscp",
                    "violateSetPrecedence",
                    "violateSetQosGroup"
                ]
            }
        },
        "nxos:nxos/getDefaultQosPolicyMapMatchClassMapSetQosGroup:getDefaultQosPolicyMapMatchClassMapSetQosGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultQosPolicyMapMatchClassMapSetQosGroup.\n",
                "properties": {
                    "classMapName": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "policyMapName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "policyMapName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultQosPolicyMapMatchClassMapSetQosGroup.\n",
                "properties": {
                    "classMapName": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "policyMapName": {
                        "type": "string"
                    },
                    "qosGroupId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "id",
                    "policyMapName",
                    "qosGroupId"
                ]
            }
        },
        "nxos:nxos/getDhcpRelayAddress:getDhcpRelayAddress": {
            "inputs": {
                "description": "A collection of arguments for invoking getDhcpRelayAddress.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "interfaceId",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDhcpRelayAddress.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "id",
                    "interfaceId",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getDhcpRelayInterface:getDhcpRelayInterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getDhcpRelayInterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDhcpRelayInterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId"
                ]
            }
        },
        "nxos:nxos/getEthernet:getEthernet": {
            "inputs": {
                "description": "A collection of arguments for invoking getEthernet.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEthernet.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "mtu": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "mtu"
                ]
            }
        },
        "nxos:nxos/getEvpn:getEvpn": {
            "inputs": {
                "description": "A collection of arguments for invoking getEvpn.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEvpn.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getEvpnVni:getEvpnVni": {
            "inputs": {
                "description": "A collection of arguments for invoking getEvpnVni.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "encap": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "encap"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEvpnVni.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "encap": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "routeDistinguisher": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "encap",
                    "id",
                    "routeDistinguisher"
                ]
            }
        },
        "nxos:nxos/getEvpnVniRouteTarget:getEvpnVniRouteTarget": {
            "inputs": {
                "description": "A collection of arguments for invoking getEvpnVniRouteTarget.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "encap": {
                        "type": "string"
                    },
                    "routeTarget": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "direction",
                    "encap",
                    "routeTarget"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEvpnVniRouteTarget.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "encap": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "routeTarget": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "direction",
                    "encap",
                    "id",
                    "routeTarget"
                ]
            }
        },
        "nxos:nxos/getEvpnVniRouteTargetDirection:getEvpnVniRouteTargetDirection": {
            "inputs": {
                "description": "A collection of arguments for invoking getEvpnVniRouteTargetDirection.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "encap": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "direction",
                    "encap"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEvpnVniRouteTargetDirection.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "encap": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "direction",
                    "encap",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureBfd:getFeatureBfd": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureBfd.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureBfd.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureBgp:getFeatureBgp": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureBgp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureBgp.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureDhcp:getFeatureDhcp": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureDhcp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureDhcp.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureEvpn:getFeatureEvpn": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureEvpn.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureEvpn.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureHmm:getFeatureHmm": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureHmm.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureHmm.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureHsrp:getFeatureHsrp": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureHsrp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureHsrp.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureInterfaceVlan:getFeatureInterfaceVlan": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureInterfaceVlan.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureInterfaceVlan.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureIsis:getFeatureIsis": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureIsis.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureIsis.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureLacp:getFeatureLacp": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureLacp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureLacp.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureLldp:getFeatureLldp": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureLldp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureLldp.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureMacsec:getFeatureMacsec": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureMacsec.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureMacsec.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureNetflow:getFeatureNetflow": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureNetflow.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureNetflow.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureNvOverlay:getFeatureNvOverlay": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureNvOverlay.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureNvOverlay.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureOspf:getFeatureOspf": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureOspf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureOspf.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureOspfv3:getFeatureOspfv3": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureOspfv3.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureOspfv3.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeaturePim:getFeaturePim": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeaturePim.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeaturePim.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeaturePtp:getFeaturePtp": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeaturePtp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeaturePtp.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeaturePvlan:getFeaturePvlan": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeaturePvlan.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeaturePvlan.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureSsh:getFeatureSsh": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureSsh.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureSsh.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureTacacs:getFeatureTacacs": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureTacacs.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureTacacs.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureTelnet:getFeatureTelnet": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureTelnet.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureTelnet.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureUdld:getFeatureUdld": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureUdld.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureUdld.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureVnSegment:getFeatureVnSegment": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureVnSegment.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureVnSegment.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getFeatureVpc:getFeatureVpc": {
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureVpc.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureVpc.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getHmm:getHmm": {
            "inputs": {
                "description": "A collection of arguments for invoking getHmm.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getHmm.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getHmmInstance:getHmmInstance": {
            "inputs": {
                "description": "A collection of arguments for invoking getHmmInstance.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getHmmInstance.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "anycastMac": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "anycastMac",
                    "id"
                ]
            }
        },
        "nxos:nxos/getHmmInterface:getHmmInterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getHmmInterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getHmmInterface.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id",
                    "interfaceId",
                    "mode"
                ]
            }
        },
        "nxos:nxos/getIpv4AccessList:getIpv4AccessList": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4AccessList.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4AccessList.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ]
            }
        },
        "nxos:nxos/getIpv4AccessListEntry:getIpv4AccessListEntry": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4AccessListEntry.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sequenceNumber": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "sequenceNumber"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4AccessListEntry.\n",
                "properties": {
                    "ack": {
                        "type": "boolean"
                    },
                    "action": {
                        "type": "string"
                    },
                    "destinationAddressGroup": {
                        "type": "string"
                    },
                    "destinationPort1": {
                        "type": "string"
                    },
                    "destinationPort2": {
                        "type": "string"
                    },
                    "destinationPortGroup": {
                        "type": "string"
                    },
                    "destinationPortMask": {
                        "type": "string"
                    },
                    "destinationPortOperator": {
                        "type": "string"
                    },
                    "destinationPrefix": {
                        "type": "string"
                    },
                    "destinationPrefixLength": {
                        "type": "string"
                    },
                    "destinationPrefixMask": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "dscp": {
                        "type": "integer"
                    },
                    "est": {
                        "type": "boolean"
                    },
                    "fin": {
                        "type": "boolean"
                    },
                    "fragment": {
                        "type": "boolean"
                    },
                    "httpOptionType": {
                        "type": "string"
                    },
                    "icmpCode": {
                        "type": "integer"
                    },
                    "icmpType": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "logging": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "packetLength1": {
                        "type": "string"
                    },
                    "packetLength2": {
                        "type": "string"
                    },
                    "packetLengthOperator": {
                        "type": "string"
                    },
                    "precedence": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "protocolMask": {
                        "type": "string"
                    },
                    "psh": {
                        "type": "boolean"
                    },
                    "redirect": {
                        "type": "string"
                    },
                    "remark": {
                        "type": "string"
                    },
                    "rev": {
                        "type": "boolean"
                    },
                    "rst": {
                        "type": "boolean"
                    },
                    "sequenceNumber": {
                        "type": "integer"
                    },
                    "sourceAddressGroup": {
                        "type": "string"
                    },
                    "sourcePort1": {
                        "type": "string"
                    },
                    "sourcePort2": {
                        "type": "string"
                    },
                    "sourcePortGroup": {
                        "type": "string"
                    },
                    "sourcePortMask": {
                        "type": "string"
                    },
                    "sourcePortOperator": {
                        "type": "string"
                    },
                    "sourcePrefix": {
                        "type": "string"
                    },
                    "sourcePrefixLength": {
                        "type": "string"
                    },
                    "sourcePrefixMask": {
                        "type": "string"
                    },
                    "syn": {
                        "type": "boolean"
                    },
                    "timeRange": {
                        "type": "string"
                    },
                    "ttl": {
                        "type": "integer"
                    },
                    "urg": {
                        "type": "boolean"
                    },
                    "vlan": {
                        "type": "integer"
                    },
                    "vni": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "ack",
                    "action",
                    "destinationAddressGroup",
                    "destinationPort1",
                    "destinationPort2",
                    "destinationPortGroup",
                    "destinationPortMask",
                    "destinationPortOperator",
                    "destinationPrefix",
                    "destinationPrefixLength",
                    "destinationPrefixMask",
                    "dscp",
                    "est",
                    "fin",
                    "fragment",
                    "httpOptionType",
                    "icmpCode",
                    "icmpType",
                    "id",
                    "logging",
                    "name",
                    "packetLength1",
                    "packetLength2",
                    "packetLengthOperator",
                    "precedence",
                    "protocol",
                    "protocolMask",
                    "psh",
                    "redirect",
                    "remark",
                    "rev",
                    "rst",
                    "sequenceNumber",
                    "sourceAddressGroup",
                    "sourcePort1",
                    "sourcePort2",
                    "sourcePortGroup",
                    "sourcePortMask",
                    "sourcePortOperator",
                    "sourcePrefix",
                    "sourcePrefixLength",
                    "sourcePrefixMask",
                    "syn",
                    "timeRange",
                    "ttl",
                    "urg",
                    "vlan",
                    "vni"
                ]
            }
        },
        "nxos:nxos/getIpv4AccessListPolicyEgressInterface:getIpv4AccessListPolicyEgressInterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4AccessListPolicyEgressInterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4AccessListPolicyEgressInterface.\n",
                "properties": {
                    "accessListName": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessListName",
                    "id",
                    "interfaceId"
                ]
            }
        },
        "nxos:nxos/getIpv4AccessListPolicyIngressInterface:getIpv4AccessListPolicyIngressInterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4AccessListPolicyIngressInterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4AccessListPolicyIngressInterface.\n",
                "properties": {
                    "accessListName": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessListName",
                    "id",
                    "interfaceId"
                ]
            }
        },
        "nxos:nxos/getIpv4Interface:getIpv4Interface": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4Interface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4Interface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "dropGlean": {
                        "type": "string"
                    },
                    "forward": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "unnumbered": {
                        "type": "string"
                    },
                    "urpf": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "dropGlean",
                    "forward",
                    "id",
                    "interfaceId",
                    "unnumbered",
                    "urpf",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getIpv4InterfaceAddress:getIpv4InterfaceAddress": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4InterfaceAddress.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "interfaceId",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4InterfaceAddress.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "id",
                    "interfaceId",
                    "type",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getIpv4PrefixListRule:getIpv4PrefixListRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4PrefixListRule.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4PrefixListRule.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ]
            }
        },
        "nxos:nxos/getIpv4PrefixListRuleEntry:getIpv4PrefixListRuleEntry": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4PrefixListRuleEntry.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "ruleName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "order",
                    "ruleName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4PrefixListRuleEntry.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "criteria": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "fromRange": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "ruleName": {
                        "type": "string"
                    },
                    "toRange": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "criteria",
                    "fromRange",
                    "id",
                    "order",
                    "prefix",
                    "ruleName",
                    "toRange"
                ]
            }
        },
        "nxos:nxos/getIpv4StaticRoute:getIpv4StaticRoute": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4StaticRoute.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "prefix",
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4StaticRoute.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "nextHops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getIpv4StaticRouteNextHop:getIpv4StaticRouteNextHop"
                        }
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "nextHops",
                    "prefix",
                    "vrfName"
                ]
            }
        },
        "nxos:nxos/getIpv4Vrf:getIpv4Vrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4Vrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4Vrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ]
            }
        },
        "nxos:nxos/getIsis:getIsis": {
            "inputs": {
                "description": "A collection of arguments for invoking getIsis.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIsis.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getIsisInstance:getIsisInstance": {
            "inputs": {
                "description": "A collection of arguments for invoking getIsisInstance.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIsisInstance.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id",
                    "name"
                ]
            }
        },
        "nxos:nxos/getIsisInterface:getIsisInterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getIsisInterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIsisInterface.\n",
                "properties": {
                    "authenticationCheck": {
                        "type": "boolean"
                    },
                    "authenticationCheckL1": {
                        "type": "boolean"
                    },
                    "authenticationCheckL2": {
                        "type": "boolean"
                    },
                    "authenticationKey": {
                        "type": "string"
                    },
                    "authenticationKeyL1": {
                        "type": "string"
                    },
                    "authenticationKeyL2": {
                        "type": "string"
                    },
                    "authenticationType": {
                        "type": "string"
                    },
                    "authenticationTypeL1": {
                        "type": "string"
                    },
                    "authenticationTypeL2": {
                        "type": "string"
                    },
                    "circuitType": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "helloInterval": {
                        "type": "integer"
                    },
                    "helloIntervalL1": {
                        "type": "integer"
                    },
                    "helloIntervalL2": {
                        "type": "integer"
                    },
                    "helloMultiplier": {
                        "type": "integer"
                    },
                    "helloMultiplierL1": {
                        "type": "integer"
                    },
                    "helloMultiplierL2": {
                        "type": "integer"
                    },
                    "helloPadding": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "metricL1": {
                        "type": "integer"
                    },
                    "metricL2": {
                        "type": "integer"
                    },
                    "mtuCheck": {
                        "type": "boolean"
                    },
                    "mtuCheckL1": {
                        "type": "boolean"
                    },
                    "mtuCheckL2": {
                        "type": "boolean"
                    },
                    "networkTypeP2p": {
                        "type": "string"
                    },
                    "passive": {
                        "type": "string"
                    },
                    "priorityL1": {
                        "type": "integer"
                    },
                    "priorityL2": {
                        "type": "integer"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "authenticationCheck",
                    "authenticationCheckL1",
                    "authenticationCheckL2",
                    "authenticationKey",
                    "authenticationKeyL1",
                    "authenticationKeyL2",
                    "authenticationType",
                    "authenticationTypeL1",
                    "authenticationTypeL2",
                    "circuitType",
                    "helloInterval",
                    "helloIntervalL1",
                    "helloIntervalL2",
                    "helloMultiplier",
                    "helloMultiplierL1",
                    "helloMultiplierL2",
                    "helloPadding",
                    "id",
                    "interfaceId",
                    "metricL1",
                    "metricL2",
                    "mtuCheck",
                    "mtuCheckL1",
                    "mtuCheckL2",
                    "networkTypeP2p",
                    "passive",
                    "priorityL1",
                    "priorityL2",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getIsisVrf:getIsisVrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getIsisVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "instanceName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceName",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIsisVrf.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "authenticationCheckL1": {
                        "type": "boolean"
                    },
                    "authenticationCheckL2": {
                        "type": "boolean"
                    },
                    "authenticationKeyL1": {
                        "type": "string"
                    },
                    "authenticationKeyL2": {
                        "type": "string"
                    },
                    "authenticationTypeL1": {
                        "type": "string"
                    },
                    "authenticationTypeL2": {
                        "type": "string"
                    },
                    "bandwidthReference": {
                        "type": "integer"
                    },
                    "banwidthReferenceUnit": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "instanceName": {
                        "type": "string"
                    },
                    "isType": {
                        "type": "string"
                    },
                    "metricType": {
                        "type": "string"
                    },
                    "mtu": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "net": {
                        "type": "string"
                    },
                    "passiveDefault": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "authenticationCheckL1",
                    "authenticationCheckL2",
                    "authenticationKeyL1",
                    "authenticationKeyL2",
                    "authenticationTypeL1",
                    "authenticationTypeL2",
                    "bandwidthReference",
                    "banwidthReferenceUnit",
                    "id",
                    "instanceName",
                    "isType",
                    "metricType",
                    "mtu",
                    "name",
                    "net",
                    "passiveDefault"
                ]
            }
        },
        "nxos:nxos/getLoopbackInterface:getLoopbackInterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getLoopbackInterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoopbackInterface.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "description",
                    "id",
                    "interfaceId"
                ]
            }
        },
        "nxos:nxos/getLoopbackInterfaceVrf:getLoopbackInterfaceVrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getLoopbackInterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoopbackInterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "vrfDn": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId",
                    "vrfDn"
                ]
            }
        },
        "nxos:nxos/getNtpServer:getNtpServer": {
            "inputs": {
                "description": "A collection of arguments for invoking getNtpServer.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNtpServer.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "keyId": {
                        "type": "integer"
                    },
                    "maxPoll": {
                        "type": "integer"
                    },
                    "minPoll": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "keyId",
                    "maxPoll",
                    "minPoll",
                    "name",
                    "type",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getNveInterface:getNveInterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getNveInterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNveInterface.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "advertiseVirtualMac": {
                        "type": "boolean"
                    },
                    "device": {
                        "type": "string"
                    },
                    "holdDownTime": {
                        "type": "integer"
                    },
                    "hostReachabilityProtocol": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ingressReplicationProtocolBgp": {
                        "type": "boolean"
                    },
                    "multicastGroupL2": {
                        "type": "string"
                    },
                    "multicastGroupL3": {
                        "type": "string"
                    },
                    "multisiteSourceInterface": {
                        "type": "string"
                    },
                    "sourceInterface": {
                        "type": "string"
                    },
                    "suppressArp": {
                        "type": "boolean"
                    },
                    "suppressMacRoute": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "advertiseVirtualMac",
                    "holdDownTime",
                    "hostReachabilityProtocol",
                    "id",
                    "ingressReplicationProtocolBgp",
                    "multicastGroupL2",
                    "multicastGroupL3",
                    "multisiteSourceInterface",
                    "sourceInterface",
                    "suppressArp",
                    "suppressMacRoute"
                ]
            }
        },
        "nxos:nxos/getNveVni:getNveVni": {
            "inputs": {
                "description": "A collection of arguments for invoking getNveVni.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "vni": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "vni"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNveVni.\n",
                "properties": {
                    "associateVrf": {
                        "type": "boolean"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "multicastGroup": {
                        "type": "string"
                    },
                    "multisiteIngressReplication": {
                        "type": "string"
                    },
                    "suppressArp": {
                        "type": "string"
                    },
                    "vni": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "associateVrf",
                    "id",
                    "multicastGroup",
                    "multisiteIngressReplication",
                    "suppressArp",
                    "vni"
                ]
            }
        },
        "nxos:nxos/getNveVniContainer:getNveVniContainer": {
            "inputs": {
                "description": "A collection of arguments for invoking getNveVniContainer.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNveVniContainer.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        },
        "nxos:nxos/getNveVniIngressReplication:getNveVniIngressReplication": {
            "inputs": {
                "description": "A collection of arguments for invoking getNveVniIngressReplication.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "vni": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "vni"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNveVniIngressReplication.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "vni": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "protocol",
                    "vni"
                ]
            }
        },
        "nxos:nxos/getOspf:getOspf": {
            "inputs": {
                "description": "A collection of arguments for invoking getOspf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOspf.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getOspfArea:getOspfArea": {
            "inputs": {
                "description": "A collection of arguments for invoking getOspfArea.\n",
                "properties": {
                    "areaId": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "instanceName": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "areaId",
                    "instanceName",
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOspfArea.\n",
                "properties": {
                    "areaId": {
                        "type": "string"
                    },
                    "authenticationType": {
                        "type": "string"
                    },
                    "cost": {
                        "type": "integer"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "instanceName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "areaId",
                    "authenticationType",
                    "cost",
                    "id",
                    "instanceName",
                    "type",
                    "vrfName"
                ]
            }
        },
        "nxos:nxos/getOspfAuthentication:getOspfAuthentication": {
            "inputs": {
                "description": "A collection of arguments for invoking getOspfAuthentication.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "instanceName": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceName",
                    "interfaceId",
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOspfAuthentication.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "instanceName": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "keyId": {
                        "type": "integer"
                    },
                    "keySecureMode": {
                        "type": "boolean"
                    },
                    "keychain": {
                        "type": "string"
                    },
                    "md5Key": {
                        "type": "string"
                    },
                    "md5KeySecureMode": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "instanceName",
                    "interfaceId",
                    "key",
                    "keyId",
                    "keySecureMode",
                    "keychain",
                    "md5Key",
                    "md5KeySecureMode",
                    "type",
                    "vrfName"
                ]
            }
        },
        "nxos:nxos/getOspfInstance:getOspfInstance": {
            "inputs": {
                "description": "A collection of arguments for invoking getOspfInstance.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOspfInstance.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id",
                    "name"
                ]
            }
        },
        "nxos:nxos/getOspfInterface:getOspfInterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getOspfInterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "instanceName": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceName",
                    "interfaceId",
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOspfInterface.\n",
                "properties": {
                    "advertiseSecondaries": {
                        "type": "boolean"
                    },
                    "area": {
                        "type": "string"
                    },
                    "bfd": {
                        "type": "string"
                    },
                    "cost": {
                        "type": "integer"
                    },
                    "deadInterval": {
                        "type": "integer"
                    },
                    "device": {
                        "type": "string"
                    },
                    "helloInterval": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "instanceName": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "networkType": {
                        "type": "string"
                    },
                    "passive": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "advertiseSecondaries",
                    "area",
                    "bfd",
                    "cost",
                    "deadInterval",
                    "helloInterval",
                    "id",
                    "instanceName",
                    "interfaceId",
                    "networkType",
                    "passive",
                    "priority",
                    "vrfName"
                ]
            }
        },
        "nxos:nxos/getOspfVrf:getOspfVrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getOspfVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "instanceName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceName",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOspfVrf.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "bandwidthReference": {
                        "type": "integer"
                    },
                    "banwidthReferenceUnit": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "distance": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "instanceName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "routerId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "bandwidthReference",
                    "banwidthReferenceUnit",
                    "distance",
                    "id",
                    "instanceName",
                    "name",
                    "routerId"
                ]
            }
        },
        "nxos:nxos/getPhysicalInterface:getPhysicalInterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getPhysicalInterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPhysicalInterface.\n",
                "properties": {
                    "accessVlan": {
                        "type": "string"
                    },
                    "adminState": {
                        "type": "string"
                    },
                    "autoNegotiation": {
                        "type": "string"
                    },
                    "bandwidth": {
                        "type": "integer"
                    },
                    "delay": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "duplex": {
                        "type": "string"
                    },
                    "fecMode": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "layer": {
                        "type": "string"
                    },
                    "linkDebounceDown": {
                        "type": "integer"
                    },
                    "linkDebounceUp": {
                        "type": "integer"
                    },
                    "linkLogging": {
                        "type": "string"
                    },
                    "medium": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "mtu": {
                        "type": "integer"
                    },
                    "nativeVlan": {
                        "type": "string"
                    },
                    "speed": {
                        "type": "string"
                    },
                    "speedGroup": {
                        "type": "string"
                    },
                    "trunkVlans": {
                        "type": "string"
                    },
                    "uniDirectionalEthernet": {
                        "type": "string"
                    },
                    "userConfiguredFlags": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessVlan",
                    "adminState",
                    "autoNegotiation",
                    "bandwidth",
                    "delay",
                    "description",
                    "duplex",
                    "fecMode",
                    "id",
                    "interfaceId",
                    "layer",
                    "linkDebounceDown",
                    "linkDebounceUp",
                    "linkLogging",
                    "medium",
                    "mode",
                    "mtu",
                    "nativeVlan",
                    "speed",
                    "speedGroup",
                    "trunkVlans",
                    "uniDirectionalEthernet",
                    "userConfiguredFlags"
                ]
            }
        },
        "nxos:nxos/getPhysicalInterfaceVrf:getPhysicalInterfaceVrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getPhysicalInterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPhysicalInterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "vrfDn": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId",
                    "vrfDn"
                ]
            }
        },
        "nxos:nxos/getPim:getPim": {
            "inputs": {
                "description": "A collection of arguments for invoking getPim.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPim.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getPimAnycastRp:getPimAnycastRp": {
            "inputs": {
                "description": "A collection of arguments for invoking getPimAnycastRp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimAnycastRp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "localInterface": {
                        "type": "string"
                    },
                    "sourceInterface": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "localInterface",
                    "sourceInterface",
                    "vrfName"
                ]
            }
        },
        "nxos:nxos/getPimAnycastRpPeer:getPimAnycastRpPeer": {
            "inputs": {
                "description": "A collection of arguments for invoking getPimAnycastRpPeer.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "rpSetAddress": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "rpSetAddress",
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimAnycastRpPeer.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "rpSetAddress": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "id",
                    "rpSetAddress",
                    "vrfName"
                ]
            }
        },
        "nxos:nxos/getPimInstance:getPimInstance": {
            "inputs": {
                "description": "A collection of arguments for invoking getPimInstance.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPimInstance.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getPimInterface:getPimInterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getPimInterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId",
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimInterface.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "bfd": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "drPriority": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "passive": {
                        "type": "boolean"
                    },
                    "sparseMode": {
                        "type": "boolean"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "bfd",
                    "drPriority",
                    "id",
                    "interfaceId",
                    "passive",
                    "sparseMode",
                    "vrfName"
                ]
            }
        },
        "nxos:nxos/getPimSsmPolicy:getPimSsmPolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getPimSsmPolicy.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimSsmPolicy.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "vrfName"
                ]
            }
        },
        "nxos:nxos/getPimSsmRange:getPimSsmRange": {
            "inputs": {
                "description": "A collection of arguments for invoking getPimSsmRange.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimSsmRange.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "groupList1": {
                        "type": "string"
                    },
                    "groupList2": {
                        "type": "string"
                    },
                    "groupList3": {
                        "type": "string"
                    },
                    "groupList4": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "prefixList": {
                        "type": "string"
                    },
                    "routeMap": {
                        "type": "string"
                    },
                    "ssmNone": {
                        "type": "boolean"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "groupList1",
                    "groupList2",
                    "groupList3",
                    "groupList4",
                    "id",
                    "prefixList",
                    "routeMap",
                    "ssmNone",
                    "vrfName"
                ]
            }
        },
        "nxos:nxos/getPimStaticRp:getPimStaticRp": {
            "inputs": {
                "description": "A collection of arguments for invoking getPimStaticRp.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimStaticRp.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "id",
                    "vrfName"
                ]
            }
        },
        "nxos:nxos/getPimStaticRpGroupList:getPimStaticRpGroupList": {
            "inputs": {
                "description": "A collection of arguments for invoking getPimStaticRpGroupList.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "rpAddress": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "rpAddress",
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimStaticRpGroupList.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "bidir": {
                        "type": "boolean"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "override": {
                        "type": "boolean"
                    },
                    "rpAddress": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "bidir",
                    "id",
                    "override",
                    "rpAddress",
                    "vrfName"
                ]
            }
        },
        "nxos:nxos/getPimStaticRpPolicy:getPimStaticRpPolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getPimStaticRpPolicy.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimStaticRpPolicy.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "vrfName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "vrfName"
                ]
            }
        },
        "nxos:nxos/getPimVrf:getPimVrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getPimVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimVrf.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "bfd": {
                        "type": "boolean"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "bfd",
                    "id",
                    "name"
                ]
            }
        },
        "nxos:nxos/getPortChannelInterface:getPortChannelInterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getPortChannelInterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPortChannelInterface.\n",
                "properties": {
                    "accessVlan": {
                        "type": "string"
                    },
                    "adminState": {
                        "type": "string"
                    },
                    "autoNegotiation": {
                        "type": "string"
                    },
                    "bandwidth": {
                        "type": "integer"
                    },
                    "delay": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "duplex": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "layer": {
                        "type": "string"
                    },
                    "linkLogging": {
                        "type": "string"
                    },
                    "maximumLinks": {
                        "type": "integer"
                    },
                    "medium": {
                        "type": "string"
                    },
                    "minimumLinks": {
                        "type": "integer"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "mtu": {
                        "type": "integer"
                    },
                    "nativeVlan": {
                        "type": "string"
                    },
                    "portChannelMode": {
                        "type": "string"
                    },
                    "speed": {
                        "type": "string"
                    },
                    "suspendIndividual": {
                        "type": "string"
                    },
                    "trunkVlans": {
                        "type": "string"
                    },
                    "userConfiguredFlags": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessVlan",
                    "adminState",
                    "autoNegotiation",
                    "bandwidth",
                    "delay",
                    "description",
                    "duplex",
                    "id",
                    "interfaceId",
                    "layer",
                    "linkLogging",
                    "maximumLinks",
                    "medium",
                    "minimumLinks",
                    "mode",
                    "mtu",
                    "nativeVlan",
                    "portChannelMode",
                    "speed",
                    "suspendIndividual",
                    "trunkVlans",
                    "userConfiguredFlags"
                ]
            }
        },
        "nxos:nxos/getPortChannelInterfaceMember:getPortChannelInterfaceMember": {
            "inputs": {
                "description": "A collection of arguments for invoking getPortChannelInterfaceMember.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceDn": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceDn",
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPortChannelInterfaceMember.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceDn": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceDn",
                    "interfaceId"
                ]
            }
        },
        "nxos:nxos/getPortChannelInterfaceVrf:getPortChannelInterfaceVrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getPortChannelInterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPortChannelInterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "vrfDn": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId",
                    "vrfDn"
                ]
            }
        },
        "nxos:nxos/getQueuingQosPolicyMap:getQueuingQosPolicyMap": {
            "inputs": {
                "description": "A collection of arguments for invoking getQueuingQosPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getQueuingQosPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "matchType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "matchType",
                    "name"
                ]
            }
        },
        "nxos:nxos/getQueuingQosPolicyMapMatchClassMap:getQueuingQosPolicyMapMatchClassMap": {
            "inputs": {
                "description": "A collection of arguments for invoking getQueuingQosPolicyMapMatchClassMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyMapName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "policyMapName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getQueuingQosPolicyMapMatchClassMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyMapName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "policyMapName"
                ]
            }
        },
        "nxos:nxos/getQueuingQosPolicyMapMatchClassMapPriority:getQueuingQosPolicyMapMatchClassMapPriority": {
            "inputs": {
                "description": "A collection of arguments for invoking getQueuingQosPolicyMapMatchClassMapPriority.\n",
                "properties": {
                    "classMapName": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "policyMapName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "policyMapName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getQueuingQosPolicyMapMatchClassMapPriority.\n",
                "properties": {
                    "classMapName": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "level": {
                        "type": "integer"
                    },
                    "policyMapName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "id",
                    "level",
                    "policyMapName"
                ]
            }
        },
        "nxos:nxos/getQueuingQosPolicyMapMatchClassMapRemainingBandwidth:getQueuingQosPolicyMapMatchClassMapRemainingBandwidth": {
            "inputs": {
                "description": "A collection of arguments for invoking getQueuingQosPolicyMapMatchClassMapRemainingBandwidth.\n",
                "properties": {
                    "classMapName": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "policyMapName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "policyMapName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getQueuingQosPolicyMapMatchClassMapRemainingBandwidth.\n",
                "properties": {
                    "classMapName": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "policyMapName": {
                        "type": "string"
                    },
                    "value": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "id",
                    "policyMapName",
                    "value"
                ]
            }
        },
        "nxos:nxos/getQueuingQosPolicySystemOut:getQueuingQosPolicySystemOut": {
            "inputs": {
                "description": "A collection of arguments for invoking getQueuingQosPolicySystemOut.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getQueuingQosPolicySystemOut.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        },
        "nxos:nxos/getQueuingQosPolicySystemOutPolicyMap:getQueuingQosPolicySystemOutPolicyMap": {
            "inputs": {
                "description": "A collection of arguments for invoking getQueuingQosPolicySystemOutPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getQueuingQosPolicySystemOutPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "policyMapName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "policyMapName"
                ]
            }
        },
        "nxos:nxos/getRest:getRest": {
            "inputs": {
                "description": "A collection of arguments for invoking getRest.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "dn": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "dn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRest.\n",
                "properties": {
                    "className": {
                        "type": "string"
                    },
                    "content": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "device": {
                        "type": "string"
                    },
                    "dn": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "className",
                    "content",
                    "dn",
                    "id"
                ]
            }
        },
        "nxos:nxos/getRouteMapRule:getRouteMapRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getRouteMapRule.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRouteMapRule.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ]
            }
        },
        "nxos:nxos/getRouteMapRuleEntry:getRouteMapRuleEntry": {
            "inputs": {
                "description": "A collection of arguments for invoking getRouteMapRuleEntry.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "ruleName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "order",
                    "ruleName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRouteMapRuleEntry.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "ruleName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "id",
                    "order",
                    "ruleName"
                ]
            }
        },
        "nxos:nxos/getRouteMapRuleEntryMatchRoute:getRouteMapRuleEntryMatchRoute": {
            "inputs": {
                "description": "A collection of arguments for invoking getRouteMapRuleEntryMatchRoute.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "ruleName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "order",
                    "ruleName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRouteMapRuleEntryMatchRoute.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "ruleName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "order",
                    "ruleName"
                ]
            }
        },
        "nxos:nxos/getRouteMapRuleEntryMatchRoutePrefixList:getRouteMapRuleEntryMatchRoutePrefixList": {
            "inputs": {
                "description": "A collection of arguments for invoking getRouteMapRuleEntryMatchRoutePrefixList.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "prefixListDn": {
                        "type": "string"
                    },
                    "ruleName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "order",
                    "prefixListDn",
                    "ruleName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRouteMapRuleEntryMatchRoutePrefixList.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "prefixListDn": {
                        "type": "string"
                    },
                    "ruleName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "order",
                    "prefixListDn",
                    "ruleName"
                ]
            }
        },
        "nxos:nxos/getRouteMapRuleEntrySetRegularCommunity:getRouteMapRuleEntrySetRegularCommunity": {
            "inputs": {
                "description": "A collection of arguments for invoking getRouteMapRuleEntrySetRegularCommunity.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "ruleName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "order",
                    "ruleName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRouteMapRuleEntrySetRegularCommunity.\n",
                "properties": {
                    "additive": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "noCommunity": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "ruleName": {
                        "type": "string"
                    },
                    "setCriteria": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "additive",
                    "id",
                    "noCommunity",
                    "order",
                    "ruleName",
                    "setCriteria"
                ]
            }
        },
        "nxos:nxos/getRouteMapRuleEntrySetRegularCommunityItem:getRouteMapRuleEntrySetRegularCommunityItem": {
            "inputs": {
                "description": "A collection of arguments for invoking getRouteMapRuleEntrySetRegularCommunityItem.\n",
                "properties": {
                    "community": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "ruleName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "community",
                    "order",
                    "ruleName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRouteMapRuleEntrySetRegularCommunityItem.\n",
                "properties": {
                    "community": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "ruleName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "community",
                    "id",
                    "order",
                    "ruleName"
                ]
            }
        },
        "nxos:nxos/getSpanningTreeInterface:getSpanningTreeInterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getSpanningTreeInterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSpanningTreeInterface.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "bpduFilter": {
                        "type": "string"
                    },
                    "bpduGuard": {
                        "type": "string"
                    },
                    "cost": {
                        "type": "integer"
                    },
                    "device": {
                        "type": "string"
                    },
                    "guard": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "linkType": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "bpduFilter",
                    "bpduGuard",
                    "cost",
                    "guard",
                    "id",
                    "interfaceId",
                    "linkType",
                    "mode",
                    "priority"
                ]
            }
        },
        "nxos:nxos/getSubinterface:getSubinterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getSubinterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubinterface.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "bandwidth": {
                        "type": "integer"
                    },
                    "delay": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "encap": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "linkLogging": {
                        "type": "string"
                    },
                    "medium": {
                        "type": "string"
                    },
                    "mtu": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "bandwidth",
                    "delay",
                    "description",
                    "encap",
                    "id",
                    "interfaceId",
                    "linkLogging",
                    "medium",
                    "mtu"
                ]
            }
        },
        "nxos:nxos/getSubinterfaceVrf:getSubinterfaceVrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getSubinterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubinterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "vrfDn": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId",
                    "vrfDn"
                ]
            }
        },
        "nxos:nxos/getSviInterface:getSviInterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getSviInterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSviInterface.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "bandwidth": {
                        "type": "integer"
                    },
                    "delay": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "medium": {
                        "type": "string"
                    },
                    "mtu": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "bandwidth",
                    "delay",
                    "description",
                    "id",
                    "interfaceId",
                    "medium",
                    "mtu"
                ]
            }
        },
        "nxos:nxos/getSviInterfaceVrf:getSviInterfaceVrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getSviInterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSviInterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "vrfDn": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId",
                    "vrfDn"
                ]
            }
        },
        "nxos:nxos/getSystem:getSystem": {
            "inputs": {
                "description": "A collection of arguments for invoking getSystem.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSystem.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ]
            }
        },
        "nxos:nxos/getVpcDomain:getVpcDomain": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcDomain.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcDomain.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "autoRecovery": {
                        "type": "string"
                    },
                    "autoRecoveryInterval": {
                        "type": "integer"
                    },
                    "delayRestoreOrphanPort": {
                        "type": "integer"
                    },
                    "delayRestoreSvi": {
                        "type": "integer"
                    },
                    "delayRestoreVpc": {
                        "type": "integer"
                    },
                    "device": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "integer"
                    },
                    "dscp": {
                        "type": "integer"
                    },
                    "fastConvergence": {
                        "type": "string"
                    },
                    "gracefulConsistencyCheck": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "l3PeerRouter": {
                        "type": "string"
                    },
                    "l3PeerRouterSyslog": {
                        "type": "string"
                    },
                    "l3PeerRouterSyslogInterval": {
                        "type": "integer"
                    },
                    "peerGateway": {
                        "type": "string"
                    },
                    "peerIp": {
                        "type": "string"
                    },
                    "peerSwitch": {
                        "type": "string"
                    },
                    "rolePriority": {
                        "type": "integer"
                    },
                    "sysMac": {
                        "type": "string"
                    },
                    "systemPriority": {
                        "type": "integer"
                    },
                    "track": {
                        "type": "integer"
                    },
                    "virtualIp": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "autoRecovery",
                    "autoRecoveryInterval",
                    "delayRestoreOrphanPort",
                    "delayRestoreSvi",
                    "delayRestoreVpc",
                    "domainId",
                    "dscp",
                    "fastConvergence",
                    "gracefulConsistencyCheck",
                    "id",
                    "l3PeerRouter",
                    "l3PeerRouterSyslog",
                    "l3PeerRouterSyslogInterval",
                    "peerGateway",
                    "peerIp",
                    "peerSwitch",
                    "rolePriority",
                    "sysMac",
                    "systemPriority",
                    "track",
                    "virtualIp"
                ]
            }
        },
        "nxos:nxos/getVpcInstance:getVpcInstance": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcInstance.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcInstance.\n",
                "properties": {
                    "adminState": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:nxos/getVpcInterface:getVpcInterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcInterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "vpcInterfaceId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "vpcInterfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVpcInterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "portChannelInterfaceDn": {
                        "type": "string"
                    },
                    "vpcInterfaceId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "portChannelInterfaceDn",
                    "vpcInterfaceId"
                ]
            }
        },
        "nxos:nxos/getVrf:getVrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrf.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "encap": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "encap",
                    "id",
                    "name"
                ]
            }
        },
        "nxos:nxos/getVrfAddressFamily:getVrfAddressFamily": {
            "inputs": {
                "description": "A collection of arguments for invoking getVrfAddressFamily.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrfAddressFamily.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "id",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getVrfRouteTarget:getVrfRouteTarget": {
            "inputs": {
                "description": "A collection of arguments for invoking getVrfRouteTarget.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "routeTarget": {
                        "type": "string"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "direction",
                    "routeTarget",
                    "routeTargetAddressFamily",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrfRouteTarget.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "routeTarget": {
                        "type": "string"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "direction",
                    "id",
                    "routeTarget",
                    "routeTargetAddressFamily",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getVrfRouteTargetAddressFamily:getVrfRouteTargetAddressFamily": {
            "inputs": {
                "description": "A collection of arguments for invoking getVrfRouteTargetAddressFamily.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "routeTargetAddressFamily",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrfRouteTargetAddressFamily.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "id",
                    "routeTargetAddressFamily",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getVrfRouteTargetDirection:getVrfRouteTargetDirection": {
            "inputs": {
                "description": "A collection of arguments for invoking getVrfRouteTargetDirection.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "direction",
                    "routeTargetAddressFamily",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrfRouteTargetDirection.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "direction",
                    "id",
                    "routeTargetAddressFamily",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getVrfRouting:getVrfRouting": {
            "inputs": {
                "description": "A collection of arguments for invoking getVrfRouting.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrfRouting.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "routeDistinguisher": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "routeDistinguisher",
                    "vrf"
                ]
            }
        }
    }
}