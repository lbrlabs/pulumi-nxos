{
    "name": "nxos",
    "displayName": "Cisco NX-OS",
    "description": "A Pulumi package for creating and managing Cisco nxos XE Devices.",
    "keywords": [
        "pulumi",
        "nxos",
        "category/utility"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`nxos` Terraform Provider](https://github.com/CiscoDevNet/terraform-provider-nxos).",
    "repository": "https://github.com/lbrlabs/pulumi-nxos",
    "pluginDownloadURL": "github://api.github.com/lbrlabs",
    "publisher": "lbrlabs",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "Lbrlabs.PulumiPackage"
        },
        "go": {
            "importBasePath": "github.com/lbrlabs/pulumi-nxos/sdk/go/nxos",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageName": "@lbrlabs/pulumi-nxos",
            "packageDescription": "A Pulumi package for creating and managing Cisco nxos XE Devices.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/CiscoDevNet/terraform-provider-nxos)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-nxos` repo](https://github.com/lbrlabs/pulumi-nxos/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-nxos` repo](https://github.com/CiscoDevNet/terraform-provider-nxos/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "lbrlabs_pulumi_nxos",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/CiscoDevNet/terraform-provider-nxos)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-nxos` repo](https://github.com/lbrlabs/pulumi-nxos/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-nxos` repo](https://github.com/CiscoDevNet/terraform-provider-nxos/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "devices": {
                "type": "array",
                "items": {
                    "$ref": "#/types/nxos:config/devices:devices"
                },
                "description": "This can be used to manage a list of devices from a single provider. All devices must use the same credentials. Each\nresource and data source has an optional attribute named `device`, which can then select a device by its name from this\nlist.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Allow insecure HTTPS client. This can also be set as the NXOS_INSECURE environment variable. Defaults to `true`.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for the NX-OS device account. This can also be set as the NXOS_PASSWORD environment variable.\n",
                "secret": true
            },
            "retries": {
                "type": "integer",
                "description": "Number of retries for REST API calls. This can also be set as the NXOS_RETRIES environment variable. Defaults to `3`.\n"
            },
            "url": {
                "type": "string",
                "description": "URL of the Cisco NX-OS device. This can also be set as the NXOS_URL environment variable. If no URL is provided, the URL\nof the first device from the `devices` list is being used.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for the NX-OS device account. This can also be set as the NXOS_USERNAME environment variable.\n"
            }
        }
    },
    "types": {
        "nxos:config/devices:devices": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:index/Ipv4StaticRouteNextHop:Ipv4StaticRouteNextHop": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "interfaceId": {
                    "type": "string"
                },
                "object": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "tag": {
                    "type": "integer"
                },
                "vrfName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "interfaceId",
                "vrfName"
            ]
        },
        "nxos:index/ProviderDevice:ProviderDevice": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": []
                }
            }
        },
        "nxos:index/RestChildren:RestChildren": {
            "properties": {
                "className": {
                    "type": "string",
                    "description": "Class name of the child object.\n"
                },
                "content": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of key-value pairs which represents the attributes of the child object.\n"
                },
                "rn": {
                    "type": "string",
                    "description": "The relative name of the child object.\n"
                }
            },
            "type": "object",
            "required": [
                "className",
                "rn"
            ]
        },
        "nxos:index/getIpv4StaticRouteNextHop:getIpv4StaticRouteNextHop": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Nexthop address.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief` or `unspecified`. Example: `eth1/1` or `vlan100`.\n"
                },
                "object": {
                    "type": "integer",
                    "description": "Object to be tracked.\n"
                },
                "preference": {
                    "type": "integer",
                    "description": "Route preference.\n"
                },
                "tag": {
                    "type": "integer",
                    "description": "Tag value.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "Nexthop VRF.\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "description",
                "interfaceId",
                "object",
                "preference",
                "tag",
                "vrfName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the nxos package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "devices": {
                "type": "array",
                "items": {
                    "$ref": "#/types/nxos:index/ProviderDevice:ProviderDevice"
                },
                "description": "This can be used to manage a list of devices from a single provider. All devices must use the same credentials. Each\nresource and data source has an optional attribute named `device`, which can then select a device by its name from this\nlist.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Allow insecure HTTPS client. This can also be set as the NXOS_INSECURE environment variable. Defaults to `true`.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for the NX-OS device account. This can also be set as the NXOS_PASSWORD environment variable.\n",
                "secret": true
            },
            "retries": {
                "type": "integer",
                "description": "Number of retries for REST API calls. This can also be set as the NXOS_RETRIES environment variable. Defaults to `3`.\n"
            },
            "url": {
                "type": "string",
                "description": "URL of the Cisco NX-OS device. This can also be set as the NXOS_URL environment variable. If no URL is provided, the URL\nof the first device from the `devices` list is being used.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for the NX-OS device account. This can also be set as the NXOS_USERNAME environment variable.\n"
            }
        },
        "inputProperties": {
            "devices": {
                "type": "array",
                "items": {
                    "$ref": "#/types/nxos:index/ProviderDevice:ProviderDevice"
                },
                "description": "This can be used to manage a list of devices from a single provider. All devices must use the same credentials. Each\nresource and data source has an optional attribute named `device`, which can then select a device by its name from this\nlist.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Allow insecure HTTPS client. This can also be set as the NXOS_INSECURE environment variable. Defaults to `true`.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for the NX-OS device account. This can also be set as the NXOS_PASSWORD environment variable.\n",
                "secret": true
            },
            "retries": {
                "type": "integer",
                "description": "Number of retries for REST API calls. This can also be set as the NXOS_RETRIES environment variable. Defaults to `3`.\n"
            },
            "url": {
                "type": "string",
                "description": "URL of the Cisco NX-OS device. This can also be set as the NXOS_URL environment variable. If no URL is provided, the URL\nof the first device from the `devices` list is being used.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for the NX-OS device account. This can also be set as the NXOS_USERNAME environment variable.\n"
            }
        }
    },
    "resources": {
        "nxos:index/bgp:Bgp": {
            "description": "This resource can manage the global BGP configuration.\n\n- API Documentation: [bgpEntity](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:Entity/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Bgp(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Bgp(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Bgp(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewBgp(ctx, \"example\", \u0026nxos.BgpArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Bgp;\nimport com.pulumi.nxos.BgpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Bgp(\"example\", BgpArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Bgp\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/bgp:Bgp example \"sys/bgp\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Bgp resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/bgpAddressFamily:BgpAddressFamily": {
            "description": "This resource can manage the BGP (VRF) address family configuration.\n\n- API Documentation: [bgpDomAf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:DomAf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.BgpAddressFamily(\"example\", {\n    addressFamily: \"ipv4-ucast\",\n    asn: \"65001\",\n    criticalNexthopTimeout: 1800,\n    nonCriticalNexthopTimeout: 1800,\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.BgpAddressFamily(\"example\",\n    address_family=\"ipv4-ucast\",\n    asn=\"65001\",\n    critical_nexthop_timeout=1800,\n    non_critical_nexthop_timeout=1800,\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.BgpAddressFamily(\"example\", new()\n    {\n        AddressFamily = \"ipv4-ucast\",\n        Asn = \"65001\",\n        CriticalNexthopTimeout = 1800,\n        NonCriticalNexthopTimeout = 1800,\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewBgpAddressFamily(ctx, \"example\", \u0026nxos.BgpAddressFamilyArgs{\n\t\t\tAddressFamily:             pulumi.String(\"ipv4-ucast\"),\n\t\t\tAsn:                       pulumi.String(\"65001\"),\n\t\t\tCriticalNexthopTimeout:    pulumi.Int(1800),\n\t\t\tNonCriticalNexthopTimeout: pulumi.Int(1800),\n\t\t\tVrf:                       pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.BgpAddressFamily;\nimport com.pulumi.nxos.BgpAddressFamilyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpAddressFamily(\"example\", BgpAddressFamilyArgs.builder()        \n            .addressFamily(\"ipv4-ucast\")\n            .asn(\"65001\")\n            .criticalNexthopTimeout(1800)\n            .nonCriticalNexthopTimeout(1800)\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:BgpAddressFamily\n    properties:\n      addressFamily: ipv4-ucast\n      asn: '65001'\n      criticalNexthopTimeout: 1800\n      nonCriticalNexthopTimeout: 1800\n      vrf: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/bgpAddressFamily:BgpAddressFamily example \"sys/bgp/inst/dom-[default]/af-[ipv4-ucast]\"\n```\n\n ",
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "criticalNexthopTimeout": {
                    "type": "integer",
                    "description": "The next-hop address tracking delay timer for critical next-hop reachability routes. - Range: `1`-`4294967295` - Default\nvalue: `3000`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "nonCriticalNexthopTimeout": {
                    "type": "integer",
                    "description": "The next-hop address tracking delay timer for non-critical next-hop reachability routes. - Range: `1`-`4294967295` -\nDefault value: `10000`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "addressFamily",
                "asn",
                "criticalNexthopTimeout",
                "nonCriticalNexthopTimeout",
                "vrf"
            ],
            "inputProperties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "criticalNexthopTimeout": {
                    "type": "integer",
                    "description": "The next-hop address tracking delay timer for critical next-hop reachability routes. - Range: `1`-`4294967295` - Default\nvalue: `3000`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "nonCriticalNexthopTimeout": {
                    "type": "integer",
                    "description": "The next-hop address tracking delay timer for non-critical next-hop reachability routes. - Range: `1`-`4294967295` -\nDefault value: `10000`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "addressFamily",
                "asn",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpAddressFamily resources.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "criticalNexthopTimeout": {
                        "type": "integer",
                        "description": "The next-hop address tracking delay timer for critical next-hop reachability routes. - Range: `1`-`4294967295` - Default\nvalue: `3000`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "nonCriticalNexthopTimeout": {
                        "type": "integer",
                        "description": "The next-hop address tracking delay timer for non-critical next-hop reachability routes. - Range: `1`-`4294967295` -\nDefault value: `10000`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/bgpAdvertisedPrefix:BgpAdvertisedPrefix": {
            "description": "This resource can manage the BGP (VRF) advertised prefix configuration.\n\n- API Documentation: [bgpAdvPrefix](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:AdvPrefix/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.BgpAdvertisedPrefix(\"example\", {\n    addressFamily: \"ipv4-ucast\",\n    asn: \"65001\",\n    prefix: \"192.168.1.0/24\",\n    routeMap: \"rt-map\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.BgpAdvertisedPrefix(\"example\",\n    address_family=\"ipv4-ucast\",\n    asn=\"65001\",\n    prefix=\"192.168.1.0/24\",\n    route_map=\"rt-map\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.BgpAdvertisedPrefix(\"example\", new()\n    {\n        AddressFamily = \"ipv4-ucast\",\n        Asn = \"65001\",\n        Prefix = \"192.168.1.0/24\",\n        RouteMap = \"rt-map\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewBgpAdvertisedPrefix(ctx, \"example\", \u0026nxos.BgpAdvertisedPrefixArgs{\n\t\t\tAddressFamily: pulumi.String(\"ipv4-ucast\"),\n\t\t\tAsn:           pulumi.String(\"65001\"),\n\t\t\tPrefix:        pulumi.String(\"192.168.1.0/24\"),\n\t\t\tRouteMap:      pulumi.String(\"rt-map\"),\n\t\t\tVrf:           pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.BgpAdvertisedPrefix;\nimport com.pulumi.nxos.BgpAdvertisedPrefixArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpAdvertisedPrefix(\"example\", BgpAdvertisedPrefixArgs.builder()        \n            .addressFamily(\"ipv4-ucast\")\n            .asn(\"65001\")\n            .prefix(\"192.168.1.0/24\")\n            .routeMap(\"rt-map\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:BgpAdvertisedPrefix\n    properties:\n      addressFamily: ipv4-ucast\n      asn: '65001'\n      prefix: 192.168.1.0/24\n      routeMap: rt-map\n      vrf: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/bgpAdvertisedPrefix:BgpAdvertisedPrefix example \"sys/bgp/inst/dom-[default]/af-[ipv4-ucast]/prefix-[192.168.1.0/24]\"\n```\n\n ",
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "IP address of the network or prefix to advertise.\n"
                },
                "routeMap": {
                    "type": "string",
                    "description": "Route map to modify attributes.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "addressFamily",
                "asn",
                "prefix",
                "vrf"
            ],
            "inputProperties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "IP address of the network or prefix to advertise.\n"
                },
                "routeMap": {
                    "type": "string",
                    "description": "Route map to modify attributes.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "addressFamily",
                "asn",
                "prefix",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpAdvertisedPrefix resources.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "IP address of the network or prefix to advertise.\n"
                    },
                    "routeMap": {
                        "type": "string",
                        "description": "Route map to modify attributes.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/bgpGracefulRestart:BgpGracefulRestart": {
            "description": "This resource can manage the BGP domain (VRF) graceful restart configuration.\n\n- API Documentation: [bgpGr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:Gr/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.BgpGracefulRestart(\"example\", {\n    asn: \"65001\",\n    restartInterval: 240,\n    staleInterval: 1800,\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.BgpGracefulRestart(\"example\",\n    asn=\"65001\",\n    restart_interval=240,\n    stale_interval=1800,\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.BgpGracefulRestart(\"example\", new()\n    {\n        Asn = \"65001\",\n        RestartInterval = 240,\n        StaleInterval = 1800,\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewBgpGracefulRestart(ctx, \"example\", \u0026nxos.BgpGracefulRestartArgs{\n\t\t\tAsn:             pulumi.String(\"65001\"),\n\t\t\tRestartInterval: pulumi.Int(240),\n\t\t\tStaleInterval:   pulumi.Int(1800),\n\t\t\tVrf:             pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.BgpGracefulRestart;\nimport com.pulumi.nxos.BgpGracefulRestartArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpGracefulRestart(\"example\", BgpGracefulRestartArgs.builder()        \n            .asn(\"65001\")\n            .restartInterval(240)\n            .staleInterval(1800)\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:BgpGracefulRestart\n    properties:\n      asn: '65001'\n      restartInterval: 240\n      staleInterval: 1800\n      vrf: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/bgpGracefulRestart:BgpGracefulRestart example \"sys/bgp/inst/dom-[default]/gr\"\n```\n\n ",
            "properties": {
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "restartInterval": {
                    "type": "integer",
                    "description": "The graceful restart interval. - Range: `1`-`3600` - Default value: `120`\n"
                },
                "staleInterval": {
                    "type": "integer",
                    "description": "The stale interval for routes advertised by the BGP peer. - Range: `1`-`3600` - Default value: `300`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "asn",
                "restartInterval",
                "staleInterval",
                "vrf"
            ],
            "inputProperties": {
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "restartInterval": {
                    "type": "integer",
                    "description": "The graceful restart interval. - Range: `1`-`3600` - Default value: `120`\n"
                },
                "staleInterval": {
                    "type": "integer",
                    "description": "The stale interval for routes advertised by the BGP peer. - Range: `1`-`3600` - Default value: `300`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "asn",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpGracefulRestart resources.\n",
                "properties": {
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "restartInterval": {
                        "type": "integer",
                        "description": "The graceful restart interval. - Range: `1`-`3600` - Default value: `120`\n"
                    },
                    "staleInterval": {
                        "type": "integer",
                        "description": "The stale interval for routes advertised by the BGP peer. - Range: `1`-`3600` - Default value: `300`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/bgpInstance:BgpInstance": {
            "description": "This resource can manage the BGP instance configuration.\n\n- API Documentation: [bgpInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.BgpInstance(\"example\", {\n    adminState: \"enabled\",\n    asn: \"65001\",\n    enhancedErrorHandling: false,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.BgpInstance(\"example\",\n    admin_state=\"enabled\",\n    asn=\"65001\",\n    enhanced_error_handling=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.BgpInstance(\"example\", new()\n    {\n        AdminState = \"enabled\",\n        Asn = \"65001\",\n        EnhancedErrorHandling = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewBgpInstance(ctx, \"example\", \u0026nxos.BgpInstanceArgs{\n\t\t\tAdminState:            pulumi.String(\"enabled\"),\n\t\t\tAsn:                   pulumi.String(\"65001\"),\n\t\t\tEnhancedErrorHandling: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.BgpInstance;\nimport com.pulumi.nxos.BgpInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpInstance(\"example\", BgpInstanceArgs.builder()        \n            .adminState(\"enabled\")\n            .asn(\"65001\")\n            .enhancedErrorHandling(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:BgpInstance\n    properties:\n      adminState: enabled\n      asn: '65001'\n      enhancedErrorHandling: false\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/bgpInstance:BgpInstance example \"sys/bgp/inst\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "enhancedErrorHandling": {
                    "type": "boolean",
                    "description": "Enable BGP Enhanced Error Handling. - Default value: `true`\n"
                }
            },
            "required": [
                "adminState",
                "enhancedErrorHandling"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "enhancedErrorHandling": {
                    "type": "boolean",
                    "description": "Enable BGP Enhanced Error Handling. - Default value: `true`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpInstance resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "enhancedErrorHandling": {
                        "type": "boolean",
                        "description": "Enable BGP Enhanced Error Handling. - Default value: `true`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/bgpPeer:BgpPeer": {
            "description": "This resource can manage the BGP peer configuration.\n\n- API Documentation: [bgpPeer](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:Peer/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.BgpPeer(\"example\", {\n    address: \"192.168.0.1\",\n    asn: \"65001\",\n    description: \"My description\",\n    holdTime: 45,\n    keepalive: 15,\n    peerTemplate: \"SPINE-PEERS\",\n    peerType: \"fabric-internal\",\n    remoteAsn: \"65002\",\n    sourceInterface: \"lo0\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.BgpPeer(\"example\",\n    address=\"192.168.0.1\",\n    asn=\"65001\",\n    description=\"My description\",\n    hold_time=45,\n    keepalive=15,\n    peer_template=\"SPINE-PEERS\",\n    peer_type=\"fabric-internal\",\n    remote_asn=\"65002\",\n    source_interface=\"lo0\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.BgpPeer(\"example\", new()\n    {\n        Address = \"192.168.0.1\",\n        Asn = \"65001\",\n        Description = \"My description\",\n        HoldTime = 45,\n        Keepalive = 15,\n        PeerTemplate = \"SPINE-PEERS\",\n        PeerType = \"fabric-internal\",\n        RemoteAsn = \"65002\",\n        SourceInterface = \"lo0\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewBgpPeer(ctx, \"example\", \u0026nxos.BgpPeerArgs{\n\t\t\tAddress:         pulumi.String(\"192.168.0.1\"),\n\t\t\tAsn:             pulumi.String(\"65001\"),\n\t\t\tDescription:     pulumi.String(\"My description\"),\n\t\t\tHoldTime:        pulumi.Int(45),\n\t\t\tKeepalive:       pulumi.Int(15),\n\t\t\tPeerTemplate:    pulumi.String(\"SPINE-PEERS\"),\n\t\t\tPeerType:        pulumi.String(\"fabric-internal\"),\n\t\t\tRemoteAsn:       pulumi.String(\"65002\"),\n\t\t\tSourceInterface: pulumi.String(\"lo0\"),\n\t\t\tVrf:             pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.BgpPeer;\nimport com.pulumi.nxos.BgpPeerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpPeer(\"example\", BgpPeerArgs.builder()        \n            .address(\"192.168.0.1\")\n            .asn(\"65001\")\n            .description(\"My description\")\n            .holdTime(45)\n            .keepalive(15)\n            .peerTemplate(\"SPINE-PEERS\")\n            .peerType(\"fabric-internal\")\n            .remoteAsn(\"65002\")\n            .sourceInterface(\"lo0\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:BgpPeer\n    properties:\n      address: 192.168.0.1\n      asn: '65001'\n      description: My description\n      holdTime: 45\n      keepalive: 15\n      peerTemplate: SPINE-PEERS\n      peerType: fabric-internal\n      remoteAsn: '65002'\n      sourceInterface: lo0\n      vrf: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/bgpPeer:BgpPeer example \"sys/bgp/inst/dom-[default]/peer-[192.168.0.1]\"\n```\n\n ",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Peer address.\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Peer description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "holdTime": {
                    "type": "integer",
                    "description": "BGP Hold Timer in seconds. The value must be greater than the keepalive timer - Range: `3`-`3600` - Default value: `180`\n"
                },
                "keepalive": {
                    "type": "integer",
                    "description": "BGP Keepalive Timer in seconds - Range: `0`-`3600` - Default value: `60`\n"
                },
                "peerTemplate": {
                    "type": "string",
                    "description": "Peer template name.\n"
                },
                "peerType": {
                    "type": "string",
                    "description": "Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:\n`fabric-internal`\n"
                },
                "remoteAsn": {
                    "type": "string",
                    "description": "Peer autonomous system number.\n"
                },
                "sourceInterface": {
                    "type": "string",
                    "description": "Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "asn",
                "holdTime",
                "keepalive",
                "peerType",
                "sourceInterface",
                "vrf"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Peer address.\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Peer description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "holdTime": {
                    "type": "integer",
                    "description": "BGP Hold Timer in seconds. The value must be greater than the keepalive timer - Range: `3`-`3600` - Default value: `180`\n"
                },
                "keepalive": {
                    "type": "integer",
                    "description": "BGP Keepalive Timer in seconds - Range: `0`-`3600` - Default value: `60`\n"
                },
                "peerTemplate": {
                    "type": "string",
                    "description": "Peer template name.\n"
                },
                "peerType": {
                    "type": "string",
                    "description": "Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:\n`fabric-internal`\n"
                },
                "remoteAsn": {
                    "type": "string",
                    "description": "Peer autonomous system number.\n"
                },
                "sourceInterface": {
                    "type": "string",
                    "description": "Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "asn",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpPeer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Peer address.\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Peer description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "holdTime": {
                        "type": "integer",
                        "description": "BGP Hold Timer in seconds. The value must be greater than the keepalive timer - Range: `3`-`3600` - Default value: `180`\n"
                    },
                    "keepalive": {
                        "type": "integer",
                        "description": "BGP Keepalive Timer in seconds - Range: `0`-`3600` - Default value: `60`\n"
                    },
                    "peerTemplate": {
                        "type": "string",
                        "description": "Peer template name.\n"
                    },
                    "peerType": {
                        "type": "string",
                        "description": "Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:\n`fabric-internal`\n"
                    },
                    "remoteAsn": {
                        "type": "string",
                        "description": "Peer autonomous system number.\n"
                    },
                    "sourceInterface": {
                        "type": "string",
                        "description": "Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/bgpPeerAddressFamily:BgpPeerAddressFamily": {
            "description": "This resource can manage the BGP peer address family configuration.\n\n- API Documentation: [bgpPeerAf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:PeerAf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.BgpPeerAddressFamily(\"example\", {\n    address: \"192.168.0.1\",\n    addressFamily: \"ipv4-ucast\",\n    asn: \"65001\",\n    control: \"nh-self,rr-client\",\n    sendCommunityExtended: \"enabled\",\n    sendCommunityStandard: \"enabled\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.BgpPeerAddressFamily(\"example\",\n    address=\"192.168.0.1\",\n    address_family=\"ipv4-ucast\",\n    asn=\"65001\",\n    control=\"nh-self,rr-client\",\n    send_community_extended=\"enabled\",\n    send_community_standard=\"enabled\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.BgpPeerAddressFamily(\"example\", new()\n    {\n        Address = \"192.168.0.1\",\n        AddressFamily = \"ipv4-ucast\",\n        Asn = \"65001\",\n        Control = \"nh-self,rr-client\",\n        SendCommunityExtended = \"enabled\",\n        SendCommunityStandard = \"enabled\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewBgpPeerAddressFamily(ctx, \"example\", \u0026nxos.BgpPeerAddressFamilyArgs{\n\t\t\tAddress:               pulumi.String(\"192.168.0.1\"),\n\t\t\tAddressFamily:         pulumi.String(\"ipv4-ucast\"),\n\t\t\tAsn:                   pulumi.String(\"65001\"),\n\t\t\tControl:               pulumi.String(\"nh-self,rr-client\"),\n\t\t\tSendCommunityExtended: pulumi.String(\"enabled\"),\n\t\t\tSendCommunityStandard: pulumi.String(\"enabled\"),\n\t\t\tVrf:                   pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.BgpPeerAddressFamily;\nimport com.pulumi.nxos.BgpPeerAddressFamilyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpPeerAddressFamily(\"example\", BgpPeerAddressFamilyArgs.builder()        \n            .address(\"192.168.0.1\")\n            .addressFamily(\"ipv4-ucast\")\n            .asn(\"65001\")\n            .control(\"nh-self,rr-client\")\n            .sendCommunityExtended(\"enabled\")\n            .sendCommunityStandard(\"enabled\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:BgpPeerAddressFamily\n    properties:\n      address: 192.168.0.1\n      addressFamily: ipv4-ucast\n      asn: '65001'\n      control: nh-self,rr-client\n      sendCommunityExtended: enabled\n      sendCommunityStandard: enabled\n      vrf: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/bgpPeerAddressFamily:BgpPeerAddressFamily example \"sys/bgp/inst/dom-[default]/peer-[192.168.0.1]/af-[ipv4-ucast]\"\n```\n\n ",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Peer address.\n"
                },
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "control": {
                    "type": "string",
                    "description": "Peer address-family control. Choices: `rr-client`, `nh-self`, `dis-peer-as-check`, `allow-self-as`, `default-originate`,\n`advertisement-interval`, `suppress-inactive`, `nh-self-all`. Can be an empty string. Allowed formats: - Single value.\nExample: `nh-self` - Multiple values (comma-separated). Example:\n`dis-peer-as-check,nh-self,rr-client,suppress-inactive`. In this case values must be in alphabetical order.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "sendCommunityExtended": {
                    "type": "string",
                    "description": "Send-community extended. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "sendCommunityStandard": {
                    "type": "string",
                    "description": "Send-community standard. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "addressFamily",
                "asn",
                "sendCommunityExtended",
                "sendCommunityStandard",
                "vrf"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Peer address.\n"
                },
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "control": {
                    "type": "string",
                    "description": "Peer address-family control. Choices: `rr-client`, `nh-self`, `dis-peer-as-check`, `allow-self-as`, `default-originate`,\n`advertisement-interval`, `suppress-inactive`, `nh-self-all`. Can be an empty string. Allowed formats: - Single value.\nExample: `nh-self` - Multiple values (comma-separated). Example:\n`dis-peer-as-check,nh-self,rr-client,suppress-inactive`. In this case values must be in alphabetical order.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "sendCommunityExtended": {
                    "type": "string",
                    "description": "Send-community extended. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "sendCommunityStandard": {
                    "type": "string",
                    "description": "Send-community standard. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "addressFamily",
                "asn",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpPeerAddressFamily resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Peer address.\n"
                    },
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "control": {
                        "type": "string",
                        "description": "Peer address-family control. Choices: `rr-client`, `nh-self`, `dis-peer-as-check`, `allow-self-as`, `default-originate`,\n`advertisement-interval`, `suppress-inactive`, `nh-self-all`. Can be an empty string. Allowed formats: - Single value.\nExample: `nh-self` - Multiple values (comma-separated). Example:\n`dis-peer-as-check,nh-self,rr-client,suppress-inactive`. In this case values must be in alphabetical order.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "sendCommunityExtended": {
                        "type": "string",
                        "description": "Send-community extended. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "sendCommunityStandard": {
                        "type": "string",
                        "description": "Send-community standard. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/bgpPeerAddressFamilyPrefixListControl:BgpPeerAddressFamilyPrefixListControl": {
            "description": "This resource can manage the BGP peer address family prefix list control configuration.\n\n- API Documentation: [bgpPfxCtrlP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:PfxCtrlP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.BgpPeerAddressFamilyPrefixListControl(\"example\", {\n    address: \"192.168.0.1\",\n    addressFamily: \"ipv4-ucast\",\n    asn: \"65001\",\n    direction: \"in\",\n    list: \"PREFIX_LIST1\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.BgpPeerAddressFamilyPrefixListControl(\"example\",\n    address=\"192.168.0.1\",\n    address_family=\"ipv4-ucast\",\n    asn=\"65001\",\n    direction=\"in\",\n    list=\"PREFIX_LIST1\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.BgpPeerAddressFamilyPrefixListControl(\"example\", new()\n    {\n        Address = \"192.168.0.1\",\n        AddressFamily = \"ipv4-ucast\",\n        Asn = \"65001\",\n        Direction = \"in\",\n        List = \"PREFIX_LIST1\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewBgpPeerAddressFamilyPrefixListControl(ctx, \"example\", \u0026nxos.BgpPeerAddressFamilyPrefixListControlArgs{\n\t\t\tAddress:       pulumi.String(\"192.168.0.1\"),\n\t\t\tAddressFamily: pulumi.String(\"ipv4-ucast\"),\n\t\t\tAsn:           pulumi.String(\"65001\"),\n\t\t\tDirection:     pulumi.String(\"in\"),\n\t\t\tList:          pulumi.String(\"PREFIX_LIST1\"),\n\t\t\tVrf:           pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.BgpPeerAddressFamilyPrefixListControl;\nimport com.pulumi.nxos.BgpPeerAddressFamilyPrefixListControlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpPeerAddressFamilyPrefixListControl(\"example\", BgpPeerAddressFamilyPrefixListControlArgs.builder()        \n            .address(\"192.168.0.1\")\n            .addressFamily(\"ipv4-ucast\")\n            .asn(\"65001\")\n            .direction(\"in\")\n            .list(\"PREFIX_LIST1\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:BgpPeerAddressFamilyPrefixListControl\n    properties:\n      address: 192.168.0.1\n      addressFamily: ipv4-ucast\n      asn: '65001'\n      direction: in\n      list: PREFIX_LIST1\n      vrf: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/bgpPeerAddressFamilyPrefixListControl:BgpPeerAddressFamilyPrefixListControl example \"sys/bgp/inst/dom-[default]/peer-[192.168.0.1]/af-[ipv4-ucast]/pfxctrl-[in]\"\n```\n\n ",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Peer address.\n"
                },
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Control direction. - Choices: `in`, `out` - Default value: `in`\n"
                },
                "list": {
                    "type": "string",
                    "description": "Route Control Prefix-List name.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "addressFamily",
                "asn",
                "direction",
                "vrf"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Peer address.\n"
                },
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Control direction. - Choices: `in`, `out` - Default value: `in`\n"
                },
                "list": {
                    "type": "string",
                    "description": "Route Control Prefix-List name.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "addressFamily",
                "asn",
                "direction",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpPeerAddressFamilyPrefixListControl resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Peer address.\n"
                    },
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Control direction. - Choices: `in`, `out` - Default value: `in`\n"
                    },
                    "list": {
                        "type": "string",
                        "description": "Route Control Prefix-List name.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/bgpPeerAddressFamilyRouteControl:BgpPeerAddressFamilyRouteControl": {
            "description": "This resource can manage the BGP peer address family route control configuration.\n\n- API Documentation: [bgpRtCtrlP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:RtCtrlP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.BgpPeerAddressFamilyRouteControl(\"example\", {\n    address: \"192.168.0.1\",\n    addressFamily: \"ipv4-ucast\",\n    asn: \"65001\",\n    direction: \"in\",\n    routeMapName: \"ROUTE_MAP1\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.BgpPeerAddressFamilyRouteControl(\"example\",\n    address=\"192.168.0.1\",\n    address_family=\"ipv4-ucast\",\n    asn=\"65001\",\n    direction=\"in\",\n    route_map_name=\"ROUTE_MAP1\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.BgpPeerAddressFamilyRouteControl(\"example\", new()\n    {\n        Address = \"192.168.0.1\",\n        AddressFamily = \"ipv4-ucast\",\n        Asn = \"65001\",\n        Direction = \"in\",\n        RouteMapName = \"ROUTE_MAP1\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewBgpPeerAddressFamilyRouteControl(ctx, \"example\", \u0026nxos.BgpPeerAddressFamilyRouteControlArgs{\n\t\t\tAddress:       pulumi.String(\"192.168.0.1\"),\n\t\t\tAddressFamily: pulumi.String(\"ipv4-ucast\"),\n\t\t\tAsn:           pulumi.String(\"65001\"),\n\t\t\tDirection:     pulumi.String(\"in\"),\n\t\t\tRouteMapName:  pulumi.String(\"ROUTE_MAP1\"),\n\t\t\tVrf:           pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.BgpPeerAddressFamilyRouteControl;\nimport com.pulumi.nxos.BgpPeerAddressFamilyRouteControlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpPeerAddressFamilyRouteControl(\"example\", BgpPeerAddressFamilyRouteControlArgs.builder()        \n            .address(\"192.168.0.1\")\n            .addressFamily(\"ipv4-ucast\")\n            .asn(\"65001\")\n            .direction(\"in\")\n            .routeMapName(\"ROUTE_MAP1\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:BgpPeerAddressFamilyRouteControl\n    properties:\n      address: 192.168.0.1\n      addressFamily: ipv4-ucast\n      asn: '65001'\n      direction: in\n      routeMapName: ROUTE_MAP1\n      vrf: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/bgpPeerAddressFamilyRouteControl:BgpPeerAddressFamilyRouteControl example \"sys/bgp/inst/dom-[default]/peer-[192.168.0.1]/af-[ipv4-ucast]/rtctrl-[in]\"\n```\n\n ",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Peer address.\n"
                },
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Control direction. - Choices: `in`, `out` - Default value: `in`\n"
                },
                "routeMapName": {
                    "type": "string",
                    "description": "Route Control Route-Map name.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "addressFamily",
                "asn",
                "direction",
                "vrf"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Peer address.\n"
                },
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Control direction. - Choices: `in`, `out` - Default value: `in`\n"
                },
                "routeMapName": {
                    "type": "string",
                    "description": "Route Control Route-Map name.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "addressFamily",
                "asn",
                "direction",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpPeerAddressFamilyRouteControl resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Peer address.\n"
                    },
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Control direction. - Choices: `in`, `out` - Default value: `in`\n"
                    },
                    "routeMapName": {
                        "type": "string",
                        "description": "Route Control Route-Map name.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/bgpPeerTemplate:BgpPeerTemplate": {
            "description": "This resource can manage the BGP peer template configuration.\n\n- API Documentation: [bgpPeerCont](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:PeerCont/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.BgpPeerTemplate(\"example\", {\n    asn: \"65001\",\n    description: \"My Description\",\n    peerType: \"fabric-internal\",\n    remoteAsn: \"65002\",\n    sourceInterface: \"lo0\",\n    templateName: \"SPINE-PEERS\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.BgpPeerTemplate(\"example\",\n    asn=\"65001\",\n    description=\"My Description\",\n    peer_type=\"fabric-internal\",\n    remote_asn=\"65002\",\n    source_interface=\"lo0\",\n    template_name=\"SPINE-PEERS\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.BgpPeerTemplate(\"example\", new()\n    {\n        Asn = \"65001\",\n        Description = \"My Description\",\n        PeerType = \"fabric-internal\",\n        RemoteAsn = \"65002\",\n        SourceInterface = \"lo0\",\n        TemplateName = \"SPINE-PEERS\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewBgpPeerTemplate(ctx, \"example\", \u0026nxos.BgpPeerTemplateArgs{\n\t\t\tAsn:             pulumi.String(\"65001\"),\n\t\t\tDescription:     pulumi.String(\"My Description\"),\n\t\t\tPeerType:        pulumi.String(\"fabric-internal\"),\n\t\t\tRemoteAsn:       pulumi.String(\"65002\"),\n\t\t\tSourceInterface: pulumi.String(\"lo0\"),\n\t\t\tTemplateName:    pulumi.String(\"SPINE-PEERS\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.BgpPeerTemplate;\nimport com.pulumi.nxos.BgpPeerTemplateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpPeerTemplate(\"example\", BgpPeerTemplateArgs.builder()        \n            .asn(\"65001\")\n            .description(\"My Description\")\n            .peerType(\"fabric-internal\")\n            .remoteAsn(\"65002\")\n            .sourceInterface(\"lo0\")\n            .templateName(\"SPINE-PEERS\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:BgpPeerTemplate\n    properties:\n      asn: '65001'\n      description: My Description\n      peerType: fabric-internal\n      remoteAsn: '65002'\n      sourceInterface: lo0\n      templateName: SPINE-PEERS\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/bgpPeerTemplate:BgpPeerTemplate example \"sys/bgp/inst/dom-[default]/peercont-[SPINE-PEERS]\"\n```\n\n ",
            "properties": {
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Peer template description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "peerType": {
                    "type": "string",
                    "description": "Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:\n`fabric-internal`\n"
                },
                "remoteAsn": {
                    "type": "string",
                    "description": "Peer template autonomous system number.\n"
                },
                "sourceInterface": {
                    "type": "string",
                    "description": "Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Peer template name.\n"
                }
            },
            "required": [
                "asn",
                "peerType",
                "sourceInterface",
                "templateName"
            ],
            "inputProperties": {
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Peer template description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "peerType": {
                    "type": "string",
                    "description": "Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:\n`fabric-internal`\n"
                },
                "remoteAsn": {
                    "type": "string",
                    "description": "Peer template autonomous system number.\n"
                },
                "sourceInterface": {
                    "type": "string",
                    "description": "Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Peer template name.\n"
                }
            },
            "requiredInputs": [
                "asn",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpPeerTemplate resources.\n",
                "properties": {
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Peer template description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "peerType": {
                        "type": "string",
                        "description": "Neighbor Fabric Type. - Choices: `fabric-internal`, `fabric-external`, `fabric-border-leaf` - Default value:\n`fabric-internal`\n"
                    },
                    "remoteAsn": {
                        "type": "string",
                        "description": "Peer template autonomous system number.\n"
                    },
                    "sourceInterface": {
                        "type": "string",
                        "description": "Source Interface. Must match first field in the output of `show intf brief`. - Default value: `unspecified`\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Peer template name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/bgpPeerTemplateAddressFamily:BgpPeerTemplateAddressFamily": {
            "description": "This resource can manage the BGP peer template address family configuration.\n\n- API Documentation: [bgpPeerAf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:PeerAf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.BgpPeerTemplateAddressFamily(\"example\", {\n    addressFamily: \"ipv4-ucast\",\n    asn: \"65001\",\n    control: \"nh-self,rr-client\",\n    sendCommunityExtended: \"enabled\",\n    sendCommunityStandard: \"enabled\",\n    templateName: \"SPINE-PEERS\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.BgpPeerTemplateAddressFamily(\"example\",\n    address_family=\"ipv4-ucast\",\n    asn=\"65001\",\n    control=\"nh-self,rr-client\",\n    send_community_extended=\"enabled\",\n    send_community_standard=\"enabled\",\n    template_name=\"SPINE-PEERS\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.BgpPeerTemplateAddressFamily(\"example\", new()\n    {\n        AddressFamily = \"ipv4-ucast\",\n        Asn = \"65001\",\n        Control = \"nh-self,rr-client\",\n        SendCommunityExtended = \"enabled\",\n        SendCommunityStandard = \"enabled\",\n        TemplateName = \"SPINE-PEERS\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewBgpPeerTemplateAddressFamily(ctx, \"example\", \u0026nxos.BgpPeerTemplateAddressFamilyArgs{\n\t\t\tAddressFamily:         pulumi.String(\"ipv4-ucast\"),\n\t\t\tAsn:                   pulumi.String(\"65001\"),\n\t\t\tControl:               pulumi.String(\"nh-self,rr-client\"),\n\t\t\tSendCommunityExtended: pulumi.String(\"enabled\"),\n\t\t\tSendCommunityStandard: pulumi.String(\"enabled\"),\n\t\t\tTemplateName:          pulumi.String(\"SPINE-PEERS\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.BgpPeerTemplateAddressFamily;\nimport com.pulumi.nxos.BgpPeerTemplateAddressFamilyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpPeerTemplateAddressFamily(\"example\", BgpPeerTemplateAddressFamilyArgs.builder()        \n            .addressFamily(\"ipv4-ucast\")\n            .asn(\"65001\")\n            .control(\"nh-self,rr-client\")\n            .sendCommunityExtended(\"enabled\")\n            .sendCommunityStandard(\"enabled\")\n            .templateName(\"SPINE-PEERS\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:BgpPeerTemplateAddressFamily\n    properties:\n      addressFamily: ipv4-ucast\n      asn: '65001'\n      control: nh-self,rr-client\n      sendCommunityExtended: enabled\n      sendCommunityStandard: enabled\n      templateName: SPINE-PEERS\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/bgpPeerTemplateAddressFamily:BgpPeerTemplateAddressFamily example \"sys/bgp/inst/dom-[default]/peercont-[SPINE-PEERS]/af-[ipv4-ucast]\"\n```\n\n ",
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "control": {
                    "type": "string",
                    "description": "Peer address-family control. Choices: `rr-client`, `nh-self`, `dis-peer-as-check`, `allow-self-as`, `default-originate`,\n`advertisement-interval`, `suppress-inactive`, `nh-self-all`. Can be an empty string. Allowed formats: - Single value.\nExample: `nh-self` - Multiple values (comma-separated). Example:\n`dis-peer-as-check,nh-self,rr-client,suppress-inactive`. In this case values must be in alphabetical order.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "sendCommunityExtended": {
                    "type": "string",
                    "description": "Send-community extended. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "sendCommunityStandard": {
                    "type": "string",
                    "description": "Send-community standard. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Peer template name.\n"
                }
            },
            "required": [
                "addressFamily",
                "asn",
                "sendCommunityExtended",
                "sendCommunityStandard",
                "templateName"
            ],
            "inputProperties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "control": {
                    "type": "string",
                    "description": "Peer address-family control. Choices: `rr-client`, `nh-self`, `dis-peer-as-check`, `allow-self-as`, `default-originate`,\n`advertisement-interval`, `suppress-inactive`, `nh-self-all`. Can be an empty string. Allowed formats: - Single value.\nExample: `nh-self` - Multiple values (comma-separated). Example:\n`dis-peer-as-check,nh-self,rr-client,suppress-inactive`. In this case values must be in alphabetical order.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "sendCommunityExtended": {
                    "type": "string",
                    "description": "Send-community extended. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "sendCommunityStandard": {
                    "type": "string",
                    "description": "Send-community standard. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Peer template name.\n"
                }
            },
            "requiredInputs": [
                "addressFamily",
                "asn",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpPeerTemplateAddressFamily resources.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default\nvalue: `ipv4-ucast`\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "control": {
                        "type": "string",
                        "description": "Peer address-family control. Choices: `rr-client`, `nh-self`, `dis-peer-as-check`, `allow-self-as`, `default-originate`,\n`advertisement-interval`, `suppress-inactive`, `nh-self-all`. Can be an empty string. Allowed formats: - Single value.\nExample: `nh-self` - Multiple values (comma-separated). Example:\n`dis-peer-as-check,nh-self,rr-client,suppress-inactive`. In this case values must be in alphabetical order.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "sendCommunityExtended": {
                        "type": "string",
                        "description": "Send-community extended. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "sendCommunityStandard": {
                        "type": "string",
                        "description": "Send-community standard. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Peer template name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/bgpPeerTemplateMaxPrefix:BgpPeerTemplateMaxPrefix": {
            "description": "This resource can manage the BGP peer template Maximum Prefix Policy configuration.\n\n- API Documentation: [bgpMaxPfxP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:MaxPfxP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.BgpPeerTemplateMaxPrefix(\"example\", {\n    action: \"log\",\n    addressFamily: \"ipv4-ucast\",\n    asn: \"65001\",\n    maximumPrefix: 10000,\n    restartTime: 0,\n    templateName: \"SPINE-PEERS\",\n    threshold: 30,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.BgpPeerTemplateMaxPrefix(\"example\",\n    action=\"log\",\n    address_family=\"ipv4-ucast\",\n    asn=\"65001\",\n    maximum_prefix=10000,\n    restart_time=0,\n    template_name=\"SPINE-PEERS\",\n    threshold=30)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.BgpPeerTemplateMaxPrefix(\"example\", new()\n    {\n        Action = \"log\",\n        AddressFamily = \"ipv4-ucast\",\n        Asn = \"65001\",\n        MaximumPrefix = 10000,\n        RestartTime = 0,\n        TemplateName = \"SPINE-PEERS\",\n        Threshold = 30,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewBgpPeerTemplateMaxPrefix(ctx, \"example\", \u0026nxos.BgpPeerTemplateMaxPrefixArgs{\n\t\t\tAction:        pulumi.String(\"log\"),\n\t\t\tAddressFamily: pulumi.String(\"ipv4-ucast\"),\n\t\t\tAsn:           pulumi.String(\"65001\"),\n\t\t\tMaximumPrefix: pulumi.Int(10000),\n\t\t\tRestartTime:   pulumi.Int(0),\n\t\t\tTemplateName:  pulumi.String(\"SPINE-PEERS\"),\n\t\t\tThreshold:     pulumi.Int(30),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.BgpPeerTemplateMaxPrefix;\nimport com.pulumi.nxos.BgpPeerTemplateMaxPrefixArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpPeerTemplateMaxPrefix(\"example\", BgpPeerTemplateMaxPrefixArgs.builder()        \n            .action(\"log\")\n            .addressFamily(\"ipv4-ucast\")\n            .asn(\"65001\")\n            .maximumPrefix(10000)\n            .restartTime(0)\n            .templateName(\"SPINE-PEERS\")\n            .threshold(30)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:BgpPeerTemplateMaxPrefix\n    properties:\n      action: log\n      addressFamily: ipv4-ucast\n      asn: '65001'\n      maximumPrefix: 10000\n      restartTime: 0\n      templateName: SPINE-PEERS\n      threshold: 30\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/bgpPeerTemplateMaxPrefix:BgpPeerTemplateMaxPrefix example \"sys/bgp/inst/dom-[default]/peercont-[SPINE-PEERS]/af-[ipv4-ucast]/maxpfxp\"\n```\n\n ",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action to do when limit is exceeded. - Choices: `log`, `shut`, `restart` - Default value: `shut`\n"
                },
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "maximumPrefix": {
                    "type": "integer",
                    "description": "Maximum number of prefixes allowed from the peer. - Range: `0`-`4294967295`\n"
                },
                "restartTime": {
                    "type": "integer",
                    "description": "The period of time in minutes before restarting the peer when the prefix limit is reached. - Default value: `0`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Peer template name.\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "The period of time in minutes before restarting the peer when the prefix limit is reached. - Range: `0`-`100` - Default\nvalue: `0`\n"
                }
            },
            "required": [
                "action",
                "addressFamily",
                "asn",
                "restartTime",
                "templateName",
                "threshold"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Action to do when limit is exceeded. - Choices: `log`, `shut`, `restart` - Default value: `shut`\n"
                },
                "addressFamily": {
                    "type": "string",
                    "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                },
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "maximumPrefix": {
                    "type": "integer",
                    "description": "Maximum number of prefixes allowed from the peer. - Range: `0`-`4294967295`\n"
                },
                "restartTime": {
                    "type": "integer",
                    "description": "The period of time in minutes before restarting the peer when the prefix limit is reached. - Default value: `0`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Peer template name.\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "The period of time in minutes before restarting the peer when the prefix limit is reached. - Range: `0`-`100` - Default\nvalue: `0`\n"
                }
            },
            "requiredInputs": [
                "addressFamily",
                "asn",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpPeerTemplateMaxPrefix resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Action to do when limit is exceeded. - Choices: `log`, `shut`, `restart` - Default value: `shut`\n"
                    },
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family. - Choices: `ipv4-ucast`, `ipv4-mcast`, `vpnv4-ucast`, `ipv6-ucast`, `ipv6-mcast`, `vpnv6-ucast`,\n`vpnv6-mcast`, `l2vpn-evpn`, `ipv4-lucast`, `ipv6-lucast`, `lnkstate`, `ipv4-mvpn`, `ipv6-mvpn`, `l2vpn-vpls`,\n`ipv4-mdt` - Default value: `ipv4-ucast`\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "maximumPrefix": {
                        "type": "integer",
                        "description": "Maximum number of prefixes allowed from the peer. - Range: `0`-`4294967295`\n"
                    },
                    "restartTime": {
                        "type": "integer",
                        "description": "The period of time in minutes before restarting the peer when the prefix limit is reached. - Default value: `0`\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Peer template name.\n"
                    },
                    "threshold": {
                        "type": "integer",
                        "description": "The period of time in minutes before restarting the peer when the prefix limit is reached. - Range: `0`-`100` - Default\nvalue: `0`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/bgpRouteControl:BgpRouteControl": {
            "description": "This resource can manage the BGP Route Control configuration.\n\n- API Documentation: [bgpRtCtrl](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:RtCtrl/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.BgpRouteControl(\"example\", {\n    asn: \"65001\",\n    enforceFirstAs: \"disabled\",\n    fibAccelerate: \"enabled\",\n    logNeighborChanges: \"enabled\",\n    suppressRoutes: \"disabled\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.BgpRouteControl(\"example\",\n    asn=\"65001\",\n    enforce_first_as=\"disabled\",\n    fib_accelerate=\"enabled\",\n    log_neighbor_changes=\"enabled\",\n    suppress_routes=\"disabled\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.BgpRouteControl(\"example\", new()\n    {\n        Asn = \"65001\",\n        EnforceFirstAs = \"disabled\",\n        FibAccelerate = \"enabled\",\n        LogNeighborChanges = \"enabled\",\n        SuppressRoutes = \"disabled\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewBgpRouteControl(ctx, \"example\", \u0026nxos.BgpRouteControlArgs{\n\t\t\tAsn:                pulumi.String(\"65001\"),\n\t\t\tEnforceFirstAs:     pulumi.String(\"disabled\"),\n\t\t\tFibAccelerate:      pulumi.String(\"enabled\"),\n\t\t\tLogNeighborChanges: pulumi.String(\"enabled\"),\n\t\t\tSuppressRoutes:     pulumi.String(\"disabled\"),\n\t\t\tVrf:                pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.BgpRouteControl;\nimport com.pulumi.nxos.BgpRouteControlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpRouteControl(\"example\", BgpRouteControlArgs.builder()        \n            .asn(\"65001\")\n            .enforceFirstAs(\"disabled\")\n            .fibAccelerate(\"enabled\")\n            .logNeighborChanges(\"enabled\")\n            .suppressRoutes(\"disabled\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:BgpRouteControl\n    properties:\n      asn: '65001'\n      enforceFirstAs: disabled\n      fibAccelerate: enabled\n      logNeighborChanges: enabled\n      suppressRoutes: disabled\n      vrf: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/bgpRouteControl:BgpRouteControl example \"sys/bgp/inst/dom-[default]/rtctrl\"\n```\n\n ",
            "properties": {
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "enforceFirstAs": {
                    "type": "string",
                    "description": "Enforce First AS For Ebgp. Can be configured only for VRF default. - Choices: `enabled`, `disabled` - Default value:\n`enabled`\n"
                },
                "fibAccelerate": {
                    "type": "string",
                    "description": "Accelerate the hardware updates for IP/IPv6 adjacencies for neighbor. Can be configured only for VRF default. - Choices:\n`enabled`, `disabled` - Default value: `disabled`\n"
                },
                "logNeighborChanges": {
                    "type": "string",
                    "description": "Log Neighbor Changes. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "suppressRoutes": {
                    "type": "string",
                    "description": "Suppress Routes: Advertise only routes that are programmed in hardware to peers. Can be configured only for VRF default.\n- Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "asn",
                "enforceFirstAs",
                "fibAccelerate",
                "logNeighborChanges",
                "suppressRoutes",
                "vrf"
            ],
            "inputProperties": {
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "enforceFirstAs": {
                    "type": "string",
                    "description": "Enforce First AS For Ebgp. Can be configured only for VRF default. - Choices: `enabled`, `disabled` - Default value:\n`enabled`\n"
                },
                "fibAccelerate": {
                    "type": "string",
                    "description": "Accelerate the hardware updates for IP/IPv6 adjacencies for neighbor. Can be configured only for VRF default. - Choices:\n`enabled`, `disabled` - Default value: `disabled`\n"
                },
                "logNeighborChanges": {
                    "type": "string",
                    "description": "Log Neighbor Changes. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "suppressRoutes": {
                    "type": "string",
                    "description": "Suppress Routes: Advertise only routes that are programmed in hardware to peers. Can be configured only for VRF default.\n- Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "asn",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpRouteControl resources.\n",
                "properties": {
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "enforceFirstAs": {
                        "type": "string",
                        "description": "Enforce First AS For Ebgp. Can be configured only for VRF default. - Choices: `enabled`, `disabled` - Default value:\n`enabled`\n"
                    },
                    "fibAccelerate": {
                        "type": "string",
                        "description": "Accelerate the hardware updates for IP/IPv6 adjacencies for neighbor. Can be configured only for VRF default. - Choices:\n`enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "logNeighborChanges": {
                        "type": "string",
                        "description": "Log Neighbor Changes. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "suppressRoutes": {
                        "type": "string",
                        "description": "Suppress Routes: Advertise only routes that are programmed in hardware to peers. Can be configured only for VRF default.\n- Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/bgpVrf:BgpVrf": {
            "description": "This resource can manage the BGP domain (VRF) configuration.\n\n- API Documentation: [bgpDom](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:Dom/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.BgpVrf(\"example\", {\n    asn: \"65001\",\n    routerId: \"1.1.1.1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.BgpVrf(\"example\",\n    asn=\"65001\",\n    router_id=\"1.1.1.1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.BgpVrf(\"example\", new()\n    {\n        Asn = \"65001\",\n        RouterId = \"1.1.1.1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewBgpVrf(ctx, \"example\", \u0026nxos.BgpVrfArgs{\n\t\t\tAsn:      pulumi.String(\"65001\"),\n\t\t\tRouterId: pulumi.String(\"1.1.1.1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.BgpVrf;\nimport com.pulumi.nxos.BgpVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpVrf(\"example\", BgpVrfArgs.builder()        \n            .asn(\"65001\")\n            .routerId(\"1.1.1.1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:BgpVrf\n    properties:\n      asn: '65001'\n      routerId: 1.1.1.1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/bgpVrf:BgpVrf example \"sys/bgp/inst/dom-[default]\"\n```\n\n ",
            "properties": {
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                },
                "routerId": {
                    "type": "string",
                    "description": "Router ID.\n"
                }
            },
            "required": [
                "asn",
                "name"
            ],
            "inputProperties": {
                "asn": {
                    "type": "string",
                    "description": "Autonomous system number.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                },
                "routerId": {
                    "type": "string",
                    "description": "Router ID.\n"
                }
            },
            "requiredInputs": [
                "asn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpVrf resources.\n",
                "properties": {
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    },
                    "routerId": {
                        "type": "string",
                        "description": "Router ID.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/bridgeDomain:BridgeDomain": {
            "description": "This resource can manage a bridge domain.\n\n- API Documentation: [l2BD](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%202/l2:BD/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.BridgeDomain(\"example\", {\n    accessEncap: \"unknown\",\n    fabricEncap: \"vlan-10\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.BridgeDomain(\"example\",\n    access_encap=\"unknown\",\n    fabric_encap=\"vlan-10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.BridgeDomain(\"example\", new()\n    {\n        AccessEncap = \"unknown\",\n        FabricEncap = \"vlan-10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewBridgeDomain(ctx, \"example\", \u0026nxos.BridgeDomainArgs{\n\t\t\tAccessEncap: pulumi.String(\"unknown\"),\n\t\t\tFabricEncap: pulumi.String(\"vlan-10\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.BridgeDomain;\nimport com.pulumi.nxos.BridgeDomainArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BridgeDomain(\"example\", BridgeDomainArgs.builder()        \n            .accessEncap(\"unknown\")\n            .fabricEncap(\"vlan-10\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:BridgeDomain\n    properties:\n      accessEncap: unknown\n      fabricEncap: vlan-10\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/bridgeDomain:BridgeDomain example \"sys/bd/bd-[vlan-10]\"\n```\n\n ",
            "properties": {
                "accessEncap": {
                    "type": "string",
                    "description": "Access encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "fabricEncap": {
                    "type": "string",
                    "description": "Fabric encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Bridge domain name.\n"
                }
            },
            "required": [
                "accessEncap",
                "fabricEncap",
                "name"
            ],
            "inputProperties": {
                "accessEncap": {
                    "type": "string",
                    "description": "Access encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "fabricEncap": {
                    "type": "string",
                    "description": "Fabric encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Bridge domain name.\n"
                }
            },
            "requiredInputs": [
                "fabricEncap"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BridgeDomain resources.\n",
                "properties": {
                    "accessEncap": {
                        "type": "string",
                        "description": "Access encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "fabricEncap": {
                        "type": "string",
                        "description": "Fabric encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Bridge domain name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/defaultQosClassMap:DefaultQosClassMap": {
            "description": "This resource can manage the default QoS class map configuration.\n\n- API Documentation: [ipqosCMapInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:CMapInst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.DefaultQosClassMap(\"example\", {matchType: \"match-any\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.DefaultQosClassMap(\"example\", match_type=\"match-any\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.DefaultQosClassMap(\"example\", new()\n    {\n        MatchType = \"match-any\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewDefaultQosClassMap(ctx, \"example\", \u0026nxos.DefaultQosClassMapArgs{\n\t\t\tMatchType: pulumi.String(\"match-any\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.DefaultQosClassMap;\nimport com.pulumi.nxos.DefaultQosClassMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DefaultQosClassMap(\"example\", DefaultQosClassMapArgs.builder()        \n            .matchType(\"match-any\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:DefaultQosClassMap\n    properties:\n      matchType: match-any\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/defaultQosClassMap:DefaultQosClassMap example \"sys/ipqos/dflt/c/name-[Voice]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Class map name.\n"
                }
            },
            "required": [
                "matchType",
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Class map name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DefaultQosClassMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "matchType": {
                        "type": "string",
                        "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Class map name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/defaultQosClassMapDscp:DefaultQosClassMapDscp": {
            "description": "This resource can manage the default QoS class map DSCP configuration.\n\n- API Documentation: [ipqosDscp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:Dscp/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.DefaultQosClassMapDscp(\"example\", {\n    classMapName: \"Voice\",\n    value: \"ef\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.DefaultQosClassMapDscp(\"example\",\n    class_map_name=\"Voice\",\n    value=\"ef\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.DefaultQosClassMapDscp(\"example\", new()\n    {\n        ClassMapName = \"Voice\",\n        Value = \"ef\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewDefaultQosClassMapDscp(ctx, \"example\", \u0026nxos.DefaultQosClassMapDscpArgs{\n\t\t\tClassMapName: pulumi.String(\"Voice\"),\n\t\t\tValue:        pulumi.String(\"ef\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.DefaultQosClassMapDscp;\nimport com.pulumi.nxos.DefaultQosClassMapDscpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DefaultQosClassMapDscp(\"example\", DefaultQosClassMapDscpArgs.builder()        \n            .classMapName(\"Voice\")\n            .value(\"ef\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:DefaultQosClassMapDscp\n    properties:\n      classMapName: Voice\n      value: ef\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/defaultQosClassMapDscp:DefaultQosClassMapDscp example \"sys/ipqos/dflt/c/name-[Voice]/dscp-[ef]\"\n```\n\n ",
            "properties": {
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "value": {
                    "type": "string",
                    "description": "DSCP value. - Default value: `0`\n"
                }
            },
            "required": [
                "classMapName",
                "value"
            ],
            "inputProperties": {
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "value": {
                    "type": "string",
                    "description": "DSCP value. - Default value: `0`\n"
                }
            },
            "requiredInputs": [
                "classMapName",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DefaultQosClassMapDscp resources.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "DSCP value. - Default value: `0`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/defaultQosPolicyInterfaceIn:DefaultQosPolicyInterfaceIn": {
            "description": "This resource can manage the default QoS policy interface in configuration.\n\n- API Documentation: [ipqosIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.DefaultQosPolicyInterfaceIn(\"example\", {interfaceId: \"eth1/10\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.DefaultQosPolicyInterfaceIn(\"example\", interface_id=\"eth1/10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.DefaultQosPolicyInterfaceIn(\"example\", new()\n    {\n        InterfaceId = \"eth1/10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewDefaultQosPolicyInterfaceIn(ctx, \"example\", \u0026nxos.DefaultQosPolicyInterfaceInArgs{\n\t\t\tInterfaceId: pulumi.String(\"eth1/10\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.DefaultQosPolicyInterfaceIn;\nimport com.pulumi.nxos.DefaultQosPolicyInterfaceInArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DefaultQosPolicyInterfaceIn(\"example\", DefaultQosPolicyInterfaceInArgs.builder()        \n            .interfaceId(\"eth1/10\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:DefaultQosPolicyInterfaceIn\n    properties:\n      interfaceId: eth1/10\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/defaultQosPolicyInterfaceIn:DefaultQosPolicyInterfaceIn example \"sys/ipqos/dflt/policy/in/intf-[eth1/10]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                }
            },
            "required": [
                "interfaceId"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DefaultQosPolicyInterfaceIn resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/defaultQosPolicyInterfaceInPolicyMap:DefaultQosPolicyInterfaceInPolicyMap": {
            "description": "This resource can manage the default QoS policy interface in policy map configuration.\n\n- API Documentation: [ipqosInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.DefaultQosPolicyInterfaceInPolicyMap(\"example\", {\n    interfaceId: \"eth1/10\",\n    policyMapName: \"PM1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.DefaultQosPolicyInterfaceInPolicyMap(\"example\",\n    interface_id=\"eth1/10\",\n    policy_map_name=\"PM1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.DefaultQosPolicyInterfaceInPolicyMap(\"example\", new()\n    {\n        InterfaceId = \"eth1/10\",\n        PolicyMapName = \"PM1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewDefaultQosPolicyInterfaceInPolicyMap(ctx, \"example\", \u0026nxos.DefaultQosPolicyInterfaceInPolicyMapArgs{\n\t\t\tInterfaceId:   pulumi.String(\"eth1/10\"),\n\t\t\tPolicyMapName: pulumi.String(\"PM1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.DefaultQosPolicyInterfaceInPolicyMap;\nimport com.pulumi.nxos.DefaultQosPolicyInterfaceInPolicyMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DefaultQosPolicyInterfaceInPolicyMap(\"example\", DefaultQosPolicyInterfaceInPolicyMapArgs.builder()        \n            .interfaceId(\"eth1/10\")\n            .policyMapName(\"PM1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:DefaultQosPolicyInterfaceInPolicyMap\n    properties:\n      interfaceId: eth1/10\n      policyMapName: PM1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/defaultQosPolicyInterfaceInPolicyMap:DefaultQosPolicyInterfaceInPolicyMap example \"sys/ipqos/dflt/policy/in/intf-[eth1/10]/pmap\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "required": [
                "interfaceId",
                "policyMapName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "policyMapName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DefaultQosPolicyInterfaceInPolicyMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/defaultQosPolicyMap:DefaultQosPolicyMap": {
            "description": "This resource can manage the default QoS policy map configuration.\n\n- API Documentation: [ipqosPMapInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:PMapInst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.DefaultQosPolicyMap(\"example\", {matchType: \"match-any\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.DefaultQosPolicyMap(\"example\", match_type=\"match-any\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.DefaultQosPolicyMap(\"example\", new()\n    {\n        MatchType = \"match-any\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewDefaultQosPolicyMap(ctx, \"example\", \u0026nxos.DefaultQosPolicyMapArgs{\n\t\t\tMatchType: pulumi.String(\"match-any\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.DefaultQosPolicyMap;\nimport com.pulumi.nxos.DefaultQosPolicyMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DefaultQosPolicyMap(\"example\", DefaultQosPolicyMapArgs.builder()        \n            .matchType(\"match-any\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:DefaultQosPolicyMap\n    properties:\n      matchType: match-any\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/defaultQosPolicyMap:DefaultQosPolicyMap example \"sys/ipqos/dflt/p/name-[PM1]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "required": [
                "matchType",
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DefaultQosPolicyMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "matchType": {
                        "type": "string",
                        "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/defaultQosPolicyMapMatchClassMap:DefaultQosPolicyMapMatchClassMap": {
            "description": "This resource can manage the default QoS policy map match class map configuration.\n\n- API Documentation: [ipqosMatchCMap](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:MatchCMap/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.DefaultQosPolicyMapMatchClassMap(\"example\", {policyMapName: \"PM1\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.DefaultQosPolicyMapMatchClassMap(\"example\", policy_map_name=\"PM1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.DefaultQosPolicyMapMatchClassMap(\"example\", new()\n    {\n        PolicyMapName = \"PM1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewDefaultQosPolicyMapMatchClassMap(ctx, \"example\", \u0026nxos.DefaultQosPolicyMapMatchClassMapArgs{\n\t\t\tPolicyMapName: pulumi.String(\"PM1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.DefaultQosPolicyMapMatchClassMap;\nimport com.pulumi.nxos.DefaultQosPolicyMapMatchClassMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DefaultQosPolicyMapMatchClassMap(\"example\", DefaultQosPolicyMapMatchClassMapArgs.builder()        \n            .policyMapName(\"PM1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:DefaultQosPolicyMapMatchClassMap\n    properties:\n      policyMapName: PM1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/defaultQosPolicyMapMatchClassMap:DefaultQosPolicyMapMatchClassMap example \"sys/ipqos/dflt/p/name-[PM1]/cmap-[Voice]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "required": [
                "name",
                "policyMapName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "requiredInputs": [
                "policyMapName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DefaultQosPolicyMapMatchClassMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/defaultQosPolicyMapMatchClassMapPolice:DefaultQosPolicyMapMatchClassMapPolice": {
            "description": "This resource can manage the default QoS policy map match class map police configuration.\n\n- API Documentation: [ipqosPolice](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:Police/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.DefaultQosPolicyMapMatchClassMapPolice(\"example\", {\n    bcRate: 200,\n    bcUnit: \"mbytes\",\n    beRate: 200,\n    beUnit: \"mbytes\",\n    cirRate: 10000,\n    cirUnit: \"mbps\",\n    classMapName: \"Voice\",\n    conformAction: \"transmit\",\n    conformSetCos: 0,\n    conformSetDscp: 0,\n    conformSetPrecedence: \"routine\",\n    conformSetQosGroup: 0,\n    exceedAction: \"transmit\",\n    exceedSetCos: 0,\n    exceedSetDscp: 0,\n    exceedSetPrecedence: \"routine\",\n    exceedSetQosGroup: 0,\n    pirRate: 10000,\n    pirUnit: \"mbps\",\n    policyMapName: \"PM1\",\n    violateAction: \"drop\",\n    violateSetCos: 0,\n    violateSetDscp: 0,\n    violateSetPrecedence: \"routine\",\n    violateSetQosGroup: 0,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.DefaultQosPolicyMapMatchClassMapPolice(\"example\",\n    bc_rate=200,\n    bc_unit=\"mbytes\",\n    be_rate=200,\n    be_unit=\"mbytes\",\n    cir_rate=10000,\n    cir_unit=\"mbps\",\n    class_map_name=\"Voice\",\n    conform_action=\"transmit\",\n    conform_set_cos=0,\n    conform_set_dscp=0,\n    conform_set_precedence=\"routine\",\n    conform_set_qos_group=0,\n    exceed_action=\"transmit\",\n    exceed_set_cos=0,\n    exceed_set_dscp=0,\n    exceed_set_precedence=\"routine\",\n    exceed_set_qos_group=0,\n    pir_rate=10000,\n    pir_unit=\"mbps\",\n    policy_map_name=\"PM1\",\n    violate_action=\"drop\",\n    violate_set_cos=0,\n    violate_set_dscp=0,\n    violate_set_precedence=\"routine\",\n    violate_set_qos_group=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.DefaultQosPolicyMapMatchClassMapPolice(\"example\", new()\n    {\n        BcRate = 200,\n        BcUnit = \"mbytes\",\n        BeRate = 200,\n        BeUnit = \"mbytes\",\n        CirRate = 10000,\n        CirUnit = \"mbps\",\n        ClassMapName = \"Voice\",\n        ConformAction = \"transmit\",\n        ConformSetCos = 0,\n        ConformSetDscp = 0,\n        ConformSetPrecedence = \"routine\",\n        ConformSetQosGroup = 0,\n        ExceedAction = \"transmit\",\n        ExceedSetCos = 0,\n        ExceedSetDscp = 0,\n        ExceedSetPrecedence = \"routine\",\n        ExceedSetQosGroup = 0,\n        PirRate = 10000,\n        PirUnit = \"mbps\",\n        PolicyMapName = \"PM1\",\n        ViolateAction = \"drop\",\n        ViolateSetCos = 0,\n        ViolateSetDscp = 0,\n        ViolateSetPrecedence = \"routine\",\n        ViolateSetQosGroup = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewDefaultQosPolicyMapMatchClassMapPolice(ctx, \"example\", \u0026nxos.DefaultQosPolicyMapMatchClassMapPoliceArgs{\n\t\t\tBcRate:               pulumi.Int(200),\n\t\t\tBcUnit:               pulumi.String(\"mbytes\"),\n\t\t\tBeRate:               pulumi.Int(200),\n\t\t\tBeUnit:               pulumi.String(\"mbytes\"),\n\t\t\tCirRate:              pulumi.Int(10000),\n\t\t\tCirUnit:              pulumi.String(\"mbps\"),\n\t\t\tClassMapName:         pulumi.String(\"Voice\"),\n\t\t\tConformAction:        pulumi.String(\"transmit\"),\n\t\t\tConformSetCos:        pulumi.Int(0),\n\t\t\tConformSetDscp:       pulumi.Int(0),\n\t\t\tConformSetPrecedence: pulumi.String(\"routine\"),\n\t\t\tConformSetQosGroup:   pulumi.Int(0),\n\t\t\tExceedAction:         pulumi.String(\"transmit\"),\n\t\t\tExceedSetCos:         pulumi.Int(0),\n\t\t\tExceedSetDscp:        pulumi.Int(0),\n\t\t\tExceedSetPrecedence:  pulumi.String(\"routine\"),\n\t\t\tExceedSetQosGroup:    pulumi.Int(0),\n\t\t\tPirRate:              pulumi.Int(10000),\n\t\t\tPirUnit:              pulumi.String(\"mbps\"),\n\t\t\tPolicyMapName:        pulumi.String(\"PM1\"),\n\t\t\tViolateAction:        pulumi.String(\"drop\"),\n\t\t\tViolateSetCos:        pulumi.Int(0),\n\t\t\tViolateSetDscp:       pulumi.Int(0),\n\t\t\tViolateSetPrecedence: pulumi.String(\"routine\"),\n\t\t\tViolateSetQosGroup:   pulumi.Int(0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.DefaultQosPolicyMapMatchClassMapPolice;\nimport com.pulumi.nxos.DefaultQosPolicyMapMatchClassMapPoliceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DefaultQosPolicyMapMatchClassMapPolice(\"example\", DefaultQosPolicyMapMatchClassMapPoliceArgs.builder()        \n            .bcRate(200)\n            .bcUnit(\"mbytes\")\n            .beRate(200)\n            .beUnit(\"mbytes\")\n            .cirRate(10000)\n            .cirUnit(\"mbps\")\n            .classMapName(\"Voice\")\n            .conformAction(\"transmit\")\n            .conformSetCos(0)\n            .conformSetDscp(0)\n            .conformSetPrecedence(\"routine\")\n            .conformSetQosGroup(0)\n            .exceedAction(\"transmit\")\n            .exceedSetCos(0)\n            .exceedSetDscp(0)\n            .exceedSetPrecedence(\"routine\")\n            .exceedSetQosGroup(0)\n            .pirRate(10000)\n            .pirUnit(\"mbps\")\n            .policyMapName(\"PM1\")\n            .violateAction(\"drop\")\n            .violateSetCos(0)\n            .violateSetDscp(0)\n            .violateSetPrecedence(\"routine\")\n            .violateSetQosGroup(0)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:DefaultQosPolicyMapMatchClassMapPolice\n    properties:\n      bcRate: 200\n      bcUnit: mbytes\n      beRate: 200\n      beUnit: mbytes\n      cirRate: 10000\n      cirUnit: mbps\n      classMapName: Voice\n      conformAction: transmit\n      conformSetCos: 0\n      conformSetDscp: 0\n      conformSetPrecedence: routine\n      conformSetQosGroup: 0\n      exceedAction: transmit\n      exceedSetCos: 0\n      exceedSetDscp: 0\n      exceedSetPrecedence: routine\n      exceedSetQosGroup: 0\n      pirRate: 10000\n      pirUnit: mbps\n      policyMapName: PM1\n      violateAction: drop\n      violateSetCos: 0\n      violateSetDscp: 0\n      violateSetPrecedence: routine\n      violateSetQosGroup: 0\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/defaultQosPolicyMapMatchClassMapPolice:DefaultQosPolicyMapMatchClassMapPolice example \"sys/ipqos/dflt/p/name-[PM1]/cmap-[Voice]/police\"\n```\n\n ",
            "properties": {
                "bcRate": {
                    "type": "integer",
                    "description": "CIR burst rate. - Range: `0`-`536870912` - Default value: `200`\n"
                },
                "bcUnit": {
                    "type": "string",
                    "description": "CIR burst rate unit. - Choices: `unspecified`, `bytes`, `kbytes`, `mbytes`, `ms`, `us`, `packets` - Default value: `ms`\n"
                },
                "beRate": {
                    "type": "integer",
                    "description": "PIR burst rate. - Range: `0`-`536870912` - Default value: `0`\n"
                },
                "beUnit": {
                    "type": "string",
                    "description": "PIR burst rate unit. - Choices: `unspecified`, `bytes`, `kbytes`, `mbytes`, `ms`, `us`, `packets` - Default value:\n`unspecified`\n"
                },
                "cirRate": {
                    "type": "integer",
                    "description": "CIR rate. - Range: `0`-`100000000000` - Default value: `0`\n"
                },
                "cirUnit": {
                    "type": "string",
                    "description": "CIR rate unit. - Choices: `unspecified`, `bps`, `kbps`, `mbps`, `gbps`, `pps`, `pct` - Default value: `bps`\n"
                },
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "conformAction": {
                    "type": "string",
                    "description": "Conform action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `transmit`\n"
                },
                "conformSetCos": {
                    "type": "integer",
                    "description": "Set CoS for conforming traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "conformSetDscp": {
                    "type": "integer",
                    "description": "Set DSCP for conforming traffic. - Range: `0`-`63` - Default value: `0`\n"
                },
                "conformSetPrecedence": {
                    "type": "string",
                    "description": "Set precedence for conforming traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                },
                "conformSetQosGroup": {
                    "type": "integer",
                    "description": "Set qos-group for conforming traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "exceedAction": {
                    "type": "string",
                    "description": "Exceed action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `unspecified`\n"
                },
                "exceedSetCos": {
                    "type": "integer",
                    "description": "Set CoS for exceeding traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "exceedSetDscp": {
                    "type": "integer",
                    "description": "Set DSCP for exceeding traffic. - Range: `0`-`63` - Default value: `0`\n"
                },
                "exceedSetPrecedence": {
                    "type": "string",
                    "description": "Set precedence for exceeding traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                },
                "exceedSetQosGroup": {
                    "type": "integer",
                    "description": "Set qos-group for exceeding traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "pirRate": {
                    "type": "integer",
                    "description": "PIR rate. - Range: `0`-`100000000000` - Default value: `0`\n"
                },
                "pirUnit": {
                    "type": "string",
                    "description": "PIR rate unit. - Choices: `unspecified`, `bps`, `kbps`, `mbps`, `gbps`, `pps`, `pct` - Default value: `unspecified`\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                },
                "violateAction": {
                    "type": "string",
                    "description": "Violate action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `drop`\n"
                },
                "violateSetCos": {
                    "type": "integer",
                    "description": "Set CoS for violating traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "violateSetDscp": {
                    "type": "integer",
                    "description": "Set DSCP for violating traffic. - Range: `0`-`63` - Default value: `0`\n"
                },
                "violateSetPrecedence": {
                    "type": "string",
                    "description": "Set precedence for violating traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                },
                "violateSetQosGroup": {
                    "type": "integer",
                    "description": "Set qos-group for violating traffic. - Range: `0`-`7` - Default value: `0`\n"
                }
            },
            "required": [
                "bcRate",
                "bcUnit",
                "beRate",
                "beUnit",
                "cirRate",
                "cirUnit",
                "classMapName",
                "conformAction",
                "conformSetCos",
                "conformSetDscp",
                "conformSetPrecedence",
                "conformSetQosGroup",
                "exceedAction",
                "exceedSetCos",
                "exceedSetDscp",
                "exceedSetPrecedence",
                "exceedSetQosGroup",
                "pirRate",
                "pirUnit",
                "policyMapName",
                "violateAction",
                "violateSetCos",
                "violateSetDscp",
                "violateSetPrecedence",
                "violateSetQosGroup"
            ],
            "inputProperties": {
                "bcRate": {
                    "type": "integer",
                    "description": "CIR burst rate. - Range: `0`-`536870912` - Default value: `200`\n"
                },
                "bcUnit": {
                    "type": "string",
                    "description": "CIR burst rate unit. - Choices: `unspecified`, `bytes`, `kbytes`, `mbytes`, `ms`, `us`, `packets` - Default value: `ms`\n"
                },
                "beRate": {
                    "type": "integer",
                    "description": "PIR burst rate. - Range: `0`-`536870912` - Default value: `0`\n"
                },
                "beUnit": {
                    "type": "string",
                    "description": "PIR burst rate unit. - Choices: `unspecified`, `bytes`, `kbytes`, `mbytes`, `ms`, `us`, `packets` - Default value:\n`unspecified`\n"
                },
                "cirRate": {
                    "type": "integer",
                    "description": "CIR rate. - Range: `0`-`100000000000` - Default value: `0`\n"
                },
                "cirUnit": {
                    "type": "string",
                    "description": "CIR rate unit. - Choices: `unspecified`, `bps`, `kbps`, `mbps`, `gbps`, `pps`, `pct` - Default value: `bps`\n"
                },
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "conformAction": {
                    "type": "string",
                    "description": "Conform action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `transmit`\n"
                },
                "conformSetCos": {
                    "type": "integer",
                    "description": "Set CoS for conforming traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "conformSetDscp": {
                    "type": "integer",
                    "description": "Set DSCP for conforming traffic. - Range: `0`-`63` - Default value: `0`\n"
                },
                "conformSetPrecedence": {
                    "type": "string",
                    "description": "Set precedence for conforming traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                },
                "conformSetQosGroup": {
                    "type": "integer",
                    "description": "Set qos-group for conforming traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "exceedAction": {
                    "type": "string",
                    "description": "Exceed action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `unspecified`\n"
                },
                "exceedSetCos": {
                    "type": "integer",
                    "description": "Set CoS for exceeding traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "exceedSetDscp": {
                    "type": "integer",
                    "description": "Set DSCP for exceeding traffic. - Range: `0`-`63` - Default value: `0`\n"
                },
                "exceedSetPrecedence": {
                    "type": "string",
                    "description": "Set precedence for exceeding traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                },
                "exceedSetQosGroup": {
                    "type": "integer",
                    "description": "Set qos-group for exceeding traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "pirRate": {
                    "type": "integer",
                    "description": "PIR rate. - Range: `0`-`100000000000` - Default value: `0`\n"
                },
                "pirUnit": {
                    "type": "string",
                    "description": "PIR rate unit. - Choices: `unspecified`, `bps`, `kbps`, `mbps`, `gbps`, `pps`, `pct` - Default value: `unspecified`\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                },
                "violateAction": {
                    "type": "string",
                    "description": "Violate action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `drop`\n"
                },
                "violateSetCos": {
                    "type": "integer",
                    "description": "Set CoS for violating traffic. - Range: `0`-`7` - Default value: `0`\n"
                },
                "violateSetDscp": {
                    "type": "integer",
                    "description": "Set DSCP for violating traffic. - Range: `0`-`63` - Default value: `0`\n"
                },
                "violateSetPrecedence": {
                    "type": "string",
                    "description": "Set precedence for violating traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                },
                "violateSetQosGroup": {
                    "type": "integer",
                    "description": "Set qos-group for violating traffic. - Range: `0`-`7` - Default value: `0`\n"
                }
            },
            "requiredInputs": [
                "cirRate",
                "classMapName",
                "policyMapName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DefaultQosPolicyMapMatchClassMapPolice resources.\n",
                "properties": {
                    "bcRate": {
                        "type": "integer",
                        "description": "CIR burst rate. - Range: `0`-`536870912` - Default value: `200`\n"
                    },
                    "bcUnit": {
                        "type": "string",
                        "description": "CIR burst rate unit. - Choices: `unspecified`, `bytes`, `kbytes`, `mbytes`, `ms`, `us`, `packets` - Default value: `ms`\n"
                    },
                    "beRate": {
                        "type": "integer",
                        "description": "PIR burst rate. - Range: `0`-`536870912` - Default value: `0`\n"
                    },
                    "beUnit": {
                        "type": "string",
                        "description": "PIR burst rate unit. - Choices: `unspecified`, `bytes`, `kbytes`, `mbytes`, `ms`, `us`, `packets` - Default value:\n`unspecified`\n"
                    },
                    "cirRate": {
                        "type": "integer",
                        "description": "CIR rate. - Range: `0`-`100000000000` - Default value: `0`\n"
                    },
                    "cirUnit": {
                        "type": "string",
                        "description": "CIR rate unit. - Choices: `unspecified`, `bps`, `kbps`, `mbps`, `gbps`, `pps`, `pct` - Default value: `bps`\n"
                    },
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "conformAction": {
                        "type": "string",
                        "description": "Conform action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `transmit`\n"
                    },
                    "conformSetCos": {
                        "type": "integer",
                        "description": "Set CoS for conforming traffic. - Range: `0`-`7` - Default value: `0`\n"
                    },
                    "conformSetDscp": {
                        "type": "integer",
                        "description": "Set DSCP for conforming traffic. - Range: `0`-`63` - Default value: `0`\n"
                    },
                    "conformSetPrecedence": {
                        "type": "string",
                        "description": "Set precedence for conforming traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                    },
                    "conformSetQosGroup": {
                        "type": "integer",
                        "description": "Set qos-group for conforming traffic. - Range: `0`-`7` - Default value: `0`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "exceedAction": {
                        "type": "string",
                        "description": "Exceed action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `unspecified`\n"
                    },
                    "exceedSetCos": {
                        "type": "integer",
                        "description": "Set CoS for exceeding traffic. - Range: `0`-`7` - Default value: `0`\n"
                    },
                    "exceedSetDscp": {
                        "type": "integer",
                        "description": "Set DSCP for exceeding traffic. - Range: `0`-`63` - Default value: `0`\n"
                    },
                    "exceedSetPrecedence": {
                        "type": "string",
                        "description": "Set precedence for exceeding traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                    },
                    "exceedSetQosGroup": {
                        "type": "integer",
                        "description": "Set qos-group for exceeding traffic. - Range: `0`-`7` - Default value: `0`\n"
                    },
                    "pirRate": {
                        "type": "integer",
                        "description": "PIR rate. - Range: `0`-`100000000000` - Default value: `0`\n"
                    },
                    "pirUnit": {
                        "type": "string",
                        "description": "PIR rate unit. - Choices: `unspecified`, `bps`, `kbps`, `mbps`, `gbps`, `pps`, `pct` - Default value: `unspecified`\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    },
                    "violateAction": {
                        "type": "string",
                        "description": "Violate action. - Choices: `unspecified`, `transmit`, `drop`, `set-cos-transmit`, `set-dscp-transmit`,\n`set-prec-transmit`, `set-qos-transmit` - Default value: `drop`\n"
                    },
                    "violateSetCos": {
                        "type": "integer",
                        "description": "Set CoS for violating traffic. - Range: `0`-`7` - Default value: `0`\n"
                    },
                    "violateSetDscp": {
                        "type": "integer",
                        "description": "Set DSCP for violating traffic. - Range: `0`-`63` - Default value: `0`\n"
                    },
                    "violateSetPrecedence": {
                        "type": "string",
                        "description": "Set precedence for violating traffic. - Choices: `routine`, `priority`, `immediate`, `flash`, `flash-override`,\n`critical`, `internet`, `network` - Default value: `routine`\n"
                    },
                    "violateSetQosGroup": {
                        "type": "integer",
                        "description": "Set qos-group for violating traffic. - Range: `0`-`7` - Default value: `0`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/defaultQosPolicyMapMatchClassMapSetQosGroup:DefaultQosPolicyMapMatchClassMapSetQosGroup": {
            "description": "This resource can manage the default QoS policy map match class map set QoS group configuration.\n\n- API Documentation: [ipqosSetQoSGrp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:SetQoSGrp/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.DefaultQosPolicyMapMatchClassMapSetQosGroup(\"example\", {\n    classMapName: \"Voice\",\n    policyMapName: \"PM1\",\n    qosGroupId: 1,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.DefaultQosPolicyMapMatchClassMapSetQosGroup(\"example\",\n    class_map_name=\"Voice\",\n    policy_map_name=\"PM1\",\n    qos_group_id=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.DefaultQosPolicyMapMatchClassMapSetQosGroup(\"example\", new()\n    {\n        ClassMapName = \"Voice\",\n        PolicyMapName = \"PM1\",\n        QosGroupId = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewDefaultQosPolicyMapMatchClassMapSetQosGroup(ctx, \"example\", \u0026nxos.DefaultQosPolicyMapMatchClassMapSetQosGroupArgs{\n\t\t\tClassMapName:  pulumi.String(\"Voice\"),\n\t\t\tPolicyMapName: pulumi.String(\"PM1\"),\n\t\t\tQosGroupId:    pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.DefaultQosPolicyMapMatchClassMapSetQosGroup;\nimport com.pulumi.nxos.DefaultQosPolicyMapMatchClassMapSetQosGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DefaultQosPolicyMapMatchClassMapSetQosGroup(\"example\", DefaultQosPolicyMapMatchClassMapSetQosGroupArgs.builder()        \n            .classMapName(\"Voice\")\n            .policyMapName(\"PM1\")\n            .qosGroupId(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:DefaultQosPolicyMapMatchClassMapSetQosGroup\n    properties:\n      classMapName: Voice\n      policyMapName: PM1\n      qosGroupId: 1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/defaultQosPolicyMapMatchClassMapSetQosGroup:DefaultQosPolicyMapMatchClassMapSetQosGroup example \"sys/ipqos/dflt/p/name-[PM1]/cmap-[Voice]/setGrp\"\n```\n\n ",
            "properties": {
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                },
                "qosGroupId": {
                    "type": "integer",
                    "description": "QoS group ID. - Range: `0`-`7` - Default value: `0`\n"
                }
            },
            "required": [
                "classMapName",
                "policyMapName",
                "qosGroupId"
            ],
            "inputProperties": {
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                },
                "qosGroupId": {
                    "type": "integer",
                    "description": "QoS group ID. - Range: `0`-`7` - Default value: `0`\n"
                }
            },
            "requiredInputs": [
                "classMapName",
                "policyMapName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DefaultQosPolicyMapMatchClassMapSetQosGroup resources.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    },
                    "qosGroupId": {
                        "type": "integer",
                        "description": "QoS group ID. - Range: `0`-`7` - Default value: `0`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/dhcpRelayAddress:DhcpRelayAddress": {
            "description": "This resource can manage a DHCP relay address.\n\n- API Documentation: [dhcpRelayAddr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/DHCP/dhcp:RelayAddr/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.DhcpRelayAddress(\"example\", {\n    address: \"1.1.1.1\",\n    interfaceId: \"eth1/10\",\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.DhcpRelayAddress(\"example\",\n    address=\"1.1.1.1\",\n    interface_id=\"eth1/10\",\n    vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.DhcpRelayAddress(\"example\", new()\n    {\n        Address = \"1.1.1.1\",\n        InterfaceId = \"eth1/10\",\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewDhcpRelayAddress(ctx, \"example\", \u0026nxos.DhcpRelayAddressArgs{\n\t\t\tAddress:     pulumi.String(\"1.1.1.1\"),\n\t\t\tInterfaceId: pulumi.String(\"eth1/10\"),\n\t\t\tVrf:         pulumi.String(\"VRF1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.DhcpRelayAddress;\nimport com.pulumi.nxos.DhcpRelayAddressArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DhcpRelayAddress(\"example\", DhcpRelayAddressArgs.builder()        \n            .address(\"1.1.1.1\")\n            .interfaceId(\"eth1/10\")\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:DhcpRelayAddress\n    properties:\n      address: 1.1.1.1\n      interfaceId: eth1/10\n      vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/dhcpRelayAddress:DhcpRelayAddress example \"sys/dhcp/inst/relayif-[eth1/10]/addr-[VRF1]-[1.1.1.1]\"\n```\n\n ",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "IPv4 or IPv6 address.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "interfaceId",
                "vrf"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "IPv4 or IPv6 address.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "interfaceId",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DhcpRelayAddress resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "IPv4 or IPv6 address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/dhcpRelayInterface:DhcpRelayInterface": {
            "description": "This resource can manage a DHCP relay interface.\n\n- API Documentation: [dhcpRelayIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/DHCP/dhcp:RelayIf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.DhcpRelayInterface(\"example\", {interfaceId: \"eth1/10\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.DhcpRelayInterface(\"example\", interface_id=\"eth1/10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.DhcpRelayInterface(\"example\", new()\n    {\n        InterfaceId = \"eth1/10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewDhcpRelayInterface(ctx, \"example\", \u0026nxos.DhcpRelayInterfaceArgs{\n\t\t\tInterfaceId: pulumi.String(\"eth1/10\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.DhcpRelayInterface;\nimport com.pulumi.nxos.DhcpRelayInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DhcpRelayInterface(\"example\", DhcpRelayInterfaceArgs.builder()        \n            .interfaceId(\"eth1/10\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:DhcpRelayInterface\n    properties:\n      interfaceId: eth1/10\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/dhcpRelayInterface:DhcpRelayInterface example \"sys/dhcp/inst/relayif-[eth1/10]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                }
            },
            "required": [
                "interfaceId"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DhcpRelayInterface resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ethernet:Ethernet": {
            "description": "This resource can manage global ethernet settings.\n\n- API Documentation: [ethpmInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Interfaces/ethpm:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Ethernet(\"example\", {mtu: 9216});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Ethernet(\"example\", mtu=9216)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Ethernet(\"example\", new()\n    {\n        Mtu = 9216,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewEthernet(ctx, \"example\", \u0026nxos.EthernetArgs{\n\t\t\tMtu: pulumi.Int(9216),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Ethernet;\nimport com.pulumi.nxos.EthernetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ethernet(\"example\", EthernetArgs.builder()        \n            .mtu(9216)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Ethernet\n    properties:\n      mtu: 9216\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ethernet:Ethernet example \"sys/ethpm/inst\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "System jumbo MTU. - Range: `576`-`9216` - Default value: `9216`\n"
                }
            },
            "required": [
                "mtu"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "System jumbo MTU. - Range: `576`-`9216` - Default value: `9216`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ethernet resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "System jumbo MTU. - Range: `576`-`9216` - Default value: `9216`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/evpn:Evpn": {
            "description": "This resource can manage a global EVPN configuration.\n\n- API Documentation: [rtctrlL2Evpn](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:L2Evpn/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Evpn(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Evpn(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Evpn(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewEvpn(ctx, \"example\", \u0026nxos.EvpnArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Evpn;\nimport com.pulumi.nxos.EvpnArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Evpn(\"example\", EvpnArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Evpn\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/evpn:Evpn example \"sys/evpn\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Evpn resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/evpnVni:EvpnVni": {
            "description": "This resource can manage a EVPN VNI Route Distinguisher.\n\n- API Documentation: [rtctrlBDEvi](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:BDEvi/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.EvpnVni(\"example\", {\n    encap: \"vxlan-123456\",\n    routeDistinguisher: \"rd:unknown:0:0\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.EvpnVni(\"example\",\n    encap=\"vxlan-123456\",\n    route_distinguisher=\"rd:unknown:0:0\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.EvpnVni(\"example\", new()\n    {\n        Encap = \"vxlan-123456\",\n        RouteDistinguisher = \"rd:unknown:0:0\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewEvpnVni(ctx, \"example\", \u0026nxos.EvpnVniArgs{\n\t\t\tEncap:              pulumi.String(\"vxlan-123456\"),\n\t\t\tRouteDistinguisher: pulumi.String(\"rd:unknown:0:0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.EvpnVni;\nimport com.pulumi.nxos.EvpnVniArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new EvpnVni(\"example\", EvpnVniArgs.builder()        \n            .encap(\"vxlan-123456\")\n            .routeDistinguisher(\"rd:unknown:0:0\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:EvpnVni\n    properties:\n      encap: vxlan-123456\n      routeDistinguisher: rd:unknown:0:0\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/evpnVni:EvpnVni example \"sys/evpn/bdevi-[vxlan-123456]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                },
                "routeDistinguisher": {
                    "type": "string",
                    "description": "Route Distinguisher value in NX-OS DME format. - Default value: `unknown:unknown:0:0`\n"
                }
            },
            "required": [
                "encap",
                "routeDistinguisher"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                },
                "routeDistinguisher": {
                    "type": "string",
                    "description": "Route Distinguisher value in NX-OS DME format. - Default value: `unknown:unknown:0:0`\n"
                }
            },
            "requiredInputs": [
                "encap"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EvpnVni resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    },
                    "routeDistinguisher": {
                        "type": "string",
                        "description": "Route Distinguisher value in NX-OS DME format. - Default value: `unknown:unknown:0:0`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/evpnVniRouteTarget:EvpnVniRouteTarget": {
            "description": "This resource can manage a EVPN VNI Route Target Entry.\n\n- API Documentation: [rtctrlRttEntry](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:RttEntry/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.EvpnVniRouteTarget(\"example\", {\n    direction: \"import\",\n    encap: \"vxlan-123456\",\n    routeTarget: \"route-target:as2-nn2:2:2\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.EvpnVniRouteTarget(\"example\",\n    direction=\"import\",\n    encap=\"vxlan-123456\",\n    route_target=\"route-target:as2-nn2:2:2\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.EvpnVniRouteTarget(\"example\", new()\n    {\n        Direction = \"import\",\n        Encap = \"vxlan-123456\",\n        RouteTarget = \"route-target:as2-nn2:2:2\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewEvpnVniRouteTarget(ctx, \"example\", \u0026nxos.EvpnVniRouteTargetArgs{\n\t\t\tDirection:   pulumi.String(\"import\"),\n\t\t\tEncap:       pulumi.String(\"vxlan-123456\"),\n\t\t\tRouteTarget: pulumi.String(\"route-target:as2-nn2:2:2\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.EvpnVniRouteTarget;\nimport com.pulumi.nxos.EvpnVniRouteTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new EvpnVniRouteTarget(\"example\", EvpnVniRouteTargetArgs.builder()        \n            .direction(\"import\")\n            .encap(\"vxlan-123456\")\n            .routeTarget(\"route-target:as2-nn2:2:2\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:EvpnVniRouteTarget\n    properties:\n      direction: import\n      encap: vxlan-123456\n      routeTarget: route-target:as2-nn2:2:2\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/evpnVniRouteTarget:EvpnVniRouteTarget example \"sys/evpn/bdevi-[vxlan-123456]/rttp-[import]/ent-[route-target:as2-nn2:2:2]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Target direction. - Choices: `import`, `export`\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                },
                "routeTarget": {
                    "type": "string",
                    "description": "Route Target in NX-OS DME format.\n"
                }
            },
            "required": [
                "direction",
                "encap",
                "routeTarget"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Target direction. - Choices: `import`, `export`\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                },
                "routeTarget": {
                    "type": "string",
                    "description": "Route Target in NX-OS DME format.\n"
                }
            },
            "requiredInputs": [
                "direction",
                "encap",
                "routeTarget"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EvpnVniRouteTarget resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Target direction. - Choices: `import`, `export`\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    },
                    "routeTarget": {
                        "type": "string",
                        "description": "Route Target in NX-OS DME format.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/evpnVniRouteTargetDirection:EvpnVniRouteTargetDirection": {
            "description": "This resource can manage a EVPN VNI Route Target direction.\n\n- API Documentation: [rtctrlRttP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:RttP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.EvpnVniRouteTargetDirection(\"example\", {\n    direction: \"import\",\n    encap: \"vxlan-123456\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.EvpnVniRouteTargetDirection(\"example\",\n    direction=\"import\",\n    encap=\"vxlan-123456\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.EvpnVniRouteTargetDirection(\"example\", new()\n    {\n        Direction = \"import\",\n        Encap = \"vxlan-123456\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewEvpnVniRouteTargetDirection(ctx, \"example\", \u0026nxos.EvpnVniRouteTargetDirectionArgs{\n\t\t\tDirection: pulumi.String(\"import\"),\n\t\t\tEncap:     pulumi.String(\"vxlan-123456\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.EvpnVniRouteTargetDirection;\nimport com.pulumi.nxos.EvpnVniRouteTargetDirectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new EvpnVniRouteTargetDirection(\"example\", EvpnVniRouteTargetDirectionArgs.builder()        \n            .direction(\"import\")\n            .encap(\"vxlan-123456\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:EvpnVniRouteTargetDirection\n    properties:\n      direction: import\n      encap: vxlan-123456\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/evpnVniRouteTargetDirection:EvpnVniRouteTargetDirection example \"sys/evpn/bdevi-[vxlan-123456]/rttp-[import]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Target direction. - Choices: `import`, `export`\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                }
            },
            "required": [
                "direction",
                "encap"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Target direction. - Choices: `import`, `export`\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                }
            },
            "requiredInputs": [
                "direction",
                "encap"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EvpnVniRouteTargetDirection resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Target direction. - Choices: `import`, `export`\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureBfd:FeatureBfd": {
            "description": "This resource can manage the BFD feature configuration.\n\n- API Documentation: [fmBfd](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Bfd/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureBfd(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureBfd(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureBfd(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureBfd(ctx, \"example\", \u0026nxos.FeatureBfdArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureBfd;\nimport com.pulumi.nxos.FeatureBfdArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureBfd(\"example\", FeatureBfdArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureBfd\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureBfd:FeatureBfd example \"sys/fm/bfd\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureBfd resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureBgp:FeatureBgp": {
            "description": "This resource can manage the BGP feature configuration.\n\n- API Documentation: [fmBgp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Bgp/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureBgp(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureBgp(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureBgp(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureBgp(ctx, \"example\", \u0026nxos.FeatureBgpArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureBgp;\nimport com.pulumi.nxos.FeatureBgpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureBgp(\"example\", FeatureBgpArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureBgp\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureBgp:FeatureBgp example \"sys/fm/bgp\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureBgp resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureDhcp:FeatureDhcp": {
            "description": "This resource can manage the DHCP feature configuration.\n\n- API Documentation: [fmDhcp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Dhcp/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureDhcp(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureDhcp(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureDhcp(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureDhcp(ctx, \"example\", \u0026nxos.FeatureDhcpArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureDhcp;\nimport com.pulumi.nxos.FeatureDhcpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureDhcp(\"example\", FeatureDhcpArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureDhcp\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureDhcp:FeatureDhcp example \"sys/fm/dhcp\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureDhcp resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureEvpn:FeatureEvpn": {
            "description": "This resource can manage the EVPN feature (aka `nv overlay evpn`) configuration.\n\n- API Documentation: [fmEvpn](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Evpn/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureEvpn(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureEvpn(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureEvpn(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureEvpn(ctx, \"example\", \u0026nxos.FeatureEvpnArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureEvpn;\nimport com.pulumi.nxos.FeatureEvpnArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureEvpn(\"example\", FeatureEvpnArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureEvpn\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureEvpn:FeatureEvpn example \"sys/fm/evpn\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureEvpn resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureHmm:FeatureHmm": {
            "description": "This resource can manage the HMM feature (aka `feature fabric forwarding`) configuration.\n\n- API Documentation: [fmHmm](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Hmm/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureHmm(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureHmm(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureHmm(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureHmm(ctx, \"example\", \u0026nxos.FeatureHmmArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureHmm;\nimport com.pulumi.nxos.FeatureHmmArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureHmm(\"example\", FeatureHmmArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureHmm\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureHmm:FeatureHmm example \"sys/fm/hmm\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureHmm resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureHsrp:FeatureHsrp": {
            "description": "This resource can manage the HSRP feature configuration.\n\n- API Documentation: [fmHsrp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Hsrp/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureHsrp(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureHsrp(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureHsrp(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureHsrp(ctx, \"example\", \u0026nxos.FeatureHsrpArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureHsrp;\nimport com.pulumi.nxos.FeatureHsrpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureHsrp(\"example\", FeatureHsrpArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureHsrp\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureHsrp:FeatureHsrp example \"sys/fm/hsrp\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureHsrp resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureInterfaceVlan:FeatureInterfaceVlan": {
            "description": "This resource can manage the Interface VLAN feature configuration.\n\n- API Documentation: [fmInterfaceVlan](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:InterfaceVlan/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureInterfaceVlan(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureInterfaceVlan(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureInterfaceVlan(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureInterfaceVlan(ctx, \"example\", \u0026nxos.FeatureInterfaceVlanArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureInterfaceVlan;\nimport com.pulumi.nxos.FeatureInterfaceVlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureInterfaceVlan(\"example\", FeatureInterfaceVlanArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureInterfaceVlan\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureInterfaceVlan:FeatureInterfaceVlan example \"sys/fm/ifvlan\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureInterfaceVlan resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureIsis:FeatureIsis": {
            "description": "This resource can manage the ISIS feature configuration.\n\n- API Documentation: [fmIsis](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Isis/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureIsis(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureIsis(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureIsis(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureIsis(ctx, \"example\", \u0026nxos.FeatureIsisArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureIsis;\nimport com.pulumi.nxos.FeatureIsisArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureIsis(\"example\", FeatureIsisArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureIsis\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureIsis:FeatureIsis example \"sys/fm/isis\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureIsis resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureLacp:FeatureLacp": {
            "description": "This resource can manage the LACP feature configuration.\n\n- API Documentation: [fmLacp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Lacp/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureLacp(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureLacp(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureLacp(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureLacp(ctx, \"example\", \u0026nxos.FeatureLacpArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureLacp;\nimport com.pulumi.nxos.FeatureLacpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureLacp(\"example\", FeatureLacpArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureLacp\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureLacp:FeatureLacp example \"sys/fm/lacp\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureLacp resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureLldp:FeatureLldp": {
            "description": "This resource can manage the LLDP feature configuration.\n\n- API Documentation: [fmLldp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Lldp/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureLldp(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureLldp(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureLldp(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureLldp(ctx, \"example\", \u0026nxos.FeatureLldpArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureLldp;\nimport com.pulumi.nxos.FeatureLldpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureLldp(\"example\", FeatureLldpArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureLldp\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureLldp:FeatureLldp example \"sys/fm/lldp\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureLldp resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureMacsec:FeatureMacsec": {
            "description": "This resource can manage the MACsec feature configuration.\n\n- API Documentation: [fmMacsec](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Macsec/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureMacsec(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureMacsec(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureMacsec(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureMacsec(ctx, \"example\", \u0026nxos.FeatureMacsecArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureMacsec;\nimport com.pulumi.nxos.FeatureMacsecArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureMacsec(\"example\", FeatureMacsecArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureMacsec\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureMacsec:FeatureMacsec example \"sys/fm/macsec\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureMacsec resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureNetflow:FeatureNetflow": {
            "description": "This resource can manage the Netflow feature configuration.\n\n- API Documentation: [fmNetflow](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Netflow/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureNetflow(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureNetflow(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureNetflow(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureNetflow(ctx, \"example\", \u0026nxos.FeatureNetflowArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureNetflow;\nimport com.pulumi.nxos.FeatureNetflowArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureNetflow(\"example\", FeatureNetflowArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureNetflow\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureNetflow:FeatureNetflow example \"sys/fm/netflow\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureNetflow resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureNvOverlay:FeatureNvOverlay": {
            "description": "This resource can manage the NV Overlay feature configuration.\n\n- API Documentation: [fmNvo](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Nvo/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureNvOverlay(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureNvOverlay(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureNvOverlay(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureNvOverlay(ctx, \"example\", \u0026nxos.FeatureNvOverlayArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureNvOverlay;\nimport com.pulumi.nxos.FeatureNvOverlayArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureNvOverlay(\"example\", FeatureNvOverlayArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureNvOverlay\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureNvOverlay:FeatureNvOverlay example \"sys/fm/nvo\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureNvOverlay resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureOspf:FeatureOspf": {
            "description": "This resource can manage the OSPF feature configuration.\n\n- API Documentation: [fmOspf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Ospf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureOspf(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureOspf(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureOspf(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureOspf(ctx, \"example\", \u0026nxos.FeatureOspfArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureOspf;\nimport com.pulumi.nxos.FeatureOspfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureOspf(\"example\", FeatureOspfArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureOspf\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureOspf:FeatureOspf example \"sys/fm/ospf\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureOspf resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureOspfv3:FeatureOspfv3": {
            "description": "This resource can manage the OSPFv3 feature configuration.\n\n- API Documentation: [fmOspfv3](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Ospfv3/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureOspfv3(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureOspfv3(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureOspfv3(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureOspfv3(ctx, \"example\", \u0026nxos.FeatureOspfv3Args{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureOspfv3;\nimport com.pulumi.nxos.FeatureOspfv3Args;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureOspfv3(\"example\", FeatureOspfv3Args.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureOspfv3\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureOspfv3:FeatureOspfv3 example \"sys/fm/ospfv3\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureOspfv3 resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featurePim:FeaturePim": {
            "description": "This resource can manage the PIM feature configuration.\n\n- API Documentation: [fmPim](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Pim/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeaturePim(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeaturePim(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeaturePim(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeaturePim(ctx, \"example\", \u0026nxos.FeaturePimArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeaturePim;\nimport com.pulumi.nxos.FeaturePimArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeaturePim(\"example\", FeaturePimArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeaturePim\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featurePim:FeaturePim example \"sys/fm/pim\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeaturePim resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featurePtp:FeaturePtp": {
            "description": "This resource can manage the PTP feature configuration.\n\n- API Documentation: [fmPtp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Ptp/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeaturePtp(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeaturePtp(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeaturePtp(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeaturePtp(ctx, \"example\", \u0026nxos.FeaturePtpArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeaturePtp;\nimport com.pulumi.nxos.FeaturePtpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeaturePtp(\"example\", FeaturePtpArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeaturePtp\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featurePtp:FeaturePtp example \"sys/fm/ptp\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeaturePtp resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featurePvlan:FeaturePvlan": {
            "description": "This resource can manage the PVLAN feature configuration.\n\n- API Documentation: [fmPvlan](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Pvlan/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeaturePvlan(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeaturePvlan(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeaturePvlan(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeaturePvlan(ctx, \"example\", \u0026nxos.FeaturePvlanArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeaturePvlan;\nimport com.pulumi.nxos.FeaturePvlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeaturePvlan(\"example\", FeaturePvlanArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeaturePvlan\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featurePvlan:FeaturePvlan example \"sys/fm/pvlan\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeaturePvlan resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureSsh:FeatureSsh": {
            "description": "This resource can manage the SSH feature configuration.\n\n- API Documentation: [fmSsh](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Ssh/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureSsh(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureSsh(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureSsh(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureSsh(ctx, \"example\", \u0026nxos.FeatureSshArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureSsh;\nimport com.pulumi.nxos.FeatureSshArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureSsh(\"example\", FeatureSshArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureSsh\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureSsh:FeatureSsh example \"sys/fm/ssh\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureSsh resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureTacacs:FeatureTacacs": {
            "description": "This resource can manage the TACACS+ feature configuration.\n\n- API Documentation: [fmTacacsplus](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Tacacsplus/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureTacacs(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureTacacs(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureTacacs(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureTacacs(ctx, \"example\", \u0026nxos.FeatureTacacsArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureTacacs;\nimport com.pulumi.nxos.FeatureTacacsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureTacacs(\"example\", FeatureTacacsArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureTacacs\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureTacacs:FeatureTacacs example \"sys/fm/tacacsplus\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureTacacs resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureTelnet:FeatureTelnet": {
            "description": "This resource can manage the Telnet feature configuration.\n\n- API Documentation: [fmTelnet](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Telnet/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureTelnet(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureTelnet(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureTelnet(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureTelnet(ctx, \"example\", \u0026nxos.FeatureTelnetArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureTelnet;\nimport com.pulumi.nxos.FeatureTelnetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureTelnet(\"example\", FeatureTelnetArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureTelnet\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureTelnet:FeatureTelnet example \"sys/fm/telnet\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureTelnet resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureUdld:FeatureUdld": {
            "description": "This resource can manage the UDLD feature configuration.\n\n- API Documentation: [fmUdld](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Udld/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureUdld(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureUdld(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureUdld(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureUdld(ctx, \"example\", \u0026nxos.FeatureUdldArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureUdld;\nimport com.pulumi.nxos.FeatureUdldArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureUdld(\"example\", FeatureUdldArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureUdld\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureUdld:FeatureUdld example \"sys/fm/udld\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureUdld resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureVnSegment:FeatureVnSegment": {
            "description": "This resource can manage the VN Segment feature configuration.\n\n- API Documentation: [fmVnSegment](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:VnSegment/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureVnSegment(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureVnSegment(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureVnSegment(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureVnSegment(ctx, \"example\", \u0026nxos.FeatureVnSegmentArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureVnSegment;\nimport com.pulumi.nxos.FeatureVnSegmentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureVnSegment(\"example\", FeatureVnSegmentArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureVnSegment\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureVnSegment:FeatureVnSegment example \"sys/fm/vnsegment\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureVnSegment resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/featureVpc:FeatureVpc": {
            "description": "This resource can manage the VPC feature configuration.\n\n- API Documentation: [fmVpc](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Vpc/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.FeatureVpc(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.FeatureVpc(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.FeatureVpc(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewFeatureVpc(ctx, \"example\", \u0026nxos.FeatureVpcArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.FeatureVpc;\nimport com.pulumi.nxos.FeatureVpcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FeatureVpc(\"example\", FeatureVpcArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:FeatureVpc\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/featureVpc:FeatureVpc example \"sys/fm/vpc\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "adminState"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FeatureVpc resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/hmm:Hmm": {
            "description": "This resource can manage the Host Mobility Manager (HMM) Entity configuration.\n\n- API Documentation: [hmmEntity](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Host%20Mobility/hmm:Entity/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Hmm(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Hmm(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Hmm(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewHmm(ctx, \"example\", \u0026nxos.HmmArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Hmm;\nimport com.pulumi.nxos.HmmArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Hmm(\"example\", HmmArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Hmm\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/hmm:Hmm example \"sys/hmm\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Hmm resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/hmmInstance:HmmInstance": {
            "description": "This resource can manage the HMM Fabric Forwarding Instance configuration.\n\n- API Documentation: [hmmFwdInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Host%20Mobility/hmm:FwdInst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.HmmInstance(\"example\", {\n    adminState: \"enabled\",\n    anycastMac: \"20:20:00:00:10:10\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.HmmInstance(\"example\",\n    admin_state=\"enabled\",\n    anycast_mac=\"20:20:00:00:10:10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.HmmInstance(\"example\", new()\n    {\n        AdminState = \"enabled\",\n        AnycastMac = \"20:20:00:00:10:10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewHmmInstance(ctx, \"example\", \u0026nxos.HmmInstanceArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t\tAnycastMac: pulumi.String(\"20:20:00:00:10:10\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.HmmInstance;\nimport com.pulumi.nxos.HmmInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new HmmInstance(\"example\", HmmInstanceArgs.builder()        \n            .adminState(\"enabled\")\n            .anycastMac(\"20:20:00:00:10:10\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:HmmInstance\n    properties:\n      adminState: enabled\n      anycastMac: 20:20:00:00:10:10\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/hmmInstance:HmmInstance example \"sys/hmm/fwdinst\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "anycastMac": {
                    "type": "string",
                    "description": "Anycast Gateway MAC address. - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState",
                "anycastMac"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "anycastMac": {
                    "type": "string",
                    "description": "Anycast Gateway MAC address. - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HmmInstance resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "anycastMac": {
                        "type": "string",
                        "description": "Anycast Gateway MAC address. - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/hmmInterface:HmmInterface": {
            "description": "This resource can manage the HMM Fabric Forwarding mode information related to an Interface.\n\n- API Documentation: [hmmFwdIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Host%20Mobility/hmm:FwdIf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.HmmInterface(\"example\", {\n    adminState: \"enabled\",\n    interfaceId: \"vlan10\",\n    mode: \"anycastGW\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.HmmInterface(\"example\",\n    admin_state=\"enabled\",\n    interface_id=\"vlan10\",\n    mode=\"anycastGW\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.HmmInterface(\"example\", new()\n    {\n        AdminState = \"enabled\",\n        InterfaceId = \"vlan10\",\n        Mode = \"anycastGW\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewHmmInterface(ctx, \"example\", \u0026nxos.HmmInterfaceArgs{\n\t\t\tAdminState:  pulumi.String(\"enabled\"),\n\t\t\tInterfaceId: pulumi.String(\"vlan10\"),\n\t\t\tMode:        pulumi.String(\"anycastGW\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.HmmInterface;\nimport com.pulumi.nxos.HmmInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new HmmInterface(\"example\", HmmInterfaceArgs.builder()        \n            .adminState(\"enabled\")\n            .interfaceId(\"vlan10\")\n            .mode(\"anycastGW\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:HmmInterface\n    properties:\n      adminState: enabled\n      interfaceId: vlan10\n      mode: anycastGW\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/hmmInterface:HmmInterface example \"sys/hmm/fwdinst/if-[vlan10]\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `vlan10`.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "HMM Fabric Forwarding mode information for the interface. - Choices: `standard`, `anycastGW`, `proxyGW` - Default value:\n`standard`\n"
                }
            },
            "required": [
                "adminState",
                "interfaceId",
                "mode"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `vlan10`.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "HMM Fabric Forwarding mode information for the interface. - Choices: `standard`, `anycastGW`, `proxyGW` - Default value:\n`standard`\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HmmInterface resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `vlan10`.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "HMM Fabric Forwarding mode information for the interface. - Choices: `standard`, `anycastGW`, `proxyGW` - Default value:\n`standard`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ipv4AccessList:Ipv4AccessList": {
            "description": "This resource can manage IPv4 Access Lists.\n\n- API Documentation: [ipv4aclACL](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Security%20and%20Policing/ipv4acl:ACL/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Ipv4AccessList(\"example\", {});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Ipv4AccessList(\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Ipv4AccessList(\"example\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewIpv4AccessList(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Ipv4AccessList;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ipv4AccessList(\"example\");\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Ipv4AccessList\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ipv4AccessList:Ipv4AccessList example \"sys/acl/ipv4/name-[ACL1]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Access list name.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Access list name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4AccessList resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Access list name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ipv4AccessListEntry:Ipv4AccessListEntry": {
            "description": "This resource can manage IPv4 Access List Entries.\n\n- API Documentation: [ipv4aclACE](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Security%20and%20Policing/ipv4acl:ACE/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Ipv4AccessListEntry(\"example\", {\n    ack: false,\n    action: \"permit\",\n    destinationAddressGroup: \"AG1\",\n    destinationPort1: \"443\",\n    destinationPort2: \"0\",\n    destinationPortGroup: \"PG1\",\n    destinationPortMask: \"0\",\n    destinationPortOperator: \"eq\",\n    destinationPrefix: \"10.1.1.0\",\n    destinationPrefixLength: \"24\",\n    destinationPrefixMask: \"255.255.255.0\",\n    dscp: 0,\n    est: false,\n    fin: false,\n    fragment: false,\n    httpOptionType: \"invalid\",\n    icmpCode: 0,\n    icmpType: 0,\n    logging: true,\n    packetLength1: \"19\",\n    packetLength2: \"9210\",\n    packetLengthOperator: \"range\",\n    precedence: \"0\",\n    protocol: \"tcp\",\n    protocolMask: \"tcp\",\n    psh: false,\n    redirect: \"RD\",\n    remark: \"Line1\",\n    rev: false,\n    rst: false,\n    sequenceNumber: 10,\n    sourceAddressGroup: \"AG2\",\n    sourcePort1: \"443\",\n    sourcePort2: \"0\",\n    sourcePortGroup: \"PG2\",\n    sourcePortMask: \"0\",\n    sourcePortOperator: \"eq\",\n    sourcePrefix: \"20.1.0.0\",\n    sourcePrefixLength: \"16\",\n    sourcePrefixMask: \"255.255.0.0\",\n    syn: false,\n    timeRange: \"TR1\",\n    ttl: 0,\n    urg: false,\n    vlan: 4095,\n    vni: \"invalid\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Ipv4AccessListEntry(\"example\",\n    ack=False,\n    action=\"permit\",\n    destination_address_group=\"AG1\",\n    destination_port1=\"443\",\n    destination_port2=\"0\",\n    destination_port_group=\"PG1\",\n    destination_port_mask=\"0\",\n    destination_port_operator=\"eq\",\n    destination_prefix=\"10.1.1.0\",\n    destination_prefix_length=\"24\",\n    destination_prefix_mask=\"255.255.255.0\",\n    dscp=0,\n    est=False,\n    fin=False,\n    fragment=False,\n    http_option_type=\"invalid\",\n    icmp_code=0,\n    icmp_type=0,\n    logging=True,\n    packet_length1=\"19\",\n    packet_length2=\"9210\",\n    packet_length_operator=\"range\",\n    precedence=\"0\",\n    protocol=\"tcp\",\n    protocol_mask=\"tcp\",\n    psh=False,\n    redirect=\"RD\",\n    remark=\"Line1\",\n    rev=False,\n    rst=False,\n    sequence_number=10,\n    source_address_group=\"AG2\",\n    source_port1=\"443\",\n    source_port2=\"0\",\n    source_port_group=\"PG2\",\n    source_port_mask=\"0\",\n    source_port_operator=\"eq\",\n    source_prefix=\"20.1.0.0\",\n    source_prefix_length=\"16\",\n    source_prefix_mask=\"255.255.0.0\",\n    syn=False,\n    time_range=\"TR1\",\n    ttl=0,\n    urg=False,\n    vlan=4095,\n    vni=\"invalid\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Ipv4AccessListEntry(\"example\", new()\n    {\n        Ack = false,\n        Action = \"permit\",\n        DestinationAddressGroup = \"AG1\",\n        DestinationPort1 = \"443\",\n        DestinationPort2 = \"0\",\n        DestinationPortGroup = \"PG1\",\n        DestinationPortMask = \"0\",\n        DestinationPortOperator = \"eq\",\n        DestinationPrefix = \"10.1.1.0\",\n        DestinationPrefixLength = \"24\",\n        DestinationPrefixMask = \"255.255.255.0\",\n        Dscp = 0,\n        Est = false,\n        Fin = false,\n        Fragment = false,\n        HttpOptionType = \"invalid\",\n        IcmpCode = 0,\n        IcmpType = 0,\n        Logging = true,\n        PacketLength1 = \"19\",\n        PacketLength2 = \"9210\",\n        PacketLengthOperator = \"range\",\n        Precedence = \"0\",\n        Protocol = \"tcp\",\n        ProtocolMask = \"tcp\",\n        Psh = false,\n        Redirect = \"RD\",\n        Remark = \"Line1\",\n        Rev = false,\n        Rst = false,\n        SequenceNumber = 10,\n        SourceAddressGroup = \"AG2\",\n        SourcePort1 = \"443\",\n        SourcePort2 = \"0\",\n        SourcePortGroup = \"PG2\",\n        SourcePortMask = \"0\",\n        SourcePortOperator = \"eq\",\n        SourcePrefix = \"20.1.0.0\",\n        SourcePrefixLength = \"16\",\n        SourcePrefixMask = \"255.255.0.0\",\n        Syn = false,\n        TimeRange = \"TR1\",\n        Ttl = 0,\n        Urg = false,\n        Vlan = 4095,\n        Vni = \"invalid\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewIpv4AccessListEntry(ctx, \"example\", \u0026nxos.Ipv4AccessListEntryArgs{\n\t\t\tAck:                     pulumi.Bool(false),\n\t\t\tAction:                  pulumi.String(\"permit\"),\n\t\t\tDestinationAddressGroup: pulumi.String(\"AG1\"),\n\t\t\tDestinationPort1:        pulumi.String(\"443\"),\n\t\t\tDestinationPort2:        pulumi.String(\"0\"),\n\t\t\tDestinationPortGroup:    pulumi.String(\"PG1\"),\n\t\t\tDestinationPortMask:     pulumi.String(\"0\"),\n\t\t\tDestinationPortOperator: pulumi.String(\"eq\"),\n\t\t\tDestinationPrefix:       pulumi.String(\"10.1.1.0\"),\n\t\t\tDestinationPrefixLength: pulumi.String(\"24\"),\n\t\t\tDestinationPrefixMask:   pulumi.String(\"255.255.255.0\"),\n\t\t\tDscp:                    pulumi.Int(0),\n\t\t\tEst:                     pulumi.Bool(false),\n\t\t\tFin:                     pulumi.Bool(false),\n\t\t\tFragment:                pulumi.Bool(false),\n\t\t\tHttpOptionType:          pulumi.String(\"invalid\"),\n\t\t\tIcmpCode:                pulumi.Int(0),\n\t\t\tIcmpType:                pulumi.Int(0),\n\t\t\tLogging:                 pulumi.Bool(true),\n\t\t\tPacketLength1:           pulumi.String(\"19\"),\n\t\t\tPacketLength2:           pulumi.String(\"9210\"),\n\t\t\tPacketLengthOperator:    pulumi.String(\"range\"),\n\t\t\tPrecedence:              pulumi.String(\"0\"),\n\t\t\tProtocol:                pulumi.String(\"tcp\"),\n\t\t\tProtocolMask:            pulumi.String(\"tcp\"),\n\t\t\tPsh:                     pulumi.Bool(false),\n\t\t\tRedirect:                pulumi.String(\"RD\"),\n\t\t\tRemark:                  pulumi.String(\"Line1\"),\n\t\t\tRev:                     pulumi.Bool(false),\n\t\t\tRst:                     pulumi.Bool(false),\n\t\t\tSequenceNumber:          pulumi.Int(10),\n\t\t\tSourceAddressGroup:      pulumi.String(\"AG2\"),\n\t\t\tSourcePort1:             pulumi.String(\"443\"),\n\t\t\tSourcePort2:             pulumi.String(\"0\"),\n\t\t\tSourcePortGroup:         pulumi.String(\"PG2\"),\n\t\t\tSourcePortMask:          pulumi.String(\"0\"),\n\t\t\tSourcePortOperator:      pulumi.String(\"eq\"),\n\t\t\tSourcePrefix:            pulumi.String(\"20.1.0.0\"),\n\t\t\tSourcePrefixLength:      pulumi.String(\"16\"),\n\t\t\tSourcePrefixMask:        pulumi.String(\"255.255.0.0\"),\n\t\t\tSyn:                     pulumi.Bool(false),\n\t\t\tTimeRange:               pulumi.String(\"TR1\"),\n\t\t\tTtl:                     pulumi.Int(0),\n\t\t\tUrg:                     pulumi.Bool(false),\n\t\t\tVlan:                    pulumi.Int(4095),\n\t\t\tVni:                     pulumi.String(\"invalid\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Ipv4AccessListEntry;\nimport com.pulumi.nxos.Ipv4AccessListEntryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ipv4AccessListEntry(\"example\", Ipv4AccessListEntryArgs.builder()        \n            .ack(false)\n            .action(\"permit\")\n            .destinationAddressGroup(\"AG1\")\n            .destinationPort1(\"443\")\n            .destinationPort2(\"0\")\n            .destinationPortGroup(\"PG1\")\n            .destinationPortMask(\"0\")\n            .destinationPortOperator(\"eq\")\n            .destinationPrefix(\"10.1.1.0\")\n            .destinationPrefixLength(\"24\")\n            .destinationPrefixMask(\"255.255.255.0\")\n            .dscp(0)\n            .est(false)\n            .fin(false)\n            .fragment(false)\n            .httpOptionType(\"invalid\")\n            .icmpCode(0)\n            .icmpType(0)\n            .logging(true)\n            .packetLength1(\"19\")\n            .packetLength2(\"9210\")\n            .packetLengthOperator(\"range\")\n            .precedence(\"0\")\n            .protocol(\"tcp\")\n            .protocolMask(\"tcp\")\n            .psh(false)\n            .redirect(\"RD\")\n            .remark(\"Line1\")\n            .rev(false)\n            .rst(false)\n            .sequenceNumber(10)\n            .sourceAddressGroup(\"AG2\")\n            .sourcePort1(\"443\")\n            .sourcePort2(\"0\")\n            .sourcePortGroup(\"PG2\")\n            .sourcePortMask(\"0\")\n            .sourcePortOperator(\"eq\")\n            .sourcePrefix(\"20.1.0.0\")\n            .sourcePrefixLength(\"16\")\n            .sourcePrefixMask(\"255.255.0.0\")\n            .syn(false)\n            .timeRange(\"TR1\")\n            .ttl(0)\n            .urg(false)\n            .vlan(4095)\n            .vni(\"invalid\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Ipv4AccessListEntry\n    properties:\n      ack: false\n      action: permit\n      destinationAddressGroup: AG1\n      destinationPort1: '443'\n      destinationPort2: '0'\n      destinationPortGroup: PG1\n      destinationPortMask: '0'\n      destinationPortOperator: eq\n      destinationPrefix: 10.1.1.0\n      destinationPrefixLength: '24'\n      destinationPrefixMask: 255.255.255.0\n      dscp: 0\n      est: false\n      fin: false\n      fragment: false\n      httpOptionType: invalid\n      icmpCode: 0\n      icmpType: 0\n      logging: true\n      packetLength1: '19'\n      packetLength2: '9210'\n      packetLengthOperator: range\n      precedence: '0'\n      protocol: tcp\n      protocolMask: tcp\n      psh: false\n      redirect: RD\n      remark: Line1\n      rev: false\n      rst: false\n      sequenceNumber: 10\n      sourceAddressGroup: AG2\n      sourcePort1: '443'\n      sourcePort2: '0'\n      sourcePortGroup: PG2\n      sourcePortMask: '0'\n      sourcePortOperator: eq\n      sourcePrefix: 20.1.0.0\n      sourcePrefixLength: '16'\n      sourcePrefixMask: 255.255.0.0\n      syn: false\n      timeRange: TR1\n      ttl: 0\n      urg: false\n      vlan: 4095\n      vni: invalid\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ipv4AccessListEntry:Ipv4AccessListEntry example \"sys/acl/ipv4/name-[ACL1]/seq-[10]\"\n```\n\n ",
            "properties": {
                "ack": {
                    "type": "boolean",
                    "description": "Match TCP ACK flag.\n"
                },
                "action": {
                    "type": "string",
                    "description": "Action. - Choices: `invalid`, `permit`, `deny` - Default value: `invalid`\n"
                },
                "destinationAddressGroup": {
                    "type": "string",
                    "description": "Destination address group.\n"
                },
                "destinationPort1": {
                    "type": "string",
                    "description": "First destination port number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "destinationPort2": {
                    "type": "string",
                    "description": "Second destination port number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "destinationPortGroup": {
                    "type": "string",
                    "description": "Destination port group.\n"
                },
                "destinationPortMask": {
                    "type": "string",
                    "description": "Destination port mask number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "destinationPortOperator": {
                    "type": "string",
                    "description": "Destination port operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                },
                "destinationPrefix": {
                    "type": "string",
                    "description": "Destination prefix.\n"
                },
                "destinationPrefixLength": {
                    "type": "string",
                    "description": "Destination prefix length.\n"
                },
                "destinationPrefixMask": {
                    "type": "string",
                    "description": "Destination prefix mask.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dscp": {
                    "type": "integer",
                    "description": "Match DSCP. - Range: `0`-`63`\n"
                },
                "est": {
                    "type": "boolean",
                    "description": "Match TCP EST flag.\n"
                },
                "fin": {
                    "type": "boolean",
                    "description": "Match TCP FIN flag.\n"
                },
                "fragment": {
                    "type": "boolean",
                    "description": "Match non-initial fragment.\n"
                },
                "httpOptionType": {
                    "type": "string",
                    "description": "HTTP option method. - Choices: `invalid`, `get`, `put`, `head`, `post`, `delete`, `trace`, `connect` - Default value:\n`invalid`\n"
                },
                "icmpCode": {
                    "type": "integer",
                    "description": "ICMP code. - Range: `0`-`256` - Default value: `256`\n"
                },
                "icmpType": {
                    "type": "integer",
                    "description": "ICMP type. - Range: `0`-`256` - Default value: `256`\n"
                },
                "logging": {
                    "type": "boolean",
                    "description": "Log matches against ACL entry. - Default value: `false`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Access list name.\n"
                },
                "packetLength1": {
                    "type": "string",
                    "description": "First packet length. Either `invalid` or a number between 19 and 9210. - Default value: `invalid`\n"
                },
                "packetLength2": {
                    "type": "string",
                    "description": "Second packet length. Either `invalid` or a number between 19 and 9210. - Default value: `invalid`\n"
                },
                "packetLengthOperator": {
                    "type": "string",
                    "description": "Packet length operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                },
                "precedence": {
                    "type": "string",
                    "description": "Precedence. Either `unspecified` or a number between 0 and 7. - Default value: `unspecified`\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol name or number. - Choices: `ip`, `icmp`, `igmp`, `tcp`, `udp`, `gre`, `esp`, `ahp`, `eigrp`, `ospf`, `nos`,\n`pim`, `pcp`, `udf`\n"
                },
                "protocolMask": {
                    "type": "string",
                    "description": "Protocol mask name or number. - Choices: `ip`, `icmp`, `igmp`, `tcp`, `udp`, `gre`, `esp`, `ahp`, `eigrp`, `ospf`,\n`nos`, `pim`, `pcp`, `udf`\n"
                },
                "psh": {
                    "type": "boolean",
                    "description": "Match TCP PSH flag.\n"
                },
                "redirect": {
                    "type": "string",
                    "description": "Redirect action.\n"
                },
                "remark": {
                    "type": "string",
                    "description": "ACL comment.\n"
                },
                "rev": {
                    "type": "boolean",
                    "description": "Match TCP REV flag.\n"
                },
                "rst": {
                    "type": "boolean",
                    "description": "Match TCP RST flag.\n"
                },
                "sequenceNumber": {
                    "type": "integer",
                    "description": "Sequence number.\n"
                },
                "sourceAddressGroup": {
                    "type": "string",
                    "description": "Source address group.\n"
                },
                "sourcePort1": {
                    "type": "string",
                    "description": "First source port name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "sourcePort2": {
                    "type": "string",
                    "description": "Second source port name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "sourcePortGroup": {
                    "type": "string",
                    "description": "Source port group.\n"
                },
                "sourcePortMask": {
                    "type": "string",
                    "description": "Source port mask name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "sourcePortOperator": {
                    "type": "string",
                    "description": "Source port operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                },
                "sourcePrefix": {
                    "type": "string",
                    "description": "Source prefix.\n"
                },
                "sourcePrefixLength": {
                    "type": "string",
                    "description": "Source prefix length.\n"
                },
                "sourcePrefixMask": {
                    "type": "string",
                    "description": "Source prefix mask.\n"
                },
                "syn": {
                    "type": "boolean",
                    "description": "Match TCP SYN flag.\n"
                },
                "timeRange": {
                    "type": "string",
                    "description": "Time range name.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "TTL. - Range: `0`-`255` - Default value: `0`\n"
                },
                "urg": {
                    "type": "boolean",
                    "description": "Match TCP URG flag.\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "VLAN ID. - Range: `0`-`4095` - Default value: `4095`\n"
                },
                "vni": {
                    "type": "string",
                    "description": "NVE VNI ID. Either `invalid` or a number between 0 and 16777216. - Default value: `invalid`\n"
                }
            },
            "required": [
                "action",
                "destinationPortOperator",
                "httpOptionType",
                "icmpCode",
                "icmpType",
                "logging",
                "name",
                "packetLength1",
                "packetLength2",
                "packetLengthOperator",
                "precedence",
                "sequenceNumber",
                "sourcePortOperator",
                "ttl",
                "vlan",
                "vni"
            ],
            "inputProperties": {
                "ack": {
                    "type": "boolean",
                    "description": "Match TCP ACK flag.\n"
                },
                "action": {
                    "type": "string",
                    "description": "Action. - Choices: `invalid`, `permit`, `deny` - Default value: `invalid`\n"
                },
                "destinationAddressGroup": {
                    "type": "string",
                    "description": "Destination address group.\n"
                },
                "destinationPort1": {
                    "type": "string",
                    "description": "First destination port number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "destinationPort2": {
                    "type": "string",
                    "description": "Second destination port number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "destinationPortGroup": {
                    "type": "string",
                    "description": "Destination port group.\n"
                },
                "destinationPortMask": {
                    "type": "string",
                    "description": "Destination port mask number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "destinationPortOperator": {
                    "type": "string",
                    "description": "Destination port operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                },
                "destinationPrefix": {
                    "type": "string",
                    "description": "Destination prefix.\n"
                },
                "destinationPrefixLength": {
                    "type": "string",
                    "description": "Destination prefix length.\n"
                },
                "destinationPrefixMask": {
                    "type": "string",
                    "description": "Destination prefix mask.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dscp": {
                    "type": "integer",
                    "description": "Match DSCP. - Range: `0`-`63`\n"
                },
                "est": {
                    "type": "boolean",
                    "description": "Match TCP EST flag.\n"
                },
                "fin": {
                    "type": "boolean",
                    "description": "Match TCP FIN flag.\n"
                },
                "fragment": {
                    "type": "boolean",
                    "description": "Match non-initial fragment.\n"
                },
                "httpOptionType": {
                    "type": "string",
                    "description": "HTTP option method. - Choices: `invalid`, `get`, `put`, `head`, `post`, `delete`, `trace`, `connect` - Default value:\n`invalid`\n"
                },
                "icmpCode": {
                    "type": "integer",
                    "description": "ICMP code. - Range: `0`-`256` - Default value: `256`\n"
                },
                "icmpType": {
                    "type": "integer",
                    "description": "ICMP type. - Range: `0`-`256` - Default value: `256`\n"
                },
                "logging": {
                    "type": "boolean",
                    "description": "Log matches against ACL entry. - Default value: `false`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Access list name.\n"
                },
                "packetLength1": {
                    "type": "string",
                    "description": "First packet length. Either `invalid` or a number between 19 and 9210. - Default value: `invalid`\n"
                },
                "packetLength2": {
                    "type": "string",
                    "description": "Second packet length. Either `invalid` or a number between 19 and 9210. - Default value: `invalid`\n"
                },
                "packetLengthOperator": {
                    "type": "string",
                    "description": "Packet length operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                },
                "precedence": {
                    "type": "string",
                    "description": "Precedence. Either `unspecified` or a number between 0 and 7. - Default value: `unspecified`\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol name or number. - Choices: `ip`, `icmp`, `igmp`, `tcp`, `udp`, `gre`, `esp`, `ahp`, `eigrp`, `ospf`, `nos`,\n`pim`, `pcp`, `udf`\n"
                },
                "protocolMask": {
                    "type": "string",
                    "description": "Protocol mask name or number. - Choices: `ip`, `icmp`, `igmp`, `tcp`, `udp`, `gre`, `esp`, `ahp`, `eigrp`, `ospf`,\n`nos`, `pim`, `pcp`, `udf`\n"
                },
                "psh": {
                    "type": "boolean",
                    "description": "Match TCP PSH flag.\n"
                },
                "redirect": {
                    "type": "string",
                    "description": "Redirect action.\n"
                },
                "remark": {
                    "type": "string",
                    "description": "ACL comment.\n"
                },
                "rev": {
                    "type": "boolean",
                    "description": "Match TCP REV flag.\n"
                },
                "rst": {
                    "type": "boolean",
                    "description": "Match TCP RST flag.\n"
                },
                "sequenceNumber": {
                    "type": "integer",
                    "description": "Sequence number.\n"
                },
                "sourceAddressGroup": {
                    "type": "string",
                    "description": "Source address group.\n"
                },
                "sourcePort1": {
                    "type": "string",
                    "description": "First source port name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "sourcePort2": {
                    "type": "string",
                    "description": "Second source port name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "sourcePortGroup": {
                    "type": "string",
                    "description": "Source port group.\n"
                },
                "sourcePortMask": {
                    "type": "string",
                    "description": "Source port mask name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                },
                "sourcePortOperator": {
                    "type": "string",
                    "description": "Source port operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                },
                "sourcePrefix": {
                    "type": "string",
                    "description": "Source prefix.\n"
                },
                "sourcePrefixLength": {
                    "type": "string",
                    "description": "Source prefix length.\n"
                },
                "sourcePrefixMask": {
                    "type": "string",
                    "description": "Source prefix mask.\n"
                },
                "syn": {
                    "type": "boolean",
                    "description": "Match TCP SYN flag.\n"
                },
                "timeRange": {
                    "type": "string",
                    "description": "Time range name.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "TTL. - Range: `0`-`255` - Default value: `0`\n"
                },
                "urg": {
                    "type": "boolean",
                    "description": "Match TCP URG flag.\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "VLAN ID. - Range: `0`-`4095` - Default value: `4095`\n"
                },
                "vni": {
                    "type": "string",
                    "description": "NVE VNI ID. Either `invalid` or a number between 0 and 16777216. - Default value: `invalid`\n"
                }
            },
            "requiredInputs": [
                "sequenceNumber"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4AccessListEntry resources.\n",
                "properties": {
                    "ack": {
                        "type": "boolean",
                        "description": "Match TCP ACK flag.\n"
                    },
                    "action": {
                        "type": "string",
                        "description": "Action. - Choices: `invalid`, `permit`, `deny` - Default value: `invalid`\n"
                    },
                    "destinationAddressGroup": {
                        "type": "string",
                        "description": "Destination address group.\n"
                    },
                    "destinationPort1": {
                        "type": "string",
                        "description": "First destination port number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                    },
                    "destinationPort2": {
                        "type": "string",
                        "description": "Second destination port number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                    },
                    "destinationPortGroup": {
                        "type": "string",
                        "description": "Destination port group.\n"
                    },
                    "destinationPortMask": {
                        "type": "string",
                        "description": "Destination port mask number or name. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                    },
                    "destinationPortOperator": {
                        "type": "string",
                        "description": "Destination port operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                    },
                    "destinationPrefix": {
                        "type": "string",
                        "description": "Destination prefix.\n"
                    },
                    "destinationPrefixLength": {
                        "type": "string",
                        "description": "Destination prefix length.\n"
                    },
                    "destinationPrefixMask": {
                        "type": "string",
                        "description": "Destination prefix mask.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "Match DSCP. - Range: `0`-`63`\n"
                    },
                    "est": {
                        "type": "boolean",
                        "description": "Match TCP EST flag.\n"
                    },
                    "fin": {
                        "type": "boolean",
                        "description": "Match TCP FIN flag.\n"
                    },
                    "fragment": {
                        "type": "boolean",
                        "description": "Match non-initial fragment.\n"
                    },
                    "httpOptionType": {
                        "type": "string",
                        "description": "HTTP option method. - Choices: `invalid`, `get`, `put`, `head`, `post`, `delete`, `trace`, `connect` - Default value:\n`invalid`\n"
                    },
                    "icmpCode": {
                        "type": "integer",
                        "description": "ICMP code. - Range: `0`-`256` - Default value: `256`\n"
                    },
                    "icmpType": {
                        "type": "integer",
                        "description": "ICMP type. - Range: `0`-`256` - Default value: `256`\n"
                    },
                    "logging": {
                        "type": "boolean",
                        "description": "Log matches against ACL entry. - Default value: `false`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Access list name.\n"
                    },
                    "packetLength1": {
                        "type": "string",
                        "description": "First packet length. Either `invalid` or a number between 19 and 9210. - Default value: `invalid`\n"
                    },
                    "packetLength2": {
                        "type": "string",
                        "description": "Second packet length. Either `invalid` or a number between 19 and 9210. - Default value: `invalid`\n"
                    },
                    "packetLengthOperator": {
                        "type": "string",
                        "description": "Packet length operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                    },
                    "precedence": {
                        "type": "string",
                        "description": "Precedence. Either `unspecified` or a number between 0 and 7. - Default value: `unspecified`\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Protocol name or number. - Choices: `ip`, `icmp`, `igmp`, `tcp`, `udp`, `gre`, `esp`, `ahp`, `eigrp`, `ospf`, `nos`,\n`pim`, `pcp`, `udf`\n"
                    },
                    "protocolMask": {
                        "type": "string",
                        "description": "Protocol mask name or number. - Choices: `ip`, `icmp`, `igmp`, `tcp`, `udp`, `gre`, `esp`, `ahp`, `eigrp`, `ospf`,\n`nos`, `pim`, `pcp`, `udf`\n"
                    },
                    "psh": {
                        "type": "boolean",
                        "description": "Match TCP PSH flag.\n"
                    },
                    "redirect": {
                        "type": "string",
                        "description": "Redirect action.\n"
                    },
                    "remark": {
                        "type": "string",
                        "description": "ACL comment.\n"
                    },
                    "rev": {
                        "type": "boolean",
                        "description": "Match TCP REV flag.\n"
                    },
                    "rst": {
                        "type": "boolean",
                        "description": "Match TCP RST flag.\n"
                    },
                    "sequenceNumber": {
                        "type": "integer",
                        "description": "Sequence number.\n"
                    },
                    "sourceAddressGroup": {
                        "type": "string",
                        "description": "Source address group.\n"
                    },
                    "sourcePort1": {
                        "type": "string",
                        "description": "First source port name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                    },
                    "sourcePort2": {
                        "type": "string",
                        "description": "Second source port name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                    },
                    "sourcePortGroup": {
                        "type": "string",
                        "description": "Source port group.\n"
                    },
                    "sourcePortMask": {
                        "type": "string",
                        "description": "Source port mask name or number. - Choices: `echo`, `discard`, `daytime`, `chargen`, `ftp-data`, `ftp`, `telnet`,\n`smtp`, `time`, `nameserver`, `whois`, `tacacs`, `domain`, `bootps`, `bootpc`, `tftp`, `gopher`, `finger`, `www`,\n`hostname`, `pop2`, `pop3`, `sunrpc`, `ident`, `nntp`, `ntp`, `netbios-ns`, `netbios-dgm`, `netbios-ss`, `snmp`,\n`snmptrap`, `xdmcp`, `bgp`, `irc`, `dnsix`, `mobile-ip`, `pim-auto-rp`, `isakmp`, `biff`, `exec`, `who`, `login`,\n`syslog`, `cmd`, `lpd`, `talk`, `rip`, `uucp`, `klogin`, `kshell`, `drip`, `non500-isakmp`\n"
                    },
                    "sourcePortOperator": {
                        "type": "string",
                        "description": "Source port operator. - Choices: `none`, `lt`, `gt`, `eq`, `neq`, `range` - Default value: `none`\n"
                    },
                    "sourcePrefix": {
                        "type": "string",
                        "description": "Source prefix.\n"
                    },
                    "sourcePrefixLength": {
                        "type": "string",
                        "description": "Source prefix length.\n"
                    },
                    "sourcePrefixMask": {
                        "type": "string",
                        "description": "Source prefix mask.\n"
                    },
                    "syn": {
                        "type": "boolean",
                        "description": "Match TCP SYN flag.\n"
                    },
                    "timeRange": {
                        "type": "string",
                        "description": "Time range name.\n"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "TTL. - Range: `0`-`255` - Default value: `0`\n"
                    },
                    "urg": {
                        "type": "boolean",
                        "description": "Match TCP URG flag.\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "VLAN ID. - Range: `0`-`4095` - Default value: `4095`\n"
                    },
                    "vni": {
                        "type": "string",
                        "description": "NVE VNI ID. Either `invalid` or a number between 0 and 16777216. - Default value: `invalid`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ipv4AccessListPolicyEgressInterface:Ipv4AccessListPolicyEgressInterface": {
            "description": "This resource can manage an IPv4 Access List Policy Egress Interface.\n\n- API Documentation: [aclIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Security%20and%20Policing/acl:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Ipv4AccessListPolicyEgressInterface(\"example\", {\n    accessListName: \"ACL1\",\n    interfaceId: \"eth1/10\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Ipv4AccessListPolicyEgressInterface(\"example\",\n    access_list_name=\"ACL1\",\n    interface_id=\"eth1/10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Ipv4AccessListPolicyEgressInterface(\"example\", new()\n    {\n        AccessListName = \"ACL1\",\n        InterfaceId = \"eth1/10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewIpv4AccessListPolicyEgressInterface(ctx, \"example\", \u0026nxos.Ipv4AccessListPolicyEgressInterfaceArgs{\n\t\t\tAccessListName: pulumi.String(\"ACL1\"),\n\t\t\tInterfaceId:    pulumi.String(\"eth1/10\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Ipv4AccessListPolicyEgressInterface;\nimport com.pulumi.nxos.Ipv4AccessListPolicyEgressInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ipv4AccessListPolicyEgressInterface(\"example\", Ipv4AccessListPolicyEgressInterfaceArgs.builder()        \n            .accessListName(\"ACL1\")\n            .interfaceId(\"eth1/10\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Ipv4AccessListPolicyEgressInterface\n    properties:\n      accessListName: ACL1\n      interfaceId: eth1/10\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ipv4AccessListPolicyEgressInterface:Ipv4AccessListPolicyEgressInterface example \"sys/acl/ipv4/policy/egress/intf-[eth1/10]\"\n```\n\n ",
            "properties": {
                "accessListName": {
                    "type": "string",
                    "description": "Access list name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                }
            },
            "required": [
                "interfaceId"
            ],
            "inputProperties": {
                "accessListName": {
                    "type": "string",
                    "description": "Access list name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4AccessListPolicyEgressInterface resources.\n",
                "properties": {
                    "accessListName": {
                        "type": "string",
                        "description": "Access list name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ipv4AccessListPolicyIngressInterface:Ipv4AccessListPolicyIngressInterface": {
            "description": "This resource can manage an IPv4 Access List Policy Ingress Interface.\n\n- API Documentation: [aclIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Security%20and%20Policing/acl:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Ipv4AccessListPolicyIngressInterface(\"example\", {\n    accessListName: \"ACL1\",\n    interfaceId: \"eth1/10\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Ipv4AccessListPolicyIngressInterface(\"example\",\n    access_list_name=\"ACL1\",\n    interface_id=\"eth1/10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Ipv4AccessListPolicyIngressInterface(\"example\", new()\n    {\n        AccessListName = \"ACL1\",\n        InterfaceId = \"eth1/10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewIpv4AccessListPolicyIngressInterface(ctx, \"example\", \u0026nxos.Ipv4AccessListPolicyIngressInterfaceArgs{\n\t\t\tAccessListName: pulumi.String(\"ACL1\"),\n\t\t\tInterfaceId:    pulumi.String(\"eth1/10\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Ipv4AccessListPolicyIngressInterface;\nimport com.pulumi.nxos.Ipv4AccessListPolicyIngressInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ipv4AccessListPolicyIngressInterface(\"example\", Ipv4AccessListPolicyIngressInterfaceArgs.builder()        \n            .accessListName(\"ACL1\")\n            .interfaceId(\"eth1/10\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Ipv4AccessListPolicyIngressInterface\n    properties:\n      accessListName: ACL1\n      interfaceId: eth1/10\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ipv4AccessListPolicyIngressInterface:Ipv4AccessListPolicyIngressInterface example \"sys/acl/ipv4/policy/ingress/intf-[eth1/10]\"\n```\n\n ",
            "properties": {
                "accessListName": {
                    "type": "string",
                    "description": "Access list name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                }
            },
            "required": [
                "interfaceId"
            ],
            "inputProperties": {
                "accessListName": {
                    "type": "string",
                    "description": "Access list name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4AccessListPolicyIngressInterface resources.\n",
                "properties": {
                    "accessListName": {
                        "type": "string",
                        "description": "Access list name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ipv4Interface:Ipv4Interface": {
            "description": "This resource can manage an IPv4 interface.\n\n- API Documentation: [ipv4If](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/ipv4:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Ipv4Interface(\"example\", {\n    dropGlean: \"disabled\",\n    forward: \"disabled\",\n    interfaceId: \"eth1/10\",\n    unnumbered: \"unspecified\",\n    urpf: \"disabled\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Ipv4Interface(\"example\",\n    drop_glean=\"disabled\",\n    forward=\"disabled\",\n    interface_id=\"eth1/10\",\n    unnumbered=\"unspecified\",\n    urpf=\"disabled\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Ipv4Interface(\"example\", new()\n    {\n        DropGlean = \"disabled\",\n        Forward = \"disabled\",\n        InterfaceId = \"eth1/10\",\n        Unnumbered = \"unspecified\",\n        Urpf = \"disabled\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewIpv4Interface(ctx, \"example\", \u0026nxos.Ipv4InterfaceArgs{\n\t\t\tDropGlean:   pulumi.String(\"disabled\"),\n\t\t\tForward:     pulumi.String(\"disabled\"),\n\t\t\tInterfaceId: pulumi.String(\"eth1/10\"),\n\t\t\tUnnumbered:  pulumi.String(\"unspecified\"),\n\t\t\tUrpf:        pulumi.String(\"disabled\"),\n\t\t\tVrf:         pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Ipv4Interface;\nimport com.pulumi.nxos.Ipv4InterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ipv4Interface(\"example\", Ipv4InterfaceArgs.builder()        \n            .dropGlean(\"disabled\")\n            .forward(\"disabled\")\n            .interfaceId(\"eth1/10\")\n            .unnumbered(\"unspecified\")\n            .urpf(\"disabled\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Ipv4Interface\n    properties:\n      dropGlean: disabled\n      forward: disabled\n      interfaceId: eth1/10\n      unnumbered: unspecified\n      urpf: disabled\n      vrf: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ipv4Interface:Ipv4Interface example \"sys/ipv4/inst/dom-[default]/if-[eth1/10]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dropGlean": {
                    "type": "string",
                    "description": "ip drop-glean enabled/disabled. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "forward": {
                    "type": "string",
                    "description": "ip forward enabled/disabled. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "unnumbered": {
                    "type": "string",
                    "description": "IP unnumbered. Reference to interface must match first field in the output of `show intf brief`. Example: `eth1/1`. -\nDefault value: `unspecified`\n"
                },
                "urpf": {
                    "type": "string",
                    "description": "URPF (unicast Reverse Path Forwarding). - Choices: `disabled`, `strict`, `loose`, `loose-allow-default`,\n`strict-allow-vni-hosts` - Default value: `disabled`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "dropGlean",
                "forward",
                "interfaceId",
                "unnumbered",
                "urpf",
                "vrf"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dropGlean": {
                    "type": "string",
                    "description": "ip drop-glean enabled/disabled. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "forward": {
                    "type": "string",
                    "description": "ip forward enabled/disabled. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "unnumbered": {
                    "type": "string",
                    "description": "IP unnumbered. Reference to interface must match first field in the output of `show intf brief`. Example: `eth1/1`. -\nDefault value: `unspecified`\n"
                },
                "urpf": {
                    "type": "string",
                    "description": "URPF (unicast Reverse Path Forwarding). - Choices: `disabled`, `strict`, `loose`, `loose-allow-default`,\n`strict-allow-vni-hosts` - Default value: `disabled`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4Interface resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dropGlean": {
                        "type": "string",
                        "description": "ip drop-glean enabled/disabled. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "forward": {
                        "type": "string",
                        "description": "ip forward enabled/disabled. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "unnumbered": {
                        "type": "string",
                        "description": "IP unnumbered. Reference to interface must match first field in the output of `show intf brief`. Example: `eth1/1`. -\nDefault value: `unspecified`\n"
                    },
                    "urpf": {
                        "type": "string",
                        "description": "URPF (unicast Reverse Path Forwarding). - Choices: `disabled`, `strict`, `loose`, `loose-allow-default`,\n`strict-allow-vni-hosts` - Default value: `disabled`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ipv4InterfaceAddress:Ipv4InterfaceAddress": {
            "description": "This resource can manage an IPv4 interface address.\n\n- API Documentation: [ipv4Addr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/ipv4:Addr/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Ipv4InterfaceAddress(\"example\", {\n    address: \"24.63.46.49/30\",\n    interfaceId: \"eth1/10\",\n    type: \"primary\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Ipv4InterfaceAddress(\"example\",\n    address=\"24.63.46.49/30\",\n    interface_id=\"eth1/10\",\n    type=\"primary\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Ipv4InterfaceAddress(\"example\", new()\n    {\n        Address = \"24.63.46.49/30\",\n        InterfaceId = \"eth1/10\",\n        Type = \"primary\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewIpv4InterfaceAddress(ctx, \"example\", \u0026nxos.Ipv4InterfaceAddressArgs{\n\t\t\tAddress:     pulumi.String(\"24.63.46.49/30\"),\n\t\t\tInterfaceId: pulumi.String(\"eth1/10\"),\n\t\t\tType:        pulumi.String(\"primary\"),\n\t\t\tVrf:         pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Ipv4InterfaceAddress;\nimport com.pulumi.nxos.Ipv4InterfaceAddressArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ipv4InterfaceAddress(\"example\", Ipv4InterfaceAddressArgs.builder()        \n            .address(\"24.63.46.49/30\")\n            .interfaceId(\"eth1/10\")\n            .type(\"primary\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Ipv4InterfaceAddress\n    properties:\n      address: 24.63.46.49/30\n      interfaceId: eth1/10\n      type: primary\n      vrf: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ipv4InterfaceAddress:Ipv4InterfaceAddress example \"sys/ipv4/inst/dom-[default]/if-[eth1/10]/addr-[24.63.46.49/30]\"\n```\n\n ",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "IPv4 address.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Address type. - Choices: `primary`, `secondary` - Default value: `primary`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "interfaceId",
                "type",
                "vrf"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "IPv4 address.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Address type. - Choices: `primary`, `secondary` - Default value: `primary`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "interfaceId",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4InterfaceAddress resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "IPv4 address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Address type. - Choices: `primary`, `secondary` - Default value: `primary`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ipv4PrefixListRule:Ipv4PrefixListRule": {
            "description": "This resource can manage an IPv4 Prefix List configuration.\n\n- API Documentation: [rtpfxRuleV4](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtpfx:RuleV4/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Ipv4PrefixListRule(\"example\", {});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Ipv4PrefixListRule(\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Ipv4PrefixListRule(\"example\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewIpv4PrefixListRule(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Ipv4PrefixListRule;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ipv4PrefixListRule(\"example\");\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Ipv4PrefixListRule\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ipv4PrefixListRule:Ipv4PrefixListRule example \"sys/rpm/pfxlistv4-[RULE1]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule name.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4PrefixListRule resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ipv4PrefixListRuleEntry:Ipv4PrefixListRuleEntry": {
            "description": "This resource can manage an IPv4 Prefix List entry configuration.\n\n- API Documentation: [rtpfxEntry](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtpfx:Entry/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Ipv4PrefixListRuleEntry(\"example\", {\n    action: \"permit\",\n    criteria: \"inexact\",\n    fromRange: 26,\n    order: 10,\n    prefix: \"192.168.1.0/24\",\n    ruleName: \"RULE1\",\n    toRange: 32,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Ipv4PrefixListRuleEntry(\"example\",\n    action=\"permit\",\n    criteria=\"inexact\",\n    from_range=26,\n    order=10,\n    prefix=\"192.168.1.0/24\",\n    rule_name=\"RULE1\",\n    to_range=32)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Ipv4PrefixListRuleEntry(\"example\", new()\n    {\n        Action = \"permit\",\n        Criteria = \"inexact\",\n        FromRange = 26,\n        Order = 10,\n        Prefix = \"192.168.1.0/24\",\n        RuleName = \"RULE1\",\n        ToRange = 32,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewIpv4PrefixListRuleEntry(ctx, \"example\", \u0026nxos.Ipv4PrefixListRuleEntryArgs{\n\t\t\tAction:    pulumi.String(\"permit\"),\n\t\t\tCriteria:  pulumi.String(\"inexact\"),\n\t\t\tFromRange: pulumi.Int(26),\n\t\t\tOrder:     pulumi.Int(10),\n\t\t\tPrefix:    pulumi.String(\"192.168.1.0/24\"),\n\t\t\tRuleName:  pulumi.String(\"RULE1\"),\n\t\t\tToRange:   pulumi.Int(32),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Ipv4PrefixListRuleEntry;\nimport com.pulumi.nxos.Ipv4PrefixListRuleEntryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ipv4PrefixListRuleEntry(\"example\", Ipv4PrefixListRuleEntryArgs.builder()        \n            .action(\"permit\")\n            .criteria(\"inexact\")\n            .fromRange(26)\n            .order(10)\n            .prefix(\"192.168.1.0/24\")\n            .ruleName(\"RULE1\")\n            .toRange(32)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Ipv4PrefixListRuleEntry\n    properties:\n      action: permit\n      criteria: inexact\n      fromRange: 26\n      order: 10\n      prefix: 192.168.1.0/24\n      ruleName: RULE1\n      toRange: 32\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ipv4PrefixListRuleEntry:Ipv4PrefixListRuleEntry example \"sys/rpm/pfxlistv4-[RULE1]/ent-[10]\"\n```\n\n ",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`\n"
                },
                "criteria": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule Entry criteria. - Choices: `exact`, `inexact` - Default value: `exact`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "fromRange": {
                    "type": "integer",
                    "description": "IPv4 Prefix List Rule Entry start range. - Range: `0`-`128` - Default value: `0`\n"
                },
                "order": {
                    "type": "integer",
                    "description": "IPv4 Prefix List Rule Entry order. - Range: `0`-`4294967294`\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule Entry prefix.\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule name.\n"
                },
                "toRange": {
                    "type": "integer",
                    "description": "IPv4 Prefix List Rule Entry end range. - Range: `0`-`128` - Default value: `0`\n"
                }
            },
            "required": [
                "action",
                "criteria",
                "fromRange",
                "order",
                "ruleName",
                "toRange"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`\n"
                },
                "criteria": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule Entry criteria. - Choices: `exact`, `inexact` - Default value: `exact`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "fromRange": {
                    "type": "integer",
                    "description": "IPv4 Prefix List Rule Entry start range. - Range: `0`-`128` - Default value: `0`\n"
                },
                "order": {
                    "type": "integer",
                    "description": "IPv4 Prefix List Rule Entry order. - Range: `0`-`4294967294`\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule Entry prefix.\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "IPv4 Prefix List Rule name.\n"
                },
                "toRange": {
                    "type": "integer",
                    "description": "IPv4 Prefix List Rule Entry end range. - Range: `0`-`128` - Default value: `0`\n"
                }
            },
            "requiredInputs": [
                "order",
                "ruleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4PrefixListRuleEntry resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`\n"
                    },
                    "criteria": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule Entry criteria. - Choices: `exact`, `inexact` - Default value: `exact`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "fromRange": {
                        "type": "integer",
                        "description": "IPv4 Prefix List Rule Entry start range. - Range: `0`-`128` - Default value: `0`\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "IPv4 Prefix List Rule Entry order. - Range: `0`-`4294967294`\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule Entry prefix.\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule name.\n"
                    },
                    "toRange": {
                        "type": "integer",
                        "description": "IPv4 Prefix List Rule Entry end range. - Range: `0`-`128` - Default value: `0`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ipv4StaticRoute:Ipv4StaticRoute": {
            "description": "This resource can manage an IPv4 static route.\n\n- API Documentation: [ipv4Route](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/ipv4:Route/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Ipv4StaticRoute;\nimport com.pulumi.nxos.Ipv4StaticRouteArgs;\nimport com.pulumi.nxos.inputs.Ipv4StaticRouteNextHopArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ipv4StaticRoute(\"example\", Ipv4StaticRouteArgs.builder()        \n            .nextHops(Ipv4StaticRouteNextHopArgs.builder()\n                .address(\"1.2.3.4\")\n                .description(\"My Description\")\n                .interface_id(\"unspecified\")\n                .object(10)\n                .preference(123)\n                .tag(10)\n                .vrf_name(\"default\")\n                .build())\n            .prefix(\"1.1.1.0/24\")\n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Ipv4StaticRoute\n    properties:\n      nextHops:\n        - address: 1.2.3.4\n          description: My Description\n          interface_id: unspecified\n          object: 10\n          preference: 123\n          tag: 10\n          vrf_name: default\n      prefix: 1.1.1.0/24\n      vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ipv4StaticRoute:Ipv4StaticRoute example \"sys/ipv4/inst/dom-[default]/rt-[1.1.1.0/24]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:index/Ipv4StaticRouteNextHop:Ipv4StaticRouteNextHop"
                    },
                    "description": "List of next hops.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "nextHops",
                "prefix",
                "vrfName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:index/Ipv4StaticRouteNextHop:Ipv4StaticRouteNextHop"
                    },
                    "description": "List of next hops.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "nextHops",
                "prefix",
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4StaticRoute resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "nextHops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:index/Ipv4StaticRouteNextHop:Ipv4StaticRouteNextHop"
                        },
                        "description": "List of next hops.\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "Prefix.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ipv4Vrf:Ipv4Vrf": {
            "description": "This resource can manage the IPv4 VRF information.\n\n- API Documentation: [ipv4Dom](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/ipv4:Dom/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Ipv4Vrf(\"example\", {});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Ipv4Vrf(\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Ipv4Vrf(\"example\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewIpv4Vrf(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Ipv4Vrf;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ipv4Vrf(\"example\");\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Ipv4Vrf\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ipv4Vrf:Ipv4Vrf example \"sys/ipv4/inst/dom-[VRF1]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv4Vrf resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/isis:Isis": {
            "description": "This resource can manage the global IS-IS configuration.\n\n- API Documentation: [isisEntity](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/isis:Entity/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Isis(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Isis(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Isis(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewIsis(ctx, \"example\", \u0026nxos.IsisArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Isis;\nimport com.pulumi.nxos.IsisArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Isis(\"example\", IsisArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Isis\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/isis:Isis example \"sys/isis\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Isis resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/isisInstance:IsisInstance": {
            "description": "This resource can manage the IS-IS instance configuration.\n\n- API Documentation: [isisInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/isis:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.IsisInstance(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.IsisInstance(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.IsisInstance(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewIsisInstance(ctx, \"example\", \u0026nxos.IsisInstanceArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.IsisInstance;\nimport com.pulumi.nxos.IsisInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new IsisInstance(\"example\", IsisInstanceArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:IsisInstance\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/isisInstance:IsisInstance example \"sys/isis/inst-[ISIS1]\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "IS-IS instance name.\n"
                }
            },
            "required": [
                "adminState",
                "name"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "IS-IS instance name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IsisInstance resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "IS-IS instance name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/isisInterface:IsisInterface": {
            "description": "This resource can manage the IS-IS interface configuration.\n\n- API Documentation: [isisInternalIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/isis:InternalIf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.IsisInterface(\"example\", {\n    authenticationCheck: false,\n    authenticationCheckL1: false,\n    authenticationCheckL2: false,\n    authenticationKey: \"\",\n    authenticationKeyL1: \"\",\n    authenticationKeyL2: \"\",\n    authenticationType: \"unknown\",\n    authenticationTypeL1: \"unknown\",\n    authenticationTypeL2: \"unknown\",\n    circuitType: \"l2\",\n    helloInterval: 20,\n    helloIntervalL1: 20,\n    helloIntervalL2: 20,\n    helloMultiplier: 4,\n    helloMultiplierL1: 4,\n    helloMultiplierL2: 4,\n    helloPadding: \"never\",\n    interfaceId: \"eth1/10\",\n    metricL1: 1000,\n    metricL2: 1000,\n    mtuCheck: true,\n    mtuCheckL1: true,\n    mtuCheckL2: true,\n    networkTypeP2p: \"on\",\n    passive: \"l1\",\n    priorityL1: 80,\n    priorityL2: 80,\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.IsisInterface(\"example\",\n    authentication_check=False,\n    authentication_check_l1=False,\n    authentication_check_l2=False,\n    authentication_key=\"\",\n    authentication_key_l1=\"\",\n    authentication_key_l2=\"\",\n    authentication_type=\"unknown\",\n    authentication_type_l1=\"unknown\",\n    authentication_type_l2=\"unknown\",\n    circuit_type=\"l2\",\n    hello_interval=20,\n    hello_interval_l1=20,\n    hello_interval_l2=20,\n    hello_multiplier=4,\n    hello_multiplier_l1=4,\n    hello_multiplier_l2=4,\n    hello_padding=\"never\",\n    interface_id=\"eth1/10\",\n    metric_l1=1000,\n    metric_l2=1000,\n    mtu_check=True,\n    mtu_check_l1=True,\n    mtu_check_l2=True,\n    network_type_p2p=\"on\",\n    passive=\"l1\",\n    priority_l1=80,\n    priority_l2=80,\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.IsisInterface(\"example\", new()\n    {\n        AuthenticationCheck = false,\n        AuthenticationCheckL1 = false,\n        AuthenticationCheckL2 = false,\n        AuthenticationKey = \"\",\n        AuthenticationKeyL1 = \"\",\n        AuthenticationKeyL2 = \"\",\n        AuthenticationType = \"unknown\",\n        AuthenticationTypeL1 = \"unknown\",\n        AuthenticationTypeL2 = \"unknown\",\n        CircuitType = \"l2\",\n        HelloInterval = 20,\n        HelloIntervalL1 = 20,\n        HelloIntervalL2 = 20,\n        HelloMultiplier = 4,\n        HelloMultiplierL1 = 4,\n        HelloMultiplierL2 = 4,\n        HelloPadding = \"never\",\n        InterfaceId = \"eth1/10\",\n        MetricL1 = 1000,\n        MetricL2 = 1000,\n        MtuCheck = true,\n        MtuCheckL1 = true,\n        MtuCheckL2 = true,\n        NetworkTypeP2p = \"on\",\n        Passive = \"l1\",\n        PriorityL1 = 80,\n        PriorityL2 = 80,\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewIsisInterface(ctx, \"example\", \u0026nxos.IsisInterfaceArgs{\n\t\t\tAuthenticationCheck:   pulumi.Bool(false),\n\t\t\tAuthenticationCheckL1: pulumi.Bool(false),\n\t\t\tAuthenticationCheckL2: pulumi.Bool(false),\n\t\t\tAuthenticationKey:     pulumi.String(\"\"),\n\t\t\tAuthenticationKeyL1:   pulumi.String(\"\"),\n\t\t\tAuthenticationKeyL2:   pulumi.String(\"\"),\n\t\t\tAuthenticationType:    pulumi.String(\"unknown\"),\n\t\t\tAuthenticationTypeL1:  pulumi.String(\"unknown\"),\n\t\t\tAuthenticationTypeL2:  pulumi.String(\"unknown\"),\n\t\t\tCircuitType:           pulumi.String(\"l2\"),\n\t\t\tHelloInterval:         pulumi.Int(20),\n\t\t\tHelloIntervalL1:       pulumi.Int(20),\n\t\t\tHelloIntervalL2:       pulumi.Int(20),\n\t\t\tHelloMultiplier:       pulumi.Int(4),\n\t\t\tHelloMultiplierL1:     pulumi.Int(4),\n\t\t\tHelloMultiplierL2:     pulumi.Int(4),\n\t\t\tHelloPadding:          pulumi.String(\"never\"),\n\t\t\tInterfaceId:           pulumi.String(\"eth1/10\"),\n\t\t\tMetricL1:              pulumi.Int(1000),\n\t\t\tMetricL2:              pulumi.Int(1000),\n\t\t\tMtuCheck:              pulumi.Bool(true),\n\t\t\tMtuCheckL1:            pulumi.Bool(true),\n\t\t\tMtuCheckL2:            pulumi.Bool(true),\n\t\t\tNetworkTypeP2p:        pulumi.String(\"on\"),\n\t\t\tPassive:               pulumi.String(\"l1\"),\n\t\t\tPriorityL1:            pulumi.Int(80),\n\t\t\tPriorityL2:            pulumi.Int(80),\n\t\t\tVrf:                   pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.IsisInterface;\nimport com.pulumi.nxos.IsisInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new IsisInterface(\"example\", IsisInterfaceArgs.builder()        \n            .authenticationCheck(false)\n            .authenticationCheckL1(false)\n            .authenticationCheckL2(false)\n            .authenticationKey(\"\")\n            .authenticationKeyL1(\"\")\n            .authenticationKeyL2(\"\")\n            .authenticationType(\"unknown\")\n            .authenticationTypeL1(\"unknown\")\n            .authenticationTypeL2(\"unknown\")\n            .circuitType(\"l2\")\n            .helloInterval(20)\n            .helloIntervalL1(20)\n            .helloIntervalL2(20)\n            .helloMultiplier(4)\n            .helloMultiplierL1(4)\n            .helloMultiplierL2(4)\n            .helloPadding(\"never\")\n            .interfaceId(\"eth1/10\")\n            .metricL1(1000)\n            .metricL2(1000)\n            .mtuCheck(true)\n            .mtuCheckL1(true)\n            .mtuCheckL2(true)\n            .networkTypeP2p(\"on\")\n            .passive(\"l1\")\n            .priorityL1(80)\n            .priorityL2(80)\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:IsisInterface\n    properties:\n      authenticationCheck: false\n      authenticationCheckL1: false\n      authenticationCheckL2: false\n      authenticationKey:\n      authenticationKeyL1:\n      authenticationKeyL2:\n      authenticationType: unknown\n      authenticationTypeL1: unknown\n      authenticationTypeL2: unknown\n      circuitType: l2\n      helloInterval: 20\n      helloIntervalL1: 20\n      helloIntervalL2: 20\n      helloMultiplier: 4\n      helloMultiplierL1: 4\n      helloMultiplierL2: 4\n      helloPadding: never\n      interfaceId: eth1/10\n      metricL1: 1000\n      metricL2: 1000\n      mtuCheck: true\n      mtuCheckL1: true\n      mtuCheckL2: true\n      networkTypeP2p: on\n      passive: l1\n      priorityL1: 80\n      priorityL2: 80\n      vrf: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/isisInterface:IsisInterface example \"sys/isis/if-[eth1/10]\"\n```\n\n ",
            "properties": {
                "authenticationCheck": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS without specific level. - Default value: `true`\n"
                },
                "authenticationCheckL1": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS on Level-1. - Default value: `true`\n"
                },
                "authenticationCheckL2": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS on Level-2. - Default value: `true`\n"
                },
                "authenticationKey": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS without specific level.\n"
                },
                "authenticationKeyL1": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS on Level-1.\n"
                },
                "authenticationKeyL2": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS on Level-2.\n"
                },
                "authenticationType": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type without specific level. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "authenticationTypeL1": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type for Level-1. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "authenticationTypeL2": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type for Level-2. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "circuitType": {
                    "type": "string",
                    "description": "Circuit type. - Choices: `l1`, `l2`, `l12` - Default value: `l12`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helloInterval": {
                    "type": "integer",
                    "description": "Hello interval. - Range: `1`-`65535` - Default value: `10`\n"
                },
                "helloIntervalL1": {
                    "type": "integer",
                    "description": "Hello interval Level-1. - Range: `1`-`65535` - Default value: `10`\n"
                },
                "helloIntervalL2": {
                    "type": "integer",
                    "description": "Hello interval Level-2. - Range: `1`-`65535` - Default value: `10`\n"
                },
                "helloMultiplier": {
                    "type": "integer",
                    "description": "Hello multiplier. - Range: `3`-`1000` - Default value: `3`\n"
                },
                "helloMultiplierL1": {
                    "type": "integer",
                    "description": "Hello multiplier Level-1. - Range: `3`-`1000` - Default value: `3`\n"
                },
                "helloMultiplierL2": {
                    "type": "integer",
                    "description": "Hello multiplier Level-2. - Range: `3`-`1000` - Default value: `3`\n"
                },
                "helloPadding": {
                    "type": "string",
                    "description": "Hello padding. - Choices: `always`, `transient`, `never` - Default value: `always`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "metricL1": {
                    "type": "integer",
                    "description": "Interface metric Level-1. - Range: `0`-`16777216` - Default value: `16777216`\n"
                },
                "metricL2": {
                    "type": "integer",
                    "description": "Interface metric Level-2. - Range: `0`-`16777216` - Default value: `16777216`\n"
                },
                "mtuCheck": {
                    "type": "boolean",
                    "description": "MTU Check for IS-IS without specific level. - Default value: `false`\n"
                },
                "mtuCheckL1": {
                    "type": "boolean",
                    "description": "MTU Check for IS-IS on Level-1. - Default value: `false`\n"
                },
                "mtuCheckL2": {
                    "type": "boolean",
                    "description": "MTU Check for IS-IS on Level-2. - Default value: `false`\n"
                },
                "networkTypeP2p": {
                    "type": "string",
                    "description": "Enabling Point-to-Point Network Type on IS-IS Interface. - Choices: `off`, `on`, `useAllISMac` - Default value: `off`\n"
                },
                "passive": {
                    "type": "string",
                    "description": "IS-IS Passive Interface Info. - Choices: `l1`, `l2`, `l12`, `noL1`, `noL2`, `noL12`, `inheritDef` - Default value:\n`inheritDef`\n"
                },
                "priorityL1": {
                    "type": "integer",
                    "description": "Circuit priority. - Range: `0`-`127` - Default value: `64`\n"
                },
                "priorityL2": {
                    "type": "integer",
                    "description": "Circuit priority. - Range: `0`-`127` - Default value: `64`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF.\n"
                }
            },
            "required": [
                "authenticationCheck",
                "authenticationCheckL1",
                "authenticationCheckL2",
                "authenticationType",
                "authenticationTypeL1",
                "authenticationTypeL2",
                "circuitType",
                "helloInterval",
                "helloIntervalL1",
                "helloIntervalL2",
                "helloMultiplier",
                "helloMultiplierL1",
                "helloMultiplierL2",
                "helloPadding",
                "interfaceId",
                "metricL1",
                "metricL2",
                "mtuCheck",
                "mtuCheckL1",
                "mtuCheckL2",
                "networkTypeP2p",
                "passive",
                "priorityL1",
                "priorityL2"
            ],
            "inputProperties": {
                "authenticationCheck": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS without specific level. - Default value: `true`\n"
                },
                "authenticationCheckL1": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS on Level-1. - Default value: `true`\n"
                },
                "authenticationCheckL2": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS on Level-2. - Default value: `true`\n"
                },
                "authenticationKey": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS without specific level.\n"
                },
                "authenticationKeyL1": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS on Level-1.\n"
                },
                "authenticationKeyL2": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS on Level-2.\n"
                },
                "authenticationType": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type without specific level. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "authenticationTypeL1": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type for Level-1. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "authenticationTypeL2": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type for Level-2. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "circuitType": {
                    "type": "string",
                    "description": "Circuit type. - Choices: `l1`, `l2`, `l12` - Default value: `l12`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helloInterval": {
                    "type": "integer",
                    "description": "Hello interval. - Range: `1`-`65535` - Default value: `10`\n"
                },
                "helloIntervalL1": {
                    "type": "integer",
                    "description": "Hello interval Level-1. - Range: `1`-`65535` - Default value: `10`\n"
                },
                "helloIntervalL2": {
                    "type": "integer",
                    "description": "Hello interval Level-2. - Range: `1`-`65535` - Default value: `10`\n"
                },
                "helloMultiplier": {
                    "type": "integer",
                    "description": "Hello multiplier. - Range: `3`-`1000` - Default value: `3`\n"
                },
                "helloMultiplierL1": {
                    "type": "integer",
                    "description": "Hello multiplier Level-1. - Range: `3`-`1000` - Default value: `3`\n"
                },
                "helloMultiplierL2": {
                    "type": "integer",
                    "description": "Hello multiplier Level-2. - Range: `3`-`1000` - Default value: `3`\n"
                },
                "helloPadding": {
                    "type": "string",
                    "description": "Hello padding. - Choices: `always`, `transient`, `never` - Default value: `always`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "metricL1": {
                    "type": "integer",
                    "description": "Interface metric Level-1. - Range: `0`-`16777216` - Default value: `16777216`\n"
                },
                "metricL2": {
                    "type": "integer",
                    "description": "Interface metric Level-2. - Range: `0`-`16777216` - Default value: `16777216`\n"
                },
                "mtuCheck": {
                    "type": "boolean",
                    "description": "MTU Check for IS-IS without specific level. - Default value: `false`\n"
                },
                "mtuCheckL1": {
                    "type": "boolean",
                    "description": "MTU Check for IS-IS on Level-1. - Default value: `false`\n"
                },
                "mtuCheckL2": {
                    "type": "boolean",
                    "description": "MTU Check for IS-IS on Level-2. - Default value: `false`\n"
                },
                "networkTypeP2p": {
                    "type": "string",
                    "description": "Enabling Point-to-Point Network Type on IS-IS Interface. - Choices: `off`, `on`, `useAllISMac` - Default value: `off`\n"
                },
                "passive": {
                    "type": "string",
                    "description": "IS-IS Passive Interface Info. - Choices: `l1`, `l2`, `l12`, `noL1`, `noL2`, `noL12`, `inheritDef` - Default value:\n`inheritDef`\n"
                },
                "priorityL1": {
                    "type": "integer",
                    "description": "Circuit priority. - Range: `0`-`127` - Default value: `64`\n"
                },
                "priorityL2": {
                    "type": "integer",
                    "description": "Circuit priority. - Range: `0`-`127` - Default value: `64`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF.\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IsisInterface resources.\n",
                "properties": {
                    "authenticationCheck": {
                        "type": "boolean",
                        "description": "Authentication Check for ISIS without specific level. - Default value: `true`\n"
                    },
                    "authenticationCheckL1": {
                        "type": "boolean",
                        "description": "Authentication Check for ISIS on Level-1. - Default value: `true`\n"
                    },
                    "authenticationCheckL2": {
                        "type": "boolean",
                        "description": "Authentication Check for ISIS on Level-2. - Default value: `true`\n"
                    },
                    "authenticationKey": {
                        "type": "string",
                        "description": "Authentication Key for IS-IS without specific level.\n"
                    },
                    "authenticationKeyL1": {
                        "type": "string",
                        "description": "Authentication Key for IS-IS on Level-1.\n"
                    },
                    "authenticationKeyL2": {
                        "type": "string",
                        "description": "Authentication Key for IS-IS on Level-2.\n"
                    },
                    "authenticationType": {
                        "type": "string",
                        "description": "IS-IS Authentication-Type without specific level. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                    },
                    "authenticationTypeL1": {
                        "type": "string",
                        "description": "IS-IS Authentication-Type for Level-1. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                    },
                    "authenticationTypeL2": {
                        "type": "string",
                        "description": "IS-IS Authentication-Type for Level-2. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                    },
                    "circuitType": {
                        "type": "string",
                        "description": "Circuit type. - Choices: `l1`, `l2`, `l12` - Default value: `l12`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helloInterval": {
                        "type": "integer",
                        "description": "Hello interval. - Range: `1`-`65535` - Default value: `10`\n"
                    },
                    "helloIntervalL1": {
                        "type": "integer",
                        "description": "Hello interval Level-1. - Range: `1`-`65535` - Default value: `10`\n"
                    },
                    "helloIntervalL2": {
                        "type": "integer",
                        "description": "Hello interval Level-2. - Range: `1`-`65535` - Default value: `10`\n"
                    },
                    "helloMultiplier": {
                        "type": "integer",
                        "description": "Hello multiplier. - Range: `3`-`1000` - Default value: `3`\n"
                    },
                    "helloMultiplierL1": {
                        "type": "integer",
                        "description": "Hello multiplier Level-1. - Range: `3`-`1000` - Default value: `3`\n"
                    },
                    "helloMultiplierL2": {
                        "type": "integer",
                        "description": "Hello multiplier Level-2. - Range: `3`-`1000` - Default value: `3`\n"
                    },
                    "helloPadding": {
                        "type": "string",
                        "description": "Hello padding. - Choices: `always`, `transient`, `never` - Default value: `always`\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "metricL1": {
                        "type": "integer",
                        "description": "Interface metric Level-1. - Range: `0`-`16777216` - Default value: `16777216`\n"
                    },
                    "metricL2": {
                        "type": "integer",
                        "description": "Interface metric Level-2. - Range: `0`-`16777216` - Default value: `16777216`\n"
                    },
                    "mtuCheck": {
                        "type": "boolean",
                        "description": "MTU Check for IS-IS without specific level. - Default value: `false`\n"
                    },
                    "mtuCheckL1": {
                        "type": "boolean",
                        "description": "MTU Check for IS-IS on Level-1. - Default value: `false`\n"
                    },
                    "mtuCheckL2": {
                        "type": "boolean",
                        "description": "MTU Check for IS-IS on Level-2. - Default value: `false`\n"
                    },
                    "networkTypeP2p": {
                        "type": "string",
                        "description": "Enabling Point-to-Point Network Type on IS-IS Interface. - Choices: `off`, `on`, `useAllISMac` - Default value: `off`\n"
                    },
                    "passive": {
                        "type": "string",
                        "description": "IS-IS Passive Interface Info. - Choices: `l1`, `l2`, `l12`, `noL1`, `noL2`, `noL12`, `inheritDef` - Default value:\n`inheritDef`\n"
                    },
                    "priorityL1": {
                        "type": "integer",
                        "description": "Circuit priority. - Range: `0`-`127` - Default value: `64`\n"
                    },
                    "priorityL2": {
                        "type": "integer",
                        "description": "Circuit priority. - Range: `0`-`127` - Default value: `64`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/isisVrf:IsisVrf": {
            "description": "This resource can manage the IS-IS VRF configuration.\n\n- API Documentation: [isisDom](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/isis:Dom/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.IsisVrf(\"example\", {\n    adminState: \"enabled\",\n    authenticationCheckL1: false,\n    authenticationCheckL2: false,\n    authenticationKeyL1: \"\",\n    authenticationKeyL2: \"\",\n    authenticationTypeL1: \"unknown\",\n    authenticationTypeL2: \"unknown\",\n    bandwidthReference: 400000,\n    banwidthReferenceUnit: \"mbps\",\n    instanceName: \"ISIS1\",\n    isType: \"l2\",\n    metricType: \"wide\",\n    mtu: 2000,\n    net: \"49.0001.0000.0000.3333.00\",\n    passiveDefault: \"l12\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.IsisVrf(\"example\",\n    admin_state=\"enabled\",\n    authentication_check_l1=False,\n    authentication_check_l2=False,\n    authentication_key_l1=\"\",\n    authentication_key_l2=\"\",\n    authentication_type_l1=\"unknown\",\n    authentication_type_l2=\"unknown\",\n    bandwidth_reference=400000,\n    banwidth_reference_unit=\"mbps\",\n    instance_name=\"ISIS1\",\n    is_type=\"l2\",\n    metric_type=\"wide\",\n    mtu=2000,\n    net=\"49.0001.0000.0000.3333.00\",\n    passive_default=\"l12\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.IsisVrf(\"example\", new()\n    {\n        AdminState = \"enabled\",\n        AuthenticationCheckL1 = false,\n        AuthenticationCheckL2 = false,\n        AuthenticationKeyL1 = \"\",\n        AuthenticationKeyL2 = \"\",\n        AuthenticationTypeL1 = \"unknown\",\n        AuthenticationTypeL2 = \"unknown\",\n        BandwidthReference = 400000,\n        BanwidthReferenceUnit = \"mbps\",\n        InstanceName = \"ISIS1\",\n        IsType = \"l2\",\n        MetricType = \"wide\",\n        Mtu = 2000,\n        Net = \"49.0001.0000.0000.3333.00\",\n        PassiveDefault = \"l12\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewIsisVrf(ctx, \"example\", \u0026nxos.IsisVrfArgs{\n\t\t\tAdminState:            pulumi.String(\"enabled\"),\n\t\t\tAuthenticationCheckL1: pulumi.Bool(false),\n\t\t\tAuthenticationCheckL2: pulumi.Bool(false),\n\t\t\tAuthenticationKeyL1:   pulumi.String(\"\"),\n\t\t\tAuthenticationKeyL2:   pulumi.String(\"\"),\n\t\t\tAuthenticationTypeL1:  pulumi.String(\"unknown\"),\n\t\t\tAuthenticationTypeL2:  pulumi.String(\"unknown\"),\n\t\t\tBandwidthReference:    pulumi.Int(400000),\n\t\t\tBanwidthReferenceUnit: pulumi.String(\"mbps\"),\n\t\t\tInstanceName:          pulumi.String(\"ISIS1\"),\n\t\t\tIsType:                pulumi.String(\"l2\"),\n\t\t\tMetricType:            pulumi.String(\"wide\"),\n\t\t\tMtu:                   pulumi.Int(2000),\n\t\t\tNet:                   pulumi.String(\"49.0001.0000.0000.3333.00\"),\n\t\t\tPassiveDefault:        pulumi.String(\"l12\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.IsisVrf;\nimport com.pulumi.nxos.IsisVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new IsisVrf(\"example\", IsisVrfArgs.builder()        \n            .adminState(\"enabled\")\n            .authenticationCheckL1(false)\n            .authenticationCheckL2(false)\n            .authenticationKeyL1(\"\")\n            .authenticationKeyL2(\"\")\n            .authenticationTypeL1(\"unknown\")\n            .authenticationTypeL2(\"unknown\")\n            .bandwidthReference(400000)\n            .banwidthReferenceUnit(\"mbps\")\n            .instanceName(\"ISIS1\")\n            .isType(\"l2\")\n            .metricType(\"wide\")\n            .mtu(2000)\n            .net(\"49.0001.0000.0000.3333.00\")\n            .passiveDefault(\"l12\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:IsisVrf\n    properties:\n      adminState: enabled\n      authenticationCheckL1: false\n      authenticationCheckL2: false\n      authenticationKeyL1:\n      authenticationKeyL2:\n      authenticationTypeL1: unknown\n      authenticationTypeL2: unknown\n      bandwidthReference: 400000\n      banwidthReferenceUnit: mbps\n      instanceName: ISIS1\n      isType: l2\n      metricType: wide\n      mtu: 2000\n      net: 49.0001.0000.0000.3333.00\n      passiveDefault: l12\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/isisVrf:IsisVrf example \"sys/isis/inst-[ISIS1]/dom-[default]\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "authenticationCheckL1": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS on Level-1. - Default value: `true`\n"
                },
                "authenticationCheckL2": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS on Level-2. - Default value: `true`\n"
                },
                "authenticationKeyL1": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS on Level-1.\n"
                },
                "authenticationKeyL2": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS on Level-2.\n"
                },
                "authenticationTypeL1": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type for Level-1. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "authenticationTypeL2": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type for Level-2. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "bandwidthReference": {
                    "type": "integer",
                    "description": "The IS-IS domain bandwidth reference. This sets the default reference bandwidth used for calculating the IS-IS cost\nmetric. - Range: `0`-`4294967295` - Default value: `40000`\n"
                },
                "banwidthReferenceUnit": {
                    "type": "string",
                    "description": "Bandwidth reference unit. - Choices: `mbps`, `gbps` - Default value: `mbps`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "IS-IS instance name.\n"
                },
                "isType": {
                    "type": "string",
                    "description": "IS-IS domain type. - Choices: `l1`, `l2`, `l12` - Default value: `l12`\n"
                },
                "metricType": {
                    "type": "string",
                    "description": "IS-IS metric type. - Choices: `narrow`, `wide`, `transition` - Default value: `wide`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "The configuration of link-state packet (LSP) maximum transmission units (MTU) is supported. You can enable up to 4352\nbytes. - Range: `256`-`4352` - Default value: `1492`\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                },
                "net": {
                    "type": "string",
                    "description": "Holds IS-IS domain NET (address) value.\n"
                },
                "passiveDefault": {
                    "type": "string",
                    "description": "IS-IS Domain passive-interface default level. - Choices: `l1`, `l2`, `l12`, `unknown` - Default value: `unknown`\n"
                }
            },
            "required": [
                "adminState",
                "authenticationCheckL1",
                "authenticationCheckL2",
                "authenticationTypeL1",
                "authenticationTypeL2",
                "bandwidthReference",
                "banwidthReferenceUnit",
                "instanceName",
                "isType",
                "metricType",
                "mtu",
                "name",
                "passiveDefault"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "authenticationCheckL1": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS on Level-1. - Default value: `true`\n"
                },
                "authenticationCheckL2": {
                    "type": "boolean",
                    "description": "Authentication Check for ISIS on Level-2. - Default value: `true`\n"
                },
                "authenticationKeyL1": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS on Level-1.\n"
                },
                "authenticationKeyL2": {
                    "type": "string",
                    "description": "Authentication Key for IS-IS on Level-2.\n"
                },
                "authenticationTypeL1": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type for Level-1. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "authenticationTypeL2": {
                    "type": "string",
                    "description": "IS-IS Authentication-Type for Level-2. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                },
                "bandwidthReference": {
                    "type": "integer",
                    "description": "The IS-IS domain bandwidth reference. This sets the default reference bandwidth used for calculating the IS-IS cost\nmetric. - Range: `0`-`4294967295` - Default value: `40000`\n"
                },
                "banwidthReferenceUnit": {
                    "type": "string",
                    "description": "Bandwidth reference unit. - Choices: `mbps`, `gbps` - Default value: `mbps`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "IS-IS instance name.\n"
                },
                "isType": {
                    "type": "string",
                    "description": "IS-IS domain type. - Choices: `l1`, `l2`, `l12` - Default value: `l12`\n"
                },
                "metricType": {
                    "type": "string",
                    "description": "IS-IS metric type. - Choices: `narrow`, `wide`, `transition` - Default value: `wide`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "The configuration of link-state packet (LSP) maximum transmission units (MTU) is supported. You can enable up to 4352\nbytes. - Range: `256`-`4352` - Default value: `1492`\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                },
                "net": {
                    "type": "string",
                    "description": "Holds IS-IS domain NET (address) value.\n"
                },
                "passiveDefault": {
                    "type": "string",
                    "description": "IS-IS Domain passive-interface default level. - Choices: `l1`, `l2`, `l12`, `unknown` - Default value: `unknown`\n"
                }
            },
            "requiredInputs": [
                "instanceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IsisVrf resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "authenticationCheckL1": {
                        "type": "boolean",
                        "description": "Authentication Check for ISIS on Level-1. - Default value: `true`\n"
                    },
                    "authenticationCheckL2": {
                        "type": "boolean",
                        "description": "Authentication Check for ISIS on Level-2. - Default value: `true`\n"
                    },
                    "authenticationKeyL1": {
                        "type": "string",
                        "description": "Authentication Key for IS-IS on Level-1.\n"
                    },
                    "authenticationKeyL2": {
                        "type": "string",
                        "description": "Authentication Key for IS-IS on Level-2.\n"
                    },
                    "authenticationTypeL1": {
                        "type": "string",
                        "description": "IS-IS Authentication-Type for Level-1. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                    },
                    "authenticationTypeL2": {
                        "type": "string",
                        "description": "IS-IS Authentication-Type for Level-2. - Choices: `clear`, `md5`, `unknown` - Default value: `unknown`\n"
                    },
                    "bandwidthReference": {
                        "type": "integer",
                        "description": "The IS-IS domain bandwidth reference. This sets the default reference bandwidth used for calculating the IS-IS cost\nmetric. - Range: `0`-`4294967295` - Default value: `40000`\n"
                    },
                    "banwidthReferenceUnit": {
                        "type": "string",
                        "description": "Bandwidth reference unit. - Choices: `mbps`, `gbps` - Default value: `mbps`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "IS-IS instance name.\n"
                    },
                    "isType": {
                        "type": "string",
                        "description": "IS-IS domain type. - Choices: `l1`, `l2`, `l12` - Default value: `l12`\n"
                    },
                    "metricType": {
                        "type": "string",
                        "description": "IS-IS metric type. - Choices: `narrow`, `wide`, `transition` - Default value: `wide`\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "The configuration of link-state packet (LSP) maximum transmission units (MTU) is supported. You can enable up to 4352\nbytes. - Range: `256`-`4352` - Default value: `1492`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    },
                    "net": {
                        "type": "string",
                        "description": "Holds IS-IS domain NET (address) value.\n"
                    },
                    "passiveDefault": {
                        "type": "string",
                        "description": "IS-IS Domain passive-interface default level. - Choices: `l1`, `l2`, `l12`, `unknown` - Default value: `unknown`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/loopbackInterface:LoopbackInterface": {
            "description": "This resource can manage a loopback interface.\n\n- API Documentation: [l3LbRtdIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/l3:LbRtdIf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.LoopbackInterface(\"example\", {\n    adminState: \"down\",\n    description: \"My Description\",\n    interfaceId: \"lo123\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.LoopbackInterface(\"example\",\n    admin_state=\"down\",\n    description=\"My Description\",\n    interface_id=\"lo123\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.LoopbackInterface(\"example\", new()\n    {\n        AdminState = \"down\",\n        Description = \"My Description\",\n        InterfaceId = \"lo123\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewLoopbackInterface(ctx, \"example\", \u0026nxos.LoopbackInterfaceArgs{\n\t\t\tAdminState:  pulumi.String(\"down\"),\n\t\t\tDescription: pulumi.String(\"My Description\"),\n\t\t\tInterfaceId: pulumi.String(\"lo123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.LoopbackInterface;\nimport com.pulumi.nxos.LoopbackInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new LoopbackInterface(\"example\", LoopbackInterfaceArgs.builder()        \n            .adminState(\"down\")\n            .description(\"My Description\")\n            .interfaceId(\"lo123\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:LoopbackInterface\n    properties:\n      adminState: down\n      description: My Description\n      interfaceId: lo123\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/loopbackInterface:LoopbackInterface example \"sys/intf/lb-[lo123]\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `lo123`.\n"
                }
            },
            "required": [
                "adminState",
                "interfaceId"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `lo123`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoopbackInterface resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `up`, `down` - Default value: `up`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `lo123`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/loopbackInterfaceVrf:LoopbackInterfaceVrf": {
            "description": "This resource can manage a loopback interface VRF association.\n\n- API Documentation: [nwRtVrfMbr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/nw:RtVrfMbr/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.LoopbackInterfaceVrf(\"example\", {\n    interfaceId: \"lo123\",\n    vrfDn: \"sys/inst-default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.LoopbackInterfaceVrf(\"example\",\n    interface_id=\"lo123\",\n    vrf_dn=\"sys/inst-default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.LoopbackInterfaceVrf(\"example\", new()\n    {\n        InterfaceId = \"lo123\",\n        VrfDn = \"sys/inst-default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewLoopbackInterfaceVrf(ctx, \"example\", \u0026nxos.LoopbackInterfaceVrfArgs{\n\t\t\tInterfaceId: pulumi.String(\"lo123\"),\n\t\t\tVrfDn:       pulumi.String(\"sys/inst-default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.LoopbackInterfaceVrf;\nimport com.pulumi.nxos.LoopbackInterfaceVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new LoopbackInterfaceVrf(\"example\", LoopbackInterfaceVrfArgs.builder()        \n            .interfaceId(\"lo123\")\n            .vrfDn(\"sys/inst-default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:LoopbackInterfaceVrf\n    properties:\n      interfaceId: lo123\n      vrfDn: sys/inst-default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/loopbackInterfaceVrf:LoopbackInterfaceVrf example \"sys/intf/lb-[lo123]/rtvrfMbr\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `lo123`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "required": [
                "interfaceId",
                "vrfDn"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `lo123`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "vrfDn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoopbackInterfaceVrf resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `lo123`.\n"
                    },
                    "vrfDn": {
                        "type": "string",
                        "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ntpServer:NtpServer": {
            "description": "This resource can manage an ntp server or peer.\n\n- API Documentation: [datetimeNtpProvider](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/datetime:NtpProvider/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.NtpServer(\"example\", {\n    keyId: 10,\n    maxPoll: 6,\n    minPoll: 4,\n    type: \"server\",\n    vrf: \"management\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.NtpServer(\"example\",\n    key_id=10,\n    max_poll=6,\n    min_poll=4,\n    type=\"server\",\n    vrf=\"management\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.NtpServer(\"example\", new()\n    {\n        KeyId = 10,\n        MaxPoll = 6,\n        MinPoll = 4,\n        Type = \"server\",\n        Vrf = \"management\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewNtpServer(ctx, \"example\", \u0026nxos.NtpServerArgs{\n\t\t\tKeyId:   pulumi.Int(10),\n\t\t\tMaxPoll: pulumi.Int(6),\n\t\t\tMinPoll: pulumi.Int(4),\n\t\t\tType:    pulumi.String(\"server\"),\n\t\t\tVrf:     pulumi.String(\"management\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NtpServer;\nimport com.pulumi.nxos.NtpServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NtpServer(\"example\", NtpServerArgs.builder()        \n            .keyId(10)\n            .maxPoll(6)\n            .minPoll(4)\n            .type(\"server\")\n            .vrf(\"management\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:NtpServer\n    properties:\n      keyId: 10\n      maxPoll: 6\n      minPoll: 4\n      type: server\n      vrf: management\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ntpServer:NtpServer example \"sys/time/prov-[1.2.3.4]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "keyId": {
                    "type": "integer",
                    "description": "NTP provider key ID. Possible range is from `1` to `65535`. - Range: `1`-`65535`\n"
                },
                "maxPoll": {
                    "type": "integer",
                    "description": "NTP maximum interval default in seconds. Possible range is from `4` to `16`. - Range: `4`-`16` - Default value: `6`\n"
                },
                "minPoll": {
                    "type": "integer",
                    "description": "NTP minimum interval default in seconds. Possible range is from `4` to `16`. - Range: `4`-`16` - Default value: `4`\n"
                },
                "name": {
                    "type": "string",
                    "description": "NTP server.\n"
                },
                "type": {
                    "type": "string",
                    "description": "NTP provider type. Possible values are `server` or `peer`. - Choices: `server`, `peer`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "Identifies the VRF for the NTP providers. - Default value: `default`\n"
                }
            },
            "required": [
                "maxPoll",
                "minPoll",
                "name",
                "type",
                "vrf"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "keyId": {
                    "type": "integer",
                    "description": "NTP provider key ID. Possible range is from `1` to `65535`. - Range: `1`-`65535`\n"
                },
                "maxPoll": {
                    "type": "integer",
                    "description": "NTP maximum interval default in seconds. Possible range is from `4` to `16`. - Range: `4`-`16` - Default value: `6`\n"
                },
                "minPoll": {
                    "type": "integer",
                    "description": "NTP minimum interval default in seconds. Possible range is from `4` to `16`. - Range: `4`-`16` - Default value: `4`\n"
                },
                "name": {
                    "type": "string",
                    "description": "NTP server.\n"
                },
                "type": {
                    "type": "string",
                    "description": "NTP provider type. Possible values are `server` or `peer`. - Choices: `server`, `peer`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "Identifies the VRF for the NTP providers. - Default value: `default`\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NtpServer resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "keyId": {
                        "type": "integer",
                        "description": "NTP provider key ID. Possible range is from `1` to `65535`. - Range: `1`-`65535`\n"
                    },
                    "maxPoll": {
                        "type": "integer",
                        "description": "NTP maximum interval default in seconds. Possible range is from `4` to `16`. - Range: `4`-`16` - Default value: `6`\n"
                    },
                    "minPoll": {
                        "type": "integer",
                        "description": "NTP minimum interval default in seconds. Possible range is from `4` to `16`. - Range: `4`-`16` - Default value: `4`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NTP server.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "NTP provider type. Possible values are `server` or `peer`. - Choices: `server`, `peer`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "Identifies the VRF for the NTP providers. - Default value: `default`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/nveInterface:NveInterface": {
            "description": "This resource can manage the NVE interface configuration.\n\n- API Documentation: [nvoEp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Network%20Virtualization/nvo:Ep/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.NveInterface(\"example\", {\n    adminState: \"enabled\",\n    advertiseVirtualMac: true,\n    holdDownTime: 60,\n    hostReachabilityProtocol: \"bgp\",\n    ingressReplicationProtocolBgp: true,\n    multicastGroupL2: \"0.0.0.0\",\n    multicastGroupL3: \"0.0.0.0\",\n    multisiteSourceInterface: \"unspecified\",\n    sourceInterface: \"lo0\",\n    suppressArp: true,\n    suppressMacRoute: false,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.NveInterface(\"example\",\n    admin_state=\"enabled\",\n    advertise_virtual_mac=True,\n    hold_down_time=60,\n    host_reachability_protocol=\"bgp\",\n    ingress_replication_protocol_bgp=True,\n    multicast_group_l2=\"0.0.0.0\",\n    multicast_group_l3=\"0.0.0.0\",\n    multisite_source_interface=\"unspecified\",\n    source_interface=\"lo0\",\n    suppress_arp=True,\n    suppress_mac_route=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.NveInterface(\"example\", new()\n    {\n        AdminState = \"enabled\",\n        AdvertiseVirtualMac = true,\n        HoldDownTime = 60,\n        HostReachabilityProtocol = \"bgp\",\n        IngressReplicationProtocolBgp = true,\n        MulticastGroupL2 = \"0.0.0.0\",\n        MulticastGroupL3 = \"0.0.0.0\",\n        MultisiteSourceInterface = \"unspecified\",\n        SourceInterface = \"lo0\",\n        SuppressArp = true,\n        SuppressMacRoute = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewNveInterface(ctx, \"example\", \u0026nxos.NveInterfaceArgs{\n\t\t\tAdminState:                    pulumi.String(\"enabled\"),\n\t\t\tAdvertiseVirtualMac:           pulumi.Bool(true),\n\t\t\tHoldDownTime:                  pulumi.Int(60),\n\t\t\tHostReachabilityProtocol:      pulumi.String(\"bgp\"),\n\t\t\tIngressReplicationProtocolBgp: pulumi.Bool(true),\n\t\t\tMulticastGroupL2:              pulumi.String(\"0.0.0.0\"),\n\t\t\tMulticastGroupL3:              pulumi.String(\"0.0.0.0\"),\n\t\t\tMultisiteSourceInterface:      pulumi.String(\"unspecified\"),\n\t\t\tSourceInterface:               pulumi.String(\"lo0\"),\n\t\t\tSuppressArp:                   pulumi.Bool(true),\n\t\t\tSuppressMacRoute:              pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NveInterface;\nimport com.pulumi.nxos.NveInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NveInterface(\"example\", NveInterfaceArgs.builder()        \n            .adminState(\"enabled\")\n            .advertiseVirtualMac(true)\n            .holdDownTime(60)\n            .hostReachabilityProtocol(\"bgp\")\n            .ingressReplicationProtocolBgp(true)\n            .multicastGroupL2(\"0.0.0.0\")\n            .multicastGroupL3(\"0.0.0.0\")\n            .multisiteSourceInterface(\"unspecified\")\n            .sourceInterface(\"lo0\")\n            .suppressArp(true)\n            .suppressMacRoute(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:NveInterface\n    properties:\n      adminState: enabled\n      advertiseVirtualMac: true\n      holdDownTime: 60\n      hostReachabilityProtocol: bgp\n      ingressReplicationProtocolBgp: true\n      multicastGroupL2: 0.0.0.0\n      multicastGroupL3: 0.0.0.0\n      multisiteSourceInterface: unspecified\n      sourceInterface: lo0\n      suppressArp: true\n      suppressMacRoute: false\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/nveInterface:NveInterface example \"sys/eps/epId-[1]\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "advertiseVirtualMac": {
                    "type": "boolean",
                    "description": "Enable or disable Virtual MAC Advertisement in VPC mode. - Default value: `false`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "holdDownTime": {
                    "type": "integer",
                    "description": "Hold Down Time. - Range: `1`-`1500` - Default value: `180`\n"
                },
                "hostReachabilityProtocol": {
                    "type": "string",
                    "description": "Host Reachability Protocol. - Choices: `Flood-and-learn`, `bgp`, `controller`, `openflow`, `openflowIR` - Default value:\n`Flood-and-learn`\n"
                },
                "ingressReplicationProtocolBgp": {
                    "type": "boolean",
                    "description": "VxLAN Ingress Replication Protocol BGP. - Default value: `false`\n"
                },
                "multicastGroupL2": {
                    "type": "string",
                    "description": "Base multicast group address for L2. - Default value: `0.0.0.0`\n"
                },
                "multicastGroupL3": {
                    "type": "string",
                    "description": "Base multicast group address for L3. - Default value: `0.0.0.0`\n"
                },
                "multisiteSourceInterface": {
                    "type": "string",
                    "description": "Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`. - Default\nvalue: `unspecified`\n"
                },
                "sourceInterface": {
                    "type": "string",
                    "description": "Source Interface associated with the NVE. Must match first field in the output of `show int brief`. - Default value:\n`unspecified`\n"
                },
                "suppressArp": {
                    "type": "boolean",
                    "description": "Suppress ARP. - Default value: `false`\n"
                },
                "suppressMacRoute": {
                    "type": "boolean",
                    "description": "Suppress MAC Route. - Default value: `false`\n"
                }
            },
            "required": [
                "adminState",
                "advertiseVirtualMac",
                "holdDownTime",
                "hostReachabilityProtocol",
                "ingressReplicationProtocolBgp",
                "multicastGroupL2",
                "multicastGroupL3",
                "multisiteSourceInterface",
                "sourceInterface",
                "suppressArp",
                "suppressMacRoute"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "advertiseVirtualMac": {
                    "type": "boolean",
                    "description": "Enable or disable Virtual MAC Advertisement in VPC mode. - Default value: `false`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "holdDownTime": {
                    "type": "integer",
                    "description": "Hold Down Time. - Range: `1`-`1500` - Default value: `180`\n"
                },
                "hostReachabilityProtocol": {
                    "type": "string",
                    "description": "Host Reachability Protocol. - Choices: `Flood-and-learn`, `bgp`, `controller`, `openflow`, `openflowIR` - Default value:\n`Flood-and-learn`\n"
                },
                "ingressReplicationProtocolBgp": {
                    "type": "boolean",
                    "description": "VxLAN Ingress Replication Protocol BGP. - Default value: `false`\n"
                },
                "multicastGroupL2": {
                    "type": "string",
                    "description": "Base multicast group address for L2. - Default value: `0.0.0.0`\n"
                },
                "multicastGroupL3": {
                    "type": "string",
                    "description": "Base multicast group address for L3. - Default value: `0.0.0.0`\n"
                },
                "multisiteSourceInterface": {
                    "type": "string",
                    "description": "Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`. - Default\nvalue: `unspecified`\n"
                },
                "sourceInterface": {
                    "type": "string",
                    "description": "Source Interface associated with the NVE. Must match first field in the output of `show int brief`. - Default value:\n`unspecified`\n"
                },
                "suppressArp": {
                    "type": "boolean",
                    "description": "Suppress ARP. - Default value: `false`\n"
                },
                "suppressMacRoute": {
                    "type": "boolean",
                    "description": "Suppress MAC Route. - Default value: `false`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NveInterface resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "advertiseVirtualMac": {
                        "type": "boolean",
                        "description": "Enable or disable Virtual MAC Advertisement in VPC mode. - Default value: `false`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "holdDownTime": {
                        "type": "integer",
                        "description": "Hold Down Time. - Range: `1`-`1500` - Default value: `180`\n"
                    },
                    "hostReachabilityProtocol": {
                        "type": "string",
                        "description": "Host Reachability Protocol. - Choices: `Flood-and-learn`, `bgp`, `controller`, `openflow`, `openflowIR` - Default value:\n`Flood-and-learn`\n"
                    },
                    "ingressReplicationProtocolBgp": {
                        "type": "boolean",
                        "description": "VxLAN Ingress Replication Protocol BGP. - Default value: `false`\n"
                    },
                    "multicastGroupL2": {
                        "type": "string",
                        "description": "Base multicast group address for L2. - Default value: `0.0.0.0`\n"
                    },
                    "multicastGroupL3": {
                        "type": "string",
                        "description": "Base multicast group address for L3. - Default value: `0.0.0.0`\n"
                    },
                    "multisiteSourceInterface": {
                        "type": "string",
                        "description": "Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`. - Default\nvalue: `unspecified`\n"
                    },
                    "sourceInterface": {
                        "type": "string",
                        "description": "Source Interface associated with the NVE. Must match first field in the output of `show int brief`. - Default value:\n`unspecified`\n"
                    },
                    "suppressArp": {
                        "type": "boolean",
                        "description": "Suppress ARP. - Default value: `false`\n"
                    },
                    "suppressMacRoute": {
                        "type": "boolean",
                        "description": "Suppress MAC Route. - Default value: `false`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/nveVni:NveVni": {
            "description": "This resource can manage the configuration of Virtual Network ID (VNI).\n\n- API Documentation: [nvoNw](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Network%20Virtualization/nvo:Nw/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.NveVni(\"example\", {\n    associateVrf: false,\n    multicastGroup: \"239.1.1.1\",\n    multisiteIngressReplication: \"disable\",\n    suppressArp: \"off\",\n    vni: 103100,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.NveVni(\"example\",\n    associate_vrf=False,\n    multicast_group=\"239.1.1.1\",\n    multisite_ingress_replication=\"disable\",\n    suppress_arp=\"off\",\n    vni=103100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.NveVni(\"example\", new()\n    {\n        AssociateVrf = false,\n        MulticastGroup = \"239.1.1.1\",\n        MultisiteIngressReplication = \"disable\",\n        SuppressArp = \"off\",\n        Vni = 103100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewNveVni(ctx, \"example\", \u0026nxos.NveVniArgs{\n\t\t\tAssociateVrf:                pulumi.Bool(false),\n\t\t\tMulticastGroup:              pulumi.String(\"239.1.1.1\"),\n\t\t\tMultisiteIngressReplication: pulumi.String(\"disable\"),\n\t\t\tSuppressArp:                 pulumi.String(\"off\"),\n\t\t\tVni:                         pulumi.Int(103100),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NveVni;\nimport com.pulumi.nxos.NveVniArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NveVni(\"example\", NveVniArgs.builder()        \n            .associateVrf(false)\n            .multicastGroup(\"239.1.1.1\")\n            .multisiteIngressReplication(\"disable\")\n            .suppressArp(\"off\")\n            .vni(103100)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:NveVni\n    properties:\n      associateVrf: false\n      multicastGroup: 239.1.1.1\n      multisiteIngressReplication: disable\n      suppressArp: off\n      vni: 103100\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/nveVni:NveVni example \"sys/eps/epId-[1]/nws/vni-[103100]\"\n```\n\n ",
            "properties": {
                "associateVrf": {
                    "type": "boolean",
                    "description": "Configures VNI as L3 VNI. - Default value: `false`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "multicastGroup": {
                    "type": "string",
                    "description": "Configures multicast group address for VNI. - Default value: `0.0.0.0`\n"
                },
                "multisiteIngressReplication": {
                    "type": "string",
                    "description": "Enable or disable Multisite Ingress Replication for VNI(s). - Choices: `enable`, `disable`, `enableOptimized` - Default\nvalue: `disable`\n"
                },
                "suppressArp": {
                    "type": "string",
                    "description": "Enable or disable ARP suppression for VNI(s). - Choices: `enabled`, `disabled`, `off` - Default value: `off`\n"
                },
                "vni": {
                    "type": "integer",
                    "description": "Virtual Network ID. - Range: `1`-`16777214`\n"
                }
            },
            "required": [
                "associateVrf",
                "multicastGroup",
                "multisiteIngressReplication",
                "suppressArp",
                "vni"
            ],
            "inputProperties": {
                "associateVrf": {
                    "type": "boolean",
                    "description": "Configures VNI as L3 VNI. - Default value: `false`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "multicastGroup": {
                    "type": "string",
                    "description": "Configures multicast group address for VNI. - Default value: `0.0.0.0`\n"
                },
                "multisiteIngressReplication": {
                    "type": "string",
                    "description": "Enable or disable Multisite Ingress Replication for VNI(s). - Choices: `enable`, `disable`, `enableOptimized` - Default\nvalue: `disable`\n"
                },
                "suppressArp": {
                    "type": "string",
                    "description": "Enable or disable ARP suppression for VNI(s). - Choices: `enabled`, `disabled`, `off` - Default value: `off`\n"
                },
                "vni": {
                    "type": "integer",
                    "description": "Virtual Network ID. - Range: `1`-`16777214`\n"
                }
            },
            "requiredInputs": [
                "vni"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NveVni resources.\n",
                "properties": {
                    "associateVrf": {
                        "type": "boolean",
                        "description": "Configures VNI as L3 VNI. - Default value: `false`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "multicastGroup": {
                        "type": "string",
                        "description": "Configures multicast group address for VNI. - Default value: `0.0.0.0`\n"
                    },
                    "multisiteIngressReplication": {
                        "type": "string",
                        "description": "Enable or disable Multisite Ingress Replication for VNI(s). - Choices: `enable`, `disable`, `enableOptimized` - Default\nvalue: `disable`\n"
                    },
                    "suppressArp": {
                        "type": "string",
                        "description": "Enable or disable ARP suppression for VNI(s). - Choices: `enabled`, `disabled`, `off` - Default value: `off`\n"
                    },
                    "vni": {
                        "type": "integer",
                        "description": "Virtual Network ID. - Range: `1`-`16777214`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/nveVniContainer:NveVniContainer": {
            "description": "This resource can manage the configuration of Container object for Virtual Network IDs (VNIs).\n\n- API Documentation: [nvoNws](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Network%20Virtualization/nvo:Nws/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.NveVniContainer(\"example\", {});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.NveVniContainer(\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.NveVniContainer(\"example\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewNveVniContainer(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NveVniContainer;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NveVniContainer(\"example\");\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:NveVniContainer\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/nveVniContainer:NveVniContainer example \"sys/eps/epId-[1]/nws\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NveVniContainer resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/nveVniIngressReplication:NveVniIngressReplication": {
            "description": "This resource can manage the configuration of Ingress Replication for Virtual Network ID (VNI).\n\n- API Documentation: [nvoIngRepl](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Network%20Virtualization/nvo:IngRepl/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.NveVniIngressReplication(\"example\", {\n    protocol: \"bgp\",\n    vni: 103100,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.NveVniIngressReplication(\"example\",\n    protocol=\"bgp\",\n    vni=103100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.NveVniIngressReplication(\"example\", new()\n    {\n        Protocol = \"bgp\",\n        Vni = 103100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewNveVniIngressReplication(ctx, \"example\", \u0026nxos.NveVniIngressReplicationArgs{\n\t\t\tProtocol: pulumi.String(\"bgp\"),\n\t\t\tVni:      pulumi.Int(103100),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NveVniIngressReplication;\nimport com.pulumi.nxos.NveVniIngressReplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NveVniIngressReplication(\"example\", NveVniIngressReplicationArgs.builder()        \n            .protocol(\"bgp\")\n            .vni(103100)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:NveVniIngressReplication\n    properties:\n      protocol: bgp\n      vni: 103100\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/nveVniIngressReplication:NveVniIngressReplication example \"sys/eps/epId-[1]/nws/vni-[103100]/IngRepl\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Configure VxLAN Ingress Replication mode. - Choices: `bgp`, `unknown`, `static` - Default value: `unknown`\n"
                },
                "vni": {
                    "type": "integer",
                    "description": "Virtual Network ID. - Range: `1`-`16777214`\n"
                }
            },
            "required": [
                "protocol",
                "vni"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Configure VxLAN Ingress Replication mode. - Choices: `bgp`, `unknown`, `static` - Default value: `unknown`\n"
                },
                "vni": {
                    "type": "integer",
                    "description": "Virtual Network ID. - Range: `1`-`16777214`\n"
                }
            },
            "requiredInputs": [
                "vni"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NveVniIngressReplication resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Configure VxLAN Ingress Replication mode. - Choices: `bgp`, `unknown`, `static` - Default value: `unknown`\n"
                    },
                    "vni": {
                        "type": "integer",
                        "description": "Virtual Network ID. - Range: `1`-`16777214`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ospf:Ospf": {
            "description": "This resource can manage the global OSPF configuration.\n\n- API Documentation: [ospfEntity](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:Entity/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Ospf(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Ospf(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Ospf(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewOspf(ctx, \"example\", \u0026nxos.OspfArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Ospf;\nimport com.pulumi.nxos.OspfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ospf(\"example\", OspfArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Ospf\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ospf:Ospf example \"sys/ospf\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ospf resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ospfArea:OspfArea": {
            "description": "This resource can manage the OSPF Area configuration.\n\n- API Documentation: [ospfArea](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:Area/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.OspfArea(\"example\", {\n    areaId: \"0.0.0.10\",\n    authenticationType: \"none\",\n    cost: 10,\n    instanceName: \"OSPF1\",\n    type: \"stub\",\n    vrfName: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.OspfArea(\"example\",\n    area_id=\"0.0.0.10\",\n    authentication_type=\"none\",\n    cost=10,\n    instance_name=\"OSPF1\",\n    type=\"stub\",\n    vrf_name=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.OspfArea(\"example\", new()\n    {\n        AreaId = \"0.0.0.10\",\n        AuthenticationType = \"none\",\n        Cost = 10,\n        InstanceName = \"OSPF1\",\n        Type = \"stub\",\n        VrfName = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewOspfArea(ctx, \"example\", \u0026nxos.OspfAreaArgs{\n\t\t\tAreaId:             pulumi.String(\"0.0.0.10\"),\n\t\t\tAuthenticationType: pulumi.String(\"none\"),\n\t\t\tCost:               pulumi.Int(10),\n\t\t\tInstanceName:       pulumi.String(\"OSPF1\"),\n\t\t\tType:               pulumi.String(\"stub\"),\n\t\t\tVrfName:            pulumi.String(\"VRF1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.OspfArea;\nimport com.pulumi.nxos.OspfAreaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OspfArea(\"example\", OspfAreaArgs.builder()        \n            .areaId(\"0.0.0.10\")\n            .authenticationType(\"none\")\n            .cost(10)\n            .instanceName(\"OSPF1\")\n            .type(\"stub\")\n            .vrfName(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:OspfArea\n    properties:\n      areaId: 0.0.0.10\n      authenticationType: none\n      cost: 10\n      instanceName: OSPF1\n      type: stub\n      vrfName: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ospfArea:OspfArea example \"sys/ospf/inst-[OSPF1]/dom-[VRF1]/area-[0.0.0.10]\"\n```\n\n ",
            "properties": {
                "areaId": {
                    "type": "string",
                    "description": "Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`\n"
                },
                "authenticationType": {
                    "type": "string",
                    "description": "Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`\n"
                },
                "cost": {
                    "type": "integer",
                    "description": "Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types. - Range: `0`-`16777215` - Default\nvalue: `1`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Area type. - Choices: `regular`, `stub`, `nssa` - Default value: `regular`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "areaId",
                "authenticationType",
                "cost",
                "instanceName",
                "type",
                "vrfName"
            ],
            "inputProperties": {
                "areaId": {
                    "type": "string",
                    "description": "Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`\n"
                },
                "authenticationType": {
                    "type": "string",
                    "description": "Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`\n"
                },
                "cost": {
                    "type": "integer",
                    "description": "Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types. - Range: `0`-`16777215` - Default\nvalue: `1`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Area type. - Choices: `regular`, `stub`, `nssa` - Default value: `regular`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "areaId",
                "instanceName",
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OspfArea resources.\n",
                "properties": {
                    "areaId": {
                        "type": "string",
                        "description": "Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`\n"
                    },
                    "authenticationType": {
                        "type": "string",
                        "description": "Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`\n"
                    },
                    "cost": {
                        "type": "integer",
                        "description": "Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types. - Range: `0`-`16777215` - Default\nvalue: `1`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Area type. - Choices: `regular`, `stub`, `nssa` - Default value: `regular`\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ospfAuthentication:OspfAuthentication": {
            "description": "This resource can manage the OSPF authentication configuration.\n\n- API Documentation: [ospfAuthNewP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:AuthNewP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.OspfAuthentication(\"example\", {\n    instanceName: \"OSPF1\",\n    interfaceId: \"eth1/10\",\n    key: \"0 mykey\",\n    keyId: 1,\n    keySecureMode: false,\n    keychain: \"mykeychain\",\n    md5Key: \"0 mymd5key\",\n    md5KeySecureMode: false,\n    type: \"none\",\n    vrfName: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.OspfAuthentication(\"example\",\n    instance_name=\"OSPF1\",\n    interface_id=\"eth1/10\",\n    key=\"0 mykey\",\n    key_id=1,\n    key_secure_mode=False,\n    keychain=\"mykeychain\",\n    md5_key=\"0 mymd5key\",\n    md5_key_secure_mode=False,\n    type=\"none\",\n    vrf_name=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.OspfAuthentication(\"example\", new()\n    {\n        InstanceName = \"OSPF1\",\n        InterfaceId = \"eth1/10\",\n        Key = \"0 mykey\",\n        KeyId = 1,\n        KeySecureMode = false,\n        Keychain = \"mykeychain\",\n        Md5Key = \"0 mymd5key\",\n        Md5KeySecureMode = false,\n        Type = \"none\",\n        VrfName = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewOspfAuthentication(ctx, \"example\", \u0026nxos.OspfAuthenticationArgs{\n\t\t\tInstanceName:     pulumi.String(\"OSPF1\"),\n\t\t\tInterfaceId:      pulumi.String(\"eth1/10\"),\n\t\t\tKey:              pulumi.String(\"0 mykey\"),\n\t\t\tKeyId:            pulumi.Int(1),\n\t\t\tKeySecureMode:    pulumi.Bool(false),\n\t\t\tKeychain:         pulumi.String(\"mykeychain\"),\n\t\t\tMd5Key:           pulumi.String(\"0 mymd5key\"),\n\t\t\tMd5KeySecureMode: pulumi.Bool(false),\n\t\t\tType:             pulumi.String(\"none\"),\n\t\t\tVrfName:          pulumi.String(\"VRF1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.OspfAuthentication;\nimport com.pulumi.nxos.OspfAuthenticationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OspfAuthentication(\"example\", OspfAuthenticationArgs.builder()        \n            .instanceName(\"OSPF1\")\n            .interfaceId(\"eth1/10\")\n            .key(\"0 mykey\")\n            .keyId(1)\n            .keySecureMode(false)\n            .keychain(\"mykeychain\")\n            .md5Key(\"0 mymd5key\")\n            .md5KeySecureMode(false)\n            .type(\"none\")\n            .vrfName(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:OspfAuthentication\n    properties:\n      instanceName: OSPF1\n      interfaceId: eth1/10\n      key: 0 mykey\n      keyId: 1\n      keySecureMode: false\n      keychain: mykeychain\n      md5Key: 0 mymd5key\n      md5KeySecureMode: false\n      type: none\n      vrfName: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ospfAuthentication:OspfAuthentication example \"sys/ospf/inst-[OSPF1]/dom-[VRF1]/if-[eth1/10]/authnew\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key used for authentication.\n"
                },
                "keyId": {
                    "type": "integer",
                    "description": "Key ID used for authentication. - Range: `0`-`255` - Default value: `0`\n"
                },
                "keySecureMode": {
                    "type": "boolean",
                    "description": "Encrypted authentication key or plain text key. - Default value: `false`\n"
                },
                "keychain": {
                    "type": "string",
                    "description": "Authentication keychain.\n"
                },
                "md5Key": {
                    "type": "string",
                    "description": "Key used for md5 authentication.\n"
                },
                "md5KeySecureMode": {
                    "type": "boolean",
                    "description": "Encrypted authentication md5 key or plain text key. - Default value: `false`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "instanceName",
                "interfaceId",
                "keyId",
                "keySecureMode",
                "md5KeySecureMode",
                "type",
                "vrfName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key used for authentication.\n"
                },
                "keyId": {
                    "type": "integer",
                    "description": "Key ID used for authentication. - Range: `0`-`255` - Default value: `0`\n"
                },
                "keySecureMode": {
                    "type": "boolean",
                    "description": "Encrypted authentication key or plain text key. - Default value: `false`\n"
                },
                "keychain": {
                    "type": "string",
                    "description": "Authentication keychain.\n"
                },
                "md5Key": {
                    "type": "string",
                    "description": "Key used for md5 authentication.\n"
                },
                "md5KeySecureMode": {
                    "type": "boolean",
                    "description": "Encrypted authentication md5 key or plain text key. - Default value: `false`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "instanceName",
                "interfaceId",
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OspfAuthentication resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key used for authentication.\n"
                    },
                    "keyId": {
                        "type": "integer",
                        "description": "Key ID used for authentication. - Range: `0`-`255` - Default value: `0`\n"
                    },
                    "keySecureMode": {
                        "type": "boolean",
                        "description": "Encrypted authentication key or plain text key. - Default value: `false`\n"
                    },
                    "keychain": {
                        "type": "string",
                        "description": "Authentication keychain.\n"
                    },
                    "md5Key": {
                        "type": "string",
                        "description": "Key used for md5 authentication.\n"
                    },
                    "md5KeySecureMode": {
                        "type": "boolean",
                        "description": "Encrypted authentication md5 key or plain text key. - Default value: `false`\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Authentication type. - Choices: `none`, `simple`, `md5`, `unspecified` - Default value: `unspecified`\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ospfInstance:OspfInstance": {
            "description": "This resource can manage the OSPF instance configuration.\n\n- API Documentation: [ospfInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.OspfInstance(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.OspfInstance(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.OspfInstance(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewOspfInstance(ctx, \"example\", \u0026nxos.OspfInstanceArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.OspfInstance;\nimport com.pulumi.nxos.OspfInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OspfInstance(\"example\", OspfInstanceArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:OspfInstance\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ospfInstance:OspfInstance example \"sys/ospf/inst-[OSPF1]\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                }
            },
            "required": [
                "adminState",
                "name"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OspfInstance resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ospfInterface:OspfInterface": {
            "description": "This resource can manage the OSPF interface configuration.\n\n- API Documentation: [ospfIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.OspfInterface(\"example\", {\n    advertiseSecondaries: false,\n    area: \"0.0.0.10\",\n    bfd: \"disabled\",\n    cost: 1000,\n    deadInterval: 60,\n    helloInterval: 15,\n    instanceName: \"OSPF1\",\n    interfaceId: \"eth1/10\",\n    networkType: \"p2p\",\n    passive: \"enabled\",\n    priority: 10,\n    vrfName: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.OspfInterface(\"example\",\n    advertise_secondaries=False,\n    area=\"0.0.0.10\",\n    bfd=\"disabled\",\n    cost=1000,\n    dead_interval=60,\n    hello_interval=15,\n    instance_name=\"OSPF1\",\n    interface_id=\"eth1/10\",\n    network_type=\"p2p\",\n    passive=\"enabled\",\n    priority=10,\n    vrf_name=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.OspfInterface(\"example\", new()\n    {\n        AdvertiseSecondaries = false,\n        Area = \"0.0.0.10\",\n        Bfd = \"disabled\",\n        Cost = 1000,\n        DeadInterval = 60,\n        HelloInterval = 15,\n        InstanceName = \"OSPF1\",\n        InterfaceId = \"eth1/10\",\n        NetworkType = \"p2p\",\n        Passive = \"enabled\",\n        Priority = 10,\n        VrfName = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewOspfInterface(ctx, \"example\", \u0026nxos.OspfInterfaceArgs{\n\t\t\tAdvertiseSecondaries: pulumi.Bool(false),\n\t\t\tArea:                 pulumi.String(\"0.0.0.10\"),\n\t\t\tBfd:                  pulumi.String(\"disabled\"),\n\t\t\tCost:                 pulumi.Int(1000),\n\t\t\tDeadInterval:         pulumi.Int(60),\n\t\t\tHelloInterval:        pulumi.Int(15),\n\t\t\tInstanceName:         pulumi.String(\"OSPF1\"),\n\t\t\tInterfaceId:          pulumi.String(\"eth1/10\"),\n\t\t\tNetworkType:          pulumi.String(\"p2p\"),\n\t\t\tPassive:              pulumi.String(\"enabled\"),\n\t\t\tPriority:             pulumi.Int(10),\n\t\t\tVrfName:              pulumi.String(\"VRF1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.OspfInterface;\nimport com.pulumi.nxos.OspfInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OspfInterface(\"example\", OspfInterfaceArgs.builder()        \n            .advertiseSecondaries(false)\n            .area(\"0.0.0.10\")\n            .bfd(\"disabled\")\n            .cost(1000)\n            .deadInterval(60)\n            .helloInterval(15)\n            .instanceName(\"OSPF1\")\n            .interfaceId(\"eth1/10\")\n            .networkType(\"p2p\")\n            .passive(\"enabled\")\n            .priority(10)\n            .vrfName(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:OspfInterface\n    properties:\n      advertiseSecondaries: false\n      area: 0.0.0.10\n      bfd: disabled\n      cost: 1000\n      deadInterval: 60\n      helloInterval: 15\n      instanceName: OSPF1\n      interfaceId: eth1/10\n      networkType: p2p\n      passive: enabled\n      priority: 10\n      vrfName: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ospfInterface:OspfInterface example \"sys/ospf/inst-[OSPF1]/dom-[VRF1]/if-[eth1/10]\"\n```\n\n ",
            "properties": {
                "advertiseSecondaries": {
                    "type": "boolean",
                    "description": "Advertise secondary IP addresses. - Default value: `true`\n"
                },
                "area": {
                    "type": "string",
                    "description": "Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`\n"
                },
                "bfd": {
                    "type": "string",
                    "description": "Bidirectional Forwarding Detection (BFD). - Choices: `unspecified`, `enabled`, `disabled` - Default value: `unspecified`\n"
                },
                "cost": {
                    "type": "integer",
                    "description": "Specifies the cost of interface. - Range: `0`-`65535` - Default value: `0`\n"
                },
                "deadInterval": {
                    "type": "integer",
                    "description": "Dead interval, interval after which router declares that neighbor as down. - Range: `0`-`65535` - Default value: `0`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helloInterval": {
                    "type": "integer",
                    "description": "Hello interval, interval between hello packets that OSPF sends on the interface. - Range: `0`-`65535` - Default value:\n`10`\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "Network type. - Choices: `unspecified`, `p2p`, `bcast` - Default value: `unspecified`\n"
                },
                "passive": {
                    "type": "string",
                    "description": "Passive interface control. Interface can be configured as passive or non-passive. - Choices: `unspecified`, `enabled`,\n`disabled` - Default value: `unspecified`\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority, used in determining the designated router on this network. - Range: `0`-`255` - Default value: `1`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "advertiseSecondaries",
                "area",
                "bfd",
                "cost",
                "deadInterval",
                "helloInterval",
                "instanceName",
                "interfaceId",
                "networkType",
                "passive",
                "priority",
                "vrfName"
            ],
            "inputProperties": {
                "advertiseSecondaries": {
                    "type": "boolean",
                    "description": "Advertise secondary IP addresses. - Default value: `true`\n"
                },
                "area": {
                    "type": "string",
                    "description": "Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`\n"
                },
                "bfd": {
                    "type": "string",
                    "description": "Bidirectional Forwarding Detection (BFD). - Choices: `unspecified`, `enabled`, `disabled` - Default value: `unspecified`\n"
                },
                "cost": {
                    "type": "integer",
                    "description": "Specifies the cost of interface. - Range: `0`-`65535` - Default value: `0`\n"
                },
                "deadInterval": {
                    "type": "integer",
                    "description": "Dead interval, interval after which router declares that neighbor as down. - Range: `0`-`65535` - Default value: `0`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helloInterval": {
                    "type": "integer",
                    "description": "Hello interval, interval between hello packets that OSPF sends on the interface. - Range: `0`-`65535` - Default value:\n`10`\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "Network type. - Choices: `unspecified`, `p2p`, `bcast` - Default value: `unspecified`\n"
                },
                "passive": {
                    "type": "string",
                    "description": "Passive interface control. Interface can be configured as passive or non-passive. - Choices: `unspecified`, `enabled`,\n`disabled` - Default value: `unspecified`\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority, used in determining the designated router on this network. - Range: `0`-`255` - Default value: `1`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "instanceName",
                "interfaceId",
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OspfInterface resources.\n",
                "properties": {
                    "advertiseSecondaries": {
                        "type": "boolean",
                        "description": "Advertise secondary IP addresses. - Default value: `true`\n"
                    },
                    "area": {
                        "type": "string",
                        "description": "Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`\n"
                    },
                    "bfd": {
                        "type": "string",
                        "description": "Bidirectional Forwarding Detection (BFD). - Choices: `unspecified`, `enabled`, `disabled` - Default value: `unspecified`\n"
                    },
                    "cost": {
                        "type": "integer",
                        "description": "Specifies the cost of interface. - Range: `0`-`65535` - Default value: `0`\n"
                    },
                    "deadInterval": {
                        "type": "integer",
                        "description": "Dead interval, interval after which router declares that neighbor as down. - Range: `0`-`65535` - Default value: `0`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helloInterval": {
                        "type": "integer",
                        "description": "Hello interval, interval between hello packets that OSPF sends on the interface. - Range: `0`-`65535` - Default value:\n`10`\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "networkType": {
                        "type": "string",
                        "description": "Network type. - Choices: `unspecified`, `p2p`, `bcast` - Default value: `unspecified`\n"
                    },
                    "passive": {
                        "type": "string",
                        "description": "Passive interface control. Interface can be configured as passive or non-passive. - Choices: `unspecified`, `enabled`,\n`disabled` - Default value: `unspecified`\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority, used in determining the designated router on this network. - Range: `0`-`255` - Default value: `1`\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/ospfVrf:OspfVrf": {
            "description": "This resource can manage the OSPF VRF configuration.\n\n- API Documentation: [ospfDom](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:Dom/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.OspfVrf(\"example\", {\n    adminState: \"enabled\",\n    bandwidthReference: 400000,\n    banwidthReferenceUnit: \"mbps\",\n    distance: 110,\n    instanceName: \"OSPF1\",\n    routerId: \"34.56.78.90\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.OspfVrf(\"example\",\n    admin_state=\"enabled\",\n    bandwidth_reference=400000,\n    banwidth_reference_unit=\"mbps\",\n    distance=110,\n    instance_name=\"OSPF1\",\n    router_id=\"34.56.78.90\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.OspfVrf(\"example\", new()\n    {\n        AdminState = \"enabled\",\n        BandwidthReference = 400000,\n        BanwidthReferenceUnit = \"mbps\",\n        Distance = 110,\n        InstanceName = \"OSPF1\",\n        RouterId = \"34.56.78.90\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewOspfVrf(ctx, \"example\", \u0026nxos.OspfVrfArgs{\n\t\t\tAdminState:            pulumi.String(\"enabled\"),\n\t\t\tBandwidthReference:    pulumi.Int(400000),\n\t\t\tBanwidthReferenceUnit: pulumi.String(\"mbps\"),\n\t\t\tDistance:              pulumi.Int(110),\n\t\t\tInstanceName:          pulumi.String(\"OSPF1\"),\n\t\t\tRouterId:              pulumi.String(\"34.56.78.90\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.OspfVrf;\nimport com.pulumi.nxos.OspfVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OspfVrf(\"example\", OspfVrfArgs.builder()        \n            .adminState(\"enabled\")\n            .bandwidthReference(400000)\n            .banwidthReferenceUnit(\"mbps\")\n            .distance(110)\n            .instanceName(\"OSPF1\")\n            .routerId(\"34.56.78.90\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:OspfVrf\n    properties:\n      adminState: enabled\n      bandwidthReference: 400000\n      banwidthReferenceUnit: mbps\n      distance: 110\n      instanceName: OSPF1\n      routerId: 34.56.78.90\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/ospfVrf:OspfVrf example \"sys/ospf/inst-[OSPF1]/dom-[VRF1]\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "bandwidthReference": {
                    "type": "integer",
                    "description": "Bandwidth reference value. - Range: `0`-`4294967295` - Default value: `40000`\n"
                },
                "banwidthReferenceUnit": {
                    "type": "string",
                    "description": "Bandwidth reference unit. - Choices: `mbps`, `gbps` - Default value: `mbps`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "distance": {
                    "type": "integer",
                    "description": "Administrative distance preference. - Range: `1`-`255` - Default value: `110`\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                },
                "routerId": {
                    "type": "string",
                    "description": "Router ID. - Default value: `0.0.0.0`\n"
                }
            },
            "required": [
                "adminState",
                "bandwidthReference",
                "banwidthReferenceUnit",
                "distance",
                "instanceName",
                "name",
                "routerId"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "bandwidthReference": {
                    "type": "integer",
                    "description": "Bandwidth reference value. - Range: `0`-`4294967295` - Default value: `40000`\n"
                },
                "banwidthReferenceUnit": {
                    "type": "string",
                    "description": "Bandwidth reference unit. - Choices: `mbps`, `gbps` - Default value: `mbps`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "distance": {
                    "type": "integer",
                    "description": "Administrative distance preference. - Range: `1`-`255` - Default value: `110`\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "OSPF instance name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                },
                "routerId": {
                    "type": "string",
                    "description": "Router ID. - Default value: `0.0.0.0`\n"
                }
            },
            "requiredInputs": [
                "instanceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OspfVrf resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "bandwidthReference": {
                        "type": "integer",
                        "description": "Bandwidth reference value. - Range: `0`-`4294967295` - Default value: `40000`\n"
                    },
                    "banwidthReferenceUnit": {
                        "type": "string",
                        "description": "Bandwidth reference unit. - Choices: `mbps`, `gbps` - Default value: `mbps`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "distance": {
                        "type": "integer",
                        "description": "Administrative distance preference. - Range: `1`-`255` - Default value: `110`\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    },
                    "routerId": {
                        "type": "string",
                        "description": "Router ID. - Default value: `0.0.0.0`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/physicalInterface:PhysicalInterface": {
            "description": "This resource can manage a physical interface.\n\n- API Documentation: [l1PhysIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/l1:PhysIf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.PhysicalInterface(\"example\", {\n    accessVlan: \"unknown\",\n    adminState: \"up\",\n    autoNegotiation: \"on\",\n    bandwidth: 1000,\n    delay: 10,\n    description: \"My Description\",\n    duplex: \"auto\",\n    fecMode: \"auto\",\n    interfaceId: \"eth1/10\",\n    layer: \"Layer3\",\n    linkDebounceDown: 200,\n    linkDebounceUp: 0,\n    linkLogging: \"enable\",\n    medium: \"broadcast\",\n    mode: \"access\",\n    mtu: 1500,\n    nativeVlan: \"unknown\",\n    speed: \"auto\",\n    speedGroup: \"auto\",\n    trunkVlans: \"1-4094\",\n    uniDirectionalEthernet: \"disable\",\n    userConfiguredFlags: \"admin_layer,admin_mtu,admin_state\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.PhysicalInterface(\"example\",\n    access_vlan=\"unknown\",\n    admin_state=\"up\",\n    auto_negotiation=\"on\",\n    bandwidth=1000,\n    delay=10,\n    description=\"My Description\",\n    duplex=\"auto\",\n    fec_mode=\"auto\",\n    interface_id=\"eth1/10\",\n    layer=\"Layer3\",\n    link_debounce_down=200,\n    link_debounce_up=0,\n    link_logging=\"enable\",\n    medium=\"broadcast\",\n    mode=\"access\",\n    mtu=1500,\n    native_vlan=\"unknown\",\n    speed=\"auto\",\n    speed_group=\"auto\",\n    trunk_vlans=\"1-4094\",\n    uni_directional_ethernet=\"disable\",\n    user_configured_flags=\"admin_layer,admin_mtu,admin_state\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.PhysicalInterface(\"example\", new()\n    {\n        AccessVlan = \"unknown\",\n        AdminState = \"up\",\n        AutoNegotiation = \"on\",\n        Bandwidth = 1000,\n        Delay = 10,\n        Description = \"My Description\",\n        Duplex = \"auto\",\n        FecMode = \"auto\",\n        InterfaceId = \"eth1/10\",\n        Layer = \"Layer3\",\n        LinkDebounceDown = 200,\n        LinkDebounceUp = 0,\n        LinkLogging = \"enable\",\n        Medium = \"broadcast\",\n        Mode = \"access\",\n        Mtu = 1500,\n        NativeVlan = \"unknown\",\n        Speed = \"auto\",\n        SpeedGroup = \"auto\",\n        TrunkVlans = \"1-4094\",\n        UniDirectionalEthernet = \"disable\",\n        UserConfiguredFlags = \"admin_layer,admin_mtu,admin_state\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewPhysicalInterface(ctx, \"example\", \u0026nxos.PhysicalInterfaceArgs{\n\t\t\tAccessVlan:             pulumi.String(\"unknown\"),\n\t\t\tAdminState:             pulumi.String(\"up\"),\n\t\t\tAutoNegotiation:        pulumi.String(\"on\"),\n\t\t\tBandwidth:              pulumi.Int(1000),\n\t\t\tDelay:                  pulumi.Int(10),\n\t\t\tDescription:            pulumi.String(\"My Description\"),\n\t\t\tDuplex:                 pulumi.String(\"auto\"),\n\t\t\tFecMode:                pulumi.String(\"auto\"),\n\t\t\tInterfaceId:            pulumi.String(\"eth1/10\"),\n\t\t\tLayer:                  pulumi.String(\"Layer3\"),\n\t\t\tLinkDebounceDown:       pulumi.Int(200),\n\t\t\tLinkDebounceUp:         pulumi.Int(0),\n\t\t\tLinkLogging:            pulumi.String(\"enable\"),\n\t\t\tMedium:                 pulumi.String(\"broadcast\"),\n\t\t\tMode:                   pulumi.String(\"access\"),\n\t\t\tMtu:                    pulumi.Int(1500),\n\t\t\tNativeVlan:             pulumi.String(\"unknown\"),\n\t\t\tSpeed:                  pulumi.String(\"auto\"),\n\t\t\tSpeedGroup:             pulumi.String(\"auto\"),\n\t\t\tTrunkVlans:             pulumi.String(\"1-4094\"),\n\t\t\tUniDirectionalEthernet: pulumi.String(\"disable\"),\n\t\t\tUserConfiguredFlags:    pulumi.String(\"admin_layer,admin_mtu,admin_state\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.PhysicalInterface;\nimport com.pulumi.nxos.PhysicalInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PhysicalInterface(\"example\", PhysicalInterfaceArgs.builder()        \n            .accessVlan(\"unknown\")\n            .adminState(\"up\")\n            .autoNegotiation(\"on\")\n            .bandwidth(1000)\n            .delay(10)\n            .description(\"My Description\")\n            .duplex(\"auto\")\n            .fecMode(\"auto\")\n            .interfaceId(\"eth1/10\")\n            .layer(\"Layer3\")\n            .linkDebounceDown(200)\n            .linkDebounceUp(0)\n            .linkLogging(\"enable\")\n            .medium(\"broadcast\")\n            .mode(\"access\")\n            .mtu(1500)\n            .nativeVlan(\"unknown\")\n            .speed(\"auto\")\n            .speedGroup(\"auto\")\n            .trunkVlans(\"1-4094\")\n            .uniDirectionalEthernet(\"disable\")\n            .userConfiguredFlags(\"admin_layer,admin_mtu,admin_state\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:PhysicalInterface\n    properties:\n      accessVlan: unknown\n      adminState: up\n      autoNegotiation: on\n      bandwidth: 1000\n      delay: 10\n      description: My Description\n      duplex: auto\n      fecMode: auto\n      interfaceId: eth1/10\n      layer: Layer3\n      linkDebounceDown: 200\n      linkDebounceUp: 0\n      linkLogging: enable\n      medium: broadcast\n      mode: access\n      mtu: 1500\n      nativeVlan: unknown\n      speed: auto\n      speedGroup: auto\n      trunkVlans: 1-4094\n      uniDirectionalEthernet: disable\n      userConfiguredFlags: admin_layer,admin_mtu,admin_state\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/physicalInterface:PhysicalInterface example \"sys/intf/phys-[eth1/10]\"\n```\n\n ",
            "properties": {
                "accessVlan": {
                    "type": "string",
                    "description": "Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                },
                "adminState": {
                    "type": "string",
                    "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "autoNegotiation": {
                    "type": "string",
                    "description": "Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`\n"
                },
                "bandwidth": {
                    "type": "integer",
                    "description": "The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default\nvalue: `0`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "duplex": {
                    "type": "string",
                    "description": "Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`\n"
                },
                "fecMode": {
                    "type": "string",
                    "description": "FEC mode. - Choices: `fc-fec`, `rs-fec`, `fec-off`, `auto`, `rs-ieee`, `rs-cons16`, `kp-fec` - Default value: `auto`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "layer": {
                    "type": "string",
                    "description": "Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`\n"
                },
                "linkDebounceDown": {
                    "type": "integer",
                    "description": "Administrative port link debounce interval. - Range: `0`-`20000` - Default value: `100`\n"
                },
                "linkDebounceUp": {
                    "type": "integer",
                    "description": "Link Debounce Interval - LinkUp Event. - Range: `0`-`20000` - Default value: `0`\n"
                },
                "linkLogging": {
                    "type": "string",
                    "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "medium": {
                    "type": "string",
                    "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,\n`trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                },
                "nativeVlan": {
                    "type": "string",
                    "description": "Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                },
                "speed": {
                    "type": "string",
                    "description": "Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,\n`100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:\n`auto`\n"
                },
                "speedGroup": {
                    "type": "string",
                    "description": "Speed group. - Choices: `unknown`, `1000`, `10000`, `40000`, `auto`, `25000` - Default value: `auto`\n"
                },
                "trunkVlans": {
                    "type": "string",
                    "description": "List of trunk VLANs. - Default value: `1-4094`\n"
                },
                "uniDirectionalEthernet": {
                    "type": "string",
                    "description": "UDE (Uni-Directional Ethernet). - Choices: `disable`, `send-only`, `receive-only` - Default value: `disable`\n"
                },
                "userConfiguredFlags": {
                    "type": "string",
                    "description": "Port User Config Flags.\n"
                }
            },
            "required": [
                "accessVlan",
                "adminState",
                "autoNegotiation",
                "bandwidth",
                "delay",
                "duplex",
                "fecMode",
                "interfaceId",
                "layer",
                "linkDebounceDown",
                "linkDebounceUp",
                "linkLogging",
                "medium",
                "mode",
                "mtu",
                "nativeVlan",
                "speed",
                "speedGroup",
                "trunkVlans",
                "uniDirectionalEthernet"
            ],
            "inputProperties": {
                "accessVlan": {
                    "type": "string",
                    "description": "Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                },
                "adminState": {
                    "type": "string",
                    "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "autoNegotiation": {
                    "type": "string",
                    "description": "Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`\n"
                },
                "bandwidth": {
                    "type": "integer",
                    "description": "The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default\nvalue: `0`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "duplex": {
                    "type": "string",
                    "description": "Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`\n"
                },
                "fecMode": {
                    "type": "string",
                    "description": "FEC mode. - Choices: `fc-fec`, `rs-fec`, `fec-off`, `auto`, `rs-ieee`, `rs-cons16`, `kp-fec` - Default value: `auto`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "layer": {
                    "type": "string",
                    "description": "Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`\n"
                },
                "linkDebounceDown": {
                    "type": "integer",
                    "description": "Administrative port link debounce interval. - Range: `0`-`20000` - Default value: `100`\n"
                },
                "linkDebounceUp": {
                    "type": "integer",
                    "description": "Link Debounce Interval - LinkUp Event. - Range: `0`-`20000` - Default value: `0`\n"
                },
                "linkLogging": {
                    "type": "string",
                    "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "medium": {
                    "type": "string",
                    "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,\n`trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                },
                "nativeVlan": {
                    "type": "string",
                    "description": "Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                },
                "speed": {
                    "type": "string",
                    "description": "Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,\n`100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:\n`auto`\n"
                },
                "speedGroup": {
                    "type": "string",
                    "description": "Speed group. - Choices: `unknown`, `1000`, `10000`, `40000`, `auto`, `25000` - Default value: `auto`\n"
                },
                "trunkVlans": {
                    "type": "string",
                    "description": "List of trunk VLANs. - Default value: `1-4094`\n"
                },
                "uniDirectionalEthernet": {
                    "type": "string",
                    "description": "UDE (Uni-Directional Ethernet). - Choices: `disable`, `send-only`, `receive-only` - Default value: `disable`\n"
                },
                "userConfiguredFlags": {
                    "type": "string",
                    "description": "Port User Config Flags.\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PhysicalInterface resources.\n",
                "properties": {
                    "accessVlan": {
                        "type": "string",
                        "description": "Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                    },
                    "adminState": {
                        "type": "string",
                        "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                    },
                    "autoNegotiation": {
                        "type": "string",
                        "description": "Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`\n"
                    },
                    "bandwidth": {
                        "type": "integer",
                        "description": "The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default\nvalue: `0`\n"
                    },
                    "delay": {
                        "type": "integer",
                        "description": "The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "duplex": {
                        "type": "string",
                        "description": "Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`\n"
                    },
                    "fecMode": {
                        "type": "string",
                        "description": "FEC mode. - Choices: `fc-fec`, `rs-fec`, `fec-off`, `auto`, `rs-ieee`, `rs-cons16`, `kp-fec` - Default value: `auto`\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "layer": {
                        "type": "string",
                        "description": "Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`\n"
                    },
                    "linkDebounceDown": {
                        "type": "integer",
                        "description": "Administrative port link debounce interval. - Range: `0`-`20000` - Default value: `100`\n"
                    },
                    "linkDebounceUp": {
                        "type": "integer",
                        "description": "Link Debounce Interval - LinkUp Event. - Range: `0`-`20000` - Default value: `0`\n"
                    },
                    "linkLogging": {
                        "type": "string",
                        "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                    },
                    "medium": {
                        "type": "string",
                        "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,\n`trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                    },
                    "nativeVlan": {
                        "type": "string",
                        "description": "Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                    },
                    "speed": {
                        "type": "string",
                        "description": "Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,\n`100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:\n`auto`\n"
                    },
                    "speedGroup": {
                        "type": "string",
                        "description": "Speed group. - Choices: `unknown`, `1000`, `10000`, `40000`, `auto`, `25000` - Default value: `auto`\n"
                    },
                    "trunkVlans": {
                        "type": "string",
                        "description": "List of trunk VLANs. - Default value: `1-4094`\n"
                    },
                    "uniDirectionalEthernet": {
                        "type": "string",
                        "description": "UDE (Uni-Directional Ethernet). - Choices: `disable`, `send-only`, `receive-only` - Default value: `disable`\n"
                    },
                    "userConfiguredFlags": {
                        "type": "string",
                        "description": "Port User Config Flags.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/physicalInterfaceVrf:PhysicalInterfaceVrf": {
            "description": "This resource can manage a physical interface VRF association.\n\n- API Documentation: [nwRtVrfMbr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/nw:RtVrfMbr/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.PhysicalInterfaceVrf(\"example\", {\n    interfaceId: \"eth1/10\",\n    vrfDn: \"sys/inst-default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.PhysicalInterfaceVrf(\"example\",\n    interface_id=\"eth1/10\",\n    vrf_dn=\"sys/inst-default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.PhysicalInterfaceVrf(\"example\", new()\n    {\n        InterfaceId = \"eth1/10\",\n        VrfDn = \"sys/inst-default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewPhysicalInterfaceVrf(ctx, \"example\", \u0026nxos.PhysicalInterfaceVrfArgs{\n\t\t\tInterfaceId: pulumi.String(\"eth1/10\"),\n\t\t\tVrfDn:       pulumi.String(\"sys/inst-default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.PhysicalInterfaceVrf;\nimport com.pulumi.nxos.PhysicalInterfaceVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PhysicalInterfaceVrf(\"example\", PhysicalInterfaceVrfArgs.builder()        \n            .interfaceId(\"eth1/10\")\n            .vrfDn(\"sys/inst-default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:PhysicalInterfaceVrf\n    properties:\n      interfaceId: eth1/10\n      vrfDn: sys/inst-default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/physicalInterfaceVrf:PhysicalInterfaceVrf example \"sys/intf/phys-[eth1/10]/rtvrfMbr\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "required": [
                "interfaceId",
                "vrfDn"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "vrfDn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PhysicalInterfaceVrf resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "vrfDn": {
                        "type": "string",
                        "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/pim:Pim": {
            "description": "This resource can manage the global PIM configuration.\n\n- API Documentation: [pimEntity](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:Entity/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Pim(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Pim(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Pim(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewPim(ctx, \"example\", \u0026nxos.PimArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Pim;\nimport com.pulumi.nxos.PimArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Pim(\"example\", PimArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Pim\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/pim:Pim example \"sys/pim\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Pim resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/pimAnycastRp:PimAnycastRp": {
            "description": "This resource can manage the PIM Anycast RP configuration.\n\n- API Documentation: [pimAcastRPFuncP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:AcastRPFuncP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.PimAnycastRp(\"example\", {\n    localInterface: \"eth1/10\",\n    sourceInterface: \"eth1/10\",\n    vrfName: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.PimAnycastRp(\"example\",\n    local_interface=\"eth1/10\",\n    source_interface=\"eth1/10\",\n    vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.PimAnycastRp(\"example\", new()\n    {\n        LocalInterface = \"eth1/10\",\n        SourceInterface = \"eth1/10\",\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewPimAnycastRp(ctx, \"example\", \u0026nxos.PimAnycastRpArgs{\n\t\t\tLocalInterface:  pulumi.String(\"eth1/10\"),\n\t\t\tSourceInterface: pulumi.String(\"eth1/10\"),\n\t\t\tVrfName:         pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.PimAnycastRp;\nimport com.pulumi.nxos.PimAnycastRpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PimAnycastRp(\"example\", PimAnycastRpArgs.builder()        \n            .localInterface(\"eth1/10\")\n            .sourceInterface(\"eth1/10\")\n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:PimAnycastRp\n    properties:\n      localInterface: eth1/10\n      sourceInterface: eth1/10\n      vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/pimAnycastRp:PimAnycastRp example \"sys/pim/inst/dom-[default]/acastrpfunc\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "localInterface": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "sourceInterface": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "vrfName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "localInterface": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "sourceInterface": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimAnycastRp resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "localInterface": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "sourceInterface": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/pimAnycastRpPeer:PimAnycastRpPeer": {
            "description": "This resource can manage the PIM Anycast RP peer configuration.\n\n- API Documentation: [pimAcastRPPeer](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:AcastRPPeer/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.PimAnycastRpPeer(\"example\", {\n    address: \"10.1.1.1/32\",\n    rpSetAddress: \"20.1.1.1/32\",\n    vrfName: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.PimAnycastRpPeer(\"example\",\n    address=\"10.1.1.1/32\",\n    rp_set_address=\"20.1.1.1/32\",\n    vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.PimAnycastRpPeer(\"example\", new()\n    {\n        Address = \"10.1.1.1/32\",\n        RpSetAddress = \"20.1.1.1/32\",\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewPimAnycastRpPeer(ctx, \"example\", \u0026nxos.PimAnycastRpPeerArgs{\n\t\t\tAddress:      pulumi.String(\"10.1.1.1/32\"),\n\t\t\tRpSetAddress: pulumi.String(\"20.1.1.1/32\"),\n\t\t\tVrfName:      pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.PimAnycastRpPeer;\nimport com.pulumi.nxos.PimAnycastRpPeerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PimAnycastRpPeer(\"example\", PimAnycastRpPeerArgs.builder()        \n            .address(\"10.1.1.1/32\")\n            .rpSetAddress(\"20.1.1.1/32\")\n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:PimAnycastRpPeer\n    properties:\n      address: 10.1.1.1/32\n      rpSetAddress: 20.1.1.1/32\n      vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/pimAnycastRpPeer:PimAnycastRpPeer example \"sys/pim/inst/dom-[default]/acastrpfunc/peer-[10.1.1.1/32]-peer-[20.1.1.1/32]\"\n```\n\n ",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Anycast RP address.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "rpSetAddress": {
                    "type": "string",
                    "description": "RP set address.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "rpSetAddress",
                "vrfName"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Anycast RP address.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "rpSetAddress": {
                    "type": "string",
                    "description": "RP set address.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "rpSetAddress",
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimAnycastRpPeer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Anycast RP address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "rpSetAddress": {
                        "type": "string",
                        "description": "RP set address.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/pimInstance:PimInstance": {
            "description": "This resource can manage the PIM instance configuration.\n\n- API Documentation: [pimInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.PimInstance(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.PimInstance(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.PimInstance(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewPimInstance(ctx, \"example\", \u0026nxos.PimInstanceArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.PimInstance;\nimport com.pulumi.nxos.PimInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PimInstance(\"example\", PimInstanceArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:PimInstance\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/pimInstance:PimInstance example \"sys/pim/inst\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimInstance resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/pimInterface:PimInterface": {
            "description": "This resource can manage the PIM interface configuration.\n\n- API Documentation: [pimIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.PimInterface(\"example\", {\n    adminState: \"enabled\",\n    bfd: \"enabled\",\n    drPriority: 10,\n    interfaceId: \"eth1/10\",\n    passive: false,\n    sparseMode: true,\n    vrfName: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.PimInterface(\"example\",\n    admin_state=\"enabled\",\n    bfd=\"enabled\",\n    dr_priority=10,\n    interface_id=\"eth1/10\",\n    passive=False,\n    sparse_mode=True,\n    vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.PimInterface(\"example\", new()\n    {\n        AdminState = \"enabled\",\n        Bfd = \"enabled\",\n        DrPriority = 10,\n        InterfaceId = \"eth1/10\",\n        Passive = false,\n        SparseMode = true,\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewPimInterface(ctx, \"example\", \u0026nxos.PimInterfaceArgs{\n\t\t\tAdminState:  pulumi.String(\"enabled\"),\n\t\t\tBfd:         pulumi.String(\"enabled\"),\n\t\t\tDrPriority:  pulumi.Int(10),\n\t\t\tInterfaceId: pulumi.String(\"eth1/10\"),\n\t\t\tPassive:     pulumi.Bool(false),\n\t\t\tSparseMode:  pulumi.Bool(true),\n\t\t\tVrfName:     pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.PimInterface;\nimport com.pulumi.nxos.PimInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PimInterface(\"example\", PimInterfaceArgs.builder()        \n            .adminState(\"enabled\")\n            .bfd(\"enabled\")\n            .drPriority(10)\n            .interfaceId(\"eth1/10\")\n            .passive(false)\n            .sparseMode(true)\n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:PimInterface\n    properties:\n      adminState: enabled\n      bfd: enabled\n      drPriority: 10\n      interfaceId: eth1/10\n      passive: false\n      sparseMode: true\n      vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/pimInterface:PimInterface example \"sys/pim/inst/dom-[default]/if-[eth1/10]\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "bfd": {
                    "type": "string",
                    "description": "BFD. - Choices: `none`, `enabled`, `disabled` - Default value: `none`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "drPriority": {
                    "type": "integer",
                    "description": "Designated Router priority level. - Range: `1`-`4294967295` - Default value: `1`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "passive": {
                    "type": "boolean",
                    "description": "Passive interface. - Default value: `false`\n"
                },
                "sparseMode": {
                    "type": "boolean",
                    "description": "Sparse mode. - Default value: `false`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "adminState",
                "bfd",
                "drPriority",
                "interfaceId",
                "passive",
                "sparseMode",
                "vrfName"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "bfd": {
                    "type": "string",
                    "description": "BFD. - Choices: `none`, `enabled`, `disabled` - Default value: `none`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "drPriority": {
                    "type": "integer",
                    "description": "Designated Router priority level. - Range: `1`-`4294967295` - Default value: `1`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "passive": {
                    "type": "boolean",
                    "description": "Passive interface. - Default value: `false`\n"
                },
                "sparseMode": {
                    "type": "boolean",
                    "description": "Sparse mode. - Default value: `false`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimInterface resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "bfd": {
                        "type": "string",
                        "description": "BFD. - Choices: `none`, `enabled`, `disabled` - Default value: `none`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "drPriority": {
                        "type": "integer",
                        "description": "Designated Router priority level. - Range: `1`-`4294967295` - Default value: `1`\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "passive": {
                        "type": "boolean",
                        "description": "Passive interface. - Default value: `false`\n"
                    },
                    "sparseMode": {
                        "type": "boolean",
                        "description": "Sparse mode. - Default value: `false`\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/pimSsmPolicy:PimSsmPolicy": {
            "description": "This resource can manage the PIM SSM policy configuration.\n\n- API Documentation: [pimSSMPatP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:SSMPatP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.PimSsmPolicy(\"example\", {vrfName: \"default\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.PimSsmPolicy(\"example\", vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.PimSsmPolicy(\"example\", new()\n    {\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewPimSsmPolicy(ctx, \"example\", \u0026nxos.PimSsmPolicyArgs{\n\t\t\tVrfName: pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.PimSsmPolicy;\nimport com.pulumi.nxos.PimSsmPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PimSsmPolicy(\"example\", PimSsmPolicyArgs.builder()        \n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:PimSsmPolicy\n    properties:\n      vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/pimSsmPolicy:PimSsmPolicy example \"sys/pim/inst/dom-[default]/ssm\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy name.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "name",
                "vrfName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy name.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimSsmPolicy resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy name.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/pimSsmRange:PimSsmRange": {
            "description": "This resource can manage the PIM SSM range configuration.\n\n- API Documentation: [pimSSMRangeP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:SSMRangeP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.PimSsmRange(\"example\", {\n    groupList1: \"232.0.0.0/8\",\n    groupList2: \"233.0.0.0/8\",\n    groupList3: \"0.0.0.0\",\n    groupList4: \"0.0.0.0\",\n    prefixList: \"\",\n    routeMap: \"\",\n    ssmNone: false,\n    vrfName: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.PimSsmRange(\"example\",\n    group_list1=\"232.0.0.0/8\",\n    group_list2=\"233.0.0.0/8\",\n    group_list3=\"0.0.0.0\",\n    group_list4=\"0.0.0.0\",\n    prefix_list=\"\",\n    route_map=\"\",\n    ssm_none=False,\n    vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.PimSsmRange(\"example\", new()\n    {\n        GroupList1 = \"232.0.0.0/8\",\n        GroupList2 = \"233.0.0.0/8\",\n        GroupList3 = \"0.0.0.0\",\n        GroupList4 = \"0.0.0.0\",\n        PrefixList = \"\",\n        RouteMap = \"\",\n        SsmNone = false,\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewPimSsmRange(ctx, \"example\", \u0026nxos.PimSsmRangeArgs{\n\t\t\tGroupList1: pulumi.String(\"232.0.0.0/8\"),\n\t\t\tGroupList2: pulumi.String(\"233.0.0.0/8\"),\n\t\t\tGroupList3: pulumi.String(\"0.0.0.0\"),\n\t\t\tGroupList4: pulumi.String(\"0.0.0.0\"),\n\t\t\tPrefixList: pulumi.String(\"\"),\n\t\t\tRouteMap:   pulumi.String(\"\"),\n\t\t\tSsmNone:    pulumi.Bool(false),\n\t\t\tVrfName:    pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.PimSsmRange;\nimport com.pulumi.nxos.PimSsmRangeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PimSsmRange(\"example\", PimSsmRangeArgs.builder()        \n            .groupList1(\"232.0.0.0/8\")\n            .groupList2(\"233.0.0.0/8\")\n            .groupList3(\"0.0.0.0\")\n            .groupList4(\"0.0.0.0\")\n            .prefixList(\"\")\n            .routeMap(\"\")\n            .ssmNone(false)\n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:PimSsmRange\n    properties:\n      groupList1: 232.0.0.0/8\n      groupList2: 233.0.0.0/8\n      groupList3: 0.0.0.0\n      groupList4: 0.0.0.0\n      prefixList:\n      routeMap:\n      ssmNone: false\n      vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/pimSsmRange:PimSsmRange example \"sys/pim/inst/dom-[default]/ssm/range\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "groupList1": {
                    "type": "string",
                    "description": "Group list 1. - Default value: `0.0.0.0`\n"
                },
                "groupList2": {
                    "type": "string",
                    "description": "Group list 2. - Default value: `0.0.0.0`\n"
                },
                "groupList3": {
                    "type": "string",
                    "description": "Group list 3. - Default value: `0.0.0.0`\n"
                },
                "groupList4": {
                    "type": "string",
                    "description": "Group list 4. - Default value: `0.0.0.0`\n"
                },
                "prefixList": {
                    "type": "string",
                    "description": "Prefix list name.\n"
                },
                "routeMap": {
                    "type": "string",
                    "description": "Route map name.\n"
                },
                "ssmNone": {
                    "type": "boolean",
                    "description": "Exclude standard SSM range (232.0.0.0/8). - Default value: `false`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "groupList1",
                "groupList2",
                "groupList3",
                "groupList4",
                "ssmNone",
                "vrfName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "groupList1": {
                    "type": "string",
                    "description": "Group list 1. - Default value: `0.0.0.0`\n"
                },
                "groupList2": {
                    "type": "string",
                    "description": "Group list 2. - Default value: `0.0.0.0`\n"
                },
                "groupList3": {
                    "type": "string",
                    "description": "Group list 3. - Default value: `0.0.0.0`\n"
                },
                "groupList4": {
                    "type": "string",
                    "description": "Group list 4. - Default value: `0.0.0.0`\n"
                },
                "prefixList": {
                    "type": "string",
                    "description": "Prefix list name.\n"
                },
                "routeMap": {
                    "type": "string",
                    "description": "Route map name.\n"
                },
                "ssmNone": {
                    "type": "boolean",
                    "description": "Exclude standard SSM range (232.0.0.0/8). - Default value: `false`\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimSsmRange resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "groupList1": {
                        "type": "string",
                        "description": "Group list 1. - Default value: `0.0.0.0`\n"
                    },
                    "groupList2": {
                        "type": "string",
                        "description": "Group list 2. - Default value: `0.0.0.0`\n"
                    },
                    "groupList3": {
                        "type": "string",
                        "description": "Group list 3. - Default value: `0.0.0.0`\n"
                    },
                    "groupList4": {
                        "type": "string",
                        "description": "Group list 4. - Default value: `0.0.0.0`\n"
                    },
                    "prefixList": {
                        "type": "string",
                        "description": "Prefix list name.\n"
                    },
                    "routeMap": {
                        "type": "string",
                        "description": "Route map name.\n"
                    },
                    "ssmNone": {
                        "type": "boolean",
                        "description": "Exclude standard SSM range (232.0.0.0/8). - Default value: `false`\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/pimStaticRp:PimStaticRp": {
            "description": "This resource can manage the PIM Static RP configuration.\n\n- API Documentation: [pimStaticRP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:StaticRP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.PimStaticRp(\"example\", {\n    address: \"1.2.3.4\",\n    vrfName: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.PimStaticRp(\"example\",\n    address=\"1.2.3.4\",\n    vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.PimStaticRp(\"example\", new()\n    {\n        Address = \"1.2.3.4\",\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewPimStaticRp(ctx, \"example\", \u0026nxos.PimStaticRpArgs{\n\t\t\tAddress: pulumi.String(\"1.2.3.4\"),\n\t\t\tVrfName: pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.PimStaticRp;\nimport com.pulumi.nxos.PimStaticRpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PimStaticRp(\"example\", PimStaticRpArgs.builder()        \n            .address(\"1.2.3.4\")\n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:PimStaticRp\n    properties:\n      address: 1.2.3.4\n      vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/pimStaticRp:PimStaticRp example \"sys/pim/inst/dom-[default]/staticrp/rp-[1.2.3.4]\"\n```\n\n ",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Address.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "vrfName"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Address.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimStaticRp resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/pimStaticRpGroupList:PimStaticRpGroupList": {
            "description": "This resource can manage the PIM Static RP group list configuration.\n\n- API Documentation: [pimRPGrpList](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:RPGrpList/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.PimStaticRpGroupList(\"example\", {\n    address: \"224.0.0.0/4\",\n    bidir: true,\n    override: true,\n    rpAddress: \"1.2.3.4\",\n    vrfName: \"default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.PimStaticRpGroupList(\"example\",\n    address=\"224.0.0.0/4\",\n    bidir=True,\n    override=True,\n    rp_address=\"1.2.3.4\",\n    vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.PimStaticRpGroupList(\"example\", new()\n    {\n        Address = \"224.0.0.0/4\",\n        Bidir = true,\n        Override = true,\n        RpAddress = \"1.2.3.4\",\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewPimStaticRpGroupList(ctx, \"example\", \u0026nxos.PimStaticRpGroupListArgs{\n\t\t\tAddress:   pulumi.String(\"224.0.0.0/4\"),\n\t\t\tBidir:     pulumi.Bool(true),\n\t\t\tOverride:  pulumi.Bool(true),\n\t\t\tRpAddress: pulumi.String(\"1.2.3.4\"),\n\t\t\tVrfName:   pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.PimStaticRpGroupList;\nimport com.pulumi.nxos.PimStaticRpGroupListArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PimStaticRpGroupList(\"example\", PimStaticRpGroupListArgs.builder()        \n            .address(\"224.0.0.0/4\")\n            .bidir(true)\n            .override(true)\n            .rpAddress(\"1.2.3.4\")\n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:PimStaticRpGroupList\n    properties:\n      address: 224.0.0.0/4\n      bidir: true\n      override: true\n      rpAddress: 1.2.3.4\n      vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/pimStaticRpGroupList:PimStaticRpGroupList example \"sys/pim/inst/dom-[default]/staticrp/rp-[1.2.3.4]/rpgrplist-[224.0.0.0/4]\"\n```\n\n ",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Group list address information.\n"
                },
                "bidir": {
                    "type": "boolean",
                    "description": "Flag to treat Group Ranges as BiDir. - Default value: `false`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "override": {
                    "type": "boolean",
                    "description": "Flag to override RP preference to use Static over Dynamic RP. - Default value: `false`\n"
                },
                "rpAddress": {
                    "type": "string",
                    "description": "RP address.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "address",
                "bidir",
                "override",
                "rpAddress",
                "vrfName"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Group list address information.\n"
                },
                "bidir": {
                    "type": "boolean",
                    "description": "Flag to treat Group Ranges as BiDir. - Default value: `false`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "override": {
                    "type": "boolean",
                    "description": "Flag to override RP preference to use Static over Dynamic RP. - Default value: `false`\n"
                },
                "rpAddress": {
                    "type": "string",
                    "description": "RP address.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "address",
                "rpAddress",
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimStaticRpGroupList resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Group list address information.\n"
                    },
                    "bidir": {
                        "type": "boolean",
                        "description": "Flag to treat Group Ranges as BiDir. - Default value: `false`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "override": {
                        "type": "boolean",
                        "description": "Flag to override RP preference to use Static over Dynamic RP. - Default value: `false`\n"
                    },
                    "rpAddress": {
                        "type": "string",
                        "description": "RP address.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/pimStaticRpPolicy:PimStaticRpPolicy": {
            "description": "This resource can manage the PIM Static RP policy configuration.\n\n- API Documentation: [pimStaticRPP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:StaticRPP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.PimStaticRpPolicy(\"example\", {vrfName: \"default\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.PimStaticRpPolicy(\"example\", vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.PimStaticRpPolicy(\"example\", new()\n    {\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewPimStaticRpPolicy(ctx, \"example\", \u0026nxos.PimStaticRpPolicyArgs{\n\t\t\tVrfName: pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.PimStaticRpPolicy;\nimport com.pulumi.nxos.PimStaticRpPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PimStaticRpPolicy(\"example\", PimStaticRpPolicyArgs.builder()        \n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:PimStaticRpPolicy\n    properties:\n      vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/pimStaticRpPolicy:PimStaticRpPolicy example \"sys/pim/inst/dom-[default]/staticrp\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy name.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "name",
                "vrfName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy name.\n"
                },
                "vrfName": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "vrfName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimStaticRpPolicy resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy name.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/pimVrf:PimVrf": {
            "description": "This resource can manage the PIM VRF configuration.\n\n- API Documentation: [pimDom](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:Dom/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.PimVrf(\"example\", {\n    adminState: \"enabled\",\n    bfd: true,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.PimVrf(\"example\",\n    admin_state=\"enabled\",\n    bfd=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.PimVrf(\"example\", new()\n    {\n        AdminState = \"enabled\",\n        Bfd = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewPimVrf(ctx, \"example\", \u0026nxos.PimVrfArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t\tBfd:        pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.PimVrf;\nimport com.pulumi.nxos.PimVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PimVrf(\"example\", PimVrfArgs.builder()        \n            .adminState(\"enabled\")\n            .bfd(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:PimVrf\n    properties:\n      adminState: enabled\n      bfd: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/pimVrf:PimVrf example \"sys/pim/inst/dom-[default]\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "bfd": {
                    "type": "boolean",
                    "description": "BFD. - Default value: `false`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "adminState",
                "bfd",
                "name"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "bfd": {
                    "type": "boolean",
                    "description": "BFD. - Default value: `false`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimVrf resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "bfd": {
                        "type": "boolean",
                        "description": "BFD. - Default value: `false`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/portChannelInterface:PortChannelInterface": {
            "description": "This resource can manage a port-channel interface.\n\n- API Documentation: [pcAggrIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Interfaces/pc:AggrIf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.PortChannelInterface(\"example\", {\n    accessVlan: \"vlan-1\",\n    adminState: \"up\",\n    autoNegotiation: \"on\",\n    bandwidth: 0,\n    delay: 1,\n    description: \"My Description\",\n    duplex: \"auto\",\n    interfaceId: \"po1\",\n    layer: \"Layer2\",\n    linkLogging: \"enable\",\n    maximumLinks: 10,\n    medium: \"broadcast\",\n    minimumLinks: 2,\n    mode: \"access\",\n    mtu: 1500,\n    nativeVlan: \"unknown\",\n    portChannelMode: \"active\",\n    speed: \"auto\",\n    suspendIndividual: \"disable\",\n    trunkVlans: \"1-4094\",\n    userConfiguredFlags: \"admin_layer,admin_mtu,admin_state\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.PortChannelInterface(\"example\",\n    access_vlan=\"vlan-1\",\n    admin_state=\"up\",\n    auto_negotiation=\"on\",\n    bandwidth=0,\n    delay=1,\n    description=\"My Description\",\n    duplex=\"auto\",\n    interface_id=\"po1\",\n    layer=\"Layer2\",\n    link_logging=\"enable\",\n    maximum_links=10,\n    medium=\"broadcast\",\n    minimum_links=2,\n    mode=\"access\",\n    mtu=1500,\n    native_vlan=\"unknown\",\n    port_channel_mode=\"active\",\n    speed=\"auto\",\n    suspend_individual=\"disable\",\n    trunk_vlans=\"1-4094\",\n    user_configured_flags=\"admin_layer,admin_mtu,admin_state\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.PortChannelInterface(\"example\", new()\n    {\n        AccessVlan = \"vlan-1\",\n        AdminState = \"up\",\n        AutoNegotiation = \"on\",\n        Bandwidth = 0,\n        Delay = 1,\n        Description = \"My Description\",\n        Duplex = \"auto\",\n        InterfaceId = \"po1\",\n        Layer = \"Layer2\",\n        LinkLogging = \"enable\",\n        MaximumLinks = 10,\n        Medium = \"broadcast\",\n        MinimumLinks = 2,\n        Mode = \"access\",\n        Mtu = 1500,\n        NativeVlan = \"unknown\",\n        PortChannelMode = \"active\",\n        Speed = \"auto\",\n        SuspendIndividual = \"disable\",\n        TrunkVlans = \"1-4094\",\n        UserConfiguredFlags = \"admin_layer,admin_mtu,admin_state\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewPortChannelInterface(ctx, \"example\", \u0026nxos.PortChannelInterfaceArgs{\n\t\t\tAccessVlan:          pulumi.String(\"vlan-1\"),\n\t\t\tAdminState:          pulumi.String(\"up\"),\n\t\t\tAutoNegotiation:     pulumi.String(\"on\"),\n\t\t\tBandwidth:           pulumi.Int(0),\n\t\t\tDelay:               pulumi.Int(1),\n\t\t\tDescription:         pulumi.String(\"My Description\"),\n\t\t\tDuplex:              pulumi.String(\"auto\"),\n\t\t\tInterfaceId:         pulumi.String(\"po1\"),\n\t\t\tLayer:               pulumi.String(\"Layer2\"),\n\t\t\tLinkLogging:         pulumi.String(\"enable\"),\n\t\t\tMaximumLinks:        pulumi.Int(10),\n\t\t\tMedium:              pulumi.String(\"broadcast\"),\n\t\t\tMinimumLinks:        pulumi.Int(2),\n\t\t\tMode:                pulumi.String(\"access\"),\n\t\t\tMtu:                 pulumi.Int(1500),\n\t\t\tNativeVlan:          pulumi.String(\"unknown\"),\n\t\t\tPortChannelMode:     pulumi.String(\"active\"),\n\t\t\tSpeed:               pulumi.String(\"auto\"),\n\t\t\tSuspendIndividual:   pulumi.String(\"disable\"),\n\t\t\tTrunkVlans:          pulumi.String(\"1-4094\"),\n\t\t\tUserConfiguredFlags: pulumi.String(\"admin_layer,admin_mtu,admin_state\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.PortChannelInterface;\nimport com.pulumi.nxos.PortChannelInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PortChannelInterface(\"example\", PortChannelInterfaceArgs.builder()        \n            .accessVlan(\"vlan-1\")\n            .adminState(\"up\")\n            .autoNegotiation(\"on\")\n            .bandwidth(0)\n            .delay(1)\n            .description(\"My Description\")\n            .duplex(\"auto\")\n            .interfaceId(\"po1\")\n            .layer(\"Layer2\")\n            .linkLogging(\"enable\")\n            .maximumLinks(10)\n            .medium(\"broadcast\")\n            .minimumLinks(2)\n            .mode(\"access\")\n            .mtu(1500)\n            .nativeVlan(\"unknown\")\n            .portChannelMode(\"active\")\n            .speed(\"auto\")\n            .suspendIndividual(\"disable\")\n            .trunkVlans(\"1-4094\")\n            .userConfiguredFlags(\"admin_layer,admin_mtu,admin_state\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:PortChannelInterface\n    properties:\n      accessVlan: vlan-1\n      adminState: up\n      autoNegotiation: on\n      bandwidth: 0\n      delay: 1\n      description: My Description\n      duplex: auto\n      interfaceId: po1\n      layer: Layer2\n      linkLogging: enable\n      maximumLinks: 10\n      medium: broadcast\n      minimumLinks: 2\n      mode: access\n      mtu: 1500\n      nativeVlan: unknown\n      portChannelMode: active\n      speed: auto\n      suspendIndividual: disable\n      trunkVlans: 1-4094\n      userConfiguredFlags: admin_layer,admin_mtu,admin_state\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/portChannelInterface:PortChannelInterface example \"sys/intf/aggr-[po1]\"\n```\n\n ",
            "properties": {
                "accessVlan": {
                    "type": "string",
                    "description": "Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                },
                "adminState": {
                    "type": "string",
                    "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "autoNegotiation": {
                    "type": "string",
                    "description": "Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`\n"
                },
                "bandwidth": {
                    "type": "integer",
                    "description": "The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default\nvalue: `0`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "duplex": {
                    "type": "string",
                    "description": "Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                },
                "layer": {
                    "type": "string",
                    "description": "Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`\n"
                },
                "linkLogging": {
                    "type": "string",
                    "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "maximumLinks": {
                    "type": "integer",
                    "description": "Maximum links. - Range: `1`-`32` - Default value: `32`\n"
                },
                "medium": {
                    "type": "string",
                    "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                },
                "minimumLinks": {
                    "type": "integer",
                    "description": "Minimum links. - Range: `1`-`32` - Default value: `1`\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,\n`trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                },
                "nativeVlan": {
                    "type": "string",
                    "description": "Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                },
                "portChannelMode": {
                    "type": "string",
                    "description": "The aggregated interface protocol channel mode. - Choices: `on`, `static`, `active`, `passive`, `mac-pin` - Default\nvalue: `on`\n"
                },
                "speed": {
                    "type": "string",
                    "description": "Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,\n`100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:\n`auto`\n"
                },
                "suspendIndividual": {
                    "type": "string",
                    "description": "Suspend Individual Port. - Choices: `enable`, `disable` - Default value: `enable`\n"
                },
                "trunkVlans": {
                    "type": "string",
                    "description": "List of trunk VLANs. - Default value: `1-4094`\n"
                },
                "userConfiguredFlags": {
                    "type": "string",
                    "description": "Port User Config Flags.\n"
                }
            },
            "required": [
                "accessVlan",
                "adminState",
                "autoNegotiation",
                "bandwidth",
                "delay",
                "duplex",
                "interfaceId",
                "layer",
                "linkLogging",
                "maximumLinks",
                "medium",
                "minimumLinks",
                "mode",
                "mtu",
                "nativeVlan",
                "portChannelMode",
                "speed",
                "suspendIndividual",
                "trunkVlans"
            ],
            "inputProperties": {
                "accessVlan": {
                    "type": "string",
                    "description": "Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                },
                "adminState": {
                    "type": "string",
                    "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "autoNegotiation": {
                    "type": "string",
                    "description": "Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`\n"
                },
                "bandwidth": {
                    "type": "integer",
                    "description": "The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default\nvalue: `0`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "duplex": {
                    "type": "string",
                    "description": "Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                },
                "layer": {
                    "type": "string",
                    "description": "Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`\n"
                },
                "linkLogging": {
                    "type": "string",
                    "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "maximumLinks": {
                    "type": "integer",
                    "description": "Maximum links. - Range: `1`-`32` - Default value: `32`\n"
                },
                "medium": {
                    "type": "string",
                    "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                },
                "minimumLinks": {
                    "type": "integer",
                    "description": "Minimum links. - Range: `1`-`32` - Default value: `1`\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,\n`trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                },
                "nativeVlan": {
                    "type": "string",
                    "description": "Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                },
                "portChannelMode": {
                    "type": "string",
                    "description": "The aggregated interface protocol channel mode. - Choices: `on`, `static`, `active`, `passive`, `mac-pin` - Default\nvalue: `on`\n"
                },
                "speed": {
                    "type": "string",
                    "description": "Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,\n`100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:\n`auto`\n"
                },
                "suspendIndividual": {
                    "type": "string",
                    "description": "Suspend Individual Port. - Choices: `enable`, `disable` - Default value: `enable`\n"
                },
                "trunkVlans": {
                    "type": "string",
                    "description": "List of trunk VLANs. - Default value: `1-4094`\n"
                },
                "userConfiguredFlags": {
                    "type": "string",
                    "description": "Port User Config Flags.\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PortChannelInterface resources.\n",
                "properties": {
                    "accessVlan": {
                        "type": "string",
                        "description": "Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                    },
                    "adminState": {
                        "type": "string",
                        "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                    },
                    "autoNegotiation": {
                        "type": "string",
                        "description": "Administrative port auto-negotiation. - Choices: `on`, `off`, `25G` - Default value: `on`\n"
                    },
                    "bandwidth": {
                        "type": "integer",
                        "description": "The bandwidth parameter for a routed interface, port channel, or subinterface. - Range: `0`-`3200000000` - Default\nvalue: `0`\n"
                    },
                    "delay": {
                        "type": "integer",
                        "description": "The administrative port delay time. - Range: `1`-`16777215` - Default value: `1`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "duplex": {
                        "type": "string",
                        "description": "Duplex. - Choices: `auto`, `full`, `half` - Default value: `auto`\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                    },
                    "layer": {
                        "type": "string",
                        "description": "Administrative port layer. - Choices: `Layer2`, `Layer3` - Default value: `Layer2`\n"
                    },
                    "linkLogging": {
                        "type": "string",
                        "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                    },
                    "maximumLinks": {
                        "type": "integer",
                        "description": "Maximum links. - Range: `1`-`32` - Default value: `32`\n"
                    },
                    "medium": {
                        "type": "string",
                        "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                    },
                    "minimumLinks": {
                        "type": "integer",
                        "description": "Minimum links. - Range: `1`-`32` - Default value: `1`\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Administrative port mode. - Choices: `access`, `trunk`, `fex-fabric`, `dot1q-tunnel`, `promiscuous`, `host`,\n`trunk_secondary`, `trunk_promiscuous`, `vntag` - Default value: `access`\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                    },
                    "nativeVlan": {
                        "type": "string",
                        "description": "Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `vlan-1`\n"
                    },
                    "portChannelMode": {
                        "type": "string",
                        "description": "The aggregated interface protocol channel mode. - Choices: `on`, `static`, `active`, `passive`, `mac-pin` - Default\nvalue: `on`\n"
                    },
                    "speed": {
                        "type": "string",
                        "description": "Administrative port speed. - Choices: `unknown`, `100M`, `1G`, `10G`, `40G`, `auto`, `auto 100M`, `auto 100M 1G`,\n`100G`, `25G`, `10M`, `50G`, `200G`, `400G`, `2.5G`, `5G`, `auto 2.5G 5G 10G`, `auto 100M 1G 2.5G 5G` - Default value:\n`auto`\n"
                    },
                    "suspendIndividual": {
                        "type": "string",
                        "description": "Suspend Individual Port. - Choices: `enable`, `disable` - Default value: `enable`\n"
                    },
                    "trunkVlans": {
                        "type": "string",
                        "description": "List of trunk VLANs. - Default value: `1-4094`\n"
                    },
                    "userConfiguredFlags": {
                        "type": "string",
                        "description": "Port User Config Flags.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/portChannelInterfaceMember:PortChannelInterfaceMember": {
            "description": "This resource can manage a port-channel interface member.\n\n- API Documentation: [pcRsMbrIfs](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Interfaces/pc:RsMbrIfs/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.PortChannelInterfaceMember(\"example\", {\n    interfaceDn: \"sys/intf/phys-[eth1/11]\",\n    interfaceId: \"po1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.PortChannelInterfaceMember(\"example\",\n    interface_dn=\"sys/intf/phys-[eth1/11]\",\n    interface_id=\"po1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.PortChannelInterfaceMember(\"example\", new()\n    {\n        InterfaceDn = \"sys/intf/phys-[eth1/11]\",\n        InterfaceId = \"po1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewPortChannelInterfaceMember(ctx, \"example\", \u0026nxos.PortChannelInterfaceMemberArgs{\n\t\t\tInterfaceDn: pulumi.String(\"sys/intf/phys-[eth1/11]\"),\n\t\t\tInterfaceId: pulumi.String(\"po1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.PortChannelInterfaceMember;\nimport com.pulumi.nxos.PortChannelInterfaceMemberArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PortChannelInterfaceMember(\"example\", PortChannelInterfaceMemberArgs.builder()        \n            .interfaceDn(\"sys/intf/phys-[eth1/11]\")\n            .interfaceId(\"po1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:PortChannelInterfaceMember\n    properties:\n      interfaceDn: sys/intf/phys-[eth1/11]\n      interfaceId: po1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/portChannelInterfaceMember:PortChannelInterfaceMember example \"sys/intf/aggr-[po1]/rsmbrIfs-[sys/intf/phys-[eth1/11]]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceDn": {
                    "type": "string",
                    "description": "DN of interface. For example: `sys/intf/phys-[eth1/1]`.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                }
            },
            "required": [
                "interfaceDn",
                "interfaceId"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceDn": {
                    "type": "string",
                    "description": "DN of interface. For example: `sys/intf/phys-[eth1/1]`.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceDn",
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PortChannelInterfaceMember resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceDn": {
                        "type": "string",
                        "description": "DN of interface. For example: `sys/intf/phys-[eth1/1]`.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/portChannelInterfaceVrf:PortChannelInterfaceVrf": {
            "description": "This resource can manage a port-channel interface VRF association.\n\n- API Documentation: [nwRtVrfMbr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/nw:RtVrfMbr/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.PortChannelInterfaceVrf(\"example\", {\n    interfaceId: \"po1\",\n    vrfDn: \"sys/inst-default\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.PortChannelInterfaceVrf(\"example\",\n    interface_id=\"po1\",\n    vrf_dn=\"sys/inst-default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.PortChannelInterfaceVrf(\"example\", new()\n    {\n        InterfaceId = \"po1\",\n        VrfDn = \"sys/inst-default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewPortChannelInterfaceVrf(ctx, \"example\", \u0026nxos.PortChannelInterfaceVrfArgs{\n\t\t\tInterfaceId: pulumi.String(\"po1\"),\n\t\t\tVrfDn:       pulumi.String(\"sys/inst-default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.PortChannelInterfaceVrf;\nimport com.pulumi.nxos.PortChannelInterfaceVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PortChannelInterfaceVrf(\"example\", PortChannelInterfaceVrfArgs.builder()        \n            .interfaceId(\"po1\")\n            .vrfDn(\"sys/inst-default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:PortChannelInterfaceVrf\n    properties:\n      interfaceId: po1\n      vrfDn: sys/inst-default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/portChannelInterfaceVrf:PortChannelInterfaceVrf example \"sys/intf/aggr-[po1]/rtvrfMbr\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "required": [
                "interfaceId",
                "vrfDn"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "vrfDn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PortChannelInterfaceVrf resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                    },
                    "vrfDn": {
                        "type": "string",
                        "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/queuingQosPolicyMap:QueuingQosPolicyMap": {
            "description": "This resource can manage the queuing QoS policy map configuration.\n\n- API Documentation: [ipqosPMapInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:PMapInst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.QueuingQosPolicyMap(\"example\", {matchType: \"match-any\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.QueuingQosPolicyMap(\"example\", match_type=\"match-any\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.QueuingQosPolicyMap(\"example\", new()\n    {\n        MatchType = \"match-any\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewQueuingQosPolicyMap(ctx, \"example\", \u0026nxos.QueuingQosPolicyMapArgs{\n\t\t\tMatchType: pulumi.String(\"match-any\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.QueuingQosPolicyMap;\nimport com.pulumi.nxos.QueuingQosPolicyMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new QueuingQosPolicyMap(\"example\", QueuingQosPolicyMapArgs.builder()        \n            .matchType(\"match-any\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:QueuingQosPolicyMap\n    properties:\n      matchType: match-any\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/queuingQosPolicyMap:QueuingQosPolicyMap example \"sys/ipqos/queuing/p/name-[PM1]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "required": [
                "matchType",
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QueuingQosPolicyMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "matchType": {
                        "type": "string",
                        "description": "Match type. - Choices: `match-any`, `match-all`, `match-first` - Default value: `match-all`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/queuingQosPolicyMapMatchClassMap:QueuingQosPolicyMapMatchClassMap": {
            "description": "This resource can manage the queuing QoS policy map match class map configuration.\n\n- API Documentation: [ipqosMatchCMap](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:MatchCMap/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.QueuingQosPolicyMapMatchClassMap(\"example\", {policyMapName: \"PM1\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.QueuingQosPolicyMapMatchClassMap(\"example\", policy_map_name=\"PM1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.QueuingQosPolicyMapMatchClassMap(\"example\", new()\n    {\n        PolicyMapName = \"PM1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewQueuingQosPolicyMapMatchClassMap(ctx, \"example\", \u0026nxos.QueuingQosPolicyMapMatchClassMapArgs{\n\t\t\tPolicyMapName: pulumi.String(\"PM1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.QueuingQosPolicyMapMatchClassMap;\nimport com.pulumi.nxos.QueuingQosPolicyMapMatchClassMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new QueuingQosPolicyMapMatchClassMap(\"example\", QueuingQosPolicyMapMatchClassMapArgs.builder()        \n            .policyMapName(\"PM1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:QueuingQosPolicyMapMatchClassMap\n    properties:\n      policyMapName: PM1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/queuingQosPolicyMapMatchClassMap:QueuingQosPolicyMapMatchClassMap example \"sys/ipqos/queuing/p/name-[PM1]/cmap-[c-out-q1]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "required": [
                "name",
                "policyMapName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "requiredInputs": [
                "policyMapName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QueuingQosPolicyMapMatchClassMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/queuingQosPolicyMapMatchClassMapPriority:QueuingQosPolicyMapMatchClassMapPriority": {
            "description": "This resource can manage the queuing QoS policy map match class map priority configuration.\n\n- API Documentation: [ipqosPriority](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:Priority/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.QueuingQosPolicyMapMatchClassMapPriority(\"example\", {\n    classMapName: \"c-out-q1\",\n    level: 1,\n    policyMapName: \"PM1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.QueuingQosPolicyMapMatchClassMapPriority(\"example\",\n    class_map_name=\"c-out-q1\",\n    level=1,\n    policy_map_name=\"PM1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.QueuingQosPolicyMapMatchClassMapPriority(\"example\", new()\n    {\n        ClassMapName = \"c-out-q1\",\n        Level = 1,\n        PolicyMapName = \"PM1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewQueuingQosPolicyMapMatchClassMapPriority(ctx, \"example\", \u0026nxos.QueuingQosPolicyMapMatchClassMapPriorityArgs{\n\t\t\tClassMapName:  pulumi.String(\"c-out-q1\"),\n\t\t\tLevel:         pulumi.Int(1),\n\t\t\tPolicyMapName: pulumi.String(\"PM1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.QueuingQosPolicyMapMatchClassMapPriority;\nimport com.pulumi.nxos.QueuingQosPolicyMapMatchClassMapPriorityArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new QueuingQosPolicyMapMatchClassMapPriority(\"example\", QueuingQosPolicyMapMatchClassMapPriorityArgs.builder()        \n            .classMapName(\"c-out-q1\")\n            .level(1)\n            .policyMapName(\"PM1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:QueuingQosPolicyMapMatchClassMapPriority\n    properties:\n      classMapName: c-out-q1\n      level: 1\n      policyMapName: PM1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/queuingQosPolicyMapMatchClassMapPriority:QueuingQosPolicyMapMatchClassMapPriority example \"sys/ipqos/queuing/p/name-[PM1]/cmap-[c-out-q1]/prio\"\n```\n\n ",
            "properties": {
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "level": {
                    "type": "integer",
                    "description": "Priority level. - Range: `1`-`8`\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "required": [
                "classMapName",
                "level",
                "policyMapName"
            ],
            "inputProperties": {
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "level": {
                    "type": "integer",
                    "description": "Priority level. - Range: `1`-`8`\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "requiredInputs": [
                "classMapName",
                "level",
                "policyMapName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QueuingQosPolicyMapMatchClassMapPriority resources.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "level": {
                        "type": "integer",
                        "description": "Priority level. - Range: `1`-`8`\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/queuingQosPolicyMapMatchClassMapRemainingBandwidth:QueuingQosPolicyMapMatchClassMapRemainingBandwidth": {
            "description": "This resource can manage the queuing QoS policy map match class map remaining bandwidth configuration.\n\n- API Documentation: [ipqosSetRemBW](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:SetRemBW/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.QueuingQosPolicyMapMatchClassMapRemainingBandwidth(\"example\", {\n    classMapName: \"c-out-q1\",\n    policyMapName: \"PM1\",\n    value: 10,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.QueuingQosPolicyMapMatchClassMapRemainingBandwidth(\"example\",\n    class_map_name=\"c-out-q1\",\n    policy_map_name=\"PM1\",\n    value=10)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.QueuingQosPolicyMapMatchClassMapRemainingBandwidth(\"example\", new()\n    {\n        ClassMapName = \"c-out-q1\",\n        PolicyMapName = \"PM1\",\n        Value = 10,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewQueuingQosPolicyMapMatchClassMapRemainingBandwidth(ctx, \"example\", \u0026nxos.QueuingQosPolicyMapMatchClassMapRemainingBandwidthArgs{\n\t\t\tClassMapName:  pulumi.String(\"c-out-q1\"),\n\t\t\tPolicyMapName: pulumi.String(\"PM1\"),\n\t\t\tValue:         pulumi.Int(10),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.QueuingQosPolicyMapMatchClassMapRemainingBandwidth;\nimport com.pulumi.nxos.QueuingQosPolicyMapMatchClassMapRemainingBandwidthArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new QueuingQosPolicyMapMatchClassMapRemainingBandwidth(\"example\", QueuingQosPolicyMapMatchClassMapRemainingBandwidthArgs.builder()        \n            .classMapName(\"c-out-q1\")\n            .policyMapName(\"PM1\")\n            .value(10)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:QueuingQosPolicyMapMatchClassMapRemainingBandwidth\n    properties:\n      classMapName: c-out-q1\n      policyMapName: PM1\n      value: 10\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/queuingQosPolicyMapMatchClassMapRemainingBandwidth:QueuingQosPolicyMapMatchClassMapRemainingBandwidth example \"sys/ipqos/queuing/p/name-[PM1]/cmap-[c-out-q1]/setRemBW\"\n```\n\n ",
            "properties": {
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                },
                "value": {
                    "type": "integer",
                    "description": "Remaining bandwidth percent. - Range: `0`-`100`\n"
                }
            },
            "required": [
                "classMapName",
                "policyMapName",
                "value"
            ],
            "inputProperties": {
                "classMapName": {
                    "type": "string",
                    "description": "Class map name.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                },
                "value": {
                    "type": "integer",
                    "description": "Remaining bandwidth percent. - Range: `0`-`100`\n"
                }
            },
            "requiredInputs": [
                "classMapName",
                "policyMapName",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QueuingQosPolicyMapMatchClassMapRemainingBandwidth resources.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    },
                    "value": {
                        "type": "integer",
                        "description": "Remaining bandwidth percent. - Range: `0`-`100`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/queuingQosPolicySystemOut:QueuingQosPolicySystemOut": {
            "description": "This resource can manage the queuing QoS policy system out configuration.\n\n- API Documentation: [ipqosSystem](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:System/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.QueuingQosPolicySystemOut(\"example\", {});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.QueuingQosPolicySystemOut(\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.QueuingQosPolicySystemOut(\"example\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewQueuingQosPolicySystemOut(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.QueuingQosPolicySystemOut;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new QueuingQosPolicySystemOut(\"example\");\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:QueuingQosPolicySystemOut\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/queuingQosPolicySystemOut:QueuingQosPolicySystemOut example \"sys/ipqos/queuing/policy/out/sys\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QueuingQosPolicySystemOut resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/queuingQosPolicySystemOutPolicyMap:QueuingQosPolicySystemOutPolicyMap": {
            "description": "This resource can manage the queuing QoS policy system out policy map configuration.\n\n- API Documentation: [ipqosInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.QueuingQosPolicySystemOutPolicyMap(\"example\", {policyMapName: \"PM1\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.QueuingQosPolicySystemOutPolicyMap(\"example\", policy_map_name=\"PM1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.QueuingQosPolicySystemOutPolicyMap(\"example\", new()\n    {\n        PolicyMapName = \"PM1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewQueuingQosPolicySystemOutPolicyMap(ctx, \"example\", \u0026nxos.QueuingQosPolicySystemOutPolicyMapArgs{\n\t\t\tPolicyMapName: pulumi.String(\"PM1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.QueuingQosPolicySystemOutPolicyMap;\nimport com.pulumi.nxos.QueuingQosPolicySystemOutPolicyMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new QueuingQosPolicySystemOutPolicyMap(\"example\", QueuingQosPolicySystemOutPolicyMapArgs.builder()        \n            .policyMapName(\"PM1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:QueuingQosPolicySystemOutPolicyMap\n    properties:\n      policyMapName: PM1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/queuingQosPolicySystemOutPolicyMap:QueuingQosPolicySystemOutPolicyMap example \"sys/ipqos/queuing/policy/out/sys/pmap\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "required": [
                "policyMapName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "policyMapName": {
                    "type": "string",
                    "description": "Policy map name.\n"
                }
            },
            "requiredInputs": [
                "policyMapName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QueuingQosPolicySystemOutPolicyMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/rest:Rest": {
            "description": "Manages NX-OS DME Objects via REST API calls. This resource can manage a single API object and its children. It is able to read the state and therefore reconcile configuration drift.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Rest;\nimport com.pulumi.nxos.RestArgs;\nimport com.pulumi.nxos.inputs.RestChildrenArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var l1PhysIf = new Rest(\"l1PhysIf\", RestArgs.builder()        \n            .className(\"l1PhysIf\")\n            .content(Map.ofEntries(\n                Map.entry(\"id\", \"eth1/1\"),\n                Map.entry(\"mode\", \"trunk\")\n            ))\n            .dn(\"sys/intf/phys-[eth1/1]\")\n            .build());\n\n        var ipqosCMapInst = new Rest(\"ipqosCMapInst\", RestArgs.builder()        \n            .childrens(RestChildrenArgs.builder()\n                .class_name(\"ipqosDscp\")\n                .content(Map.of(\"val\", \"ef\"))\n                .rn(\"dscp-ef\")\n                .build())\n            .className(\"ipqosCMapInst\")\n            .content(Map.of(\"name\", \"CM1\"))\n            .dn(\"sys/ipqos/dflt/c/name-[CM1]\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  l1PhysIf:\n    type: nxos:Rest\n    properties:\n      className: l1PhysIf\n      content:\n        id: eth1/1\n        mode: trunk\n      dn: sys/intf/phys-[eth1/1]\n  ipqosCMapInst:\n    type: nxos:Rest\n    properties:\n      childrens:\n        - class_name: ipqosDscp\n          content:\n            - val: ef\n          rn: dscp-ef\n      className: ipqosCMapInst\n      content:\n        name: CM1\n      dn: sys/ipqos/dflt/c/name-[CM1]\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/rest:Rest l1PhysIf\" \"l1PhysIf:sys/intf/phys-[eth1/1]\"\n```\n\n ",
            "properties": {
                "childrens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:index/RestChildren:RestChildren"
                    },
                    "description": "List of children.\n"
                },
                "className": {
                    "type": "string",
                    "description": "Which class object is being created. (Make sure there is no colon in the classname)\n"
                },
                "content": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of key-value pairs that need to be passed to the Model object as parameters.\n"
                },
                "delete": {
                    "type": "boolean",
                    "description": "Delete object during destroy operation. Default value is `true`.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dn": {
                    "type": "string",
                    "description": "Distinguished name of object being managed including its relative name, e.g. sys/intf/phys-[eth1/1].\n"
                }
            },
            "required": [
                "className",
                "delete",
                "dn"
            ],
            "inputProperties": {
                "childrens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:index/RestChildren:RestChildren"
                    },
                    "description": "List of children.\n"
                },
                "className": {
                    "type": "string",
                    "description": "Which class object is being created. (Make sure there is no colon in the classname)\n"
                },
                "content": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of key-value pairs that need to be passed to the Model object as parameters.\n"
                },
                "delete": {
                    "type": "boolean",
                    "description": "Delete object during destroy operation. Default value is `true`.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dn": {
                    "type": "string",
                    "description": "Distinguished name of object being managed including its relative name, e.g. sys/intf/phys-[eth1/1].\n"
                }
            },
            "requiredInputs": [
                "className",
                "dn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Rest resources.\n",
                "properties": {
                    "childrens": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:index/RestChildren:RestChildren"
                        },
                        "description": "List of children.\n"
                    },
                    "className": {
                        "type": "string",
                        "description": "Which class object is being created. (Make sure there is no colon in the classname)\n"
                    },
                    "content": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of key-value pairs that need to be passed to the Model object as parameters.\n"
                    },
                    "delete": {
                        "type": "boolean",
                        "description": "Delete object during destroy operation. Default value is `true`.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dn": {
                        "type": "string",
                        "description": "Distinguished name of object being managed including its relative name, e.g. sys/intf/phys-[eth1/1].\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/routeMapRule:RouteMapRule": {
            "description": "This resource can manage a Route-Map Rule configuration.\n\n- API Documentation: [rtmapRule](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtmap:Rule/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.RouteMapRule(\"example\", {});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.RouteMapRule(\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.RouteMapRule(\"example\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewRouteMapRule(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.RouteMapRule;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new RouteMapRule(\"example\");\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:RouteMapRule\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/routeMapRule:RouteMapRule example \"sys/rpm/rtmap-[RULE1]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Route-Map Rule name.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Route-Map Rule name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RouteMapRule resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Route-Map Rule name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/routeMapRuleEntry:RouteMapRuleEntry": {
            "description": "This resource can manage a Route-Map Rule Entry configuration.\n\n- API Documentation: [rtmapEntry](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtmap:Entry/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.RouteMapRuleEntry(\"example\", {\n    action: \"permit\",\n    order: 10,\n    ruleName: \"RULE1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.RouteMapRuleEntry(\"example\",\n    action=\"permit\",\n    order=10,\n    rule_name=\"RULE1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.RouteMapRuleEntry(\"example\", new()\n    {\n        Action = \"permit\",\n        Order = 10,\n        RuleName = \"RULE1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewRouteMapRuleEntry(ctx, \"example\", \u0026nxos.RouteMapRuleEntryArgs{\n\t\t\tAction:   pulumi.String(\"permit\"),\n\t\t\tOrder:    pulumi.Int(10),\n\t\t\tRuleName: pulumi.String(\"RULE1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.RouteMapRuleEntry;\nimport com.pulumi.nxos.RouteMapRuleEntryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new RouteMapRuleEntry(\"example\", RouteMapRuleEntryArgs.builder()        \n            .action(\"permit\")\n            .order(10)\n            .ruleName(\"RULE1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:RouteMapRuleEntry\n    properties:\n      action: permit\n      order: 10\n      ruleName: RULE1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/routeMapRuleEntry:RouteMapRuleEntry example \"sys/rpm/rtmap-[RULE1]/ent-[10]\"\n```\n\n ",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Route-Map Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                }
            },
            "required": [
                "action",
                "order",
                "ruleName"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Route-Map Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                }
            },
            "requiredInputs": [
                "order",
                "ruleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RouteMapRuleEntry resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Route-Map Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/routeMapRuleEntryMatchRoute:RouteMapRuleEntryMatchRoute": {
            "description": "This resource can manage a Match Route in  Route-Map Rule Entry configuration.\n\n- API Documentation: [rtmapMatchRtDst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtmap:MatchRtDst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.RouteMapRuleEntryMatchRoute(\"example\", {\n    order: 10,\n    ruleName: \"RULE1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.RouteMapRuleEntryMatchRoute(\"example\",\n    order=10,\n    rule_name=\"RULE1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.RouteMapRuleEntryMatchRoute(\"example\", new()\n    {\n        Order = 10,\n        RuleName = \"RULE1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewRouteMapRuleEntryMatchRoute(ctx, \"example\", \u0026nxos.RouteMapRuleEntryMatchRouteArgs{\n\t\t\tOrder:    pulumi.Int(10),\n\t\t\tRuleName: pulumi.String(\"RULE1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.RouteMapRuleEntryMatchRoute;\nimport com.pulumi.nxos.RouteMapRuleEntryMatchRouteArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new RouteMapRuleEntryMatchRoute(\"example\", RouteMapRuleEntryMatchRouteArgs.builder()        \n            .order(10)\n            .ruleName(\"RULE1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:RouteMapRuleEntryMatchRoute\n    properties:\n      order: 10\n      ruleName: RULE1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/routeMapRuleEntryMatchRoute:RouteMapRuleEntryMatchRoute example \"sys/rpm/rtmap-[RULE1]/ent-[10]/mrtdst\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                }
            },
            "required": [
                "order",
                "ruleName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                }
            },
            "requiredInputs": [
                "order",
                "ruleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RouteMapRuleEntryMatchRoute resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/routeMapRuleEntryMatchRoutePrefixList:RouteMapRuleEntryMatchRoutePrefixList": {
            "description": "This resource can manage a Match Route Prefix List in  Route-Map Rule Entry configuration.\n\n- API Documentation: [rtmapRsRtDstAtt](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtmap:RsRtDstAtt/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.RouteMapRuleEntryMatchRoutePrefixList(\"example\", {\n    order: 10,\n    prefixListDn: \"sys/rpm/pfxlistv4-[LIST1]\",\n    ruleName: \"RULE1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.RouteMapRuleEntryMatchRoutePrefixList(\"example\",\n    order=10,\n    prefix_list_dn=\"sys/rpm/pfxlistv4-[LIST1]\",\n    rule_name=\"RULE1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.RouteMapRuleEntryMatchRoutePrefixList(\"example\", new()\n    {\n        Order = 10,\n        PrefixListDn = \"sys/rpm/pfxlistv4-[LIST1]\",\n        RuleName = \"RULE1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewRouteMapRuleEntryMatchRoutePrefixList(ctx, \"example\", \u0026nxos.RouteMapRuleEntryMatchRoutePrefixListArgs{\n\t\t\tOrder:        pulumi.Int(10),\n\t\t\tPrefixListDn: pulumi.String(\"sys/rpm/pfxlistv4-[LIST1]\"),\n\t\t\tRuleName:     pulumi.String(\"RULE1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.RouteMapRuleEntryMatchRoutePrefixList;\nimport com.pulumi.nxos.RouteMapRuleEntryMatchRoutePrefixListArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new RouteMapRuleEntryMatchRoutePrefixList(\"example\", RouteMapRuleEntryMatchRoutePrefixListArgs.builder()        \n            .order(10)\n            .prefixListDn(\"sys/rpm/pfxlistv4-[LIST1]\")\n            .ruleName(\"RULE1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:RouteMapRuleEntryMatchRoutePrefixList\n    properties:\n      order: 10\n      prefixListDn: sys/rpm/pfxlistv4-[LIST1]\n      ruleName: RULE1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/routeMapRuleEntryMatchRoutePrefixList:RouteMapRuleEntryMatchRoutePrefixList example \"sys/rpm/rtmap-[RULE1]/ent-[10]/mrtdst/rsrtDstAtt-[sys/rpm/pfxlistv4-[LIST1]]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "prefixListDn": {
                    "type": "string",
                    "description": "DN of Prefix List. For example: `sys/rpm/pfxlistv4-[LIST1]`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                }
            },
            "required": [
                "order",
                "prefixListDn",
                "ruleName"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "prefixListDn": {
                    "type": "string",
                    "description": "DN of Prefix List. For example: `sys/rpm/pfxlistv4-[LIST1]`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                }
            },
            "requiredInputs": [
                "order",
                "prefixListDn",
                "ruleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RouteMapRuleEntryMatchRoutePrefixList resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                    },
                    "prefixListDn": {
                        "type": "string",
                        "description": "DN of Prefix List. For example: `sys/rpm/pfxlistv4-[LIST1]`\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/routeMapRuleEntrySetRegularCommunity:RouteMapRuleEntrySetRegularCommunity": {
            "description": "This resource can manage a Set Community configuration in a Route-Map Rule Entry.\n\n- API Documentation: [rtmapSetRegComm](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtmap:SetRegComm/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.RouteMapRuleEntrySetRegularCommunity(\"example\", {\n    additive: \"disabled\",\n    noCommunity: \"disabled\",\n    order: 10,\n    ruleName: \"RULE1\",\n    setCriteria: \"none\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.RouteMapRuleEntrySetRegularCommunity(\"example\",\n    additive=\"disabled\",\n    no_community=\"disabled\",\n    order=10,\n    rule_name=\"RULE1\",\n    set_criteria=\"none\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.RouteMapRuleEntrySetRegularCommunity(\"example\", new()\n    {\n        Additive = \"disabled\",\n        NoCommunity = \"disabled\",\n        Order = 10,\n        RuleName = \"RULE1\",\n        SetCriteria = \"none\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewRouteMapRuleEntrySetRegularCommunity(ctx, \"example\", \u0026nxos.RouteMapRuleEntrySetRegularCommunityArgs{\n\t\t\tAdditive:    pulumi.String(\"disabled\"),\n\t\t\tNoCommunity: pulumi.String(\"disabled\"),\n\t\t\tOrder:       pulumi.Int(10),\n\t\t\tRuleName:    pulumi.String(\"RULE1\"),\n\t\t\tSetCriteria: pulumi.String(\"none\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.RouteMapRuleEntrySetRegularCommunity;\nimport com.pulumi.nxos.RouteMapRuleEntrySetRegularCommunityArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new RouteMapRuleEntrySetRegularCommunity(\"example\", RouteMapRuleEntrySetRegularCommunityArgs.builder()        \n            .additive(\"disabled\")\n            .noCommunity(\"disabled\")\n            .order(10)\n            .ruleName(\"RULE1\")\n            .setCriteria(\"none\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:RouteMapRuleEntrySetRegularCommunity\n    properties:\n      additive: disabled\n      noCommunity: disabled\n      order: 10\n      ruleName: RULE1\n      setCriteria: none\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/routeMapRuleEntrySetRegularCommunity:RouteMapRuleEntrySetRegularCommunity example \"sys/rpm/rtmap-[RULE1]/ent-[10]/sregcomm\"\n```\n\n ",
            "properties": {
                "additive": {
                    "type": "string",
                    "description": "Option to add to an existing community. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "noCommunity": {
                    "type": "string",
                    "description": "Option to have no community attribute. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                },
                "setCriteria": {
                    "type": "string",
                    "description": "Operation on the current community. - Choices: `none`, `append`, `replace`, `igp`, `pre-bestpath` - Default value:\n`none`\n"
                }
            },
            "required": [
                "additive",
                "noCommunity",
                "order",
                "ruleName",
                "setCriteria"
            ],
            "inputProperties": {
                "additive": {
                    "type": "string",
                    "description": "Option to add to an existing community. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "noCommunity": {
                    "type": "string",
                    "description": "Option to have no community attribute. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                },
                "setCriteria": {
                    "type": "string",
                    "description": "Operation on the current community. - Choices: `none`, `append`, `replace`, `igp`, `pre-bestpath` - Default value:\n`none`\n"
                }
            },
            "requiredInputs": [
                "order",
                "ruleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RouteMapRuleEntrySetRegularCommunity resources.\n",
                "properties": {
                    "additive": {
                        "type": "string",
                        "description": "Option to add to an existing community. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "noCommunity": {
                        "type": "string",
                        "description": "Option to have no community attribute. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    },
                    "setCriteria": {
                        "type": "string",
                        "description": "Operation on the current community. - Choices: `none`, `append`, `replace`, `igp`, `pre-bestpath` - Default value:\n`none`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/routeMapRuleEntrySetRegularCommunityItem:RouteMapRuleEntrySetRegularCommunityItem": {
            "description": "This resource can manage a Set Community item in a Route-Map Rule Entry.\n\n- API Documentation: [rtregcomItem](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtregcom:Item/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.RouteMapRuleEntrySetRegularCommunityItem(\"example\", {\n    community: \"regular:as2-nn2:65001:123\",\n    order: 10,\n    ruleName: \"RULE1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.RouteMapRuleEntrySetRegularCommunityItem(\"example\",\n    community=\"regular:as2-nn2:65001:123\",\n    order=10,\n    rule_name=\"RULE1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.RouteMapRuleEntrySetRegularCommunityItem(\"example\", new()\n    {\n        Community = \"regular:as2-nn2:65001:123\",\n        Order = 10,\n        RuleName = \"RULE1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewRouteMapRuleEntrySetRegularCommunityItem(ctx, \"example\", \u0026nxos.RouteMapRuleEntrySetRegularCommunityItemArgs{\n\t\t\tCommunity: pulumi.String(\"regular:as2-nn2:65001:123\"),\n\t\t\tOrder:     pulumi.Int(10),\n\t\t\tRuleName:  pulumi.String(\"RULE1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.RouteMapRuleEntrySetRegularCommunityItem;\nimport com.pulumi.nxos.RouteMapRuleEntrySetRegularCommunityItemArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new RouteMapRuleEntrySetRegularCommunityItem(\"example\", RouteMapRuleEntrySetRegularCommunityItemArgs.builder()        \n            .community(\"regular:as2-nn2:65001:123\")\n            .order(10)\n            .ruleName(\"RULE1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:RouteMapRuleEntrySetRegularCommunityItem\n    properties:\n      community: regular:as2-nn2:65001:123\n      order: 10\n      ruleName: RULE1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/routeMapRuleEntrySetRegularCommunityItem:RouteMapRuleEntrySetRegularCommunityItem example \"sys/rpm/rtmap-[RULE1]/ent-[10]/sregcomm/item-[regular:as2-nn2:65001:123]\"\n```\n\n ",
            "properties": {
                "community": {
                    "type": "string",
                    "description": "Set Community.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                }
            },
            "required": [
                "community",
                "order",
                "ruleName"
            ],
            "inputProperties": {
                "community": {
                    "type": "string",
                    "description": "Set Community.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Route Map rule name.\n"
                }
            },
            "requiredInputs": [
                "community",
                "order",
                "ruleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RouteMapRuleEntrySetRegularCommunityItem resources.\n",
                "properties": {
                    "community": {
                        "type": "string",
                        "description": "Set Community.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order. - Range: `0`-`65535`\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/spanningTreeInterface:SpanningTreeInterface": {
            "description": "This resource can manage the Spanning Tree interface configuration.\n\n- API Documentation: [stpIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Discovery%20Protocols/stp:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.SpanningTreeInterface(\"example\", {\n    adminState: \"enabled\",\n    bpduFilter: \"enable\",\n    bpduGuard: \"enable\",\n    cost: 100,\n    guard: \"root\",\n    interfaceId: \"eth1/9\",\n    linkType: \"p2p\",\n    mode: \"edge\",\n    priority: 200,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.SpanningTreeInterface(\"example\",\n    admin_state=\"enabled\",\n    bpdu_filter=\"enable\",\n    bpdu_guard=\"enable\",\n    cost=100,\n    guard=\"root\",\n    interface_id=\"eth1/9\",\n    link_type=\"p2p\",\n    mode=\"edge\",\n    priority=200)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.SpanningTreeInterface(\"example\", new()\n    {\n        AdminState = \"enabled\",\n        BpduFilter = \"enable\",\n        BpduGuard = \"enable\",\n        Cost = 100,\n        Guard = \"root\",\n        InterfaceId = \"eth1/9\",\n        LinkType = \"p2p\",\n        Mode = \"edge\",\n        Priority = 200,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewSpanningTreeInterface(ctx, \"example\", \u0026nxos.SpanningTreeInterfaceArgs{\n\t\t\tAdminState:  pulumi.String(\"enabled\"),\n\t\t\tBpduFilter:  pulumi.String(\"enable\"),\n\t\t\tBpduGuard:   pulumi.String(\"enable\"),\n\t\t\tCost:        pulumi.Int(100),\n\t\t\tGuard:       pulumi.String(\"root\"),\n\t\t\tInterfaceId: pulumi.String(\"eth1/9\"),\n\t\t\tLinkType:    pulumi.String(\"p2p\"),\n\t\t\tMode:        pulumi.String(\"edge\"),\n\t\t\tPriority:    pulumi.Int(200),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.SpanningTreeInterface;\nimport com.pulumi.nxos.SpanningTreeInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new SpanningTreeInterface(\"example\", SpanningTreeInterfaceArgs.builder()        \n            .adminState(\"enabled\")\n            .bpduFilter(\"enable\")\n            .bpduGuard(\"enable\")\n            .cost(100)\n            .guard(\"root\")\n            .interfaceId(\"eth1/9\")\n            .linkType(\"p2p\")\n            .mode(\"edge\")\n            .priority(200)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:SpanningTreeInterface\n    properties:\n      adminState: enabled\n      bpduFilter: enable\n      bpduGuard: enable\n      cost: 100\n      guard: root\n      interfaceId: eth1/9\n      linkType: p2p\n      mode: edge\n      priority: 200\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/spanningTreeInterface:SpanningTreeInterface example \"sys/stp/inst/if-[eth1/9]\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "The administrative state of the object or policy. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "bpduFilter": {
                    "type": "string",
                    "description": "BPDU filter mode. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "bpduGuard": {
                    "type": "string",
                    "description": "BPDU guard mode. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "cost": {
                    "type": "integer",
                    "description": "Port path cost. - Range: `0`-`200000000` - Default value: `0`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "guard": {
                    "type": "string",
                    "description": "Guard mode. - Choices: `default`, `root`, `loop`, `none` - Default value: `default`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "linkType": {
                    "type": "string",
                    "description": "Link type. - Choices: `auto`, `p2p`, `shared` - Default value: `auto`\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Port mode. - Choices: `default`, `edge`, `network`, `normal`, `trunk` - Default value: `default`\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Port priority. - Range: `0`-`224` - Default value: `128`\n"
                }
            },
            "required": [
                "adminState",
                "bpduFilter",
                "bpduGuard",
                "cost",
                "guard",
                "interfaceId",
                "linkType",
                "mode",
                "priority"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "The administrative state of the object or policy. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "bpduFilter": {
                    "type": "string",
                    "description": "BPDU filter mode. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "bpduGuard": {
                    "type": "string",
                    "description": "BPDU guard mode. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "cost": {
                    "type": "integer",
                    "description": "Port path cost. - Range: `0`-`200000000` - Default value: `0`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "guard": {
                    "type": "string",
                    "description": "Guard mode. - Choices: `default`, `root`, `loop`, `none` - Default value: `default`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                },
                "linkType": {
                    "type": "string",
                    "description": "Link type. - Choices: `auto`, `p2p`, `shared` - Default value: `auto`\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Port mode. - Choices: `default`, `edge`, `network`, `normal`, `trunk` - Default value: `default`\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Port priority. - Range: `0`-`224` - Default value: `128`\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpanningTreeInterface resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "The administrative state of the object or policy. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "bpduFilter": {
                        "type": "string",
                        "description": "BPDU filter mode. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                    },
                    "bpduGuard": {
                        "type": "string",
                        "description": "BPDU guard mode. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                    },
                    "cost": {
                        "type": "integer",
                        "description": "Port path cost. - Range: `0`-`200000000` - Default value: `0`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "guard": {
                        "type": "string",
                        "description": "Guard mode. - Choices: `default`, `root`, `loop`, `none` - Default value: `default`\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "linkType": {
                        "type": "string",
                        "description": "Link type. - Choices: `auto`, `p2p`, `shared` - Default value: `auto`\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Port mode. - Choices: `default`, `edge`, `network`, `normal`, `trunk` - Default value: `default`\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Port priority. - Range: `0`-`224` - Default value: `128`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/subinterface:Subinterface": {
            "description": "This resource can manage a subinterface.\n\n- API Documentation: [l3EncRtdIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/l3:EncRtdIf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Subinterface(\"example\", {\n    adminState: \"down\",\n    bandwidth: 1000,\n    delay: 10,\n    description: \"My Description\",\n    encap: \"vlan-124\",\n    interfaceId: \"eth1/10.124\",\n    linkLogging: \"enable\",\n    medium: \"broadcast\",\n    mtu: 1500,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Subinterface(\"example\",\n    admin_state=\"down\",\n    bandwidth=1000,\n    delay=10,\n    description=\"My Description\",\n    encap=\"vlan-124\",\n    interface_id=\"eth1/10.124\",\n    link_logging=\"enable\",\n    medium=\"broadcast\",\n    mtu=1500)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Subinterface(\"example\", new()\n    {\n        AdminState = \"down\",\n        Bandwidth = 1000,\n        Delay = 10,\n        Description = \"My Description\",\n        Encap = \"vlan-124\",\n        InterfaceId = \"eth1/10.124\",\n        LinkLogging = \"enable\",\n        Medium = \"broadcast\",\n        Mtu = 1500,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewSubinterface(ctx, \"example\", \u0026nxos.SubinterfaceArgs{\n\t\t\tAdminState:  pulumi.String(\"down\"),\n\t\t\tBandwidth:   pulumi.Int(1000),\n\t\t\tDelay:       pulumi.Int(10),\n\t\t\tDescription: pulumi.String(\"My Description\"),\n\t\t\tEncap:       pulumi.String(\"vlan-124\"),\n\t\t\tInterfaceId: pulumi.String(\"eth1/10.124\"),\n\t\t\tLinkLogging: pulumi.String(\"enable\"),\n\t\t\tMedium:      pulumi.String(\"broadcast\"),\n\t\t\tMtu:         pulumi.Int(1500),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Subinterface;\nimport com.pulumi.nxos.SubinterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Subinterface(\"example\", SubinterfaceArgs.builder()        \n            .adminState(\"down\")\n            .bandwidth(1000)\n            .delay(10)\n            .description(\"My Description\")\n            .encap(\"vlan-124\")\n            .interfaceId(\"eth1/10.124\")\n            .linkLogging(\"enable\")\n            .medium(\"broadcast\")\n            .mtu(1500)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Subinterface\n    properties:\n      adminState: down\n      bandwidth: 1000\n      delay: 10\n      description: My Description\n      encap: vlan-124\n      interfaceId: eth1/10.124\n      linkLogging: enable\n      medium: broadcast\n      mtu: 1500\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/subinterface:Subinterface example \"sys/intf/encrtd-[eth1/10.124]\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "bandwidth": {
                    "type": "integer",
                    "description": "Specifies the administrative port bandwidth. - Range: `0`-`3200000000` - Default value: `0`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "Specifies the administrative port delay. - Range: `1`-`16777215` - Default value: `1`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Subinterface encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1.10`.\n"
                },
                "linkLogging": {
                    "type": "string",
                    "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "medium": {
                    "type": "string",
                    "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                }
            },
            "required": [
                "adminState",
                "bandwidth",
                "delay",
                "encap",
                "interfaceId",
                "linkLogging",
                "medium",
                "mtu"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "bandwidth": {
                    "type": "integer",
                    "description": "Specifies the administrative port bandwidth. - Range: `0`-`3200000000` - Default value: `0`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "Specifies the administrative port delay. - Range: `1`-`16777215` - Default value: `1`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Subinterface encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1.10`.\n"
                },
                "linkLogging": {
                    "type": "string",
                    "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                },
                "medium": {
                    "type": "string",
                    "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Subinterface resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `up`, `down` - Default value: `up`\n"
                    },
                    "bandwidth": {
                        "type": "integer",
                        "description": "Specifies the administrative port bandwidth. - Range: `0`-`3200000000` - Default value: `0`\n"
                    },
                    "delay": {
                        "type": "integer",
                        "description": "Specifies the administrative port delay. - Range: `1`-`16777215` - Default value: `1`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Subinterface encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`. - Default value: `unknown`\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1.10`.\n"
                    },
                    "linkLogging": {
                        "type": "string",
                        "description": "Administrative link logging. - Choices: `default`, `enable`, `disable` - Default value: `default`\n"
                    },
                    "medium": {
                        "type": "string",
                        "description": "The administrative port medium type. - Choices: `broadcast`, `p2p` - Default value: `broadcast`\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/subinterfaceVrf:SubinterfaceVrf": {
            "description": "This resource can manage a subinterface VRF association.\n\n- API Documentation: [nwRtVrfMbr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/nw:RtVrfMbr/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.SubinterfaceVrf(\"example\", {\n    interfaceId: \"eth1/10.124\",\n    vrfDn: \"sys/inst-VRF123\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.SubinterfaceVrf(\"example\",\n    interface_id=\"eth1/10.124\",\n    vrf_dn=\"sys/inst-VRF123\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.SubinterfaceVrf(\"example\", new()\n    {\n        InterfaceId = \"eth1/10.124\",\n        VrfDn = \"sys/inst-VRF123\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewSubinterfaceVrf(ctx, \"example\", \u0026nxos.SubinterfaceVrfArgs{\n\t\t\tInterfaceId: pulumi.String(\"eth1/10.124\"),\n\t\t\tVrfDn:       pulumi.String(\"sys/inst-VRF123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.SubinterfaceVrf;\nimport com.pulumi.nxos.SubinterfaceVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new SubinterfaceVrf(\"example\", SubinterfaceVrfArgs.builder()        \n            .interfaceId(\"eth1/10.124\")\n            .vrfDn(\"sys/inst-VRF123\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:SubinterfaceVrf\n    properties:\n      interfaceId: eth1/10.124\n      vrfDn: sys/inst-VRF123\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/subinterfaceVrf:SubinterfaceVrf example \"sys/intf/encrtd-[eth1/10.124]/rtvrfMbr\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1.10`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "required": [
                "interfaceId",
                "vrfDn"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1.10`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "vrfDn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SubinterfaceVrf resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1.10`.\n"
                    },
                    "vrfDn": {
                        "type": "string",
                        "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/sviInterface:SviInterface": {
            "description": "This resource can manage an SVI interface.\n\n- API Documentation: [sviIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Interfaces/svi:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.SviInterface(\"example\", {\n    adminState: \"down\",\n    bandwidth: 1000,\n    delay: 10,\n    description: \"My Description\",\n    interfaceId: \"vlan293\",\n    medium: \"bcast\",\n    mtu: 9216,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.SviInterface(\"example\",\n    admin_state=\"down\",\n    bandwidth=1000,\n    delay=10,\n    description=\"My Description\",\n    interface_id=\"vlan293\",\n    medium=\"bcast\",\n    mtu=9216)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.SviInterface(\"example\", new()\n    {\n        AdminState = \"down\",\n        Bandwidth = 1000,\n        Delay = 10,\n        Description = \"My Description\",\n        InterfaceId = \"vlan293\",\n        Medium = \"bcast\",\n        Mtu = 9216,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewSviInterface(ctx, \"example\", \u0026nxos.SviInterfaceArgs{\n\t\t\tAdminState:  pulumi.String(\"down\"),\n\t\t\tBandwidth:   pulumi.Int(1000),\n\t\t\tDelay:       pulumi.Int(10),\n\t\t\tDescription: pulumi.String(\"My Description\"),\n\t\t\tInterfaceId: pulumi.String(\"vlan293\"),\n\t\t\tMedium:      pulumi.String(\"bcast\"),\n\t\t\tMtu:         pulumi.Int(9216),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.SviInterface;\nimport com.pulumi.nxos.SviInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new SviInterface(\"example\", SviInterfaceArgs.builder()        \n            .adminState(\"down\")\n            .bandwidth(1000)\n            .delay(10)\n            .description(\"My Description\")\n            .interfaceId(\"vlan293\")\n            .medium(\"bcast\")\n            .mtu(9216)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:SviInterface\n    properties:\n      adminState: down\n      bandwidth: 1000\n      delay: 10\n      description: My Description\n      interfaceId: vlan293\n      medium: bcast\n      mtu: 9216\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/sviInterface:SviInterface example \"sys/intf/svi-[vlan293]\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "bandwidth": {
                    "type": "integer",
                    "description": "Specifies the administrative port bandwidth. - Range: `1`-`400000000` - Default value: `1000000`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "Specifies the administrative port delay. - Range: `1`-`16777215` - Default value: `1`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `vlan100`.\n"
                },
                "medium": {
                    "type": "string",
                    "description": "The administrative port medium type. - Choices: `bcast`, `p2p` - Default value: `bcast`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                }
            },
            "required": [
                "adminState",
                "bandwidth",
                "delay",
                "interfaceId",
                "medium",
                "mtu"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                },
                "bandwidth": {
                    "type": "integer",
                    "description": "Specifies the administrative port bandwidth. - Range: `1`-`400000000` - Default value: `1000000`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "Specifies the administrative port delay. - Range: `1`-`16777215` - Default value: `1`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `vlan100`.\n"
                },
                "medium": {
                    "type": "string",
                    "description": "The administrative port medium type. - Choices: `bcast`, `p2p` - Default value: `bcast`\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                }
            },
            "requiredInputs": [
                "interfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SviInterface resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative port state. - Choices: `up`, `down` - Default value: `up`\n"
                    },
                    "bandwidth": {
                        "type": "integer",
                        "description": "Specifies the administrative port bandwidth. - Range: `1`-`400000000` - Default value: `1000000`\n"
                    },
                    "delay": {
                        "type": "integer",
                        "description": "Specifies the administrative port delay. - Range: `1`-`16777215` - Default value: `1`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `vlan100`.\n"
                    },
                    "medium": {
                        "type": "string",
                        "description": "The administrative port medium type. - Choices: `bcast`, `p2p` - Default value: `bcast`\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "Administrative port MTU. - Range: `576`-`9216` - Default value: `1500`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/sviInterfaceVrf:SviInterfaceVrf": {
            "description": "This resource can manage an SVI interface VRF association.\n\n- API Documentation: [nwRtVrfMbr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/nw:RtVrfMbr/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.SviInterfaceVrf(\"example\", {\n    interfaceId: \"vlan293\",\n    vrfDn: \"sys/inst-VRF123\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.SviInterfaceVrf(\"example\",\n    interface_id=\"vlan293\",\n    vrf_dn=\"sys/inst-VRF123\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.SviInterfaceVrf(\"example\", new()\n    {\n        InterfaceId = \"vlan293\",\n        VrfDn = \"sys/inst-VRF123\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewSviInterfaceVrf(ctx, \"example\", \u0026nxos.SviInterfaceVrfArgs{\n\t\t\tInterfaceId: pulumi.String(\"vlan293\"),\n\t\t\tVrfDn:       pulumi.String(\"sys/inst-VRF123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.SviInterfaceVrf;\nimport com.pulumi.nxos.SviInterfaceVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new SviInterfaceVrf(\"example\", SviInterfaceVrfArgs.builder()        \n            .interfaceId(\"vlan293\")\n            .vrfDn(\"sys/inst-VRF123\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:SviInterfaceVrf\n    properties:\n      interfaceId: vlan293\n      vrfDn: sys/inst-VRF123\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/sviInterfaceVrf:SviInterfaceVrf example \"sys/intf/svi-[vlan293]/rtvrfMbr\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `vlan100`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "required": [
                "interfaceId",
                "vrfDn"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "Must match first field in the output of `show intf brief`. Example: `vlan100`.\n"
                },
                "vrfDn": {
                    "type": "string",
                    "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "vrfDn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SviInterfaceVrf resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `vlan100`.\n"
                    },
                    "vrfDn": {
                        "type": "string",
                        "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/system:System": {
            "description": "This resource can manage the system configuration.\n\n- API Documentation: [topSystem](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/top:System/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.System(\"example\", {});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.System(\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.System(\"example\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewSystem(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.System;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new System(\"example\");\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:System\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/system:System example \"sys\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The system name (hostname).\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The system name (hostname).\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering System resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The system name (hostname).\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/vpcDomain:VpcDomain": {
            "description": "This resource can manage the vPC domain configuration.\n\n- API Documentation: [vpcDom](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/vpc:Dom/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.VpcDomain(\"example\", {\n    adminState: \"enabled\",\n    autoRecovery: \"enabled\",\n    autoRecoveryInterval: 480,\n    delayRestoreOrphanPort: 10,\n    delayRestoreSvi: 20,\n    delayRestoreVpc: 60,\n    domainId: 100,\n    dscp: 0,\n    fastConvergence: \"enabled\",\n    gracefulConsistencyCheck: \"disabled\",\n    l3PeerRouter: \"enabled\",\n    l3PeerRouterSyslog: \"enabled\",\n    l3PeerRouterSyslogInterval: 3000,\n    peerGateway: \"enabled\",\n    peerIp: \"1.2.3.4\",\n    peerSwitch: \"enabled\",\n    rolePriority: 100,\n    sysMac: \"01:01:01:01:01:01\",\n    systemPriority: 100,\n    track: 10,\n    virtualIp: \"1.1.1.1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.VpcDomain(\"example\",\n    admin_state=\"enabled\",\n    auto_recovery=\"enabled\",\n    auto_recovery_interval=480,\n    delay_restore_orphan_port=10,\n    delay_restore_svi=20,\n    delay_restore_vpc=60,\n    domain_id=100,\n    dscp=0,\n    fast_convergence=\"enabled\",\n    graceful_consistency_check=\"disabled\",\n    l3_peer_router=\"enabled\",\n    l3_peer_router_syslog=\"enabled\",\n    l3_peer_router_syslog_interval=3000,\n    peer_gateway=\"enabled\",\n    peer_ip=\"1.2.3.4\",\n    peer_switch=\"enabled\",\n    role_priority=100,\n    sys_mac=\"01:01:01:01:01:01\",\n    system_priority=100,\n    track=10,\n    virtual_ip=\"1.1.1.1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.VpcDomain(\"example\", new()\n    {\n        AdminState = \"enabled\",\n        AutoRecovery = \"enabled\",\n        AutoRecoveryInterval = 480,\n        DelayRestoreOrphanPort = 10,\n        DelayRestoreSvi = 20,\n        DelayRestoreVpc = 60,\n        DomainId = 100,\n        Dscp = 0,\n        FastConvergence = \"enabled\",\n        GracefulConsistencyCheck = \"disabled\",\n        L3PeerRouter = \"enabled\",\n        L3PeerRouterSyslog = \"enabled\",\n        L3PeerRouterSyslogInterval = 3000,\n        PeerGateway = \"enabled\",\n        PeerIp = \"1.2.3.4\",\n        PeerSwitch = \"enabled\",\n        RolePriority = 100,\n        SysMac = \"01:01:01:01:01:01\",\n        SystemPriority = 100,\n        Track = 10,\n        VirtualIp = \"1.1.1.1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewVpcDomain(ctx, \"example\", \u0026nxos.VpcDomainArgs{\n\t\t\tAdminState:                 pulumi.String(\"enabled\"),\n\t\t\tAutoRecovery:               pulumi.String(\"enabled\"),\n\t\t\tAutoRecoveryInterval:       pulumi.Int(480),\n\t\t\tDelayRestoreOrphanPort:     pulumi.Int(10),\n\t\t\tDelayRestoreSvi:            pulumi.Int(20),\n\t\t\tDelayRestoreVpc:            pulumi.Int(60),\n\t\t\tDomainId:                   pulumi.Int(100),\n\t\t\tDscp:                       pulumi.Int(0),\n\t\t\tFastConvergence:            pulumi.String(\"enabled\"),\n\t\t\tGracefulConsistencyCheck:   pulumi.String(\"disabled\"),\n\t\t\tL3PeerRouter:               pulumi.String(\"enabled\"),\n\t\t\tL3PeerRouterSyslog:         pulumi.String(\"enabled\"),\n\t\t\tL3PeerRouterSyslogInterval: pulumi.Int(3000),\n\t\t\tPeerGateway:                pulumi.String(\"enabled\"),\n\t\t\tPeerIp:                     pulumi.String(\"1.2.3.4\"),\n\t\t\tPeerSwitch:                 pulumi.String(\"enabled\"),\n\t\t\tRolePriority:               pulumi.Int(100),\n\t\t\tSysMac:                     pulumi.String(\"01:01:01:01:01:01\"),\n\t\t\tSystemPriority:             pulumi.Int(100),\n\t\t\tTrack:                      pulumi.Int(10),\n\t\t\tVirtualIp:                  pulumi.String(\"1.1.1.1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.VpcDomain;\nimport com.pulumi.nxos.VpcDomainArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new VpcDomain(\"example\", VpcDomainArgs.builder()        \n            .adminState(\"enabled\")\n            .autoRecovery(\"enabled\")\n            .autoRecoveryInterval(480)\n            .delayRestoreOrphanPort(10)\n            .delayRestoreSvi(20)\n            .delayRestoreVpc(60)\n            .domainId(100)\n            .dscp(0)\n            .fastConvergence(\"enabled\")\n            .gracefulConsistencyCheck(\"disabled\")\n            .l3PeerRouter(\"enabled\")\n            .l3PeerRouterSyslog(\"enabled\")\n            .l3PeerRouterSyslogInterval(3000)\n            .peerGateway(\"enabled\")\n            .peerIp(\"1.2.3.4\")\n            .peerSwitch(\"enabled\")\n            .rolePriority(100)\n            .sysMac(\"01:01:01:01:01:01\")\n            .systemPriority(100)\n            .track(10)\n            .virtualIp(\"1.1.1.1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:VpcDomain\n    properties:\n      adminState: enabled\n      autoRecovery: enabled\n      autoRecoveryInterval: 480\n      delayRestoreOrphanPort: 10\n      delayRestoreSvi: 20\n      delayRestoreVpc: 60\n      domainId: 100\n      dscp: 0\n      fastConvergence: enabled\n      gracefulConsistencyCheck: disabled\n      l3PeerRouter: enabled\n      l3PeerRouterSyslog: enabled\n      l3PeerRouterSyslogInterval: 3000\n      peerGateway: enabled\n      peerIp: 1.2.3.4\n      peerSwitch: enabled\n      rolePriority: 100\n      sysMac: 01:01:01:01:01:01\n      systemPriority: 100\n      track: 10\n      virtualIp: 1.1.1.1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/vpcDomain:VpcDomain example \"sys/vpc/inst/dom\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "vPC suspend locally. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "autoRecovery": {
                    "type": "string",
                    "description": "Auto Recovery. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "autoRecoveryInterval": {
                    "type": "integer",
                    "description": "Auto Recovery interval. - Range: `60`-`3600` - Default value: `240`\n"
                },
                "delayRestoreOrphanPort": {
                    "type": "integer",
                    "description": "Delay restore for orphan ports. - Range: `0`-`300` - Default value: `0`\n"
                },
                "delayRestoreSvi": {
                    "type": "integer",
                    "description": "Delay restore for SVI. - Range: `1`-`3600` - Default value: `10`\n"
                },
                "delayRestoreVpc": {
                    "type": "integer",
                    "description": "Delay restore for vPC links. - Range: `1`-`3600` - Default value: `30`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "domainId": {
                    "type": "integer",
                    "description": "Domain id. - Range: `1`-`1000`\n"
                },
                "dscp": {
                    "type": "integer",
                    "description": "DSCP. - Range: `0`-`63` - Default value: `0`\n"
                },
                "fastConvergence": {
                    "type": "string",
                    "description": "Fast Convergence. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "gracefulConsistencyCheck": {
                    "type": "string",
                    "description": "Graceful Type-1 Consistency Check. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "l3PeerRouter": {
                    "type": "string",
                    "description": "L3 Peer Router. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "l3PeerRouterSyslog": {
                    "type": "string",
                    "description": "L3 Peer Router Syslog. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "l3PeerRouterSyslogInterval": {
                    "type": "integer",
                    "description": "L3 Peer Router Syslog Interval. - Range: `1`-`3600` - Default value: `3600`\n"
                },
                "peerGateway": {
                    "type": "string",
                    "description": "Peer Gateway. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "peerIp": {
                    "type": "string",
                    "description": "vPC peer IP address.\n"
                },
                "peerSwitch": {
                    "type": "string",
                    "description": "vPC pair switches. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "rolePriority": {
                    "type": "integer",
                    "description": "Role priority. - Range: `1`-`65535` - Default value: `32667`\n"
                },
                "sysMac": {
                    "type": "string",
                    "description": "System MAC.\n"
                },
                "systemPriority": {
                    "type": "integer",
                    "description": "System priority. - Range: `1`-`65535` - Default value: `32667`\n"
                },
                "track": {
                    "type": "integer",
                    "description": "Tracking object to suspend vPC if object goes down. - Range: `0`-`500` - Default value: `0`\n"
                },
                "virtualIp": {
                    "type": "string",
                    "description": "vPC virtual IP address (vIP).\n"
                }
            },
            "required": [
                "adminState",
                "autoRecovery",
                "autoRecoveryInterval",
                "delayRestoreOrphanPort",
                "delayRestoreSvi",
                "delayRestoreVpc",
                "domainId",
                "dscp",
                "fastConvergence",
                "gracefulConsistencyCheck",
                "l3PeerRouter",
                "l3PeerRouterSyslog",
                "l3PeerRouterSyslogInterval",
                "peerGateway",
                "peerSwitch",
                "rolePriority",
                "systemPriority",
                "track"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "vPC suspend locally. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "autoRecovery": {
                    "type": "string",
                    "description": "Auto Recovery. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "autoRecoveryInterval": {
                    "type": "integer",
                    "description": "Auto Recovery interval. - Range: `60`-`3600` - Default value: `240`\n"
                },
                "delayRestoreOrphanPort": {
                    "type": "integer",
                    "description": "Delay restore for orphan ports. - Range: `0`-`300` - Default value: `0`\n"
                },
                "delayRestoreSvi": {
                    "type": "integer",
                    "description": "Delay restore for SVI. - Range: `1`-`3600` - Default value: `10`\n"
                },
                "delayRestoreVpc": {
                    "type": "integer",
                    "description": "Delay restore for vPC links. - Range: `1`-`3600` - Default value: `30`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "domainId": {
                    "type": "integer",
                    "description": "Domain id. - Range: `1`-`1000`\n"
                },
                "dscp": {
                    "type": "integer",
                    "description": "DSCP. - Range: `0`-`63` - Default value: `0`\n"
                },
                "fastConvergence": {
                    "type": "string",
                    "description": "Fast Convergence. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "gracefulConsistencyCheck": {
                    "type": "string",
                    "description": "Graceful Type-1 Consistency Check. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "l3PeerRouter": {
                    "type": "string",
                    "description": "L3 Peer Router. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "l3PeerRouterSyslog": {
                    "type": "string",
                    "description": "L3 Peer Router Syslog. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "l3PeerRouterSyslogInterval": {
                    "type": "integer",
                    "description": "L3 Peer Router Syslog Interval. - Range: `1`-`3600` - Default value: `3600`\n"
                },
                "peerGateway": {
                    "type": "string",
                    "description": "Peer Gateway. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "peerIp": {
                    "type": "string",
                    "description": "vPC peer IP address.\n"
                },
                "peerSwitch": {
                    "type": "string",
                    "description": "vPC pair switches. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                },
                "rolePriority": {
                    "type": "integer",
                    "description": "Role priority. - Range: `1`-`65535` - Default value: `32667`\n"
                },
                "sysMac": {
                    "type": "string",
                    "description": "System MAC.\n"
                },
                "systemPriority": {
                    "type": "integer",
                    "description": "System priority. - Range: `1`-`65535` - Default value: `32667`\n"
                },
                "track": {
                    "type": "integer",
                    "description": "Tracking object to suspend vPC if object goes down. - Range: `0`-`500` - Default value: `0`\n"
                },
                "virtualIp": {
                    "type": "string",
                    "description": "vPC virtual IP address (vIP).\n"
                }
            },
            "requiredInputs": [
                "domainId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcDomain resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "vPC suspend locally. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "autoRecovery": {
                        "type": "string",
                        "description": "Auto Recovery. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "autoRecoveryInterval": {
                        "type": "integer",
                        "description": "Auto Recovery interval. - Range: `60`-`3600` - Default value: `240`\n"
                    },
                    "delayRestoreOrphanPort": {
                        "type": "integer",
                        "description": "Delay restore for orphan ports. - Range: `0`-`300` - Default value: `0`\n"
                    },
                    "delayRestoreSvi": {
                        "type": "integer",
                        "description": "Delay restore for SVI. - Range: `1`-`3600` - Default value: `10`\n"
                    },
                    "delayRestoreVpc": {
                        "type": "integer",
                        "description": "Delay restore for vPC links. - Range: `1`-`3600` - Default value: `30`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "domainId": {
                        "type": "integer",
                        "description": "Domain id. - Range: `1`-`1000`\n"
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "DSCP. - Range: `0`-`63` - Default value: `0`\n"
                    },
                    "fastConvergence": {
                        "type": "string",
                        "description": "Fast Convergence. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "gracefulConsistencyCheck": {
                        "type": "string",
                        "description": "Graceful Type-1 Consistency Check. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "l3PeerRouter": {
                        "type": "string",
                        "description": "L3 Peer Router. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "l3PeerRouterSyslog": {
                        "type": "string",
                        "description": "L3 Peer Router Syslog. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "l3PeerRouterSyslogInterval": {
                        "type": "integer",
                        "description": "L3 Peer Router Syslog Interval. - Range: `1`-`3600` - Default value: `3600`\n"
                    },
                    "peerGateway": {
                        "type": "string",
                        "description": "Peer Gateway. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "peerIp": {
                        "type": "string",
                        "description": "vPC peer IP address.\n"
                    },
                    "peerSwitch": {
                        "type": "string",
                        "description": "vPC pair switches. - Choices: `enabled`, `disabled` - Default value: `disabled`\n"
                    },
                    "rolePriority": {
                        "type": "integer",
                        "description": "Role priority. - Range: `1`-`65535` - Default value: `32667`\n"
                    },
                    "sysMac": {
                        "type": "string",
                        "description": "System MAC.\n"
                    },
                    "systemPriority": {
                        "type": "integer",
                        "description": "System priority. - Range: `1`-`65535` - Default value: `32667`\n"
                    },
                    "track": {
                        "type": "integer",
                        "description": "Tracking object to suspend vPC if object goes down. - Range: `0`-`500` - Default value: `0`\n"
                    },
                    "virtualIp": {
                        "type": "string",
                        "description": "vPC virtual IP address (vIP).\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/vpcInstance:VpcInstance": {
            "description": "This resource can manage the vPC instance configuration.\n\n- API Documentation: [vpcInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/vpc:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.VpcInstance(\"example\", {adminState: \"enabled\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.VpcInstance(\"example\", admin_state=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.VpcInstance(\"example\", new()\n    {\n        AdminState = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewVpcInstance(ctx, \"example\", \u0026nxos.VpcInstanceArgs{\n\t\t\tAdminState: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.VpcInstance;\nimport com.pulumi.nxos.VpcInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new VpcInstance(\"example\", VpcInstanceArgs.builder()        \n            .adminState(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:VpcInstance\n    properties:\n      adminState: enabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/vpcInstance:VpcInstance example \"sys/vpc/inst\"\n```\n\n ",
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "adminState"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcInstance resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state. - Choices: `enabled`, `disabled` - Default value: `enabled`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/vpcInterface:VpcInterface": {
            "description": "This resource can manage the vPC interface configuration.\n\n- API Documentation: [vpcIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/vpc:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.VpcInterface(\"example\", {\n    portChannelInterfaceDn: \"sys/intf/aggr-[po1]\",\n    vpcInterfaceId: 1,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.VpcInterface(\"example\",\n    port_channel_interface_dn=\"sys/intf/aggr-[po1]\",\n    vpc_interface_id=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.VpcInterface(\"example\", new()\n    {\n        PortChannelInterfaceDn = \"sys/intf/aggr-[po1]\",\n        VpcInterfaceId = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewVpcInterface(ctx, \"example\", \u0026nxos.VpcInterfaceArgs{\n\t\t\tPortChannelInterfaceDn: pulumi.String(\"sys/intf/aggr-[po1]\"),\n\t\t\tVpcInterfaceId:         pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.VpcInterface;\nimport com.pulumi.nxos.VpcInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new VpcInterface(\"example\", VpcInterfaceArgs.builder()        \n            .portChannelInterfaceDn(\"sys/intf/aggr-[po1]\")\n            .vpcInterfaceId(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:VpcInterface\n    properties:\n      portChannelInterfaceDn: sys/intf/aggr-[po1]\n      vpcInterfaceId: 1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/vpcInterface:VpcInterface example \"sys/vpc/inst/dom/if-[1]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "portChannelInterfaceDn": {
                    "type": "string",
                    "description": "Port-channel interface DN.\n"
                },
                "vpcInterfaceId": {
                    "type": "integer",
                    "description": "The vPC interface identifier. - Range: `1`-`16384`\n"
                }
            },
            "required": [
                "vpcInterfaceId"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "portChannelInterfaceDn": {
                    "type": "string",
                    "description": "Port-channel interface DN.\n"
                },
                "vpcInterfaceId": {
                    "type": "integer",
                    "description": "The vPC interface identifier. - Range: `1`-`16384`\n"
                }
            },
            "requiredInputs": [
                "vpcInterfaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcInterface resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "portChannelInterfaceDn": {
                        "type": "string",
                        "description": "Port-channel interface DN.\n"
                    },
                    "vpcInterfaceId": {
                        "type": "integer",
                        "description": "The vPC interface identifier. - Range: `1`-`16384`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/vrf:Vrf": {
            "description": "This resource can manage a VRF.\n\n- API Documentation: [l3Inst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/l3:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.Vrf(\"example\", {\n    description: \"My VRF1 Description\",\n    encap: \"vxlan-103901\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.Vrf(\"example\",\n    description=\"My VRF1 Description\",\n    encap=\"vxlan-103901\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.Vrf(\"example\", new()\n    {\n        Description = \"My VRF1 Description\",\n        Encap = \"vxlan-103901\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewVrf(ctx, \"example\", \u0026nxos.VrfArgs{\n\t\t\tDescription: pulumi.String(\"My VRF1 Description\"),\n\t\t\tEncap:       pulumi.String(\"vxlan-103901\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.Vrf;\nimport com.pulumi.nxos.VrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Vrf(\"example\", VrfArgs.builder()        \n            .description(\"My VRF1 Description\")\n            .encap(\"vxlan-103901\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:Vrf\n    properties:\n      description: My VRF1 Description\n      encap: vxlan-103901\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/vrf:Vrf example \"sys/inst-[VRF1]\"\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "VRF description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Encap for this Context, supported formats: `unknown`, `vlan-%d` or `vxlan-%d`. - Default value: `unknown`\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "encap",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "VRF description.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encap": {
                    "type": "string",
                    "description": "Encap for this Context, supported formats: `unknown`, `vlan-%d` or `vxlan-%d`. - Default value: `unknown`\n"
                },
                "name": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vrf resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "VRF description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Encap for this Context, supported formats: `unknown`, `vlan-%d` or `vxlan-%d`. - Default value: `unknown`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/vrfAddressFamily:VrfAddressFamily": {
            "description": "This resource can manage a VRF Address Family.\n\n- API Documentation: [rtctrlDomAf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:DomAf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.VrfAddressFamily(\"example\", {\n    addressFamily: \"ipv4-ucast\",\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.VrfAddressFamily(\"example\",\n    address_family=\"ipv4-ucast\",\n    vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.VrfAddressFamily(\"example\", new()\n    {\n        AddressFamily = \"ipv4-ucast\",\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewVrfAddressFamily(ctx, \"example\", \u0026nxos.VrfAddressFamilyArgs{\n\t\t\tAddressFamily: pulumi.String(\"ipv4-ucast\"),\n\t\t\tVrf:           pulumi.String(\"VRF1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.VrfAddressFamily;\nimport com.pulumi.nxos.VrfAddressFamilyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new VrfAddressFamily(\"example\", VrfAddressFamilyArgs.builder()        \n            .addressFamily(\"ipv4-ucast\")\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:VrfAddressFamily\n    properties:\n      addressFamily: ipv4-ucast\n      vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/vrfAddressFamily:VrfAddressFamily example \"sys/inst-[VRF1]/dom-[VRF1]/af-[ipv4-ucast]\"\n```\n\n ",
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "addressFamily",
                "vrf"
            ],
            "inputProperties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "addressFamily",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrfAddressFamily resources.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/vrfRouteTarget:VrfRouteTarget": {
            "description": "This resource can manage a VRF Route Target Entry.\n\n- API Documentation: [rtctrlRttEntry](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:RttEntry/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.VrfRouteTarget(\"example\", {\n    addressFamily: \"ipv4-ucast\",\n    direction: \"import\",\n    routeTarget: \"route-target:as2-nn2:2:2\",\n    routeTargetAddressFamily: \"ipv4-ucast\",\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.VrfRouteTarget(\"example\",\n    address_family=\"ipv4-ucast\",\n    direction=\"import\",\n    route_target=\"route-target:as2-nn2:2:2\",\n    route_target_address_family=\"ipv4-ucast\",\n    vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.VrfRouteTarget(\"example\", new()\n    {\n        AddressFamily = \"ipv4-ucast\",\n        Direction = \"import\",\n        RouteTarget = \"route-target:as2-nn2:2:2\",\n        RouteTargetAddressFamily = \"ipv4-ucast\",\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewVrfRouteTarget(ctx, \"example\", \u0026nxos.VrfRouteTargetArgs{\n\t\t\tAddressFamily:            pulumi.String(\"ipv4-ucast\"),\n\t\t\tDirection:                pulumi.String(\"import\"),\n\t\t\tRouteTarget:              pulumi.String(\"route-target:as2-nn2:2:2\"),\n\t\t\tRouteTargetAddressFamily: pulumi.String(\"ipv4-ucast\"),\n\t\t\tVrf:                      pulumi.String(\"VRF1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.VrfRouteTarget;\nimport com.pulumi.nxos.VrfRouteTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new VrfRouteTarget(\"example\", VrfRouteTargetArgs.builder()        \n            .addressFamily(\"ipv4-ucast\")\n            .direction(\"import\")\n            .routeTarget(\"route-target:as2-nn2:2:2\")\n            .routeTargetAddressFamily(\"ipv4-ucast\")\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:VrfRouteTarget\n    properties:\n      addressFamily: ipv4-ucast\n      direction: import\n      routeTarget: route-target:as2-nn2:2:2\n      routeTargetAddressFamily: ipv4-ucast\n      vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/vrfRouteTarget:VrfRouteTarget example \"sys/inst-[VRF1]/dom-[VRF1]/af-[ipv4-ucast]/ctrl-[ipv4-ucast]/rttp-[import]/ent-[route-target:as2-nn2:2:2]\"\n```\n\n ",
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Target direction. - Choices: `import`, `export`\n"
                },
                "routeTarget": {
                    "type": "string",
                    "description": "Route Target in NX-OS DME format.\n"
                },
                "routeTargetAddressFamily": {
                    "type": "string",
                    "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "addressFamily",
                "direction",
                "routeTarget",
                "routeTargetAddressFamily",
                "vrf"
            ],
            "inputProperties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Target direction. - Choices: `import`, `export`\n"
                },
                "routeTarget": {
                    "type": "string",
                    "description": "Route Target in NX-OS DME format.\n"
                },
                "routeTargetAddressFamily": {
                    "type": "string",
                    "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "addressFamily",
                "direction",
                "routeTarget",
                "routeTargetAddressFamily",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrfRouteTarget resources.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Target direction. - Choices: `import`, `export`\n"
                    },
                    "routeTarget": {
                        "type": "string",
                        "description": "Route Target in NX-OS DME format.\n"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string",
                        "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/vrfRouteTargetAddressFamily:VrfRouteTargetAddressFamily": {
            "description": "This resource can manage a VRF Route Target Address Family.\n\n- API Documentation: [rtctrlAfCtrl](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:AfCtrl/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.VrfRouteTargetAddressFamily(\"example\", {\n    addressFamily: \"ipv4-ucast\",\n    routeTargetAddressFamily: \"ipv4-ucast\",\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.VrfRouteTargetAddressFamily(\"example\",\n    address_family=\"ipv4-ucast\",\n    route_target_address_family=\"ipv4-ucast\",\n    vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.VrfRouteTargetAddressFamily(\"example\", new()\n    {\n        AddressFamily = \"ipv4-ucast\",\n        RouteTargetAddressFamily = \"ipv4-ucast\",\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewVrfRouteTargetAddressFamily(ctx, \"example\", \u0026nxos.VrfRouteTargetAddressFamilyArgs{\n\t\t\tAddressFamily:            pulumi.String(\"ipv4-ucast\"),\n\t\t\tRouteTargetAddressFamily: pulumi.String(\"ipv4-ucast\"),\n\t\t\tVrf:                      pulumi.String(\"VRF1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.VrfRouteTargetAddressFamily;\nimport com.pulumi.nxos.VrfRouteTargetAddressFamilyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new VrfRouteTargetAddressFamily(\"example\", VrfRouteTargetAddressFamilyArgs.builder()        \n            .addressFamily(\"ipv4-ucast\")\n            .routeTargetAddressFamily(\"ipv4-ucast\")\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:VrfRouteTargetAddressFamily\n    properties:\n      addressFamily: ipv4-ucast\n      routeTargetAddressFamily: ipv4-ucast\n      vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/vrfRouteTargetAddressFamily:VrfRouteTargetAddressFamily example \"sys/inst-[VRF1]/dom-[VRF1]/af-[ipv4-ucast]/ctrl-[ipv4-ucast]\"\n```\n\n ",
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "routeTargetAddressFamily": {
                    "type": "string",
                    "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "addressFamily",
                "routeTargetAddressFamily",
                "vrf"
            ],
            "inputProperties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "routeTargetAddressFamily": {
                    "type": "string",
                    "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "addressFamily",
                "routeTargetAddressFamily",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrfRouteTargetAddressFamily resources.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string",
                        "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/vrfRouteTargetDirection:VrfRouteTargetDirection": {
            "description": "This resource can manage a VRF Route Target direction.\n\n- API Documentation: [rtctrlRttP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:RttP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.VrfRouteTargetDirection(\"example\", {\n    addressFamily: \"ipv4-ucast\",\n    direction: \"import\",\n    routeTargetAddressFamily: \"ipv4-ucast\",\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.VrfRouteTargetDirection(\"example\",\n    address_family=\"ipv4-ucast\",\n    direction=\"import\",\n    route_target_address_family=\"ipv4-ucast\",\n    vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.VrfRouteTargetDirection(\"example\", new()\n    {\n        AddressFamily = \"ipv4-ucast\",\n        Direction = \"import\",\n        RouteTargetAddressFamily = \"ipv4-ucast\",\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewVrfRouteTargetDirection(ctx, \"example\", \u0026nxos.VrfRouteTargetDirectionArgs{\n\t\t\tAddressFamily:            pulumi.String(\"ipv4-ucast\"),\n\t\t\tDirection:                pulumi.String(\"import\"),\n\t\t\tRouteTargetAddressFamily: pulumi.String(\"ipv4-ucast\"),\n\t\t\tVrf:                      pulumi.String(\"VRF1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.VrfRouteTargetDirection;\nimport com.pulumi.nxos.VrfRouteTargetDirectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new VrfRouteTargetDirection(\"example\", VrfRouteTargetDirectionArgs.builder()        \n            .addressFamily(\"ipv4-ucast\")\n            .direction(\"import\")\n            .routeTargetAddressFamily(\"ipv4-ucast\")\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:VrfRouteTargetDirection\n    properties:\n      addressFamily: ipv4-ucast\n      direction: import\n      routeTargetAddressFamily: ipv4-ucast\n      vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/vrfRouteTargetDirection:VrfRouteTargetDirection example \"sys/inst-[VRF1]/dom-[VRF1]/af-[ipv4-ucast]/ctrl-[ipv4-ucast]/rttp-[import]\"\n```\n\n ",
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Target direction. - Choices: `import`, `export`\n"
                },
                "routeTargetAddressFamily": {
                    "type": "string",
                    "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "addressFamily",
                "direction",
                "routeTargetAddressFamily",
                "vrf"
            ],
            "inputProperties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Route Target direction. - Choices: `import`, `export`\n"
                },
                "routeTargetAddressFamily": {
                    "type": "string",
                    "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "addressFamily",
                "direction",
                "routeTargetAddressFamily",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrfRouteTargetDirection resources.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address family. - Choices: `ipv4-ucast`, `ipv6-ucast`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Target direction. - Choices: `import`, `export`\n"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string",
                        "description": "Route Target Address Family. - Choices: `ipv4-ucast`, `ipv6-ucast`, `l2vpn-evpn`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:index/vrfRouting:VrfRouting": {
            "description": "This resource can manage a VRF Route Distinguisher and VRF VNI.\n\n- API Documentation: [rtctrlDom](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:Dom/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@lbrlabs/pulumi-nxos\";\n\nconst example = new nxos.VrfRouting(\"example\", {\n    routeDistinguisher: \"rd:unknown:0:0\",\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_nxos as nxos\n\nexample = nxos.VrfRouting(\"example\",\n    route_distinguisher=\"rd:unknown:0:0\",\n    vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Lbrlabs.PulumiPackage.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Nxos.VrfRouting(\"example\", new()\n    {\n        RouteDistinguisher = \"rd:unknown:0:0\",\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.NewVrfRouting(ctx, \"example\", \u0026nxos.VrfRoutingArgs{\n\t\t\tRouteDistinguisher: pulumi.String(\"rd:unknown:0:0\"),\n\t\t\tVrf:                pulumi.String(\"VRF1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.VrfRouting;\nimport com.pulumi.nxos.VrfRoutingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new VrfRouting(\"example\", VrfRoutingArgs.builder()        \n            .routeDistinguisher(\"rd:unknown:0:0\")\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: nxos:VrfRouting\n    properties:\n      routeDistinguisher: rd:unknown:0:0\n      vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import nxos:index/vrfRouting:VrfRouting example \"sys/inst-[VRF1]/dom-[VRF1]\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "routeDistinguisher": {
                    "type": "string",
                    "description": "Route Distinguisher value in NX-OS DME format. - Default value: `unknown:unknown:0:0`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "required": [
                "routeDistinguisher",
                "vrf"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "routeDistinguisher": {
                    "type": "string",
                    "description": "Route Distinguisher value in NX-OS DME format. - Default value: `unknown:unknown:0:0`\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name.\n"
                }
            },
            "requiredInputs": [
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrfRouting resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "routeDistinguisher": {
                        "type": "string",
                        "description": "Route Distinguisher value in NX-OS DME format. - Default value: `unknown:unknown:0:0`\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "nxos:index/getBgp:getBgp": {
            "description": "This data source can read the global BGP configuration.\n\n- API Documentation: [bgpEntity](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:Entity/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getBgp({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_bgp()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetBgp.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupBgp(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetBgpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getBgp();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getBgp\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBgp.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getBgpAddressFamily:getBgpAddressFamily": {
            "description": "This data source can read the BGP (VRF) address family configuration.\n\n- API Documentation: [bgpDomAf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:DomAf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getBgpAddressFamily({\n    addressFamily: \"ipv4-ucast\",\n    asn: \"65001\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_bgp_address_family(address_family=\"ipv4-ucast\",\n    asn=\"65001\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetBgpAddressFamily.Invoke(new()\n    {\n        AddressFamily = \"ipv4-ucast\",\n        Asn = \"65001\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupBgpAddressFamily(ctx, \u0026nxos.LookupBgpAddressFamilyArgs{\n\t\t\tAddressFamily: \"ipv4-ucast\",\n\t\t\tAsn:           \"65001\",\n\t\t\tVrf:           \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetBgpAddressFamilyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getBgpAddressFamily(GetBgpAddressFamilyArgs.builder()\n            .addressFamily(\"ipv4-ucast\")\n            .asn(\"65001\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getBgpAddressFamily\n      Arguments:\n        addressFamily: ipv4-ucast\n        asn: '65001'\n        vrf: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpAddressFamily.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family.\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "asn",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpAddressFamily.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family.\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "criticalNexthopTimeout": {
                        "type": "integer",
                        "description": "The next-hop address tracking delay timer for critical next-hop reachability routes.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "nonCriticalNexthopTimeout": {
                        "type": "integer",
                        "description": "The next-hop address tracking delay timer for non-critical next-hop reachability routes.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "asn",
                    "criticalNexthopTimeout",
                    "id",
                    "nonCriticalNexthopTimeout",
                    "vrf"
                ]
            }
        },
        "nxos:index/getBgpAdvertisedPrefix:getBgpAdvertisedPrefix": {
            "description": "This data source can read the BGP (VRF) advertised prefix configuration.\n\n- API Documentation: [bgpAdvPrefix](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:AdvPrefix/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getBgpAdvertisedPrefix({\n    addressFamily: \"ipv4-ucast\",\n    asn: \"65001\",\n    prefix: \"192.168.1.0/24\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_bgp_advertised_prefix(address_family=\"ipv4-ucast\",\n    asn=\"65001\",\n    prefix=\"192.168.1.0/24\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetBgpAdvertisedPrefix.Invoke(new()\n    {\n        AddressFamily = \"ipv4-ucast\",\n        Asn = \"65001\",\n        Prefix = \"192.168.1.0/24\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupBgpAdvertisedPrefix(ctx, \u0026nxos.LookupBgpAdvertisedPrefixArgs{\n\t\t\tAddressFamily: \"ipv4-ucast\",\n\t\t\tAsn:           \"65001\",\n\t\t\tPrefix:        \"192.168.1.0/24\",\n\t\t\tVrf:           \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetBgpAdvertisedPrefixArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getBgpAdvertisedPrefix(GetBgpAdvertisedPrefixArgs.builder()\n            .addressFamily(\"ipv4-ucast\")\n            .asn(\"65001\")\n            .prefix(\"192.168.1.0/24\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getBgpAdvertisedPrefix\n      Arguments:\n        addressFamily: ipv4-ucast\n        asn: '65001'\n        prefix: 192.168.1.0/24\n        vrf: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpAdvertisedPrefix.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family.\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "IP address of the network or prefix to advertise.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "asn",
                    "prefix",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpAdvertisedPrefix.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family.\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "IP address of the network or prefix to advertise.\n"
                    },
                    "routeMap": {
                        "type": "string",
                        "description": "Route map to modify attributes.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "asn",
                    "id",
                    "prefix",
                    "routeMap",
                    "vrf"
                ]
            }
        },
        "nxos:index/getBgpGracefulRestart:getBgpGracefulRestart": {
            "description": "This data source can read the BGP domain (VRF) graceful restart configuration.\n\n- API Documentation: [bgpGr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:Gr/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getBgpGracefulRestart({\n    asn: \"65001\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_bgp_graceful_restart(asn=\"65001\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetBgpGracefulRestart.Invoke(new()\n    {\n        Asn = \"65001\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupBgpGracefulRestart(ctx, \u0026nxos.LookupBgpGracefulRestartArgs{\n\t\t\tAsn: \"65001\",\n\t\t\tVrf: \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetBgpGracefulRestartArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getBgpGracefulRestart(GetBgpGracefulRestartArgs.builder()\n            .asn(\"65001\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getBgpGracefulRestart\n      Arguments:\n        asn: '65001'\n        vrf: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpGracefulRestart.\n",
                "properties": {
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpGracefulRestart.\n",
                "properties": {
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "restartInterval": {
                        "type": "integer",
                        "description": "The graceful restart interval.\n"
                    },
                    "staleInterval": {
                        "type": "integer",
                        "description": "The stale interval for routes advertised by the BGP peer.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "id",
                    "restartInterval",
                    "staleInterval",
                    "vrf"
                ]
            }
        },
        "nxos:index/getBgpInstance:getBgpInstance": {
            "description": "This data source can read the BGP instance configuration.\n\n- API Documentation: [bgpInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getBgpInstance({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_bgp_instance()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetBgpInstance.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupBgpInstance(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetBgpInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getBgpInstance();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getBgpInstance\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpInstance.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBgpInstance.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "enhancedErrorHandling": {
                        "type": "boolean",
                        "description": "Enable BGP Enhanced Error Handling.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "asn",
                    "enhancedErrorHandling",
                    "id"
                ]
            }
        },
        "nxos:index/getBgpPeer:getBgpPeer": {
            "description": "This data source can read the BGP peer configuration.\n\n- API Documentation: [bgpPeer](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:Peer/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getBgpPeer({\n    address: \"192.168.0.1\",\n    asn: \"65001\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_bgp_peer(address=\"192.168.0.1\",\n    asn=\"65001\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetBgpPeer.Invoke(new()\n    {\n        Address = \"192.168.0.1\",\n        Asn = \"65001\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupBgpPeer(ctx, \u0026nxos.LookupBgpPeerArgs{\n\t\t\tAddress: \"192.168.0.1\",\n\t\t\tAsn:     \"65001\",\n\t\t\tVrf:     \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetBgpPeerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getBgpPeer(GetBgpPeerArgs.builder()\n            .address(\"192.168.0.1\")\n            .asn(\"65001\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getBgpPeer\n      Arguments:\n        address: 192.168.0.1\n        asn: '65001'\n        vrf: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpPeer.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Peer address.\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "asn",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpPeer.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Peer address.\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Peer description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "holdTime": {
                        "type": "integer",
                        "description": "BGP Hold Timer in seconds. The value must be greater than the keepalive timer\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "keepalive": {
                        "type": "integer",
                        "description": "BGP Keepalive Timer in seconds\n"
                    },
                    "peerTemplate": {
                        "type": "string",
                        "description": "Peer template name.\n"
                    },
                    "peerType": {
                        "type": "string",
                        "description": "Neighbor Fabric Type.\n"
                    },
                    "remoteAsn": {
                        "type": "string",
                        "description": "Peer autonomous system number.\n"
                    },
                    "sourceInterface": {
                        "type": "string",
                        "description": "Source Interface. Must match first field in the output of `show intf brief`.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "asn",
                    "description",
                    "holdTime",
                    "id",
                    "keepalive",
                    "peerTemplate",
                    "peerType",
                    "remoteAsn",
                    "sourceInterface",
                    "vrf"
                ]
            }
        },
        "nxos:index/getBgpPeerAddressFamily:getBgpPeerAddressFamily": {
            "description": "This data source can read the BGP peer address family configuration.\n\n- API Documentation: [bgpPeerAf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:PeerAf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getBgpPeerAddressFamily({\n    address: \"192.168.0.1\",\n    addressFamily: \"ipv4-ucast\",\n    asn: \"65001\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_bgp_peer_address_family(address=\"192.168.0.1\",\n    address_family=\"ipv4-ucast\",\n    asn=\"65001\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetBgpPeerAddressFamily.Invoke(new()\n    {\n        Address = \"192.168.0.1\",\n        AddressFamily = \"ipv4-ucast\",\n        Asn = \"65001\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupBgpPeerAddressFamily(ctx, \u0026nxos.LookupBgpPeerAddressFamilyArgs{\n\t\t\tAddress:       \"192.168.0.1\",\n\t\t\tAddressFamily: \"ipv4-ucast\",\n\t\t\tAsn:           \"65001\",\n\t\t\tVrf:           \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetBgpPeerAddressFamilyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getBgpPeerAddressFamily(GetBgpPeerAddressFamilyArgs.builder()\n            .address(\"192.168.0.1\")\n            .addressFamily(\"ipv4-ucast\")\n            .asn(\"65001\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getBgpPeerAddressFamily\n      Arguments:\n        address: 192.168.0.1\n        addressFamily: ipv4-ucast\n        asn: '65001'\n        vrf: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpPeerAddressFamily.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "addressFamily",
                    "asn",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpPeerAddressFamily.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "control": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "sendCommunityExtended": {
                        "type": "string"
                    },
                    "sendCommunityStandard": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "addressFamily",
                    "asn",
                    "control",
                    "id",
                    "sendCommunityExtended",
                    "sendCommunityStandard",
                    "vrf"
                ]
            }
        },
        "nxos:index/getBgpPeerAddressFamilyPrefixListControl:getBgpPeerAddressFamilyPrefixListControl": {
            "description": "This data source can read the BGP peer address family prefix list control configuration.\n\n- API Documentation: [bgpPfxCtrlP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:PfxCtrlP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getBgpPeerAddressFamilyPrefixListControl({\n    address: \"192.168.0.1\",\n    addressFamily: \"ipv4-ucast\",\n    asn: \"65001\",\n    direction: \"in\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_bgp_peer_address_family_prefix_list_control(address=\"192.168.0.1\",\n    address_family=\"ipv4-ucast\",\n    asn=\"65001\",\n    direction=\"in\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetBgpPeerAddressFamilyPrefixListControl.Invoke(new()\n    {\n        Address = \"192.168.0.1\",\n        AddressFamily = \"ipv4-ucast\",\n        Asn = \"65001\",\n        Direction = \"in\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupBgpPeerAddressFamilyPrefixListControl(ctx, \u0026nxos.LookupBgpPeerAddressFamilyPrefixListControlArgs{\n\t\t\tAddress:       \"192.168.0.1\",\n\t\t\tAddressFamily: \"ipv4-ucast\",\n\t\t\tAsn:           \"65001\",\n\t\t\tDirection:     \"in\",\n\t\t\tVrf:           \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetBgpPeerAddressFamilyPrefixListControlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getBgpPeerAddressFamilyPrefixListControl(GetBgpPeerAddressFamilyPrefixListControlArgs.builder()\n            .address(\"192.168.0.1\")\n            .addressFamily(\"ipv4-ucast\")\n            .asn(\"65001\")\n            .direction(\"in\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getBgpPeerAddressFamilyPrefixListControl\n      Arguments:\n        address: 192.168.0.1\n        addressFamily: ipv4-ucast\n        asn: '65001'\n        direction: in\n        vrf: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpPeerAddressFamilyPrefixListControl.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Peer address.\n"
                    },
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family.\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Control direction.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "addressFamily",
                    "asn",
                    "direction",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpPeerAddressFamilyPrefixListControl.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Peer address.\n"
                    },
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family.\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Control direction.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "list": {
                        "type": "string",
                        "description": "Route Control Prefix-List name.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "addressFamily",
                    "asn",
                    "direction",
                    "id",
                    "list",
                    "vrf"
                ]
            }
        },
        "nxos:index/getBgpPeerAddressFamilyRouteControl:getBgpPeerAddressFamilyRouteControl": {
            "description": "This data source can read the BGP peer address family route control configuration.\n\n- API Documentation: [bgpRtCtrlP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:RtCtrlP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getBgpPeerAddressFamilyRouteControl({\n    address: \"192.168.0.1\",\n    addressFamily: \"ipv4-ucast\",\n    asn: \"65001\",\n    direction: \"in\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_bgp_peer_address_family_route_control(address=\"192.168.0.1\",\n    address_family=\"ipv4-ucast\",\n    asn=\"65001\",\n    direction=\"in\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetBgpPeerAddressFamilyRouteControl.Invoke(new()\n    {\n        Address = \"192.168.0.1\",\n        AddressFamily = \"ipv4-ucast\",\n        Asn = \"65001\",\n        Direction = \"in\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupBgpPeerAddressFamilyRouteControl(ctx, \u0026nxos.LookupBgpPeerAddressFamilyRouteControlArgs{\n\t\t\tAddress:       \"192.168.0.1\",\n\t\t\tAddressFamily: \"ipv4-ucast\",\n\t\t\tAsn:           \"65001\",\n\t\t\tDirection:     \"in\",\n\t\t\tVrf:           \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetBgpPeerAddressFamilyRouteControlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getBgpPeerAddressFamilyRouteControl(GetBgpPeerAddressFamilyRouteControlArgs.builder()\n            .address(\"192.168.0.1\")\n            .addressFamily(\"ipv4-ucast\")\n            .asn(\"65001\")\n            .direction(\"in\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getBgpPeerAddressFamilyRouteControl\n      Arguments:\n        address: 192.168.0.1\n        addressFamily: ipv4-ucast\n        asn: '65001'\n        direction: in\n        vrf: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpPeerAddressFamilyRouteControl.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Peer address.\n"
                    },
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family.\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Control direction.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "addressFamily",
                    "asn",
                    "direction",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpPeerAddressFamilyRouteControl.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Peer address.\n"
                    },
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family.\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Control direction.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "routeMapName": {
                        "type": "string",
                        "description": "Route Control Route-Map name.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "addressFamily",
                    "asn",
                    "direction",
                    "id",
                    "routeMapName",
                    "vrf"
                ]
            }
        },
        "nxos:index/getBgpPeerTemplate:getBgpPeerTemplate": {
            "description": "This data source can read the BGP peer template configuration.\n\n- API Documentation: [bgpPeerCont](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:PeerCont/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getBgpPeerTemplate({\n    asn: \"65001\",\n    templateName: \"SPINE-PEERS\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_bgp_peer_template(asn=\"65001\",\n    template_name=\"SPINE-PEERS\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetBgpPeerTemplate.Invoke(new()\n    {\n        Asn = \"65001\",\n        TemplateName = \"SPINE-PEERS\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupBgpPeerTemplate(ctx, \u0026nxos.LookupBgpPeerTemplateArgs{\n\t\t\tAsn:          \"65001\",\n\t\t\tTemplateName: \"SPINE-PEERS\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetBgpPeerTemplateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getBgpPeerTemplate(GetBgpPeerTemplateArgs.builder()\n            .asn(\"65001\")\n            .templateName(\"SPINE-PEERS\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getBgpPeerTemplate\n      Arguments:\n        asn: '65001'\n        templateName: SPINE-PEERS\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpPeerTemplate.\n",
                "properties": {
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Peer template name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpPeerTemplate.\n",
                "properties": {
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Peer template description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "peerType": {
                        "type": "string",
                        "description": "Neighbor Fabric Type.\n"
                    },
                    "remoteAsn": {
                        "type": "string",
                        "description": "Peer template autonomous system number.\n"
                    },
                    "sourceInterface": {
                        "type": "string",
                        "description": "Source Interface. Must match first field in the output of `show intf brief`.\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Peer template name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "description",
                    "id",
                    "peerType",
                    "remoteAsn",
                    "sourceInterface",
                    "templateName"
                ]
            }
        },
        "nxos:index/getBgpPeerTemplateAddressFamily:getBgpPeerTemplateAddressFamily": {
            "description": "This data source can read the BGP peer template address family configuration.\n\n- API Documentation: [bgpPeerAf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:PeerAf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getBgpPeerTemplateAddressFamily({\n    addressFamily: \"ipv4-ucast\",\n    asn: \"65001\",\n    templateName: \"SPINE-PEERS\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_bgp_peer_template_address_family(address_family=\"ipv4-ucast\",\n    asn=\"65001\",\n    template_name=\"SPINE-PEERS\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetBgpPeerTemplateAddressFamily.Invoke(new()\n    {\n        AddressFamily = \"ipv4-ucast\",\n        Asn = \"65001\",\n        TemplateName = \"SPINE-PEERS\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupBgpPeerTemplateAddressFamily(ctx, \u0026nxos.LookupBgpPeerTemplateAddressFamilyArgs{\n\t\t\tAddressFamily: \"ipv4-ucast\",\n\t\t\tAsn:           \"65001\",\n\t\t\tTemplateName:  \"SPINE-PEERS\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetBgpPeerTemplateAddressFamilyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getBgpPeerTemplateAddressFamily(GetBgpPeerTemplateAddressFamilyArgs.builder()\n            .addressFamily(\"ipv4-ucast\")\n            .asn(\"65001\")\n            .templateName(\"SPINE-PEERS\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getBgpPeerTemplateAddressFamily\n      Arguments:\n        addressFamily: ipv4-ucast\n        asn: '65001'\n        templateName: SPINE-PEERS\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpPeerTemplateAddressFamily.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "asn",
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpPeerTemplateAddressFamily.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "control": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "sendCommunityExtended": {
                        "type": "string"
                    },
                    "sendCommunityStandard": {
                        "type": "string"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "asn",
                    "control",
                    "id",
                    "sendCommunityExtended",
                    "sendCommunityStandard",
                    "templateName"
                ]
            }
        },
        "nxos:index/getBgpPeerTemplateMaxPrefix:getBgpPeerTemplateMaxPrefix": {
            "description": "This data source can read the BGP peer template Maximum Prefix Policy configuration.\n\n- API Documentation: [bgpMaxPfxP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:MaxPfxP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getBgpPeerTemplateMaxPrefix({\n    addressFamily: \"ipv4-ucast\",\n    asn: \"65001\",\n    templateName: \"SPINE-PEERS\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_bgp_peer_template_max_prefix(address_family=\"ipv4-ucast\",\n    asn=\"65001\",\n    template_name=\"SPINE-PEERS\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetBgpPeerTemplateMaxPrefix.Invoke(new()\n    {\n        AddressFamily = \"ipv4-ucast\",\n        Asn = \"65001\",\n        TemplateName = \"SPINE-PEERS\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupBgpPeerTemplateMaxPrefix(ctx, \u0026nxos.LookupBgpPeerTemplateMaxPrefixArgs{\n\t\t\tAddressFamily: \"ipv4-ucast\",\n\t\t\tAsn:           \"65001\",\n\t\t\tTemplateName:  \"SPINE-PEERS\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetBgpPeerTemplateMaxPrefixArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getBgpPeerTemplateMaxPrefix(GetBgpPeerTemplateMaxPrefixArgs.builder()\n            .addressFamily(\"ipv4-ucast\")\n            .asn(\"65001\")\n            .templateName(\"SPINE-PEERS\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getBgpPeerTemplateMaxPrefix\n      Arguments:\n        addressFamily: ipv4-ucast\n        asn: '65001'\n        templateName: SPINE-PEERS\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpPeerTemplateMaxPrefix.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family.\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Peer template name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "asn",
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpPeerTemplateMaxPrefix.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Action to do when limit is exceeded.\n"
                    },
                    "addressFamily": {
                        "type": "string",
                        "description": "Address Family.\n"
                    },
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "maximumPrefix": {
                        "type": "integer",
                        "description": "Maximum number of prefixes allowed from the peer.\n"
                    },
                    "restartTime": {
                        "type": "integer",
                        "description": "The period of time in minutes before restarting the peer when the prefix limit is reached.\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Peer template name.\n"
                    },
                    "threshold": {
                        "type": "integer",
                        "description": "The period of time in minutes before restarting the peer when the prefix limit is reached.\n"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "addressFamily",
                    "asn",
                    "id",
                    "maximumPrefix",
                    "restartTime",
                    "templateName",
                    "threshold"
                ]
            }
        },
        "nxos:index/getBgpRouteControl:getBgpRouteControl": {
            "description": "This data source can read the BGP Route Control configuration.\n\n- API Documentation: [bgpRtCtrl](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:RtCtrl/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getBgpRouteControl({\n    asn: \"65001\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_bgp_route_control(asn=\"65001\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetBgpRouteControl.Invoke(new()\n    {\n        Asn = \"65001\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupBgpRouteControl(ctx, \u0026nxos.LookupBgpRouteControlArgs{\n\t\t\tAsn: \"65001\",\n\t\t\tVrf: \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetBgpRouteControlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getBgpRouteControl(GetBgpRouteControlArgs.builder()\n            .asn(\"65001\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getBgpRouteControl\n      Arguments:\n        asn: '65001'\n        vrf: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpRouteControl.\n",
                "properties": {
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpRouteControl.\n",
                "properties": {
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "enforceFirstAs": {
                        "type": "string",
                        "description": "Enforce First AS For Ebgp. Can be configured only for VRF default.\n"
                    },
                    "fibAccelerate": {
                        "type": "string",
                        "description": "Accelerate the hardware updates for IP/IPv6 adjacencies for neighbor. Can be configured only for VRF default.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "logNeighborChanges": {
                        "type": "string",
                        "description": "Log Neighbor Changes.\n"
                    },
                    "suppressRoutes": {
                        "type": "string",
                        "description": "Suppress Routes: Advertise only routes that are programmed in hardware to peers. Can be configured only for VRF default.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "enforceFirstAs",
                    "fibAccelerate",
                    "id",
                    "logNeighborChanges",
                    "suppressRoutes",
                    "vrf"
                ]
            }
        },
        "nxos:index/getBgpVrf:getBgpVrf": {
            "description": "This data source can read the BGP domain (VRF) configuration.\n\n- API Documentation: [bgpDom](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:Dom/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getBgpVrf({\n    asn: \"65001\",\n    name: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_bgp_vrf(asn=\"65001\",\n    name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetBgpVrf.Invoke(new()\n    {\n        Asn = \"65001\",\n        Name = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupBgpVrf(ctx, \u0026nxos.LookupBgpVrfArgs{\n\t\t\tAsn:  \"65001\",\n\t\t\tName: \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetBgpVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getBgpVrf(GetBgpVrfArgs.builder()\n            .asn(\"65001\")\n            .name(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getBgpVrf\n      Arguments:\n        asn: '65001'\n        name: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpVrf.\n",
                "properties": {
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpVrf.\n",
                "properties": {
                    "asn": {
                        "type": "string",
                        "description": "Autonomous system number.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    },
                    "routerId": {
                        "type": "string",
                        "description": "Router ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "id",
                    "name",
                    "routerId"
                ]
            }
        },
        "nxos:index/getBridgeDomain:getBridgeDomain": {
            "description": "This data source can read a bridge domain.\n\n- API Documentation: [l2BD](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%202/l2:BD/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getBridgeDomain({\n    fabricEncap: \"vlan-10\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_bridge_domain(fabric_encap=\"vlan-10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetBridgeDomain.Invoke(new()\n    {\n        FabricEncap = \"vlan-10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupBridgeDomain(ctx, \u0026nxos.LookupBridgeDomainArgs{\n\t\t\tFabricEncap: \"vlan-10\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetBridgeDomainArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getBridgeDomain(GetBridgeDomainArgs.builder()\n            .fabricEncap(\"vlan-10\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getBridgeDomain\n      Arguments:\n        fabricEncap: vlan-10\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBridgeDomain.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "fabricEncap": {
                        "type": "string",
                        "description": "Fabric encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "fabricEncap"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBridgeDomain.\n",
                "properties": {
                    "accessEncap": {
                        "type": "string",
                        "description": "Access encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "fabricEncap": {
                        "type": "string",
                        "description": "Fabric encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Bridge domain name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accessEncap",
                    "fabricEncap",
                    "id",
                    "name"
                ]
            }
        },
        "nxos:index/getDefaultQosClassMap:getDefaultQosClassMap": {
            "description": "This data source can read the default QoS class map configuration.\n\n- API Documentation: [ipqosCMapInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:CMapInst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getDefaultQosClassMap({\n    name: \"Voice\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_default_qos_class_map(name=\"Voice\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetDefaultQosClassMap.Invoke(new()\n    {\n        Name = \"Voice\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupDefaultQosClassMap(ctx, \u0026nxos.LookupDefaultQosClassMapArgs{\n\t\t\tName: \"Voice\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetDefaultQosClassMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getDefaultQosClassMap(GetDefaultQosClassMapArgs.builder()\n            .name(\"Voice\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getDefaultQosClassMap\n      Arguments:\n        name: Voice\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultQosClassMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Class map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultQosClassMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "matchType": {
                        "type": "string",
                        "description": "Match type.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Class map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "matchType",
                    "name"
                ]
            }
        },
        "nxos:index/getDefaultQosClassMapDscp:getDefaultQosClassMapDscp": {
            "description": "This data source can read the default QoS class map DSCP configuration.\n\n- API Documentation: [ipqosDscp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:Dscp/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getDefaultQosClassMapDscp({\n    classMapName: \"Voice\",\n    value: \"ef\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_default_qos_class_map_dscp(class_map_name=\"Voice\",\n    value=\"ef\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetDefaultQosClassMapDscp.Invoke(new()\n    {\n        ClassMapName = \"Voice\",\n        Value = \"ef\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupDefaultQosClassMapDscp(ctx, \u0026nxos.LookupDefaultQosClassMapDscpArgs{\n\t\t\tClassMapName: \"Voice\",\n\t\t\tValue:        \"ef\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetDefaultQosClassMapDscpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getDefaultQosClassMapDscp(GetDefaultQosClassMapDscpArgs.builder()\n            .classMapName(\"Voice\")\n            .value(\"ef\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getDefaultQosClassMapDscp\n      Arguments:\n        classMapName: Voice\n        value: ef\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultQosClassMapDscp.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "DSCP value.\n"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "value"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultQosClassMapDscp.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "DSCP value.\n"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "id",
                    "value"
                ]
            }
        },
        "nxos:index/getDefaultQosPolicyInterfaceIn:getDefaultQosPolicyInterfaceIn": {
            "description": "This data source can read the default QoS policy interface in configuration.\n\n- API Documentation: [ipqosIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getDefaultQosPolicyInterfaceIn({\n    interfaceId: \"eth1/10\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_default_qos_policy_interface_in(interface_id=\"eth1/10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetDefaultQosPolicyInterfaceIn.Invoke(new()\n    {\n        InterfaceId = \"eth1/10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupDefaultQosPolicyInterfaceIn(ctx, \u0026nxos.LookupDefaultQosPolicyInterfaceInArgs{\n\t\t\tInterfaceId: \"eth1/10\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetDefaultQosPolicyInterfaceInArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getDefaultQosPolicyInterfaceIn(GetDefaultQosPolicyInterfaceInArgs.builder()\n            .interfaceId(\"eth1/10\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getDefaultQosPolicyInterfaceIn\n      Arguments:\n        interfaceId: eth1/10\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultQosPolicyInterfaceIn.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultQosPolicyInterfaceIn.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId"
                ]
            }
        },
        "nxos:index/getDefaultQosPolicyInterfaceInPolicyMap:getDefaultQosPolicyInterfaceInPolicyMap": {
            "description": "This data source can read the default QoS policy interface in policy map configuration.\n\n- API Documentation: [ipqosInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getDefaultQosPolicyInterfaceInPolicyMap({\n    interfaceId: \"eth1/10\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_default_qos_policy_interface_in_policy_map(interface_id=\"eth1/10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetDefaultQosPolicyInterfaceInPolicyMap.Invoke(new()\n    {\n        InterfaceId = \"eth1/10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupDefaultQosPolicyInterfaceInPolicyMap(ctx, \u0026nxos.LookupDefaultQosPolicyInterfaceInPolicyMapArgs{\n\t\t\tInterfaceId: \"eth1/10\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetDefaultQosPolicyInterfaceInPolicyMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getDefaultQosPolicyInterfaceInPolicyMap(GetDefaultQosPolicyInterfaceInPolicyMapArgs.builder()\n            .interfaceId(\"eth1/10\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getDefaultQosPolicyInterfaceInPolicyMap\n      Arguments:\n        interfaceId: eth1/10\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultQosPolicyInterfaceInPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultQosPolicyInterfaceInPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId",
                    "policyMapName"
                ]
            }
        },
        "nxos:index/getDefaultQosPolicyMap:getDefaultQosPolicyMap": {
            "description": "This data source can read the default QoS policy map configuration.\n\n- API Documentation: [ipqosPMapInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:PMapInst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getDefaultQosPolicyMap({\n    name: \"PM1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_default_qos_policy_map(name=\"PM1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetDefaultQosPolicyMap.Invoke(new()\n    {\n        Name = \"PM1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupDefaultQosPolicyMap(ctx, \u0026nxos.LookupDefaultQosPolicyMapArgs{\n\t\t\tName: \"PM1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetDefaultQosPolicyMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getDefaultQosPolicyMap(GetDefaultQosPolicyMapArgs.builder()\n            .name(\"PM1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getDefaultQosPolicyMap\n      Arguments:\n        name: PM1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultQosPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultQosPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "matchType": {
                        "type": "string",
                        "description": "Match type.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "matchType",
                    "name"
                ]
            }
        },
        "nxos:index/getDefaultQosPolicyMapMatchClassMap:getDefaultQosPolicyMapMatchClassMap": {
            "description": "This data source can read the default QoS policy map match class map configuration.\n\n- API Documentation: [ipqosMatchCMap](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:MatchCMap/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getDefaultQosPolicyMapMatchClassMap({\n    name: \"Voice\",\n    policyMapName: \"PM1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_default_qos_policy_map_match_class_map(name=\"Voice\",\n    policy_map_name=\"PM1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetDefaultQosPolicyMapMatchClassMap.Invoke(new()\n    {\n        Name = \"Voice\",\n        PolicyMapName = \"PM1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupDefaultQosPolicyMapMatchClassMap(ctx, \u0026nxos.LookupDefaultQosPolicyMapMatchClassMapArgs{\n\t\t\tName:          \"Voice\",\n\t\t\tPolicyMapName: \"PM1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetDefaultQosPolicyMapMatchClassMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getDefaultQosPolicyMapMatchClassMap(GetDefaultQosPolicyMapMatchClassMapArgs.builder()\n            .name(\"Voice\")\n            .policyMapName(\"PM1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getDefaultQosPolicyMapMatchClassMap\n      Arguments:\n        name: Voice\n        policyMapName: PM1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultQosPolicyMapMatchClassMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "policyMapName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultQosPolicyMapMatchClassMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "policyMapName"
                ]
            }
        },
        "nxos:index/getDefaultQosPolicyMapMatchClassMapPolice:getDefaultQosPolicyMapMatchClassMapPolice": {
            "description": "This data source can read the default QoS policy map match class map police configuration.\n\n- API Documentation: [ipqosPolice](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:Police/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getDefaultQosPolicyMapMatchClassMapPolice({\n    classMapName: \"Voice\",\n    policyMapName: \"PM1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_default_qos_policy_map_match_class_map_police(class_map_name=\"Voice\",\n    policy_map_name=\"PM1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetDefaultQosPolicyMapMatchClassMapPolice.Invoke(new()\n    {\n        ClassMapName = \"Voice\",\n        PolicyMapName = \"PM1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupDefaultQosPolicyMapMatchClassMapPolice(ctx, \u0026nxos.LookupDefaultQosPolicyMapMatchClassMapPoliceArgs{\n\t\t\tClassMapName:  \"Voice\",\n\t\t\tPolicyMapName: \"PM1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetDefaultQosPolicyMapMatchClassMapPoliceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getDefaultQosPolicyMapMatchClassMapPolice(GetDefaultQosPolicyMapMatchClassMapPoliceArgs.builder()\n            .classMapName(\"Voice\")\n            .policyMapName(\"PM1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getDefaultQosPolicyMapMatchClassMapPolice\n      Arguments:\n        classMapName: Voice\n        policyMapName: PM1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultQosPolicyMapMatchClassMapPolice.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "policyMapName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultQosPolicyMapMatchClassMapPolice.\n",
                "properties": {
                    "bcRate": {
                        "type": "integer",
                        "description": "CIR burst rate.\n"
                    },
                    "bcUnit": {
                        "type": "string",
                        "description": "CIR burst rate unit.\n"
                    },
                    "beRate": {
                        "type": "integer",
                        "description": "PIR burst rate.\n"
                    },
                    "beUnit": {
                        "type": "string",
                        "description": "PIR burst rate unit.\n"
                    },
                    "cirRate": {
                        "type": "integer",
                        "description": "CIR rate.\n"
                    },
                    "cirUnit": {
                        "type": "string",
                        "description": "CIR rate unit.\n"
                    },
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "conformAction": {
                        "type": "string",
                        "description": "Conform action.\n"
                    },
                    "conformSetCos": {
                        "type": "integer",
                        "description": "Set CoS for conforming traffic.\n"
                    },
                    "conformSetDscp": {
                        "type": "integer",
                        "description": "Set DSCP for conforming traffic.\n"
                    },
                    "conformSetPrecedence": {
                        "type": "string",
                        "description": "Set precedence for conforming traffic.\n"
                    },
                    "conformSetQosGroup": {
                        "type": "integer",
                        "description": "Set qos-group for conforming traffic.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "exceedAction": {
                        "type": "string",
                        "description": "Exceed action.\n"
                    },
                    "exceedSetCos": {
                        "type": "integer",
                        "description": "Set CoS for exceeding traffic.\n"
                    },
                    "exceedSetDscp": {
                        "type": "integer",
                        "description": "Set DSCP for exceeding traffic.\n"
                    },
                    "exceedSetPrecedence": {
                        "type": "string",
                        "description": "Set precedence for exceeding traffic.\n"
                    },
                    "exceedSetQosGroup": {
                        "type": "integer",
                        "description": "Set qos-group for exceeding traffic.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "pirRate": {
                        "type": "integer",
                        "description": "PIR rate.\n"
                    },
                    "pirUnit": {
                        "type": "string",
                        "description": "PIR rate unit.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    },
                    "violateAction": {
                        "type": "string",
                        "description": "Violate action.\n"
                    },
                    "violateSetCos": {
                        "type": "integer",
                        "description": "Set CoS for violating traffic.\n"
                    },
                    "violateSetDscp": {
                        "type": "integer",
                        "description": "Set DSCP for violating traffic.\n"
                    },
                    "violateSetPrecedence": {
                        "type": "string",
                        "description": "Set precedence for violating traffic.\n"
                    },
                    "violateSetQosGroup": {
                        "type": "integer",
                        "description": "Set qos-group for violating traffic.\n"
                    }
                },
                "type": "object",
                "required": [
                    "bcRate",
                    "bcUnit",
                    "beRate",
                    "beUnit",
                    "cirRate",
                    "cirUnit",
                    "classMapName",
                    "conformAction",
                    "conformSetCos",
                    "conformSetDscp",
                    "conformSetPrecedence",
                    "conformSetQosGroup",
                    "exceedAction",
                    "exceedSetCos",
                    "exceedSetDscp",
                    "exceedSetPrecedence",
                    "exceedSetQosGroup",
                    "id",
                    "pirRate",
                    "pirUnit",
                    "policyMapName",
                    "violateAction",
                    "violateSetCos",
                    "violateSetDscp",
                    "violateSetPrecedence",
                    "violateSetQosGroup"
                ]
            }
        },
        "nxos:index/getDefaultQosPolicyMapMatchClassMapSetQosGroup:getDefaultQosPolicyMapMatchClassMapSetQosGroup": {
            "description": "This data source can read the default QoS policy map match class map set QoS group configuration.\n\n- API Documentation: [ipqosSetQoSGrp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:SetQoSGrp/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getDefaultQosPolicyMapMatchClassMapSetQosGroup({\n    classMapName: \"Voice\",\n    policyMapName: \"PM1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_default_qos_policy_map_match_class_map_set_qos_group(class_map_name=\"Voice\",\n    policy_map_name=\"PM1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetDefaultQosPolicyMapMatchClassMapSetQosGroup.Invoke(new()\n    {\n        ClassMapName = \"Voice\",\n        PolicyMapName = \"PM1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupDefaultQosPolicyMapMatchClassMapSetQosGroup(ctx, \u0026nxos.LookupDefaultQosPolicyMapMatchClassMapSetQosGroupArgs{\n\t\t\tClassMapName:  \"Voice\",\n\t\t\tPolicyMapName: \"PM1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetDefaultQosPolicyMapMatchClassMapSetQosGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getDefaultQosPolicyMapMatchClassMapSetQosGroup(GetDefaultQosPolicyMapMatchClassMapSetQosGroupArgs.builder()\n            .classMapName(\"Voice\")\n            .policyMapName(\"PM1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getDefaultQosPolicyMapMatchClassMapSetQosGroup\n      Arguments:\n        classMapName: Voice\n        policyMapName: PM1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultQosPolicyMapMatchClassMapSetQosGroup.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "policyMapName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultQosPolicyMapMatchClassMapSetQosGroup.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    },
                    "qosGroupId": {
                        "type": "integer",
                        "description": "QoS group ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "id",
                    "policyMapName",
                    "qosGroupId"
                ]
            }
        },
        "nxos:index/getDhcpRelayAddress:getDhcpRelayAddress": {
            "description": "This data source can read a DHCP relay address.\n\n- API Documentation: [dhcpRelayAddr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/DHCP/dhcp:RelayAddr/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getDhcpRelayAddress({\n    address: \"1.1.1.1\",\n    interfaceId: \"eth1/10\",\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_dhcp_relay_address(address=\"1.1.1.1\",\n    interface_id=\"eth1/10\",\n    vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetDhcpRelayAddress.Invoke(new()\n    {\n        Address = \"1.1.1.1\",\n        InterfaceId = \"eth1/10\",\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupDhcpRelayAddress(ctx, \u0026nxos.LookupDhcpRelayAddressArgs{\n\t\t\tAddress:     \"1.1.1.1\",\n\t\t\tInterfaceId: \"eth1/10\",\n\t\t\tVrf:         \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetDhcpRelayAddressArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getDhcpRelayAddress(GetDhcpRelayAddressArgs.builder()\n            .address(\"1.1.1.1\")\n            .interfaceId(\"eth1/10\")\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getDhcpRelayAddress\n      Arguments:\n        address: 1.1.1.1\n        interfaceId: eth1/10\n        vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDhcpRelayAddress.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "IPv4 or IPv6 address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "interfaceId",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDhcpRelayAddress.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "IPv4 or IPv6 address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "id",
                    "interfaceId",
                    "vrf"
                ]
            }
        },
        "nxos:index/getDhcpRelayInterface:getDhcpRelayInterface": {
            "description": "This data source can read a DHCP relay interface.\n\n- API Documentation: [dhcpRelayIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/DHCP/dhcp:RelayIf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getDhcpRelayInterface({\n    interfaceId: \"eth1/10\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_dhcp_relay_interface(interface_id=\"eth1/10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetDhcpRelayInterface.Invoke(new()\n    {\n        InterfaceId = \"eth1/10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupDhcpRelayInterface(ctx, \u0026nxos.LookupDhcpRelayInterfaceArgs{\n\t\t\tInterfaceId: \"eth1/10\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetDhcpRelayInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getDhcpRelayInterface(GetDhcpRelayInterfaceArgs.builder()\n            .interfaceId(\"eth1/10\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getDhcpRelayInterface\n      Arguments:\n        interfaceId: eth1/10\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDhcpRelayInterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDhcpRelayInterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId"
                ]
            }
        },
        "nxos:index/getEthernet:getEthernet": {
            "description": "This data source can read global ethernet settings.\n\n- API Documentation: [ethpmInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Interfaces/ethpm:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getEthernet({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ethernet()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetEthernet.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupEthernet(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetEthernetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getEthernet();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getEthernet\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getEthernet.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEthernet.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "System jumbo MTU.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "mtu"
                ]
            }
        },
        "nxos:index/getEvpn:getEvpn": {
            "description": "This data source can read a global EVPN configuration.\n\n- API Documentation: [rtctrlL2Evpn](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:L2Evpn/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getEvpn({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_evpn()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetEvpn.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupEvpn(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetEvpnArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getEvpn();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getEvpn\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getEvpn.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEvpn.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getEvpnVni:getEvpnVni": {
            "description": "This data source can read a EVPN VNI Route Distinguisher.\n\n- API Documentation: [rtctrlBDEvi](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:BDEvi/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getEvpnVni({\n    encap: \"vxlan-123456\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_evpn_vni(encap=\"vxlan-123456\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetEvpnVni.Invoke(new()\n    {\n        Encap = \"vxlan-123456\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupEvpnVni(ctx, \u0026nxos.LookupEvpnVniArgs{\n\t\t\tEncap: \"vxlan-123456\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetEvpnVniArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getEvpnVni(GetEvpnVniArgs.builder()\n            .encap(\"vxlan-123456\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getEvpnVni\n      Arguments:\n        encap: vxlan-123456\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getEvpnVni.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "encap"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEvpnVni.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "routeDistinguisher": {
                        "type": "string",
                        "description": "Route Distinguisher value in NX-OS DME format.\n"
                    }
                },
                "type": "object",
                "required": [
                    "encap",
                    "id",
                    "routeDistinguisher"
                ]
            }
        },
        "nxos:index/getEvpnVniRouteTarget:getEvpnVniRouteTarget": {
            "description": "This data source can read a EVPN VNI Route Target Entry.\n\n- API Documentation: [rtctrlRttEntry](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:RttEntry/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getEvpnVniRouteTarget({\n    direction: \"import\",\n    encap: \"vxlan-123456\",\n    routeTarget: \"route-target:as2-nn2:2:2\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_evpn_vni_route_target(direction=\"import\",\n    encap=\"vxlan-123456\",\n    route_target=\"route-target:as2-nn2:2:2\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetEvpnVniRouteTarget.Invoke(new()\n    {\n        Direction = \"import\",\n        Encap = \"vxlan-123456\",\n        RouteTarget = \"route-target:as2-nn2:2:2\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupEvpnVniRouteTarget(ctx, \u0026nxos.LookupEvpnVniRouteTargetArgs{\n\t\t\tDirection:   \"import\",\n\t\t\tEncap:       \"vxlan-123456\",\n\t\t\tRouteTarget: \"route-target:as2-nn2:2:2\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetEvpnVniRouteTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getEvpnVniRouteTarget(GetEvpnVniRouteTargetArgs.builder()\n            .direction(\"import\")\n            .encap(\"vxlan-123456\")\n            .routeTarget(\"route-target:as2-nn2:2:2\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getEvpnVniRouteTarget\n      Arguments:\n        direction: import\n        encap: vxlan-123456\n        routeTarget: route-target:as2-nn2:2:2\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getEvpnVniRouteTarget.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Target direction.\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    },
                    "routeTarget": {
                        "type": "string",
                        "description": "Route Target in NX-OS DME format.\n"
                    }
                },
                "type": "object",
                "required": [
                    "direction",
                    "encap",
                    "routeTarget"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEvpnVniRouteTarget.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Target direction.\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "routeTarget": {
                        "type": "string",
                        "description": "Route Target in NX-OS DME format.\n"
                    }
                },
                "type": "object",
                "required": [
                    "direction",
                    "encap",
                    "id",
                    "routeTarget"
                ]
            }
        },
        "nxos:index/getEvpnVniRouteTargetDirection:getEvpnVniRouteTargetDirection": {
            "description": "This data source can read a EVPN VNI Route Target direction.\n\n- API Documentation: [rtctrlRttP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:RttP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getEvpnVniRouteTargetDirection({\n    direction: \"import\",\n    encap: \"vxlan-123456\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_evpn_vni_route_target_direction(direction=\"import\",\n    encap=\"vxlan-123456\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetEvpnVniRouteTargetDirection.Invoke(new()\n    {\n        Direction = \"import\",\n        Encap = \"vxlan-123456\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupEvpnVniRouteTargetDirection(ctx, \u0026nxos.LookupEvpnVniRouteTargetDirectionArgs{\n\t\t\tDirection: \"import\",\n\t\t\tEncap:     \"vxlan-123456\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetEvpnVniRouteTargetDirectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getEvpnVniRouteTargetDirection(GetEvpnVniRouteTargetDirectionArgs.builder()\n            .direction(\"import\")\n            .encap(\"vxlan-123456\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getEvpnVniRouteTargetDirection\n      Arguments:\n        direction: import\n        encap: vxlan-123456\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getEvpnVniRouteTargetDirection.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Target direction.\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "direction",
                    "encap"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEvpnVniRouteTargetDirection.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Target direction.\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "direction",
                    "encap",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureBfd:getFeatureBfd": {
            "description": "This data source can read the BFD feature configuration.\n\n- API Documentation: [fmBfd](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Bfd/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureBfd({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_bfd()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureBfd.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureBfd(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureBfdArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureBfd();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureBfd\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureBfd.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureBfd.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureBgp:getFeatureBgp": {
            "description": "This data source can read the BGP feature configuration.\n\n- API Documentation: [fmBgp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Bgp/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureBgp({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_bgp()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureBgp.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureBgp(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureBgpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureBgp();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureBgp\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureBgp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureBgp.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureDhcp:getFeatureDhcp": {
            "description": "This data source can read the DHCP feature configuration.\n\n- API Documentation: [fmDhcp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Dhcp/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureDhcp({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_dhcp()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureDhcp.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureDhcp(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureDhcpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureDhcp();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureDhcp\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureDhcp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureDhcp.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureEvpn:getFeatureEvpn": {
            "description": "This data source can read the EVPN feature (aka `nv overlay evpn`) configuration.\n\n- API Documentation: [fmEvpn](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Evpn/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureEvpn({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_evpn()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureEvpn.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureEvpn(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureEvpnArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureEvpn();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureEvpn\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureEvpn.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureEvpn.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureHmm:getFeatureHmm": {
            "description": "This data source can read the HMM feature (aka `feature fabric forwarding`) configuration.\n\n- API Documentation: [fmHmm](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Hmm/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureHmm({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_hmm()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureHmm.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureHmm(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureHmmArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureHmm();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureHmm\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureHmm.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureHmm.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureHsrp:getFeatureHsrp": {
            "description": "This data source can read the HSRP feature configuration.\n\n- API Documentation: [fmHsrp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Hsrp/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureHsrp({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_hsrp()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureHsrp.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureHsrp(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureHsrpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureHsrp();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureHsrp\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureHsrp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureHsrp.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureInterfaceVlan:getFeatureInterfaceVlan": {
            "description": "This data source can read the Interface VLAN feature configuration.\n\n- API Documentation: [fmInterfaceVlan](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:InterfaceVlan/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureInterfaceVlan({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_interface_vlan()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureInterfaceVlan.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureInterfaceVlan(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureInterfaceVlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureInterfaceVlan();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureInterfaceVlan\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureInterfaceVlan.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureInterfaceVlan.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureIsis:getFeatureIsis": {
            "description": "This data source can read the ISIS feature configuration.\n\n- API Documentation: [fmIsis](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Isis/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureIsis({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_isis()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureIsis.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureIsis(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureIsisArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureIsis();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureIsis\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureIsis.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureIsis.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureLacp:getFeatureLacp": {
            "description": "This data source can read the LACP feature configuration.\n\n- API Documentation: [fmLacp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Lacp/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureLacp({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_lacp()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureLacp.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureLacp(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureLacpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureLacp();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureLacp\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureLacp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureLacp.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureLldp:getFeatureLldp": {
            "description": "This data source can read the LLDP feature configuration.\n\n- API Documentation: [fmLldp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Lldp/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureLldp({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_lldp()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureLldp.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureLldp(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureLldpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureLldp();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureLldp\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureLldp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureLldp.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureMacsec:getFeatureMacsec": {
            "description": "This data source can read the MACsec feature configuration.\n\n- API Documentation: [fmMacsec](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Macsec/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureMacsec({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_macsec()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureMacsec.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureMacsec(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureMacsecArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureMacsec();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureMacsec\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureMacsec.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureMacsec.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureNetflow:getFeatureNetflow": {
            "description": "This data source can read the Netflow feature configuration.\n\n- API Documentation: [fmNetflow](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Netflow/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureNetflow({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_netflow()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureNetflow.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureNetflow(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureNetflowArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureNetflow();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureNetflow\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureNetflow.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureNetflow.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureNvOverlay:getFeatureNvOverlay": {
            "description": "This data source can read the NV Overlay feature configuration.\n\n- API Documentation: [fmNvo](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Nvo/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureNvOverlay({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_nv_overlay()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureNvOverlay.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureNvOverlay(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureNvOverlayArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureNvOverlay();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureNvOverlay\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureNvOverlay.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureNvOverlay.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureOspf:getFeatureOspf": {
            "description": "This data source can read the OSPF feature configuration.\n\n- API Documentation: [fmOspf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Ospf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureOspf({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_ospf()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureOspf.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureOspf(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureOspfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureOspf();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureOspf\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureOspf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureOspf.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureOspfv3:getFeatureOspfv3": {
            "description": "This data source can read the OSPFv3 feature configuration.\n\n- API Documentation: [fmOspfv3](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Ospfv3/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureOspfv3({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_ospfv3()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureOspfv3.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureOspfv3(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureOspfv3Args;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureOspfv3();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureOspfv3\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureOspfv3.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureOspfv3.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeaturePim:getFeaturePim": {
            "description": "This data source can read the PIM feature configuration.\n\n- API Documentation: [fmPim](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Pim/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeaturePim({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_pim()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeaturePim.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeaturePim(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeaturePimArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeaturePim();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeaturePim\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeaturePim.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeaturePim.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeaturePtp:getFeaturePtp": {
            "description": "This data source can read the PTP feature configuration.\n\n- API Documentation: [fmPtp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Ptp/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeaturePtp({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_ptp()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeaturePtp.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeaturePtp(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeaturePtpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeaturePtp();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeaturePtp\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeaturePtp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeaturePtp.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeaturePvlan:getFeaturePvlan": {
            "description": "This data source can read the PVLAN feature configuration.\n\n- API Documentation: [fmPvlan](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Pvlan/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeaturePvlan({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_pvlan()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeaturePvlan.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeaturePvlan(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeaturePvlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeaturePvlan();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeaturePvlan\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeaturePvlan.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeaturePvlan.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureSsh:getFeatureSsh": {
            "description": "This data source can read the SSH feature configuration.\n\n- API Documentation: [fmSsh](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Ssh/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureSsh({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_ssh()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureSsh.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureSsh(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureSshArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureSsh();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureSsh\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureSsh.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureSsh.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureTacacs:getFeatureTacacs": {
            "description": "This data source can read the TACACS+ feature configuration.\n\n- API Documentation: [fmTacacsplus](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Tacacsplus/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureTacacs({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_tacacs()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureTacacs.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureTacacs(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureTacacsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureTacacs();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureTacacs\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureTacacs.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureTacacs.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureTelnet:getFeatureTelnet": {
            "description": "This data source can read the Telnet feature configuration.\n\n- API Documentation: [fmTelnet](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Telnet/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureTelnet({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_telnet()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureTelnet.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureTelnet(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureTelnetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureTelnet();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureTelnet\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureTelnet.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureTelnet.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureUdld:getFeatureUdld": {
            "description": "This data source can read the UDLD feature configuration.\n\n- API Documentation: [fmUdld](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Udld/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureUdld({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_udld()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureUdld.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureUdld(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureUdldArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureUdld();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureUdld\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureUdld.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureUdld.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureVnSegment:getFeatureVnSegment": {
            "description": "This data source can read the VN Segment feature configuration.\n\n- API Documentation: [fmVnSegment](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:VnSegment/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureVnSegment({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_vn_segment()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureVnSegment.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureVnSegment(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureVnSegmentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureVnSegment();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureVnSegment\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureVnSegment.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureVnSegment.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getFeatureVpc:getFeatureVpc": {
            "description": "This data source can read the VPC feature configuration.\n\n- API Documentation: [fmVpc](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Feature%20Management/fm:Vpc/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getFeatureVpc({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_feature_vpc()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetFeatureVpc.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupFeatureVpc(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetFeatureVpcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getFeatureVpc();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getFeatureVpc\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatureVpc.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatureVpc.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getHmm:getHmm": {
            "description": "This data source can read the Host Mobility Manager (HMM) Entity configuration.\n\n- API Documentation: [hmmEntity](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Host%20Mobility/hmm:Entity/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getHmm({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_hmm()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetHmm.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupHmm(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetHmmArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getHmm();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getHmm\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getHmm.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getHmm.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getHmmInstance:getHmmInstance": {
            "description": "This data source can read the HMM Fabric Forwarding Instance configuration.\n\n- API Documentation: [hmmFwdInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Host%20Mobility/hmm:FwdInst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getHmmInstance({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_hmm_instance()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetHmmInstance.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupHmmInstance(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetHmmInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getHmmInstance();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getHmmInstance\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getHmmInstance.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getHmmInstance.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "anycastMac": {
                        "type": "string",
                        "description": "Anycast Gateway MAC address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "anycastMac",
                    "id"
                ]
            }
        },
        "nxos:index/getHmmInterface:getHmmInterface": {
            "description": "This data source can read the HMM Fabric Forwarding mode information related to an Interface.\n\n- API Documentation: [hmmFwdIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Host%20Mobility/hmm:FwdIf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getHmmInterface({\n    interfaceId: \"vlan10\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_hmm_interface(interface_id=\"vlan10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetHmmInterface.Invoke(new()\n    {\n        InterfaceId = \"vlan10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupHmmInterface(ctx, \u0026nxos.LookupHmmInterfaceArgs{\n\t\t\tInterfaceId: \"vlan10\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetHmmInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getHmmInterface(GetHmmInterfaceArgs.builder()\n            .interfaceId(\"vlan10\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getHmmInterface\n      Arguments:\n        interfaceId: vlan10\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getHmmInterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `vlan10`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getHmmInterface.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `vlan10`.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "HMM Fabric Forwarding mode information for the interface.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id",
                    "interfaceId",
                    "mode"
                ]
            }
        },
        "nxos:index/getIpv4AccessList:getIpv4AccessList": {
            "description": "This data source can read IPv4 Access Lists.\n\n- API Documentation: [ipv4aclACL](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Security%20and%20Policing/ipv4acl:ACL/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getIpv4AccessList({\n    name: \"ACL1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ipv4_access_list(name=\"ACL1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetIpv4AccessList.Invoke(new()\n    {\n        Name = \"ACL1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupIpv4AccessList(ctx, \u0026nxos.LookupIpv4AccessListArgs{\n\t\t\tName: \"ACL1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetIpv4AccessListArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getIpv4AccessList(GetIpv4AccessListArgs.builder()\n            .name(\"ACL1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getIpv4AccessList\n      Arguments:\n        name: ACL1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4AccessList.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Access list name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4AccessList.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Access list name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ]
            }
        },
        "nxos:index/getIpv4AccessListEntry:getIpv4AccessListEntry": {
            "description": "This data source can read IPv4 Access List Entries.\n\n- API Documentation: [ipv4aclACE](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Security%20and%20Policing/ipv4acl:ACE/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getIpv4AccessListEntry({\n    name: \"ACL1\",\n    sequenceNumber: 10,\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ipv4_access_list_entry(name=\"ACL1\",\n    sequence_number=10)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetIpv4AccessListEntry.Invoke(new()\n    {\n        Name = \"ACL1\",\n        SequenceNumber = 10,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupIpv4AccessListEntry(ctx, \u0026nxos.LookupIpv4AccessListEntryArgs{\n\t\t\tName:           \"ACL1\",\n\t\t\tSequenceNumber: 10,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetIpv4AccessListEntryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getIpv4AccessListEntry(GetIpv4AccessListEntryArgs.builder()\n            .name(\"ACL1\")\n            .sequenceNumber(10)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getIpv4AccessListEntry\n      Arguments:\n        name: ACL1\n        sequenceNumber: 10\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4AccessListEntry.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Access list name.\n"
                    },
                    "sequenceNumber": {
                        "type": "integer",
                        "description": "Sequence number.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "sequenceNumber"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4AccessListEntry.\n",
                "properties": {
                    "ack": {
                        "type": "boolean",
                        "description": "Match TCP ACK flag.\n"
                    },
                    "action": {
                        "type": "string",
                        "description": "Action.\n"
                    },
                    "destinationAddressGroup": {
                        "type": "string",
                        "description": "Destination address group.\n"
                    },
                    "destinationPort1": {
                        "type": "string",
                        "description": "First destination port number or name.\n"
                    },
                    "destinationPort2": {
                        "type": "string",
                        "description": "Second destination port number or name.\n"
                    },
                    "destinationPortGroup": {
                        "type": "string",
                        "description": "Destination port group.\n"
                    },
                    "destinationPortMask": {
                        "type": "string",
                        "description": "Destination port mask number or name.\n"
                    },
                    "destinationPortOperator": {
                        "type": "string",
                        "description": "Destination port operator.\n"
                    },
                    "destinationPrefix": {
                        "type": "string",
                        "description": "Destination prefix.\n"
                    },
                    "destinationPrefixLength": {
                        "type": "string",
                        "description": "Destination prefix length.\n"
                    },
                    "destinationPrefixMask": {
                        "type": "string",
                        "description": "Destination prefix mask.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "Match DSCP.\n"
                    },
                    "est": {
                        "type": "boolean",
                        "description": "Match TCP EST flag.\n"
                    },
                    "fin": {
                        "type": "boolean",
                        "description": "Match TCP FIN flag.\n"
                    },
                    "fragment": {
                        "type": "boolean",
                        "description": "Match non-initial fragment.\n"
                    },
                    "httpOptionType": {
                        "type": "string",
                        "description": "HTTP option method.\n"
                    },
                    "icmpCode": {
                        "type": "integer",
                        "description": "ICMP code.\n"
                    },
                    "icmpType": {
                        "type": "integer",
                        "description": "ICMP type.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "logging": {
                        "type": "boolean",
                        "description": "Log matches against ACL entry.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Access list name.\n"
                    },
                    "packetLength1": {
                        "type": "string",
                        "description": "First packet length. Either `invalid` or a number between 19 and 9210.\n"
                    },
                    "packetLength2": {
                        "type": "string",
                        "description": "Second packet length. Either `invalid` or a number between 19 and 9210.\n"
                    },
                    "packetLengthOperator": {
                        "type": "string",
                        "description": "Packet length operator.\n"
                    },
                    "precedence": {
                        "type": "string",
                        "description": "Precedence. Either `unspecified` or a number between 0 and 7.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Protocol name or number.\n"
                    },
                    "protocolMask": {
                        "type": "string",
                        "description": "Protocol mask name or number.\n"
                    },
                    "psh": {
                        "type": "boolean",
                        "description": "Match TCP PSH flag.\n"
                    },
                    "redirect": {
                        "type": "string",
                        "description": "Redirect action.\n"
                    },
                    "remark": {
                        "type": "string",
                        "description": "ACL comment.\n"
                    },
                    "rev": {
                        "type": "boolean",
                        "description": "Match TCP REV flag.\n"
                    },
                    "rst": {
                        "type": "boolean",
                        "description": "Match TCP RST flag.\n"
                    },
                    "sequenceNumber": {
                        "type": "integer",
                        "description": "Sequence number.\n"
                    },
                    "sourceAddressGroup": {
                        "type": "string",
                        "description": "Source address group.\n"
                    },
                    "sourcePort1": {
                        "type": "string",
                        "description": "First source port name or number.\n"
                    },
                    "sourcePort2": {
                        "type": "string",
                        "description": "Second source port name or number.\n"
                    },
                    "sourcePortGroup": {
                        "type": "string",
                        "description": "Source port group.\n"
                    },
                    "sourcePortMask": {
                        "type": "string",
                        "description": "Source port mask name or number.\n"
                    },
                    "sourcePortOperator": {
                        "type": "string",
                        "description": "Source port operator.\n"
                    },
                    "sourcePrefix": {
                        "type": "string",
                        "description": "Source prefix.\n"
                    },
                    "sourcePrefixLength": {
                        "type": "string",
                        "description": "Source prefix length.\n"
                    },
                    "sourcePrefixMask": {
                        "type": "string",
                        "description": "Source prefix mask.\n"
                    },
                    "syn": {
                        "type": "boolean",
                        "description": "Match TCP SYN flag.\n"
                    },
                    "timeRange": {
                        "type": "string",
                        "description": "Time range name.\n"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "TTL.\n"
                    },
                    "urg": {
                        "type": "boolean",
                        "description": "Match TCP URG flag.\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "VLAN ID.\n"
                    },
                    "vni": {
                        "type": "string",
                        "description": "NVE VNI ID. Either `invalid` or a number between 0 and 16777216.\n"
                    }
                },
                "type": "object",
                "required": [
                    "ack",
                    "action",
                    "destinationAddressGroup",
                    "destinationPort1",
                    "destinationPort2",
                    "destinationPortGroup",
                    "destinationPortMask",
                    "destinationPortOperator",
                    "destinationPrefix",
                    "destinationPrefixLength",
                    "destinationPrefixMask",
                    "dscp",
                    "est",
                    "fin",
                    "fragment",
                    "httpOptionType",
                    "icmpCode",
                    "icmpType",
                    "id",
                    "logging",
                    "name",
                    "packetLength1",
                    "packetLength2",
                    "packetLengthOperator",
                    "precedence",
                    "protocol",
                    "protocolMask",
                    "psh",
                    "redirect",
                    "remark",
                    "rev",
                    "rst",
                    "sequenceNumber",
                    "sourceAddressGroup",
                    "sourcePort1",
                    "sourcePort2",
                    "sourcePortGroup",
                    "sourcePortMask",
                    "sourcePortOperator",
                    "sourcePrefix",
                    "sourcePrefixLength",
                    "sourcePrefixMask",
                    "syn",
                    "timeRange",
                    "ttl",
                    "urg",
                    "vlan",
                    "vni"
                ]
            }
        },
        "nxos:index/getIpv4AccessListPolicyEgressInterface:getIpv4AccessListPolicyEgressInterface": {
            "description": "This data source can read an IPv4 Access List Policy Egress Interface.\n\n- API Documentation: [aclIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Security%20and%20Policing/acl:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getIpv4AccessListPolicyEgressInterface({\n    interfaceId: \"eth1/10\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ipv4_access_list_policy_egress_interface(interface_id=\"eth1/10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetIpv4AccessListPolicyEgressInterface.Invoke(new()\n    {\n        InterfaceId = \"eth1/10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupIpv4AccessListPolicyEgressInterface(ctx, \u0026nxos.LookupIpv4AccessListPolicyEgressInterfaceArgs{\n\t\t\tInterfaceId: \"eth1/10\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetIpv4AccessListPolicyEgressInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getIpv4AccessListPolicyEgressInterface(GetIpv4AccessListPolicyEgressInterfaceArgs.builder()\n            .interfaceId(\"eth1/10\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getIpv4AccessListPolicyEgressInterface\n      Arguments:\n        interfaceId: eth1/10\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4AccessListPolicyEgressInterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4AccessListPolicyEgressInterface.\n",
                "properties": {
                    "accessListName": {
                        "type": "string",
                        "description": "Access list name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accessListName",
                    "id",
                    "interfaceId"
                ]
            }
        },
        "nxos:index/getIpv4AccessListPolicyIngressInterface:getIpv4AccessListPolicyIngressInterface": {
            "description": "This data source can read an IPv4 Access List Policy Ingress Interface.\n\n- API Documentation: [aclIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Security%20and%20Policing/acl:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getIpv4AccessListPolicyIngressInterface({\n    interfaceId: \"eth1/10\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ipv4_access_list_policy_ingress_interface(interface_id=\"eth1/10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetIpv4AccessListPolicyIngressInterface.Invoke(new()\n    {\n        InterfaceId = \"eth1/10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupIpv4AccessListPolicyIngressInterface(ctx, \u0026nxos.LookupIpv4AccessListPolicyIngressInterfaceArgs{\n\t\t\tInterfaceId: \"eth1/10\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetIpv4AccessListPolicyIngressInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getIpv4AccessListPolicyIngressInterface(GetIpv4AccessListPolicyIngressInterfaceArgs.builder()\n            .interfaceId(\"eth1/10\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getIpv4AccessListPolicyIngressInterface\n      Arguments:\n        interfaceId: eth1/10\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4AccessListPolicyIngressInterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4AccessListPolicyIngressInterface.\n",
                "properties": {
                    "accessListName": {
                        "type": "string",
                        "description": "Access list name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accessListName",
                    "id",
                    "interfaceId"
                ]
            }
        },
        "nxos:index/getIpv4Interface:getIpv4Interface": {
            "description": "This data source can read an IPv4 interface.\n\n- API Documentation: [ipv4If](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/ipv4:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getIpv4Interface({\n    interfaceId: \"eth1/10\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ipv4_interface(interface_id=\"eth1/10\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetIpv4Interface.Invoke(new()\n    {\n        InterfaceId = \"eth1/10\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupIpv4Interface(ctx, \u0026nxos.LookupIpv4InterfaceArgs{\n\t\t\tInterfaceId: \"eth1/10\",\n\t\t\tVrf:         \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetIpv4InterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getIpv4Interface(GetIpv4InterfaceArgs.builder()\n            .interfaceId(\"eth1/10\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getIpv4Interface\n      Arguments:\n        interfaceId: eth1/10\n        vrf: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4Interface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4Interface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dropGlean": {
                        "type": "string",
                        "description": "ip drop-glean enabled/disabled.\n"
                    },
                    "forward": {
                        "type": "string",
                        "description": "ip forward enabled/disabled.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "unnumbered": {
                        "type": "string",
                        "description": "IP unnumbered. Reference to interface must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "urpf": {
                        "type": "string",
                        "description": "URPF (unicast Reverse Path Forwarding).\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "dropGlean",
                    "forward",
                    "id",
                    "interfaceId",
                    "unnumbered",
                    "urpf",
                    "vrf"
                ]
            }
        },
        "nxos:index/getIpv4InterfaceAddress:getIpv4InterfaceAddress": {
            "description": "This data source can read an IPv4 interface address.\n\n- API Documentation: [ipv4Addr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/ipv4:Addr/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getIpv4InterfaceAddress({\n    address: \"24.63.46.49/30\",\n    interfaceId: \"eth1/10\",\n    vrf: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ipv4_interface_address(address=\"24.63.46.49/30\",\n    interface_id=\"eth1/10\",\n    vrf=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetIpv4InterfaceAddress.Invoke(new()\n    {\n        Address = \"24.63.46.49/30\",\n        InterfaceId = \"eth1/10\",\n        Vrf = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupIpv4InterfaceAddress(ctx, \u0026nxos.LookupIpv4InterfaceAddressArgs{\n\t\t\tAddress:     \"24.63.46.49/30\",\n\t\t\tInterfaceId: \"eth1/10\",\n\t\t\tVrf:         \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetIpv4InterfaceAddressArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getIpv4InterfaceAddress(GetIpv4InterfaceAddressArgs.builder()\n            .address(\"24.63.46.49/30\")\n            .interfaceId(\"eth1/10\")\n            .vrf(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getIpv4InterfaceAddress\n      Arguments:\n        address: 24.63.46.49/30\n        interfaceId: eth1/10\n        vrf: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4InterfaceAddress.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "IPv4 address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "interfaceId",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4InterfaceAddress.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "IPv4 address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Address type.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "id",
                    "interfaceId",
                    "type",
                    "vrf"
                ]
            }
        },
        "nxos:index/getIpv4PrefixListRule:getIpv4PrefixListRule": {
            "description": "This data source can read an IPv4 Prefix List configuration.\n\n- API Documentation: [rtpfxRuleV4](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtpfx:RuleV4/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getIpv4PrefixListRule({\n    name: \"RULE1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ipv4_prefix_list_rule(name=\"RULE1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetIpv4PrefixListRule.Invoke(new()\n    {\n        Name = \"RULE1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupIpv4PrefixListRule(ctx, \u0026nxos.LookupIpv4PrefixListRuleArgs{\n\t\t\tName: \"RULE1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetIpv4PrefixListRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getIpv4PrefixListRule(GetIpv4PrefixListRuleArgs.builder()\n            .name(\"RULE1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getIpv4PrefixListRule\n      Arguments:\n        name: RULE1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4PrefixListRule.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4PrefixListRule.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ]
            }
        },
        "nxos:index/getIpv4PrefixListRuleEntry:getIpv4PrefixListRuleEntry": {
            "description": "This data source can read an IPv4 Prefix List entry configuration.\n\n- API Documentation: [rtpfxEntry](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtpfx:Entry/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getIpv4PrefixListRuleEntry({\n    order: 10,\n    ruleName: \"RULE1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ipv4_prefix_list_rule_entry(order=10,\n    rule_name=\"RULE1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetIpv4PrefixListRuleEntry.Invoke(new()\n    {\n        Order = 10,\n        RuleName = \"RULE1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupIpv4PrefixListRuleEntry(ctx, \u0026nxos.LookupIpv4PrefixListRuleEntryArgs{\n\t\t\tOrder:    10,\n\t\t\tRuleName: \"RULE1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetIpv4PrefixListRuleEntryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getIpv4PrefixListRuleEntry(GetIpv4PrefixListRuleEntryArgs.builder()\n            .order(10)\n            .ruleName(\"RULE1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getIpv4PrefixListRuleEntry\n      Arguments:\n        order: 10\n        ruleName: RULE1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4PrefixListRuleEntry.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "IPv4 Prefix List Rule Entry order.\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "order",
                    "ruleName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4PrefixListRuleEntry.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule Entry action.\n"
                    },
                    "criteria": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule Entry criteria.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "fromRange": {
                        "type": "integer",
                        "description": "IPv4 Prefix List Rule Entry start range.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "IPv4 Prefix List Rule Entry order.\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule Entry prefix.\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "IPv4 Prefix List Rule name.\n"
                    },
                    "toRange": {
                        "type": "integer",
                        "description": "IPv4 Prefix List Rule Entry end range.\n"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "criteria",
                    "fromRange",
                    "id",
                    "order",
                    "prefix",
                    "ruleName",
                    "toRange"
                ]
            }
        },
        "nxos:index/getIpv4StaticRoute:getIpv4StaticRoute": {
            "description": "This data source can read an IPv4 static route.\n\n- API Documentation: [ipv4Route](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/ipv4:Route/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getIpv4StaticRoute({\n    prefix: \"1.1.1.0/24\",\n    vrfName: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ipv4_static_route(prefix=\"1.1.1.0/24\",\n    vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetIpv4StaticRoute.Invoke(new()\n    {\n        Prefix = \"1.1.1.0/24\",\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupIpv4StaticRoute(ctx, \u0026nxos.LookupIpv4StaticRouteArgs{\n\t\t\tPrefix:  \"1.1.1.0/24\",\n\t\t\tVrfName: \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetIpv4StaticRouteArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getIpv4StaticRoute(GetIpv4StaticRouteArgs.builder()\n            .prefix(\"1.1.1.0/24\")\n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getIpv4StaticRoute\n      Arguments:\n        prefix: 1.1.1.0/24\n        vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4StaticRoute.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "Prefix.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "prefix",
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4StaticRoute.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "nextHops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:index/getIpv4StaticRouteNextHop:getIpv4StaticRouteNextHop"
                        },
                        "description": "List of next hops.\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "Prefix.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "nextHops",
                    "prefix",
                    "vrfName"
                ]
            }
        },
        "nxos:index/getIpv4Vrf:getIpv4Vrf": {
            "description": "This data source can read the IPv4 VRF information.\n\n- API Documentation: [ipv4Dom](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/ipv4:Dom/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getIpv4Vrf({\n    name: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ipv4_vrf(name=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetIpv4Vrf.Invoke(new()\n    {\n        Name = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupIpv4Vrf(ctx, \u0026nxos.LookupIpv4VrfArgs{\n\t\t\tName: \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetIpv4VrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getIpv4Vrf(GetIpv4VrfArgs.builder()\n            .name(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getIpv4Vrf\n      Arguments:\n        name: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIpv4Vrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpv4Vrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ]
            }
        },
        "nxos:index/getIsis:getIsis": {
            "description": "This data source can read the global IS-IS configuration.\n\n- API Documentation: [isisEntity](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/isis:Entity/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getIsis({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_isis()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetIsis.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupIsis(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetIsisArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getIsis();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getIsis\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIsis.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIsis.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getIsisInstance:getIsisInstance": {
            "description": "This data source can read the IS-IS instance configuration.\n\n- API Documentation: [isisInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/isis:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getIsisInstance({\n    name: \"ISIS1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_isis_instance(name=\"ISIS1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetIsisInstance.Invoke(new()\n    {\n        Name = \"ISIS1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupIsisInstance(ctx, \u0026nxos.LookupIsisInstanceArgs{\n\t\t\tName: \"ISIS1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetIsisInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getIsisInstance(GetIsisInstanceArgs.builder()\n            .name(\"ISIS1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getIsisInstance\n      Arguments:\n        name: ISIS1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIsisInstance.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "IS-IS instance name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIsisInstance.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "IS-IS instance name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id",
                    "name"
                ]
            }
        },
        "nxos:index/getIsisInterface:getIsisInterface": {
            "description": "This data source can read the IS-IS interface configuration.\n\n- API Documentation: [isisInternalIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/isis:InternalIf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getIsisInterface({\n    interfaceId: \"eth1/10\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_isis_interface(interface_id=\"eth1/10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetIsisInterface.Invoke(new()\n    {\n        InterfaceId = \"eth1/10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupIsisInterface(ctx, \u0026nxos.LookupIsisInterfaceArgs{\n\t\t\tInterfaceId: \"eth1/10\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetIsisInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getIsisInterface(GetIsisInterfaceArgs.builder()\n            .interfaceId(\"eth1/10\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getIsisInterface\n      Arguments:\n        interfaceId: eth1/10\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIsisInterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIsisInterface.\n",
                "properties": {
                    "authenticationCheck": {
                        "type": "boolean",
                        "description": "Authentication Check for ISIS without specific level.\n"
                    },
                    "authenticationCheckL1": {
                        "type": "boolean",
                        "description": "Authentication Check for ISIS on Level-1.\n"
                    },
                    "authenticationCheckL2": {
                        "type": "boolean",
                        "description": "Authentication Check for ISIS on Level-2.\n"
                    },
                    "authenticationKey": {
                        "type": "string",
                        "description": "Authentication Key for IS-IS without specific level.\n"
                    },
                    "authenticationKeyL1": {
                        "type": "string",
                        "description": "Authentication Key for IS-IS on Level-1.\n"
                    },
                    "authenticationKeyL2": {
                        "type": "string",
                        "description": "Authentication Key for IS-IS on Level-2.\n"
                    },
                    "authenticationType": {
                        "type": "string",
                        "description": "IS-IS Authentication-Type without specific level.\n"
                    },
                    "authenticationTypeL1": {
                        "type": "string",
                        "description": "IS-IS Authentication-Type for Level-1.\n"
                    },
                    "authenticationTypeL2": {
                        "type": "string",
                        "description": "IS-IS Authentication-Type for Level-2.\n"
                    },
                    "circuitType": {
                        "type": "string",
                        "description": "Circuit type.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helloInterval": {
                        "type": "integer",
                        "description": "Hello interval.\n"
                    },
                    "helloIntervalL1": {
                        "type": "integer",
                        "description": "Hello interval Level-1.\n"
                    },
                    "helloIntervalL2": {
                        "type": "integer",
                        "description": "Hello interval Level-2.\n"
                    },
                    "helloMultiplier": {
                        "type": "integer",
                        "description": "Hello multiplier.\n"
                    },
                    "helloMultiplierL1": {
                        "type": "integer",
                        "description": "Hello multiplier Level-1.\n"
                    },
                    "helloMultiplierL2": {
                        "type": "integer",
                        "description": "Hello multiplier Level-2.\n"
                    },
                    "helloPadding": {
                        "type": "string",
                        "description": "Hello padding.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "metricL1": {
                        "type": "integer",
                        "description": "Interface metric Level-1.\n"
                    },
                    "metricL2": {
                        "type": "integer",
                        "description": "Interface metric Level-2.\n"
                    },
                    "mtuCheck": {
                        "type": "boolean",
                        "description": "MTU Check for IS-IS without specific level.\n"
                    },
                    "mtuCheckL1": {
                        "type": "boolean",
                        "description": "MTU Check for IS-IS on Level-1.\n"
                    },
                    "mtuCheckL2": {
                        "type": "boolean",
                        "description": "MTU Check for IS-IS on Level-2.\n"
                    },
                    "networkTypeP2p": {
                        "type": "string",
                        "description": "Enabling Point-to-Point Network Type on IS-IS Interface.\n"
                    },
                    "passive": {
                        "type": "string",
                        "description": "IS-IS Passive Interface Info.\n"
                    },
                    "priorityL1": {
                        "type": "integer",
                        "description": "Circuit priority.\n"
                    },
                    "priorityL2": {
                        "type": "integer",
                        "description": "Circuit priority.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authenticationCheck",
                    "authenticationCheckL1",
                    "authenticationCheckL2",
                    "authenticationKey",
                    "authenticationKeyL1",
                    "authenticationKeyL2",
                    "authenticationType",
                    "authenticationTypeL1",
                    "authenticationTypeL2",
                    "circuitType",
                    "helloInterval",
                    "helloIntervalL1",
                    "helloIntervalL2",
                    "helloMultiplier",
                    "helloMultiplierL1",
                    "helloMultiplierL2",
                    "helloPadding",
                    "id",
                    "interfaceId",
                    "metricL1",
                    "metricL2",
                    "mtuCheck",
                    "mtuCheckL1",
                    "mtuCheckL2",
                    "networkTypeP2p",
                    "passive",
                    "priorityL1",
                    "priorityL2",
                    "vrf"
                ]
            }
        },
        "nxos:index/getIsisVrf:getIsisVrf": {
            "description": "This data source can read the IS-IS VRF configuration.\n\n- API Documentation: [isisDom](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/isis:Dom/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getIsisVrf({\n    instanceName: \"ISIS1\",\n    name: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_isis_vrf(instance_name=\"ISIS1\",\n    name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetIsisVrf.Invoke(new()\n    {\n        InstanceName = \"ISIS1\",\n        Name = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupIsisVrf(ctx, \u0026nxos.LookupIsisVrfArgs{\n\t\t\tInstanceName: \"ISIS1\",\n\t\t\tName:         \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetIsisVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getIsisVrf(GetIsisVrfArgs.builder()\n            .instanceName(\"ISIS1\")\n            .name(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getIsisVrf\n      Arguments:\n        instanceName: ISIS1\n        name: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIsisVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "IS-IS instance name.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "instanceName",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIsisVrf.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "authenticationCheckL1": {
                        "type": "boolean",
                        "description": "Authentication Check for ISIS on Level-1.\n"
                    },
                    "authenticationCheckL2": {
                        "type": "boolean",
                        "description": "Authentication Check for ISIS on Level-2.\n"
                    },
                    "authenticationKeyL1": {
                        "type": "string",
                        "description": "Authentication Key for IS-IS on Level-1.\n"
                    },
                    "authenticationKeyL2": {
                        "type": "string",
                        "description": "Authentication Key for IS-IS on Level-2.\n"
                    },
                    "authenticationTypeL1": {
                        "type": "string",
                        "description": "IS-IS Authentication-Type for Level-1.\n"
                    },
                    "authenticationTypeL2": {
                        "type": "string",
                        "description": "IS-IS Authentication-Type for Level-2.\n"
                    },
                    "bandwidthReference": {
                        "type": "integer",
                        "description": "The IS-IS domain bandwidth reference. This sets the default reference bandwidth used for calculating the IS-IS cost metric.\n"
                    },
                    "banwidthReferenceUnit": {
                        "type": "string",
                        "description": "Bandwidth reference unit.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "IS-IS instance name.\n"
                    },
                    "isType": {
                        "type": "string",
                        "description": "IS-IS domain type.\n"
                    },
                    "metricType": {
                        "type": "string",
                        "description": "IS-IS metric type.\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "The configuration of link-state packet (LSP) maximum transmission units (MTU) is supported. You can enable up to 4352 bytes.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    },
                    "net": {
                        "type": "string",
                        "description": "Holds IS-IS domain NET (address) value.\n"
                    },
                    "passiveDefault": {
                        "type": "string",
                        "description": "IS-IS Domain passive-interface default level.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "authenticationCheckL1",
                    "authenticationCheckL2",
                    "authenticationKeyL1",
                    "authenticationKeyL2",
                    "authenticationTypeL1",
                    "authenticationTypeL2",
                    "bandwidthReference",
                    "banwidthReferenceUnit",
                    "id",
                    "instanceName",
                    "isType",
                    "metricType",
                    "mtu",
                    "name",
                    "net",
                    "passiveDefault"
                ]
            }
        },
        "nxos:index/getLoopbackInterface:getLoopbackInterface": {
            "description": "This data source can read a loopback interface.\n\n- API Documentation: [l3LbRtdIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/l3:LbRtdIf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getLoopbackInterface({\n    interfaceId: \"lo123\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_loopback_interface(interface_id=\"lo123\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetLoopbackInterface.Invoke(new()\n    {\n        InterfaceId = \"lo123\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupLoopbackInterface(ctx, \u0026nxos.LookupLoopbackInterfaceArgs{\n\t\t\tInterfaceId: \"lo123\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetLoopbackInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getLoopbackInterface(GetLoopbackInterfaceArgs.builder()\n            .interfaceId(\"lo123\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getLoopbackInterface\n      Arguments:\n        interfaceId: lo123\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getLoopbackInterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `lo123`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoopbackInterface.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `lo123`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "description",
                    "id",
                    "interfaceId"
                ]
            }
        },
        "nxos:index/getLoopbackInterfaceVrf:getLoopbackInterfaceVrf": {
            "description": "This data source can read a loopback interface VRF association.\n\n- API Documentation: [nwRtVrfMbr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/nw:RtVrfMbr/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getLoopbackInterfaceVrf({\n    interfaceId: \"lo123\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_loopback_interface_vrf(interface_id=\"lo123\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetLoopbackInterfaceVrf.Invoke(new()\n    {\n        InterfaceId = \"lo123\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupLoopbackInterfaceVrf(ctx, \u0026nxos.LookupLoopbackInterfaceVrfArgs{\n\t\t\tInterfaceId: \"lo123\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetLoopbackInterfaceVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getLoopbackInterfaceVrf(GetLoopbackInterfaceVrfArgs.builder()\n            .interfaceId(\"lo123\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getLoopbackInterfaceVrf\n      Arguments:\n        interfaceId: lo123\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getLoopbackInterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `lo123`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoopbackInterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `lo123`.\n"
                    },
                    "vrfDn": {
                        "type": "string",
                        "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId",
                    "vrfDn"
                ]
            }
        },
        "nxos:index/getNtpServer:getNtpServer": {
            "description": "This data source can read an ntp server or peer.\n\n- API Documentation: [datetimeNtpProvider](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/datetime:NtpProvider/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getNtpServer({\n    name: \"1.2.3.4\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ntp_server(name=\"1.2.3.4\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetNtpServer.Invoke(new()\n    {\n        Name = \"1.2.3.4\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupNtpServer(ctx, \u0026nxos.LookupNtpServerArgs{\n\t\t\tName: \"1.2.3.4\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetNtpServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getNtpServer(GetNtpServerArgs.builder()\n            .name(\"1.2.3.4\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getNtpServer\n      Arguments:\n        name: 1.2.3.4\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getNtpServer.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NTP server.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNtpServer.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "keyId": {
                        "type": "integer",
                        "description": "NTP provider key ID. Possible range is from `1` to `65535`.\n"
                    },
                    "maxPoll": {
                        "type": "integer",
                        "description": "NTP maximum interval default in seconds. Possible range is from `4` to `16`.\n"
                    },
                    "minPoll": {
                        "type": "integer",
                        "description": "NTP minimum interval default in seconds. Possible range is from `4` to `16`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NTP server.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "NTP provider type. Possible values are `server` or `peer`.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "Identifies the VRF for the NTP providers.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "keyId",
                    "maxPoll",
                    "minPoll",
                    "name",
                    "type",
                    "vrf"
                ]
            }
        },
        "nxos:index/getNveInterface:getNveInterface": {
            "description": "This data source can read the NVE interface configuration.\n\n- API Documentation: [nvoEp](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Network%20Virtualization/nvo:Ep/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getNveInterface({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_nve_interface()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetNveInterface.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupNveInterface(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetNveInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getNveInterface();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getNveInterface\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getNveInterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNveInterface.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "advertiseVirtualMac": {
                        "type": "boolean",
                        "description": "Enable or disable Virtual MAC Advertisement in VPC mode.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "holdDownTime": {
                        "type": "integer",
                        "description": "Hold Down Time.\n"
                    },
                    "hostReachabilityProtocol": {
                        "type": "string",
                        "description": "Host Reachability Protocol.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "ingressReplicationProtocolBgp": {
                        "type": "boolean",
                        "description": "VxLAN Ingress Replication Protocol BGP.\n"
                    },
                    "multicastGroupL2": {
                        "type": "string",
                        "description": "Base multicast group address for L2.\n"
                    },
                    "multicastGroupL3": {
                        "type": "string",
                        "description": "Base multicast group address for L3.\n"
                    },
                    "multisiteSourceInterface": {
                        "type": "string",
                        "description": "Interface representing the Multisite Border Gateway. Must match first field in the output of `show int brief`.\n"
                    },
                    "sourceInterface": {
                        "type": "string",
                        "description": "Source Interface associated with the NVE. Must match first field in the output of `show int brief`.\n"
                    },
                    "suppressArp": {
                        "type": "boolean",
                        "description": "Suppress ARP.\n"
                    },
                    "suppressMacRoute": {
                        "type": "boolean",
                        "description": "Suppress MAC Route.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "advertiseVirtualMac",
                    "holdDownTime",
                    "hostReachabilityProtocol",
                    "id",
                    "ingressReplicationProtocolBgp",
                    "multicastGroupL2",
                    "multicastGroupL3",
                    "multisiteSourceInterface",
                    "sourceInterface",
                    "suppressArp",
                    "suppressMacRoute"
                ]
            }
        },
        "nxos:index/getNveVni:getNveVni": {
            "description": "This data source can read the configuration of Virtual Network ID (VNI).\n\n- API Documentation: [nvoNw](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Network%20Virtualization/nvo:Nw/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getNveVni({\n    vni: 103100,\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_nve_vni(vni=103100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetNveVni.Invoke(new()\n    {\n        Vni = 103100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupNveVni(ctx, \u0026nxos.LookupNveVniArgs{\n\t\t\tVni: 103100,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetNveVniArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getNveVni(GetNveVniArgs.builder()\n            .vni(103100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getNveVni\n      Arguments:\n        vni: 103100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getNveVni.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vni": {
                        "type": "integer",
                        "description": "Virtual Network ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "vni"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNveVni.\n",
                "properties": {
                    "associateVrf": {
                        "type": "boolean",
                        "description": "Configures VNI as L3 VNI.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "multicastGroup": {
                        "type": "string",
                        "description": "Configures multicast group address for VNI.\n"
                    },
                    "multisiteIngressReplication": {
                        "type": "string",
                        "description": "Enable or disable Multisite Ingress Replication for VNI(s).\n"
                    },
                    "suppressArp": {
                        "type": "string",
                        "description": "Enable or disable ARP suppression for VNI(s).\n"
                    },
                    "vni": {
                        "type": "integer",
                        "description": "Virtual Network ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "associateVrf",
                    "id",
                    "multicastGroup",
                    "multisiteIngressReplication",
                    "suppressArp",
                    "vni"
                ]
            }
        },
        "nxos:index/getNveVniContainer:getNveVniContainer": {
            "description": "This data source can read the configuration of Container object for Virtual Network IDs (VNIs).\n\n- API Documentation: [nvoNws](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Network%20Virtualization/nvo:Nws/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getNveVniContainer({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_nve_vni_container()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetNveVniContainer.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupNveVniContainer(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetNveVniContainerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getNveVniContainer();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getNveVniContainer\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getNveVniContainer.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNveVniContainer.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        },
        "nxos:index/getNveVniIngressReplication:getNveVniIngressReplication": {
            "description": "This data source can read the configuration of Ingress Replication for Virtual Network ID (VNI).\n\n- API Documentation: [nvoIngRepl](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Network%20Virtualization/nvo:IngRepl/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getNveVniIngressReplication({\n    vni: 103100,\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_nve_vni_ingress_replication(vni=103100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetNveVniIngressReplication.Invoke(new()\n    {\n        Vni = 103100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupNveVniIngressReplication(ctx, \u0026nxos.LookupNveVniIngressReplicationArgs{\n\t\t\tVni: 103100,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetNveVniIngressReplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getNveVniIngressReplication(GetNveVniIngressReplicationArgs.builder()\n            .vni(103100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getNveVniIngressReplication\n      Arguments:\n        vni: 103100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getNveVniIngressReplication.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vni": {
                        "type": "integer",
                        "description": "Virtual Network ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "vni"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNveVniIngressReplication.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Configure VxLAN Ingress Replication mode.\n"
                    },
                    "vni": {
                        "type": "integer",
                        "description": "Virtual Network ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "protocol",
                    "vni"
                ]
            }
        },
        "nxos:index/getOspf:getOspf": {
            "description": "This data source can read the global OSPF configuration.\n\n- API Documentation: [ospfEntity](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:Entity/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getOspf({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ospf()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetOspf.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupOspf(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetOspfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getOspf();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getOspf\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOspf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOspf.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getOspfArea:getOspfArea": {
            "description": "This data source can read the OSPF Area configuration.\n\n- API Documentation: [ospfArea](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:Area/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getOspfArea({\n    areaId: \"0.0.0.10\",\n    instanceName: \"OSPF1\",\n    vrfName: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ospf_area(area_id=\"0.0.0.10\",\n    instance_name=\"OSPF1\",\n    vrf_name=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetOspfArea.Invoke(new()\n    {\n        AreaId = \"0.0.0.10\",\n        InstanceName = \"OSPF1\",\n        VrfName = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupOspfArea(ctx, \u0026nxos.LookupOspfAreaArgs{\n\t\t\tAreaId:       \"0.0.0.10\",\n\t\t\tInstanceName: \"OSPF1\",\n\t\t\tVrfName:      \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetOspfAreaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getOspfArea(GetOspfAreaArgs.builder()\n            .areaId(\"0.0.0.10\")\n            .instanceName(\"OSPF1\")\n            .vrfName(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getOspfArea\n      Arguments:\n        areaId: 0.0.0.10\n        instanceName: OSPF1\n        vrfName: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOspfArea.\n",
                "properties": {
                    "areaId": {
                        "type": "string",
                        "description": "Area identifier to which a network or interface belongs in IPv4 address format.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "areaId",
                    "instanceName",
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOspfArea.\n",
                "properties": {
                    "areaId": {
                        "type": "string",
                        "description": "Area identifier to which a network or interface belongs in IPv4 address format.\n"
                    },
                    "authenticationType": {
                        "type": "string",
                        "description": "Authentication type.\n"
                    },
                    "cost": {
                        "type": "integer",
                        "description": "Area cost, specifies cost for default summary LSAs. Used with nssa/stub area types.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Area type.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "areaId",
                    "authenticationType",
                    "cost",
                    "id",
                    "instanceName",
                    "type",
                    "vrfName"
                ]
            }
        },
        "nxos:index/getOspfAuthentication:getOspfAuthentication": {
            "description": "This data source can read the OSPF authentication configuration.\n\n- API Documentation: [ospfAuthNewP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:AuthNewP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getOspfAuthentication({\n    instanceName: \"OSPF1\",\n    interfaceId: \"eth1/10\",\n    vrfName: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ospf_authentication(instance_name=\"OSPF1\",\n    interface_id=\"eth1/10\",\n    vrf_name=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetOspfAuthentication.Invoke(new()\n    {\n        InstanceName = \"OSPF1\",\n        InterfaceId = \"eth1/10\",\n        VrfName = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupOspfAuthentication(ctx, \u0026nxos.LookupOspfAuthenticationArgs{\n\t\t\tInstanceName: \"OSPF1\",\n\t\t\tInterfaceId:  \"eth1/10\",\n\t\t\tVrfName:      \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetOspfAuthenticationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getOspfAuthentication(GetOspfAuthenticationArgs.builder()\n            .instanceName(\"OSPF1\")\n            .interfaceId(\"eth1/10\")\n            .vrfName(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getOspfAuthentication\n      Arguments:\n        instanceName: OSPF1\n        interfaceId: eth1/10\n        vrfName: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOspfAuthentication.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "instanceName",
                    "interfaceId",
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOspfAuthentication.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key used for authentication.\n"
                    },
                    "keyId": {
                        "type": "integer",
                        "description": "Key ID used for authentication.\n"
                    },
                    "keySecureMode": {
                        "type": "boolean",
                        "description": "Encrypted authentication key or plain text key.\n"
                    },
                    "keychain": {
                        "type": "string",
                        "description": "Authentication keychain.\n"
                    },
                    "md5Key": {
                        "type": "string",
                        "description": "Key used for md5 authentication.\n"
                    },
                    "md5KeySecureMode": {
                        "type": "boolean",
                        "description": "Encrypted authentication md5 key or plain text key.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Authentication type.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "instanceName",
                    "interfaceId",
                    "key",
                    "keyId",
                    "keySecureMode",
                    "keychain",
                    "md5Key",
                    "md5KeySecureMode",
                    "type",
                    "vrfName"
                ]
            }
        },
        "nxos:index/getOspfInstance:getOspfInstance": {
            "description": "This data source can read the OSPF instance configuration.\n\n- API Documentation: [ospfInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getOspfInstance({\n    name: \"OSPF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ospf_instance(name=\"OSPF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetOspfInstance.Invoke(new()\n    {\n        Name = \"OSPF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupOspfInstance(ctx, \u0026nxos.LookupOspfInstanceArgs{\n\t\t\tName: \"OSPF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetOspfInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getOspfInstance(GetOspfInstanceArgs.builder()\n            .name(\"OSPF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getOspfInstance\n      Arguments:\n        name: OSPF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOspfInstance.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOspfInstance.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id",
                    "name"
                ]
            }
        },
        "nxos:index/getOspfInterface:getOspfInterface": {
            "description": "This data source can read the OSPF interface configuration.\n\n- API Documentation: [ospfIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getOspfInterface({\n    instanceName: \"OSPF1\",\n    interfaceId: \"eth1/10\",\n    vrfName: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ospf_interface(instance_name=\"OSPF1\",\n    interface_id=\"eth1/10\",\n    vrf_name=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetOspfInterface.Invoke(new()\n    {\n        InstanceName = \"OSPF1\",\n        InterfaceId = \"eth1/10\",\n        VrfName = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupOspfInterface(ctx, \u0026nxos.LookupOspfInterfaceArgs{\n\t\t\tInstanceName: \"OSPF1\",\n\t\t\tInterfaceId:  \"eth1/10\",\n\t\t\tVrfName:      \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetOspfInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getOspfInterface(GetOspfInterfaceArgs.builder()\n            .instanceName(\"OSPF1\")\n            .interfaceId(\"eth1/10\")\n            .vrfName(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getOspfInterface\n      Arguments:\n        instanceName: OSPF1\n        interfaceId: eth1/10\n        vrfName: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOspfInterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "instanceName",
                    "interfaceId",
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOspfInterface.\n",
                "properties": {
                    "advertiseSecondaries": {
                        "type": "boolean",
                        "description": "Advertise secondary IP addresses.\n"
                    },
                    "area": {
                        "type": "string",
                        "description": "Area identifier to which a network or interface belongs in IPv4 address format.\n"
                    },
                    "bfd": {
                        "type": "string",
                        "description": "Bidirectional Forwarding Detection (BFD).\n"
                    },
                    "cost": {
                        "type": "integer",
                        "description": "Specifies the cost of interface.\n"
                    },
                    "deadInterval": {
                        "type": "integer",
                        "description": "Dead interval, interval after which router declares that neighbor as down.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helloInterval": {
                        "type": "integer",
                        "description": "Hello interval, interval between hello packets that OSPF sends on the interface.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "networkType": {
                        "type": "string",
                        "description": "Network type.\n"
                    },
                    "passive": {
                        "type": "string",
                        "description": "Passive interface control. Interface can be configured as passive or non-passive.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority, used in determining the designated router on this network.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "advertiseSecondaries",
                    "area",
                    "bfd",
                    "cost",
                    "deadInterval",
                    "helloInterval",
                    "id",
                    "instanceName",
                    "interfaceId",
                    "networkType",
                    "passive",
                    "priority",
                    "vrfName"
                ]
            }
        },
        "nxos:index/getOspfVrf:getOspfVrf": {
            "description": "This data source can read the OSPF VRF configuration.\n\n- API Documentation: [ospfDom](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:Dom/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getOspfVrf({\n    instanceName: \"OSPF1\",\n    name: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_ospf_vrf(instance_name=\"OSPF1\",\n    name=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetOspfVrf.Invoke(new()\n    {\n        InstanceName = \"OSPF1\",\n        Name = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupOspfVrf(ctx, \u0026nxos.LookupOspfVrfArgs{\n\t\t\tInstanceName: \"OSPF1\",\n\t\t\tName:         \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetOspfVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getOspfVrf(GetOspfVrfArgs.builder()\n            .instanceName(\"OSPF1\")\n            .name(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getOspfVrf\n      Arguments:\n        instanceName: OSPF1\n        name: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOspfVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "instanceName",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOspfVrf.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "bandwidthReference": {
                        "type": "integer",
                        "description": "Bandwidth reference value.\n"
                    },
                    "banwidthReferenceUnit": {
                        "type": "string",
                        "description": "Bandwidth reference unit.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "distance": {
                        "type": "integer",
                        "description": "Administrative distance preference.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "OSPF instance name.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    },
                    "routerId": {
                        "type": "string",
                        "description": "Router ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "bandwidthReference",
                    "banwidthReferenceUnit",
                    "distance",
                    "id",
                    "instanceName",
                    "name",
                    "routerId"
                ]
            }
        },
        "nxos:index/getPhysicalInterface:getPhysicalInterface": {
            "description": "This data source can read the configuration of a physical interface.\n\n- API Documentation: [l1PhysIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/l1:PhysIf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getPhysicalInterface({\n    interfaceId: \"eth1/10\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_physical_interface(interface_id=\"eth1/10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetPhysicalInterface.Invoke(new()\n    {\n        InterfaceId = \"eth1/10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupPhysicalInterface(ctx, \u0026nxos.LookupPhysicalInterfaceArgs{\n\t\t\tInterfaceId: \"eth1/10\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetPhysicalInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getPhysicalInterface(GetPhysicalInterfaceArgs.builder()\n            .interfaceId(\"eth1/10\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getPhysicalInterface\n      Arguments:\n        interfaceId: eth1/10\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPhysicalInterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPhysicalInterface.\n",
                "properties": {
                    "accessVlan": {
                        "type": "string",
                        "description": "Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    },
                    "adminState": {
                        "type": "string",
                        "description": "Administrative port state.\n"
                    },
                    "autoNegotiation": {
                        "type": "string",
                        "description": "Administrative port auto-negotiation.\n"
                    },
                    "bandwidth": {
                        "type": "integer",
                        "description": "The bandwidth parameter for a routed interface, port channel, or subinterface.\n"
                    },
                    "delay": {
                        "type": "integer",
                        "description": "The administrative port delay time.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "duplex": {
                        "type": "string",
                        "description": "Duplex.\n"
                    },
                    "fecMode": {
                        "type": "string",
                        "description": "FEC mode.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "layer": {
                        "type": "string",
                        "description": "Administrative port layer.\n"
                    },
                    "linkDebounceDown": {
                        "type": "integer",
                        "description": "Administrative port link debounce interval.\n"
                    },
                    "linkDebounceUp": {
                        "type": "integer",
                        "description": "Link Debounce Interval - LinkUp Event.\n"
                    },
                    "linkLogging": {
                        "type": "string",
                        "description": "Administrative link logging.\n"
                    },
                    "medium": {
                        "type": "string",
                        "description": "The administrative port medium type.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Administrative port mode.\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "Administrative port MTU.\n"
                    },
                    "nativeVlan": {
                        "type": "string",
                        "description": "Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    },
                    "speed": {
                        "type": "string",
                        "description": "Administrative port speed.\n"
                    },
                    "speedGroup": {
                        "type": "string",
                        "description": "Speed group.\n"
                    },
                    "trunkVlans": {
                        "type": "string",
                        "description": "List of trunk VLANs.\n"
                    },
                    "uniDirectionalEthernet": {
                        "type": "string",
                        "description": "UDE (Uni-Directional Ethernet).\n"
                    },
                    "userConfiguredFlags": {
                        "type": "string",
                        "description": "Port User Config Flags.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accessVlan",
                    "adminState",
                    "autoNegotiation",
                    "bandwidth",
                    "delay",
                    "description",
                    "duplex",
                    "fecMode",
                    "id",
                    "interfaceId",
                    "layer",
                    "linkDebounceDown",
                    "linkDebounceUp",
                    "linkLogging",
                    "medium",
                    "mode",
                    "mtu",
                    "nativeVlan",
                    "speed",
                    "speedGroup",
                    "trunkVlans",
                    "uniDirectionalEthernet",
                    "userConfiguredFlags"
                ]
            }
        },
        "nxos:index/getPhysicalInterfaceVrf:getPhysicalInterfaceVrf": {
            "description": "This data source can read a physical interface VRF association.\n\n- API Documentation: [nwRtVrfMbr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/nw:RtVrfMbr/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getPhysicalInterfaceVrf({\n    interfaceId: \"eth1/10\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_physical_interface_vrf(interface_id=\"eth1/10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetPhysicalInterfaceVrf.Invoke(new()\n    {\n        InterfaceId = \"eth1/10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupPhysicalInterfaceVrf(ctx, \u0026nxos.LookupPhysicalInterfaceVrfArgs{\n\t\t\tInterfaceId: \"eth1/10\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetPhysicalInterfaceVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getPhysicalInterfaceVrf(GetPhysicalInterfaceVrfArgs.builder()\n            .interfaceId(\"eth1/10\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getPhysicalInterfaceVrf\n      Arguments:\n        interfaceId: eth1/10\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPhysicalInterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPhysicalInterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "vrfDn": {
                        "type": "string",
                        "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId",
                    "vrfDn"
                ]
            }
        },
        "nxos:index/getPim:getPim": {
            "description": "This data source can read the global PIM configuration.\n\n- API Documentation: [pimEntity](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:Entity/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getPim({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_pim()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetPim.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupPim(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetPimArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getPim();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getPim\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPim.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPim.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getPimAnycastRp:getPimAnycastRp": {
            "description": "This data source can read the PIM Anycast RP configuration.\n\n- API Documentation: [pimAcastRPFuncP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:AcastRPFuncP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getPimAnycastRp({\n    vrfName: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_pim_anycast_rp(vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetPimAnycastRp.Invoke(new()\n    {\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupPimAnycastRp(ctx, \u0026nxos.LookupPimAnycastRpArgs{\n\t\t\tVrfName: \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetPimAnycastRpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getPimAnycastRp(GetPimAnycastRpArgs.builder()\n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getPimAnycastRp\n      Arguments:\n        vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPimAnycastRp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimAnycastRp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "localInterface": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "sourceInterface": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "localInterface",
                    "sourceInterface",
                    "vrfName"
                ]
            }
        },
        "nxos:index/getPimAnycastRpPeer:getPimAnycastRpPeer": {
            "description": "This data source can read the PIM Anycast RP peer configuration.\n\n- API Documentation: [pimAcastRPPeer](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:AcastRPPeer/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getPimAnycastRpPeer({\n    address: \"10.1.1.1/32\",\n    rpSetAddress: \"20.1.1.1/32\",\n    vrfName: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_pim_anycast_rp_peer(address=\"10.1.1.1/32\",\n    rp_set_address=\"20.1.1.1/32\",\n    vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetPimAnycastRpPeer.Invoke(new()\n    {\n        Address = \"10.1.1.1/32\",\n        RpSetAddress = \"20.1.1.1/32\",\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupPimAnycastRpPeer(ctx, \u0026nxos.LookupPimAnycastRpPeerArgs{\n\t\t\tAddress:      \"10.1.1.1/32\",\n\t\t\tRpSetAddress: \"20.1.1.1/32\",\n\t\t\tVrfName:      \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetPimAnycastRpPeerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getPimAnycastRpPeer(GetPimAnycastRpPeerArgs.builder()\n            .address(\"10.1.1.1/32\")\n            .rpSetAddress(\"20.1.1.1/32\")\n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getPimAnycastRpPeer\n      Arguments:\n        address: 10.1.1.1/32\n        rpSetAddress: 20.1.1.1/32\n        vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPimAnycastRpPeer.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Anycast RP address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "rpSetAddress": {
                        "type": "string",
                        "description": "RP set address.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "rpSetAddress",
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimAnycastRpPeer.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Anycast RP address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "rpSetAddress": {
                        "type": "string",
                        "description": "RP set address.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "id",
                    "rpSetAddress",
                    "vrfName"
                ]
            }
        },
        "nxos:index/getPimInstance:getPimInstance": {
            "description": "This data source can read the PIM instance configuration.\n\n- API Documentation: [pimInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getPimInstance({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_pim_instance()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetPimInstance.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupPimInstance(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetPimInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getPimInstance();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getPimInstance\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPimInstance.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPimInstance.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getPimInterface:getPimInterface": {
            "description": "This data source can read the PIM interface configuration.\n\n- API Documentation: [pimIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getPimInterface({\n    interfaceId: \"eth1/10\",\n    vrfName: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_pim_interface(interface_id=\"eth1/10\",\n    vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetPimInterface.Invoke(new()\n    {\n        InterfaceId = \"eth1/10\",\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupPimInterface(ctx, \u0026nxos.LookupPimInterfaceArgs{\n\t\t\tInterfaceId: \"eth1/10\",\n\t\t\tVrfName:     \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetPimInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getPimInterface(GetPimInterfaceArgs.builder()\n            .interfaceId(\"eth1/10\")\n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getPimInterface\n      Arguments:\n        interfaceId: eth1/10\n        vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPimInterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId",
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimInterface.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "bfd": {
                        "type": "string",
                        "description": "BFD.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "drPriority": {
                        "type": "integer",
                        "description": "Designated Router priority level.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "passive": {
                        "type": "boolean",
                        "description": "Passive interface.\n"
                    },
                    "sparseMode": {
                        "type": "boolean",
                        "description": "Sparse mode.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "bfd",
                    "drPriority",
                    "id",
                    "interfaceId",
                    "passive",
                    "sparseMode",
                    "vrfName"
                ]
            }
        },
        "nxos:index/getPimSsmPolicy:getPimSsmPolicy": {
            "description": "This data source can read the PIM SSM policy configuration.\n\n- API Documentation: [pimSSMPatP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:SSMPatP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getPimSsmPolicy({\n    vrfName: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_pim_ssm_policy(vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetPimSsmPolicy.Invoke(new()\n    {\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupPimSsmPolicy(ctx, \u0026nxos.LookupPimSsmPolicyArgs{\n\t\t\tVrfName: \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetPimSsmPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getPimSsmPolicy(GetPimSsmPolicyArgs.builder()\n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getPimSsmPolicy\n      Arguments:\n        vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPimSsmPolicy.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimSsmPolicy.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy name.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "vrfName"
                ]
            }
        },
        "nxos:index/getPimSsmRange:getPimSsmRange": {
            "description": "This data source can read the PIM SSM range configuration.\n\n- API Documentation: [pimSSMRangeP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:SSMRangeP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getPimSsmRange({\n    vrfName: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_pim_ssm_range(vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetPimSsmRange.Invoke(new()\n    {\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupPimSsmRange(ctx, \u0026nxos.LookupPimSsmRangeArgs{\n\t\t\tVrfName: \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetPimSsmRangeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getPimSsmRange(GetPimSsmRangeArgs.builder()\n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getPimSsmRange\n      Arguments:\n        vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPimSsmRange.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimSsmRange.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "groupList1": {
                        "type": "string",
                        "description": "Group list 1.\n"
                    },
                    "groupList2": {
                        "type": "string",
                        "description": "Group list 2.\n"
                    },
                    "groupList3": {
                        "type": "string",
                        "description": "Group list 3.\n"
                    },
                    "groupList4": {
                        "type": "string",
                        "description": "Group list 4.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "prefixList": {
                        "type": "string",
                        "description": "Prefix list name.\n"
                    },
                    "routeMap": {
                        "type": "string",
                        "description": "Route map name.\n"
                    },
                    "ssmNone": {
                        "type": "boolean",
                        "description": "Exclude standard SSM range (232.0.0.0/8).\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "groupList1",
                    "groupList2",
                    "groupList3",
                    "groupList4",
                    "id",
                    "prefixList",
                    "routeMap",
                    "ssmNone",
                    "vrfName"
                ]
            }
        },
        "nxos:index/getPimStaticRp:getPimStaticRp": {
            "description": "This data source can read the PIM Static RP configuration.\n\n- API Documentation: [pimStaticRP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:StaticRP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getPimStaticRp({\n    address: \"1.2.3.4\",\n    vrfName: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_pim_static_rp(address=\"1.2.3.4\",\n    vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetPimStaticRp.Invoke(new()\n    {\n        Address = \"1.2.3.4\",\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupPimStaticRp(ctx, \u0026nxos.LookupPimStaticRpArgs{\n\t\t\tAddress: \"1.2.3.4\",\n\t\t\tVrfName: \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetPimStaticRpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getPimStaticRp(GetPimStaticRpArgs.builder()\n            .address(\"1.2.3.4\")\n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getPimStaticRp\n      Arguments:\n        address: 1.2.3.4\n        vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPimStaticRp.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimStaticRp.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "id",
                    "vrfName"
                ]
            }
        },
        "nxos:index/getPimStaticRpGroupList:getPimStaticRpGroupList": {
            "description": "This data source can read the PIM Static RP group list configuration.\n\n- API Documentation: [pimRPGrpList](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:RPGrpList/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getPimStaticRpGroupList({\n    address: \"224.0.0.0/4\",\n    rpAddress: \"1.2.3.4\",\n    vrfName: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_pim_static_rp_group_list(address=\"224.0.0.0/4\",\n    rp_address=\"1.2.3.4\",\n    vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetPimStaticRpGroupList.Invoke(new()\n    {\n        Address = \"224.0.0.0/4\",\n        RpAddress = \"1.2.3.4\",\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupPimStaticRpGroupList(ctx, \u0026nxos.LookupPimStaticRpGroupListArgs{\n\t\t\tAddress:   \"224.0.0.0/4\",\n\t\t\tRpAddress: \"1.2.3.4\",\n\t\t\tVrfName:   \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetPimStaticRpGroupListArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getPimStaticRpGroupList(GetPimStaticRpGroupListArgs.builder()\n            .address(\"224.0.0.0/4\")\n            .rpAddress(\"1.2.3.4\")\n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getPimStaticRpGroupList\n      Arguments:\n        address: 224.0.0.0/4\n        rpAddress: 1.2.3.4\n        vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPimStaticRpGroupList.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Group list address information.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "rpAddress": {
                        "type": "string",
                        "description": "RP address.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "rpAddress",
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimStaticRpGroupList.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Group list address information.\n"
                    },
                    "bidir": {
                        "type": "boolean",
                        "description": "Flag to treat Group Ranges as BiDir.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "override": {
                        "type": "boolean",
                        "description": "Flag to override RP preference to use Static over Dynamic RP.\n"
                    },
                    "rpAddress": {
                        "type": "string",
                        "description": "RP address.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "bidir",
                    "id",
                    "override",
                    "rpAddress",
                    "vrfName"
                ]
            }
        },
        "nxos:index/getPimStaticRpPolicy:getPimStaticRpPolicy": {
            "description": "This data source can read the PIM Static RP policy configuration.\n\n- API Documentation: [pimStaticRPP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:StaticRPP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getPimStaticRpPolicy({\n    vrfName: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_pim_static_rp_policy(vrf_name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetPimStaticRpPolicy.Invoke(new()\n    {\n        VrfName = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupPimStaticRpPolicy(ctx, \u0026nxos.LookupPimStaticRpPolicyArgs{\n\t\t\tVrfName: \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetPimStaticRpPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getPimStaticRpPolicy(GetPimStaticRpPolicyArgs.builder()\n            .vrfName(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getPimStaticRpPolicy\n      Arguments:\n        vrfName: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPimStaticRpPolicy.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "vrfName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimStaticRpPolicy.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy name.\n"
                    },
                    "vrfName": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "vrfName"
                ]
            }
        },
        "nxos:index/getPimVrf:getPimVrf": {
            "description": "This data source can read the PIM VRF configuration.\n\n- API Documentation: [pimDom](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:Dom/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getPimVrf({\n    name: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_pim_vrf(name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetPimVrf.Invoke(new()\n    {\n        Name = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupPimVrf(ctx, \u0026nxos.LookupPimVrfArgs{\n\t\t\tName: \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetPimVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getPimVrf(GetPimVrfArgs.builder()\n            .name(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getPimVrf\n      Arguments:\n        name: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPimVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimVrf.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "bfd": {
                        "type": "boolean",
                        "description": "BFD.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "bfd",
                    "id",
                    "name"
                ]
            }
        },
        "nxos:index/getPortChannelInterface:getPortChannelInterface": {
            "description": "This data source can read the configuration of a port-channel interface.\n\n- API Documentation: [pcAggrIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Interfaces/pc:AggrIf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getPortChannelInterface({\n    interfaceId: \"po1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_port_channel_interface(interface_id=\"po1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetPortChannelInterface.Invoke(new()\n    {\n        InterfaceId = \"po1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupPortChannelInterface(ctx, \u0026nxos.LookupPortChannelInterfaceArgs{\n\t\t\tInterfaceId: \"po1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetPortChannelInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getPortChannelInterface(GetPortChannelInterfaceArgs.builder()\n            .interfaceId(\"po1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getPortChannelInterface\n      Arguments:\n        interfaceId: po1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPortChannelInterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPortChannelInterface.\n",
                "properties": {
                    "accessVlan": {
                        "type": "string",
                        "description": "Access VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    },
                    "adminState": {
                        "type": "string",
                        "description": "Administrative port state.\n"
                    },
                    "autoNegotiation": {
                        "type": "string",
                        "description": "Administrative port auto-negotiation.\n"
                    },
                    "bandwidth": {
                        "type": "integer",
                        "description": "The bandwidth parameter for a routed interface, port channel, or subinterface.\n"
                    },
                    "delay": {
                        "type": "integer",
                        "description": "The administrative port delay time.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "duplex": {
                        "type": "string",
                        "description": "Duplex.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                    },
                    "layer": {
                        "type": "string",
                        "description": "Administrative port layer.\n"
                    },
                    "linkLogging": {
                        "type": "string",
                        "description": "Administrative link logging.\n"
                    },
                    "maximumLinks": {
                        "type": "integer",
                        "description": "Maximum links.\n"
                    },
                    "medium": {
                        "type": "string",
                        "description": "The administrative port medium type.\n"
                    },
                    "minimumLinks": {
                        "type": "integer",
                        "description": "Minimum links.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Administrative port mode.\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "Administrative port MTU.\n"
                    },
                    "nativeVlan": {
                        "type": "string",
                        "description": "Native VLAN. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    },
                    "portChannelMode": {
                        "type": "string",
                        "description": "The aggregated interface protocol channel mode.\n"
                    },
                    "speed": {
                        "type": "string",
                        "description": "Administrative port speed.\n"
                    },
                    "suspendIndividual": {
                        "type": "string",
                        "description": "Suspend Individual Port.\n"
                    },
                    "trunkVlans": {
                        "type": "string",
                        "description": "List of trunk VLANs.\n"
                    },
                    "userConfiguredFlags": {
                        "type": "string",
                        "description": "Port User Config Flags.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accessVlan",
                    "adminState",
                    "autoNegotiation",
                    "bandwidth",
                    "delay",
                    "description",
                    "duplex",
                    "id",
                    "interfaceId",
                    "layer",
                    "linkLogging",
                    "maximumLinks",
                    "medium",
                    "minimumLinks",
                    "mode",
                    "mtu",
                    "nativeVlan",
                    "portChannelMode",
                    "speed",
                    "suspendIndividual",
                    "trunkVlans",
                    "userConfiguredFlags"
                ]
            }
        },
        "nxos:index/getPortChannelInterfaceMember:getPortChannelInterfaceMember": {
            "description": "This data source can read the configuration of a port-channel interface member.\n\n- API Documentation: [pcRsMbrIfs](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Interfaces/pc:RsMbrIfs/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getPortChannelInterfaceMember({\n    interfaceDn: \"sys/intf/phys-[eth1/11]\",\n    interfaceId: \"po1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_port_channel_interface_member(interface_dn=\"sys/intf/phys-[eth1/11]\",\n    interface_id=\"po1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetPortChannelInterfaceMember.Invoke(new()\n    {\n        InterfaceDn = \"sys/intf/phys-[eth1/11]\",\n        InterfaceId = \"po1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupPortChannelInterfaceMember(ctx, \u0026nxos.LookupPortChannelInterfaceMemberArgs{\n\t\t\tInterfaceDn: \"sys/intf/phys-[eth1/11]\",\n\t\t\tInterfaceId: \"po1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetPortChannelInterfaceMemberArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getPortChannelInterfaceMember(GetPortChannelInterfaceMemberArgs.builder()\n            .interfaceDn(\"sys/intf/phys-[eth1/11]\")\n            .interfaceId(\"po1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getPortChannelInterfaceMember\n      Arguments:\n        interfaceDn: sys/intf/phys-[eth1/11]\n        interfaceId: po1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPortChannelInterfaceMember.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceDn": {
                        "type": "string",
                        "description": "DN of interface. For example: `sys/intf/phys-[eth1/1]`.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceDn",
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPortChannelInterfaceMember.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceDn": {
                        "type": "string",
                        "description": "DN of interface. For example: `sys/intf/phys-[eth1/1]`.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceDn",
                    "interfaceId"
                ]
            }
        },
        "nxos:index/getPortChannelInterfaceVrf:getPortChannelInterfaceVrf": {
            "description": "This data source can read a port-channel interface VRF association.\n\n- API Documentation: [nwRtVrfMbr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/nw:RtVrfMbr/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getPortChannelInterfaceVrf({\n    interfaceId: \"po1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_port_channel_interface_vrf(interface_id=\"po1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetPortChannelInterfaceVrf.Invoke(new()\n    {\n        InterfaceId = \"po1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupPortChannelInterfaceVrf(ctx, \u0026nxos.LookupPortChannelInterfaceVrfArgs{\n\t\t\tInterfaceId: \"po1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetPortChannelInterfaceVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getPortChannelInterfaceVrf(GetPortChannelInterfaceVrfArgs.builder()\n            .interfaceId(\"po1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getPortChannelInterfaceVrf\n      Arguments:\n        interfaceId: po1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPortChannelInterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPortChannelInterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `po1`.\n"
                    },
                    "vrfDn": {
                        "type": "string",
                        "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId",
                    "vrfDn"
                ]
            }
        },
        "nxos:index/getQueuingQosPolicyMap:getQueuingQosPolicyMap": {
            "description": "This data source can read the queuing QoS policy map configuration.\n\n- API Documentation: [ipqosPMapInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:PMapInst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getQueuingQosPolicyMap({\n    name: \"PM1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_queuing_qos_policy_map(name=\"PM1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetQueuingQosPolicyMap.Invoke(new()\n    {\n        Name = \"PM1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupQueuingQosPolicyMap(ctx, \u0026nxos.LookupQueuingQosPolicyMapArgs{\n\t\t\tName: \"PM1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetQueuingQosPolicyMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getQueuingQosPolicyMap(GetQueuingQosPolicyMapArgs.builder()\n            .name(\"PM1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getQueuingQosPolicyMap\n      Arguments:\n        name: PM1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getQueuingQosPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getQueuingQosPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "matchType": {
                        "type": "string",
                        "description": "Match type.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "matchType",
                    "name"
                ]
            }
        },
        "nxos:index/getQueuingQosPolicyMapMatchClassMap:getQueuingQosPolicyMapMatchClassMap": {
            "description": "This data source can read the queuing QoS policy map match class map configuration.\n\n- API Documentation: [ipqosMatchCMap](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:MatchCMap/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getQueuingQosPolicyMapMatchClassMap({\n    name: \"c-out-q1\",\n    policyMapName: \"PM1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_queuing_qos_policy_map_match_class_map(name=\"c-out-q1\",\n    policy_map_name=\"PM1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetQueuingQosPolicyMapMatchClassMap.Invoke(new()\n    {\n        Name = \"c-out-q1\",\n        PolicyMapName = \"PM1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupQueuingQosPolicyMapMatchClassMap(ctx, \u0026nxos.LookupQueuingQosPolicyMapMatchClassMapArgs{\n\t\t\tName:          \"c-out-q1\",\n\t\t\tPolicyMapName: \"PM1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetQueuingQosPolicyMapMatchClassMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getQueuingQosPolicyMapMatchClassMap(GetQueuingQosPolicyMapMatchClassMapArgs.builder()\n            .name(\"c-out-q1\")\n            .policyMapName(\"PM1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getQueuingQosPolicyMapMatchClassMap\n      Arguments:\n        name: c-out-q1\n        policyMapName: PM1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getQueuingQosPolicyMapMatchClassMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "policyMapName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getQueuingQosPolicyMapMatchClassMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "policyMapName"
                ]
            }
        },
        "nxos:index/getQueuingQosPolicyMapMatchClassMapPriority:getQueuingQosPolicyMapMatchClassMapPriority": {
            "description": "This data source can read the queuing QoS policy map match class map priority configuration.\n\n- API Documentation: [ipqosPriority](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:Priority/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getQueuingQosPolicyMapMatchClassMapPriority({\n    classMapName: \"c-out-q1\",\n    policyMapName: \"PM1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_queuing_qos_policy_map_match_class_map_priority(class_map_name=\"c-out-q1\",\n    policy_map_name=\"PM1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetQueuingQosPolicyMapMatchClassMapPriority.Invoke(new()\n    {\n        ClassMapName = \"c-out-q1\",\n        PolicyMapName = \"PM1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupQueuingQosPolicyMapMatchClassMapPriority(ctx, \u0026nxos.LookupQueuingQosPolicyMapMatchClassMapPriorityArgs{\n\t\t\tClassMapName:  \"c-out-q1\",\n\t\t\tPolicyMapName: \"PM1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetQueuingQosPolicyMapMatchClassMapPriorityArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getQueuingQosPolicyMapMatchClassMapPriority(GetQueuingQosPolicyMapMatchClassMapPriorityArgs.builder()\n            .classMapName(\"c-out-q1\")\n            .policyMapName(\"PM1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getQueuingQosPolicyMapMatchClassMapPriority\n      Arguments:\n        classMapName: c-out-q1\n        policyMapName: PM1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getQueuingQosPolicyMapMatchClassMapPriority.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "policyMapName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getQueuingQosPolicyMapMatchClassMapPriority.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "level": {
                        "type": "integer",
                        "description": "Priority level.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "id",
                    "level",
                    "policyMapName"
                ]
            }
        },
        "nxos:index/getQueuingQosPolicyMapMatchClassMapRemainingBandwidth:getQueuingQosPolicyMapMatchClassMapRemainingBandwidth": {
            "description": "This data source can read the queuing QoS policy map match class map remaining bandwidth configuration.\n\n- API Documentation: [ipqosSetRemBW](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:SetRemBW/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getQueuingQosPolicyMapMatchClassMapRemainingBandwidth({\n    classMapName: \"c-out-q1\",\n    policyMapName: \"PM1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_queuing_qos_policy_map_match_class_map_remaining_bandwidth(class_map_name=\"c-out-q1\",\n    policy_map_name=\"PM1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetQueuingQosPolicyMapMatchClassMapRemainingBandwidth.Invoke(new()\n    {\n        ClassMapName = \"c-out-q1\",\n        PolicyMapName = \"PM1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidth(ctx, \u0026nxos.LookupQueuingQosPolicyMapMatchClassMapRemainingBandwidthArgs{\n\t\t\tClassMapName:  \"c-out-q1\",\n\t\t\tPolicyMapName: \"PM1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetQueuingQosPolicyMapMatchClassMapRemainingBandwidthArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getQueuingQosPolicyMapMatchClassMapRemainingBandwidth(GetQueuingQosPolicyMapMatchClassMapRemainingBandwidthArgs.builder()\n            .classMapName(\"c-out-q1\")\n            .policyMapName(\"PM1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getQueuingQosPolicyMapMatchClassMapRemainingBandwidth\n      Arguments:\n        classMapName: c-out-q1\n        policyMapName: PM1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getQueuingQosPolicyMapMatchClassMapRemainingBandwidth.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "policyMapName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getQueuingQosPolicyMapMatchClassMapRemainingBandwidth.\n",
                "properties": {
                    "classMapName": {
                        "type": "string",
                        "description": "Class map name.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    },
                    "value": {
                        "type": "integer",
                        "description": "Remaining bandwidth percent.\n"
                    }
                },
                "type": "object",
                "required": [
                    "classMapName",
                    "id",
                    "policyMapName",
                    "value"
                ]
            }
        },
        "nxos:index/getQueuingQosPolicySystemOut:getQueuingQosPolicySystemOut": {
            "description": "This data source can read the queuing QoS policy system out configuration.\n\n- API Documentation: [ipqosSystem](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:System/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getQueuingQosPolicySystemOut({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_queuing_qos_policy_system_out()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetQueuingQosPolicySystemOut.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupQueuingQosPolicySystemOut(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetQueuingQosPolicySystemOutArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getQueuingQosPolicySystemOut();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getQueuingQosPolicySystemOut\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getQueuingQosPolicySystemOut.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getQueuingQosPolicySystemOut.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        },
        "nxos:index/getQueuingQosPolicySystemOutPolicyMap:getQueuingQosPolicySystemOutPolicyMap": {
            "description": "This data source can read the queuing QoS policy system out policy map configuration.\n\n- API Documentation: [ipqosInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getQueuingQosPolicySystemOutPolicyMap({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_queuing_qos_policy_system_out_policy_map()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetQueuingQosPolicySystemOutPolicyMap.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupQueuingQosPolicySystemOutPolicyMap(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetQueuingQosPolicySystemOutPolicyMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getQueuingQosPolicySystemOutPolicyMap();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getQueuingQosPolicySystemOutPolicyMap\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getQueuingQosPolicySystemOutPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getQueuingQosPolicySystemOutPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "policyMapName": {
                        "type": "string",
                        "description": "Policy map name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "policyMapName"
                ]
            }
        },
        "nxos:index/getRest:getRest": {
            "description": "This data source can read one NX-OS DME object.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst l1PhysIf = nxos.getRest({\n    dn: \"sys/intf/phys-[eth1/1]\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nl1_phys_if = nxos.get_rest(dn=\"sys/intf/phys-[eth1/1]\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var l1PhysIf = Nxos.GetRest.Invoke(new()\n    {\n        Dn = \"sys/intf/phys-[eth1/1]\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupRest(ctx, \u0026nxos.LookupRestArgs{\n\t\t\tDn: \"sys/intf/phys-[eth1/1]\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetRestArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var l1PhysIf = NxosFunctions.getRest(GetRestArgs.builder()\n            .dn(\"sys/intf/phys-[eth1/1]\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  l1PhysIf:\n    fn::invoke:\n      Function: nxos:getRest\n      Arguments:\n        dn: sys/intf/phys-[eth1/1]\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRest.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dn": {
                        "type": "string",
                        "description": "Distinguished name of object to be retrieved, e.g. sys/intf/phys-[eth1/1].\n"
                    }
                },
                "type": "object",
                "required": [
                    "dn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRest.\n",
                "properties": {
                    "className": {
                        "type": "string",
                        "description": "Class name of object being retrieved.\n"
                    },
                    "content": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of key-value pairs which represents the attributes of object being retrieved.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dn": {
                        "type": "string",
                        "description": "Distinguished name of object to be retrieved, e.g. sys/intf/phys-[eth1/1].\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "className",
                    "content",
                    "dn",
                    "id"
                ]
            }
        },
        "nxos:index/getRouteMapRule:getRouteMapRule": {
            "description": "This data source can read a Route-Map Rule configuration.\n\n- API Documentation: [rtmapRule](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtmap:Rule/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getRouteMapRule({\n    name: \"RULE1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_route_map_rule(name=\"RULE1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetRouteMapRule.Invoke(new()\n    {\n        Name = \"RULE1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupRouteMapRule(ctx, \u0026nxos.LookupRouteMapRuleArgs{\n\t\t\tName: \"RULE1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetRouteMapRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getRouteMapRule(GetRouteMapRuleArgs.builder()\n            .name(\"RULE1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getRouteMapRule\n      Arguments:\n        name: RULE1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRouteMapRule.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Route-Map Rule name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRouteMapRule.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Route-Map Rule name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ]
            }
        },
        "nxos:index/getRouteMapRuleEntry:getRouteMapRuleEntry": {
            "description": "This data source can read a Route-Map Rule Entry configuration.\n\n- API Documentation: [rtmapEntry](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtmap:Entry/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getRouteMapRuleEntry({\n    order: 10,\n    ruleName: \"RULE1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_route_map_rule_entry(order=10,\n    rule_name=\"RULE1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetRouteMapRuleEntry.Invoke(new()\n    {\n        Order = 10,\n        RuleName = \"RULE1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupRouteMapRuleEntry(ctx, \u0026nxos.LookupRouteMapRuleEntryArgs{\n\t\t\tOrder:    10,\n\t\t\tRuleName: \"RULE1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetRouteMapRuleEntryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getRouteMapRuleEntry(GetRouteMapRuleEntryArgs.builder()\n            .order(10)\n            .ruleName(\"RULE1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getRouteMapRuleEntry\n      Arguments:\n        order: 10\n        ruleName: RULE1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRouteMapRuleEntry.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order.\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "order",
                    "ruleName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRouteMapRuleEntry.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Route-Map Rule Entry action.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order.\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "id",
                    "order",
                    "ruleName"
                ]
            }
        },
        "nxos:index/getRouteMapRuleEntryMatchRoute:getRouteMapRuleEntryMatchRoute": {
            "description": "This data source can read a Match Route in Route-Map Rule Entry configuration.\n\n- API Documentation: [rtmapMatchRtDst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtmap:MatchRtDst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getRouteMapRuleEntryMatchRoute({\n    order: 10,\n    ruleName: \"RULE1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_route_map_rule_entry_match_route(order=10,\n    rule_name=\"RULE1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetRouteMapRuleEntryMatchRoute.Invoke(new()\n    {\n        Order = 10,\n        RuleName = \"RULE1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupRouteMapRuleEntryMatchRoute(ctx, \u0026nxos.LookupRouteMapRuleEntryMatchRouteArgs{\n\t\t\tOrder:    10,\n\t\t\tRuleName: \"RULE1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetRouteMapRuleEntryMatchRouteArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getRouteMapRuleEntryMatchRoute(GetRouteMapRuleEntryMatchRouteArgs.builder()\n            .order(10)\n            .ruleName(\"RULE1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getRouteMapRuleEntryMatchRoute\n      Arguments:\n        order: 10\n        ruleName: RULE1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRouteMapRuleEntryMatchRoute.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order.\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "order",
                    "ruleName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRouteMapRuleEntryMatchRoute.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order.\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "order",
                    "ruleName"
                ]
            }
        },
        "nxos:index/getRouteMapRuleEntryMatchRoutePrefixList:getRouteMapRuleEntryMatchRoutePrefixList": {
            "description": "This data source can read a Match Route Prefix List in Route-Map Rule Entry configuration.\n\n- API Documentation: [rtmapRsRtDstAtt](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtmap:RsRtDstAtt/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getRouteMapRuleEntryMatchRoutePrefixList({\n    order: 10,\n    prefixListDn: \"sys/rpm/pfxlistv4-[LIST1]\",\n    ruleName: \"RULE1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_route_map_rule_entry_match_route_prefix_list(order=10,\n    prefix_list_dn=\"sys/rpm/pfxlistv4-[LIST1]\",\n    rule_name=\"RULE1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetRouteMapRuleEntryMatchRoutePrefixList.Invoke(new()\n    {\n        Order = 10,\n        PrefixListDn = \"sys/rpm/pfxlistv4-[LIST1]\",\n        RuleName = \"RULE1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupRouteMapRuleEntryMatchRoutePrefixList(ctx, \u0026nxos.LookupRouteMapRuleEntryMatchRoutePrefixListArgs{\n\t\t\tOrder:        10,\n\t\t\tPrefixListDn: \"sys/rpm/pfxlistv4-[LIST1]\",\n\t\t\tRuleName:     \"RULE1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetRouteMapRuleEntryMatchRoutePrefixListArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getRouteMapRuleEntryMatchRoutePrefixList(GetRouteMapRuleEntryMatchRoutePrefixListArgs.builder()\n            .order(10)\n            .prefixListDn(\"sys/rpm/pfxlistv4-[LIST1]\")\n            .ruleName(\"RULE1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getRouteMapRuleEntryMatchRoutePrefixList\n      Arguments:\n        order: 10\n        prefixListDn: sys/rpm/pfxlistv4-[LIST1]\n        ruleName: RULE1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRouteMapRuleEntryMatchRoutePrefixList.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order.\n"
                    },
                    "prefixListDn": {
                        "type": "string",
                        "description": "DN of Prefix List. For example: `sys/rpm/pfxlistv4-[LIST1]`\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "order",
                    "prefixListDn",
                    "ruleName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRouteMapRuleEntryMatchRoutePrefixList.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order.\n"
                    },
                    "prefixListDn": {
                        "type": "string",
                        "description": "DN of Prefix List. For example: `sys/rpm/pfxlistv4-[LIST1]`\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "order",
                    "prefixListDn",
                    "ruleName"
                ]
            }
        },
        "nxos:index/getRouteMapRuleEntrySetRegularCommunity:getRouteMapRuleEntrySetRegularCommunity": {
            "description": "This data source can read a Set Community configuration in a Route-Map Rule Entry.\n\n- API Documentation: [rtmapSetRegComm](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtmap:SetRegComm/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getRouteMapRuleEntrySetRegularCommunity({\n    order: 10,\n    ruleName: \"RULE1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_route_map_rule_entry_set_regular_community(order=10,\n    rule_name=\"RULE1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetRouteMapRuleEntrySetRegularCommunity.Invoke(new()\n    {\n        Order = 10,\n        RuleName = \"RULE1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupRouteMapRuleEntrySetRegularCommunity(ctx, \u0026nxos.LookupRouteMapRuleEntrySetRegularCommunityArgs{\n\t\t\tOrder:    10,\n\t\t\tRuleName: \"RULE1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetRouteMapRuleEntrySetRegularCommunityArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getRouteMapRuleEntrySetRegularCommunity(GetRouteMapRuleEntrySetRegularCommunityArgs.builder()\n            .order(10)\n            .ruleName(\"RULE1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getRouteMapRuleEntrySetRegularCommunity\n      Arguments:\n        order: 10\n        ruleName: RULE1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRouteMapRuleEntrySetRegularCommunity.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order.\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "order",
                    "ruleName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRouteMapRuleEntrySetRegularCommunity.\n",
                "properties": {
                    "additive": {
                        "type": "string",
                        "description": "Option to add to an existing community.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "noCommunity": {
                        "type": "string",
                        "description": "Option to have no community attribute.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order.\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    },
                    "setCriteria": {
                        "type": "string",
                        "description": "Operation on the current community.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additive",
                    "id",
                    "noCommunity",
                    "order",
                    "ruleName",
                    "setCriteria"
                ]
            }
        },
        "nxos:index/getRouteMapRuleEntrySetRegularCommunityItem:getRouteMapRuleEntrySetRegularCommunityItem": {
            "description": "This data source can read a Set Community item in a Route-Map Rule Entry.\n\n- API Documentation: [rtregcomItem](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtregcom:Item/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getRouteMapRuleEntrySetRegularCommunityItem({\n    community: \"regular:as2-nn2:65001:123\",\n    order: 10,\n    ruleName: \"RULE1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_route_map_rule_entry_set_regular_community_item(community=\"regular:as2-nn2:65001:123\",\n    order=10,\n    rule_name=\"RULE1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetRouteMapRuleEntrySetRegularCommunityItem.Invoke(new()\n    {\n        Community = \"regular:as2-nn2:65001:123\",\n        Order = 10,\n        RuleName = \"RULE1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupRouteMapRuleEntrySetRegularCommunityItem(ctx, \u0026nxos.LookupRouteMapRuleEntrySetRegularCommunityItemArgs{\n\t\t\tCommunity: \"regular:as2-nn2:65001:123\",\n\t\t\tOrder:     10,\n\t\t\tRuleName:  \"RULE1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetRouteMapRuleEntrySetRegularCommunityItemArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getRouteMapRuleEntrySetRegularCommunityItem(GetRouteMapRuleEntrySetRegularCommunityItemArgs.builder()\n            .community(\"regular:as2-nn2:65001:123\")\n            .order(10)\n            .ruleName(\"RULE1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getRouteMapRuleEntrySetRegularCommunityItem\n      Arguments:\n        community: regular:as2-nn2:65001:123\n        order: 10\n        ruleName: RULE1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRouteMapRuleEntrySetRegularCommunityItem.\n",
                "properties": {
                    "community": {
                        "type": "string",
                        "description": "Set Community.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order.\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "community",
                    "order",
                    "ruleName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRouteMapRuleEntrySetRegularCommunityItem.\n",
                "properties": {
                    "community": {
                        "type": "string",
                        "description": "Set Community.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Route-Map Rule Entry order.\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Route Map rule name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "community",
                    "id",
                    "order",
                    "ruleName"
                ]
            }
        },
        "nxos:index/getSpanningTreeInterface:getSpanningTreeInterface": {
            "description": "This data source can read the Spanning Tree interface configuration.\n\n- API Documentation: [stpIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Discovery%20Protocols/stp:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getSpanningTreeInterface({\n    interfaceId: \"eth1/9\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_spanning_tree_interface(interface_id=\"eth1/9\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetSpanningTreeInterface.Invoke(new()\n    {\n        InterfaceId = \"eth1/9\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupSpanningTreeInterface(ctx, \u0026nxos.LookupSpanningTreeInterfaceArgs{\n\t\t\tInterfaceId: \"eth1/9\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetSpanningTreeInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getSpanningTreeInterface(GetSpanningTreeInterfaceArgs.builder()\n            .interfaceId(\"eth1/9\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getSpanningTreeInterface\n      Arguments:\n        interfaceId: eth1/9\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSpanningTreeInterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSpanningTreeInterface.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "The administrative state of the object or policy.\n"
                    },
                    "bpduFilter": {
                        "type": "string",
                        "description": "BPDU filter mode.\n"
                    },
                    "bpduGuard": {
                        "type": "string",
                        "description": "BPDU guard mode.\n"
                    },
                    "cost": {
                        "type": "integer",
                        "description": "Port path cost.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "guard": {
                        "type": "string",
                        "description": "Guard mode.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1`.\n"
                    },
                    "linkType": {
                        "type": "string",
                        "description": "Link type.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Port mode.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Port priority.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "bpduFilter",
                    "bpduGuard",
                    "cost",
                    "guard",
                    "id",
                    "interfaceId",
                    "linkType",
                    "mode",
                    "priority"
                ]
            }
        },
        "nxos:index/getSubinterface:getSubinterface": {
            "description": "This data source can read a subinterface.\n\n- API Documentation: [l3EncRtdIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/l3:EncRtdIf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getSubinterface({\n    interfaceId: \"eth1/10.124\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_subinterface(interface_id=\"eth1/10.124\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetSubinterface.Invoke(new()\n    {\n        InterfaceId = \"eth1/10.124\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupSubinterface(ctx, \u0026nxos.LookupSubinterfaceArgs{\n\t\t\tInterfaceId: \"eth1/10.124\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetSubinterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getSubinterface(GetSubinterfaceArgs.builder()\n            .interfaceId(\"eth1/10.124\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getSubinterface\n      Arguments:\n        interfaceId: eth1/10.124\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubinterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1.10`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubinterface.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "bandwidth": {
                        "type": "integer",
                        "description": "Specifies the administrative port bandwidth.\n"
                    },
                    "delay": {
                        "type": "integer",
                        "description": "Specifies the administrative port delay.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Subinterface encapsulation. Possible values are `unknown`, `vlan-XX` or `vxlan-XX`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1.10`.\n"
                    },
                    "linkLogging": {
                        "type": "string",
                        "description": "Administrative link logging.\n"
                    },
                    "medium": {
                        "type": "string",
                        "description": "The administrative port medium type.\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "Administrative port MTU.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "bandwidth",
                    "delay",
                    "description",
                    "encap",
                    "id",
                    "interfaceId",
                    "linkLogging",
                    "medium",
                    "mtu"
                ]
            }
        },
        "nxos:index/getSubinterfaceVrf:getSubinterfaceVrf": {
            "description": "This data source can read a subinterface VRF association.\n\n- API Documentation: [nwRtVrfMbr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/nw:RtVrfMbr/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getSubinterfaceVrf({\n    interfaceId: \"eth1/10.124\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_subinterface_vrf(interface_id=\"eth1/10.124\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetSubinterfaceVrf.Invoke(new()\n    {\n        InterfaceId = \"eth1/10.124\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupSubinterfaceVrf(ctx, \u0026nxos.LookupSubinterfaceVrfArgs{\n\t\t\tInterfaceId: \"eth1/10.124\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetSubinterfaceVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getSubinterfaceVrf(GetSubinterfaceVrfArgs.builder()\n            .interfaceId(\"eth1/10.124\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getSubinterfaceVrf\n      Arguments:\n        interfaceId: eth1/10.124\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubinterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1.10`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubinterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `eth1/1.10`.\n"
                    },
                    "vrfDn": {
                        "type": "string",
                        "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId",
                    "vrfDn"
                ]
            }
        },
        "nxos:index/getSviInterface:getSviInterface": {
            "description": "This data source can read an SVI interface.\n\n- API Documentation: [sviIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Interfaces/svi:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getSviInterface({\n    interfaceId: \"vlan293\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_svi_interface(interface_id=\"vlan293\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetSviInterface.Invoke(new()\n    {\n        InterfaceId = \"vlan293\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupSviInterface(ctx, \u0026nxos.LookupSviInterfaceArgs{\n\t\t\tInterfaceId: \"vlan293\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetSviInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getSviInterface(GetSviInterfaceArgs.builder()\n            .interfaceId(\"vlan293\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getSviInterface\n      Arguments:\n        interfaceId: vlan293\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSviInterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `vlan100`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSviInterface.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative port state.\n"
                    },
                    "bandwidth": {
                        "type": "integer",
                        "description": "Specifies the administrative port bandwidth.\n"
                    },
                    "delay": {
                        "type": "integer",
                        "description": "Specifies the administrative port delay.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `vlan100`.\n"
                    },
                    "medium": {
                        "type": "string",
                        "description": "The administrative port medium type.\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "Administrative port MTU.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "bandwidth",
                    "delay",
                    "description",
                    "id",
                    "interfaceId",
                    "medium",
                    "mtu"
                ]
            }
        },
        "nxos:index/getSviInterfaceVrf:getSviInterfaceVrf": {
            "description": "This data source can read an SVI interface VRF association.\n\n- API Documentation: [nwRtVrfMbr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/nw:RtVrfMbr/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getSviInterfaceVrf({\n    interfaceId: \"vlan293\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_svi_interface_vrf(interface_id=\"vlan293\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetSviInterfaceVrf.Invoke(new()\n    {\n        InterfaceId = \"vlan293\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupSviInterfaceVrf(ctx, \u0026nxos.LookupSviInterfaceVrfArgs{\n\t\t\tInterfaceId: \"vlan293\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetSviInterfaceVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getSviInterfaceVrf(GetSviInterfaceVrfArgs.builder()\n            .interfaceId(\"vlan293\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getSviInterfaceVrf\n      Arguments:\n        interfaceId: vlan293\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSviInterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `vlan100`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "interfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSviInterfaceVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "Must match first field in the output of `show intf brief`. Example: `vlan100`.\n"
                    },
                    "vrfDn": {
                        "type": "string",
                        "description": "DN of VRF. For example: `sys/inst-VRF1`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId",
                    "vrfDn"
                ]
            }
        },
        "nxos:index/getSystem:getSystem": {
            "description": "This data source can read the system configuration.\n\n- API Documentation: [topSystem](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/top:System/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getSystem({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_system()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetSystem.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupSystem(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetSystemArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getSystem();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getSystem\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSystem.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSystem.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The system name (hostname).\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ]
            }
        },
        "nxos:index/getVpcDomain:getVpcDomain": {
            "description": "This data source can read the vPC domain configuration.\n\n- API Documentation: [vpcDom](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/vpc:Dom/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getVpcDomain({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_vpc_domain()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetVpcDomain.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupVpcDomain(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetVpcDomainArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getVpcDomain();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getVpcDomain\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVpcDomain.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcDomain.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "vPC suspend locally.\n"
                    },
                    "autoRecovery": {
                        "type": "string",
                        "description": "Auto Recovery.\n"
                    },
                    "autoRecoveryInterval": {
                        "type": "integer",
                        "description": "Auto Recovery interval.\n"
                    },
                    "delayRestoreOrphanPort": {
                        "type": "integer",
                        "description": "Delay restore for orphan ports.\n"
                    },
                    "delayRestoreSvi": {
                        "type": "integer",
                        "description": "Delay restore for SVI.\n"
                    },
                    "delayRestoreVpc": {
                        "type": "integer",
                        "description": "Delay restore for vPC links.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "domainId": {
                        "type": "integer",
                        "description": "Domain id.\n"
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "DSCP.\n"
                    },
                    "fastConvergence": {
                        "type": "string",
                        "description": "Fast Convergence.\n"
                    },
                    "gracefulConsistencyCheck": {
                        "type": "string",
                        "description": "Graceful Type-1 Consistency Check.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "l3PeerRouter": {
                        "type": "string",
                        "description": "L3 Peer Router.\n"
                    },
                    "l3PeerRouterSyslog": {
                        "type": "string",
                        "description": "L3 Peer Router Syslog.\n"
                    },
                    "l3PeerRouterSyslogInterval": {
                        "type": "integer",
                        "description": "L3 Peer Router Syslog Interval.\n"
                    },
                    "peerGateway": {
                        "type": "string",
                        "description": "Peer Gateway.\n"
                    },
                    "peerIp": {
                        "type": "string",
                        "description": "vPC peer IP address.\n"
                    },
                    "peerSwitch": {
                        "type": "string",
                        "description": "vPC pair switches.\n"
                    },
                    "rolePriority": {
                        "type": "integer",
                        "description": "Role priority.\n"
                    },
                    "sysMac": {
                        "type": "string",
                        "description": "System MAC.\n"
                    },
                    "systemPriority": {
                        "type": "integer",
                        "description": "System priority.\n"
                    },
                    "track": {
                        "type": "integer",
                        "description": "Tracking object to suspend vPC if object goes down.\n"
                    },
                    "virtualIp": {
                        "type": "string",
                        "description": "vPC virtual IP address (vIP).\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "autoRecovery",
                    "autoRecoveryInterval",
                    "delayRestoreOrphanPort",
                    "delayRestoreSvi",
                    "delayRestoreVpc",
                    "domainId",
                    "dscp",
                    "fastConvergence",
                    "gracefulConsistencyCheck",
                    "id",
                    "l3PeerRouter",
                    "l3PeerRouterSyslog",
                    "l3PeerRouterSyslogInterval",
                    "peerGateway",
                    "peerIp",
                    "peerSwitch",
                    "rolePriority",
                    "sysMac",
                    "systemPriority",
                    "track",
                    "virtualIp"
                ]
            }
        },
        "nxos:index/getVpcInstance:getVpcInstance": {
            "description": "This data source can read the vPC instance configuration.\n\n- API Documentation: [vpcInst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/vpc:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getVpcInstance({});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_vpc_instance()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetVpcInstance.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupVpcInstance(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetVpcInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getVpcInstance();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getVpcInstance\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVpcInstance.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcInstance.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Administrative state.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminState",
                    "id"
                ]
            }
        },
        "nxos:index/getVpcInterface:getVpcInterface": {
            "description": "This data source can read the vPC interface configuration.\n\n- API Documentation: [vpcIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/vpc:If/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getVpcInterface({\n    vpcInterfaceId: 1,\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_vpc_interface(vpc_interface_id=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetVpcInterface.Invoke(new()\n    {\n        VpcInterfaceId = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupVpcInterface(ctx, \u0026nxos.LookupVpcInterfaceArgs{\n\t\t\tVpcInterfaceId: 1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetVpcInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getVpcInterface(GetVpcInterfaceArgs.builder()\n            .vpcInterfaceId(1)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getVpcInterface\n      Arguments:\n        vpcInterfaceId: 1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVpcInterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vpcInterfaceId": {
                        "type": "integer",
                        "description": "The vPC interface identifier.\n"
                    }
                },
                "type": "object",
                "required": [
                    "vpcInterfaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVpcInterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "portChannelInterfaceDn": {
                        "type": "string",
                        "description": "Port-channel interface DN.\n"
                    },
                    "vpcInterfaceId": {
                        "type": "integer",
                        "description": "The vPC interface identifier.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "portChannelInterfaceDn",
                    "vpcInterfaceId"
                ]
            }
        },
        "nxos:index/getVrf:getVrf": {
            "description": "This data source can read a VRF.\n\n- API Documentation: [l3Inst](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/l3:Inst/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getVrf({\n    name: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_vrf(name=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetVrf.Invoke(new()\n    {\n        Name = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupVrf(ctx, \u0026nxos.LookupVrfArgs{\n\t\t\tName: \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getVrf(GetVrfArgs.builder()\n            .name(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getVrf\n      Arguments:\n        name: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrf.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "VRF description.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encap": {
                        "type": "string",
                        "description": "Encap for this Context, supported formats: `unknown`, `vlan-%d` or `vxlan-%d`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "encap",
                    "id",
                    "name"
                ]
            }
        },
        "nxos:index/getVrfAddressFamily:getVrfAddressFamily": {
            "description": "This data source can read a VRF Address Family.\n\n- API Documentation: [rtctrlDomAf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:DomAf/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getVrfAddressFamily({\n    addressFamily: \"ipv4-ucast\",\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_vrf_address_family(address_family=\"ipv4-ucast\",\n    vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetVrfAddressFamily.Invoke(new()\n    {\n        AddressFamily = \"ipv4-ucast\",\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupVrfAddressFamily(ctx, \u0026nxos.LookupVrfAddressFamilyArgs{\n\t\t\tAddressFamily: \"ipv4-ucast\",\n\t\t\tVrf:           \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetVrfAddressFamilyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getVrfAddressFamily(GetVrfAddressFamilyArgs.builder()\n            .addressFamily(\"ipv4-ucast\")\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getVrfAddressFamily\n      Arguments:\n        addressFamily: ipv4-ucast\n        vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVrfAddressFamily.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address family.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrfAddressFamily.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address family.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "id",
                    "vrf"
                ]
            }
        },
        "nxos:index/getVrfRouteTarget:getVrfRouteTarget": {
            "description": "This data source can read a VRF Route Target Entry.\n\n- API Documentation: [rtctrlRttEntry](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:RttEntry/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getVrfRouteTarget({\n    addressFamily: \"ipv4-ucast\",\n    direction: \"import\",\n    routeTarget: \"route-target:as2-nn2:2:2\",\n    routeTargetAddressFamily: \"ipv4-ucast\",\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_vrf_route_target(address_family=\"ipv4-ucast\",\n    direction=\"import\",\n    route_target=\"route-target:as2-nn2:2:2\",\n    route_target_address_family=\"ipv4-ucast\",\n    vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetVrfRouteTarget.Invoke(new()\n    {\n        AddressFamily = \"ipv4-ucast\",\n        Direction = \"import\",\n        RouteTarget = \"route-target:as2-nn2:2:2\",\n        RouteTargetAddressFamily = \"ipv4-ucast\",\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupVrfRouteTarget(ctx, \u0026nxos.LookupVrfRouteTargetArgs{\n\t\t\tAddressFamily:            \"ipv4-ucast\",\n\t\t\tDirection:                \"import\",\n\t\t\tRouteTarget:              \"route-target:as2-nn2:2:2\",\n\t\t\tRouteTargetAddressFamily: \"ipv4-ucast\",\n\t\t\tVrf:                      \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetVrfRouteTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getVrfRouteTarget(GetVrfRouteTargetArgs.builder()\n            .addressFamily(\"ipv4-ucast\")\n            .direction(\"import\")\n            .routeTarget(\"route-target:as2-nn2:2:2\")\n            .routeTargetAddressFamily(\"ipv4-ucast\")\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getVrfRouteTarget\n      Arguments:\n        addressFamily: ipv4-ucast\n        direction: import\n        routeTarget: route-target:as2-nn2:2:2\n        routeTargetAddressFamily: ipv4-ucast\n        vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVrfRouteTarget.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address family.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Target direction.\n"
                    },
                    "routeTarget": {
                        "type": "string",
                        "description": "Route Target in NX-OS DME format.\n"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string",
                        "description": "Route Target Address Family.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "direction",
                    "routeTarget",
                    "routeTargetAddressFamily",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrfRouteTarget.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address family.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Target direction.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "routeTarget": {
                        "type": "string",
                        "description": "Route Target in NX-OS DME format.\n"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string",
                        "description": "Route Target Address Family.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "direction",
                    "id",
                    "routeTarget",
                    "routeTargetAddressFamily",
                    "vrf"
                ]
            }
        },
        "nxos:index/getVrfRouteTargetAddressFamily:getVrfRouteTargetAddressFamily": {
            "description": "This data source can read a VRF Route Target Address Family.\n\n- API Documentation: [rtctrlAfCtrl](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:AfCtrl/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getVrfRouteTargetAddressFamily({\n    addressFamily: \"ipv4-ucast\",\n    routeTargetAddressFamily: \"ipv4-ucast\",\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_vrf_route_target_address_family(address_family=\"ipv4-ucast\",\n    route_target_address_family=\"ipv4-ucast\",\n    vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetVrfRouteTargetAddressFamily.Invoke(new()\n    {\n        AddressFamily = \"ipv4-ucast\",\n        RouteTargetAddressFamily = \"ipv4-ucast\",\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupVrfRouteTargetAddressFamily(ctx, \u0026nxos.LookupVrfRouteTargetAddressFamilyArgs{\n\t\t\tAddressFamily:            \"ipv4-ucast\",\n\t\t\tRouteTargetAddressFamily: \"ipv4-ucast\",\n\t\t\tVrf:                      \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetVrfRouteTargetAddressFamilyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getVrfRouteTargetAddressFamily(GetVrfRouteTargetAddressFamilyArgs.builder()\n            .addressFamily(\"ipv4-ucast\")\n            .routeTargetAddressFamily(\"ipv4-ucast\")\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getVrfRouteTargetAddressFamily\n      Arguments:\n        addressFamily: ipv4-ucast\n        routeTargetAddressFamily: ipv4-ucast\n        vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVrfRouteTargetAddressFamily.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address family.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string",
                        "description": "Route Target Address Family.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "routeTargetAddressFamily",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrfRouteTargetAddressFamily.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address family.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string",
                        "description": "Route Target Address Family.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "id",
                    "routeTargetAddressFamily",
                    "vrf"
                ]
            }
        },
        "nxos:index/getVrfRouteTargetDirection:getVrfRouteTargetDirection": {
            "description": "This data source can read a VRF Route Target direction.\n\n- API Documentation: [rtctrlRttP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:RttP/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getVrfRouteTargetDirection({\n    addressFamily: \"ipv4-ucast\",\n    direction: \"import\",\n    routeTargetAddressFamily: \"ipv4-ucast\",\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_vrf_route_target_direction(address_family=\"ipv4-ucast\",\n    direction=\"import\",\n    route_target_address_family=\"ipv4-ucast\",\n    vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetVrfRouteTargetDirection.Invoke(new()\n    {\n        AddressFamily = \"ipv4-ucast\",\n        Direction = \"import\",\n        RouteTargetAddressFamily = \"ipv4-ucast\",\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupVrfRouteTargetDirection(ctx, \u0026nxos.LookupVrfRouteTargetDirectionArgs{\n\t\t\tAddressFamily:            \"ipv4-ucast\",\n\t\t\tDirection:                \"import\",\n\t\t\tRouteTargetAddressFamily: \"ipv4-ucast\",\n\t\t\tVrf:                      \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetVrfRouteTargetDirectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getVrfRouteTargetDirection(GetVrfRouteTargetDirectionArgs.builder()\n            .addressFamily(\"ipv4-ucast\")\n            .direction(\"import\")\n            .routeTargetAddressFamily(\"ipv4-ucast\")\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getVrfRouteTargetDirection\n      Arguments:\n        addressFamily: ipv4-ucast\n        direction: import\n        routeTargetAddressFamily: ipv4-ucast\n        vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVrfRouteTargetDirection.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address family.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Target direction.\n"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string",
                        "description": "Route Target Address Family.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "direction",
                    "routeTargetAddressFamily",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrfRouteTargetDirection.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "Address family.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Route Target direction.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "routeTargetAddressFamily": {
                        "type": "string",
                        "description": "Route Target Address Family.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "direction",
                    "id",
                    "routeTargetAddressFamily",
                    "vrf"
                ]
            }
        },
        "nxos:index/getVrfRouting:getVrfRouting": {
            "description": "This data source can read a VRF Route Distinguisher and VRF VNI.\n\n- API Documentation: [rtctrlDom](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/rtctrl:Dom/)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nxos from \"@pulumi/nxos\";\n\nconst example = nxos.getVrfRouting({\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nxos as nxos\n\nexample = nxos.get_vrf_routing(vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Nxos = Pulumi.Nxos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Nxos.GetVrfRouting.Invoke(new()\n    {\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-nxos/sdk/go/nxos\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nxos.LookupVrfRouting(ctx, \u0026nxos.LookupVrfRoutingArgs{\n\t\t\tVrf: \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nxos.NxosFunctions;\nimport com.pulumi.nxos.inputs.GetVrfRoutingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NxosFunctions.getVrfRouting(GetVrfRoutingArgs.builder()\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: nxos:getVrfRouting\n      Arguments:\n        vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVrfRouting.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrfRouting.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The distinguished name of the object.\n"
                    },
                    "routeDistinguisher": {
                        "type": "string",
                        "description": "Route Distinguisher value in NX-OS DME format.\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VRF name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "routeDistinguisher",
                    "vrf"
                ]
            }
        }
    }
}