{
    "name": "nxos",
    "displayName": "Cisco IOS XE",
    "description": "A Pulumi package for creating and managing Cisco IOS XE Devices.",
    "keywords": [
        "pulumi",
        "nxos",
        "category/utility"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`IOS XE` Terraform Provider](https://github.com/CiscoDevNet/terraform-provider-IOS XE).",
    "repository": "https://github.com/lbrlabs/pulumi-nxos",
    "pluginDownloadURL": "github://api.github.com/lbrlabs",
    "publisher": "lbrlabs",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "Lbrlabs.PulumiPackage"
        },
        "go": {
            "importBasePath": "github.com/lbrlabs/pulumi-nxos/sdk/go/nxos",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageName": "@lbrlabs/pulumi-nxos",
            "packageDescription": "A Pulumi package for creating and managing Cisco IOS XE Devices.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/CiscoDevNet/terraform-provider-IOS XE)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-nxos` repo](https://github.com/lbrlabs/pulumi-nxos/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-IOS XE` repo](https://github.com/CiscoDevNet/terraform-provider-IOS XE/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "lbrlabs_pulumi_nxos",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/CiscoDevNet/terraform-provider-IOS XE)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-nxos` repo](https://github.com/lbrlabs/pulumi-nxos/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-IOS XE` repo](https://github.com/CiscoDevNet/terraform-provider-IOS XE/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "devices": {
                "type": "array",
                "items": {
                    "$ref": "#/types/nxos:config/devices:devices"
                },
                "description": "This can be used to manage a list of devices from a single provider. All devices must use the same credentials. Each\nresource and data source has an optional attribute named `device`, which can then select a device by its name from this\nlist.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Allow insecure HTTPS client. This can also be set as the nxos_INSECURE environment variable. Defaults to `true`.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for the IOS-XE device. This can also be set as the nxos_PASSWORD environment variable.\n",
                "secret": true
            },
            "retries": {
                "type": "integer",
                "description": "Number of retries for REST API calls. This can also be set as the nxos_RETRIES environment variable. Defaults to `10`.\n"
            },
            "url": {
                "type": "string",
                "description": "URL of the Cisco IOS-XE device. Optionally a port can be added with `:12345`. The default port is `443`. This can also\nbe set as the nxos_URL environment variable.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for the IOS-XE device. This can also be set as the nxos_USERNAME environment variable.\n"
            }
        }
    },
    "types": {
        "nxos:config/devices:devices": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:index/ProviderDevice:ProviderDevice": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": []
                }
            }
        },
        "nxos:nxos/AaaAccountingExec:AaaAccountingExec": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "startStopGroup1": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/AaaAccountingNetwork:AaaAccountingNetwork": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "startStopGroup1": {
                    "type": "string"
                },
                "startStopGroup2": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "nxos:nxos/AaaAuthenticationLogin:AaaAuthenticationLogin": {
            "properties": {
                "a1Enable": {
                    "type": "boolean"
                },
                "a1Group": {
                    "type": "string"
                },
                "a1Line": {
                    "type": "boolean"
                },
                "a1Local": {
                    "type": "boolean"
                },
                "a1None": {
                    "type": "boolean"
                },
                "a2Enable": {
                    "type": "boolean"
                },
                "a2Group": {
                    "type": "string"
                },
                "a2Line": {
                    "type": "boolean"
                },
                "a2Local": {
                    "type": "boolean"
                },
                "a2None": {
                    "type": "boolean"
                },
                "a3Enable": {
                    "type": "boolean"
                },
                "a3Group": {
                    "type": "string"
                },
                "a3Line": {
                    "type": "boolean"
                },
                "a3Local": {
                    "type": "boolean"
                },
                "a3None": {
                    "type": "boolean"
                },
                "a4Enable": {
                    "type": "boolean"
                },
                "a4Group": {
                    "type": "string"
                },
                "a4Line": {
                    "type": "boolean"
                },
                "a4Local": {
                    "type": "boolean"
                },
                "a4None": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/AaaAuthorizationExec:AaaAuthorizationExec": {
            "properties": {
                "a1Group": {
                    "type": "string"
                },
                "a1IfAuthenticated": {
                    "type": "boolean"
                },
                "a1Local": {
                    "type": "boolean"
                },
                "a2Local": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/AaaAuthorizationNetwork:AaaAuthorizationNetwork": {
            "properties": {
                "a1Group": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "nxos:nxos/AaaGroupServerRadius:AaaGroupServerRadius": {
            "properties": {
                "ipRadiusSourceInterfaceLoopback": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "serverNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaGroupServerRadiusServerName:AaaGroupServerRadiusServerName"
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/AaaGroupServerRadiusServerName:AaaGroupServerRadiusServerName": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/AaaGroupServerTacacsplus:AaaGroupServerTacacsplus": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "serverNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaGroupServerTacacsplusServerName:AaaGroupServerTacacsplusServerName"
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/AaaGroupServerTacacsplusServerName:AaaGroupServerTacacsplusServerName": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/AaaServerRadiusDynamicAuthorClient:AaaServerRadiusDynamicAuthorClient": {
            "properties": {
                "ip": {
                    "type": "string"
                },
                "serverKey": {
                    "type": "string"
                },
                "serverKeyType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "nxos:nxos/AccessListExtendedEntry:AccessListExtendedEntry": {
            "properties": {
                "aceRuleAction": {
                    "type": "string"
                },
                "aceRuleProtocol": {
                    "type": "string"
                },
                "ack": {
                    "type": "boolean"
                },
                "destinationAny": {
                    "type": "boolean"
                },
                "destinationHost": {
                    "type": "string"
                },
                "destinationObjectGroup": {
                    "type": "string"
                },
                "destinationPortEqual": {
                    "type": "string"
                },
                "destinationPortGreaterThan": {
                    "type": "string"
                },
                "destinationPortLesserThan": {
                    "type": "string"
                },
                "destinationPortRangeFrom": {
                    "type": "string"
                },
                "destinationPortRangeTo": {
                    "type": "string"
                },
                "destinationPrefix": {
                    "type": "string"
                },
                "destinationPrefixMask": {
                    "type": "string"
                },
                "dscp": {
                    "type": "string"
                },
                "established": {
                    "type": "boolean"
                },
                "fin": {
                    "type": "boolean"
                },
                "fragments": {
                    "type": "boolean"
                },
                "log": {
                    "type": "boolean"
                },
                "logInput": {
                    "type": "boolean"
                },
                "precedence": {
                    "type": "string"
                },
                "psh": {
                    "type": "boolean"
                },
                "remark": {
                    "type": "string"
                },
                "rst": {
                    "type": "boolean"
                },
                "sequence": {
                    "type": "integer"
                },
                "serviceObjectGroup": {
                    "type": "string"
                },
                "sourceAny": {
                    "type": "boolean"
                },
                "sourceHost": {
                    "type": "string"
                },
                "sourceObjectGroup": {
                    "type": "string"
                },
                "sourcePortEqual": {
                    "type": "string"
                },
                "sourcePortGreaterThan": {
                    "type": "string"
                },
                "sourcePortLesserThan": {
                    "type": "string"
                },
                "sourcePortRangeFrom": {
                    "type": "string"
                },
                "sourcePortRangeTo": {
                    "type": "string"
                },
                "sourcePrefix": {
                    "type": "string"
                },
                "sourcePrefixMask": {
                    "type": "string"
                },
                "syn": {
                    "type": "boolean"
                },
                "tos": {
                    "type": "string"
                },
                "urg": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "sequence"
            ]
        },
        "nxos:nxos/AccessListStandardEntry:AccessListStandardEntry": {
            "properties": {
                "denyAny": {
                    "type": "boolean"
                },
                "denyHost": {
                    "type": "string"
                },
                "denyLog": {
                    "type": "boolean"
                },
                "denyPrefix": {
                    "type": "string"
                },
                "denyPrefixMask": {
                    "type": "string"
                },
                "permitAny": {
                    "type": "boolean"
                },
                "permitHost": {
                    "type": "string"
                },
                "permitLog": {
                    "type": "boolean"
                },
                "permitPrefix": {
                    "type": "string"
                },
                "permitPrefixMask": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "sequence"
            ]
        },
        "nxos:nxos/ArpInspectionFilter:ArpInspectionFilter": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "vlans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/ArpInspectionFilterVlan:ArpInspectionFilterVlan"
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/ArpInspectionFilterVlan:ArpInspectionFilterVlan": {
            "properties": {
                "static": {
                    "type": "boolean"
                },
                "vlanRange": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "vlanRange"
            ]
        },
        "nxos:nxos/BfdIpv4BothVrf:BfdIpv4BothVrf": {
            "properties": {
                "destIp": {
                    "type": "string"
                },
                "dstVrf": {
                    "type": "string"
                },
                "srcIp": {
                    "type": "string"
                },
                "srcVrf": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIp",
                "dstVrf",
                "srcIp",
                "srcVrf",
                "templateName"
            ]
        },
        "nxos:nxos/BfdIpv4WithDstVrf:BfdIpv4WithDstVrf": {
            "properties": {
                "destIp": {
                    "type": "string"
                },
                "dstVrf": {
                    "type": "string"
                },
                "srcIp": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIp",
                "dstVrf",
                "srcIp",
                "templateName"
            ]
        },
        "nxos:nxos/BfdIpv4WithSrcVrf:BfdIpv4WithSrcVrf": {
            "properties": {
                "destIp": {
                    "type": "string"
                },
                "srcIp": {
                    "type": "string"
                },
                "srcVrf": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIp",
                "srcIp",
                "srcVrf",
                "templateName"
            ]
        },
        "nxos:nxos/BfdIpv4WithoutVrf:BfdIpv4WithoutVrf": {
            "properties": {
                "destIp": {
                    "type": "string"
                },
                "srcIp": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIp",
                "srcIp",
                "templateName"
            ]
        },
        "nxos:nxos/BfdIpv6WithBothVrf:BfdIpv6WithBothVrf": {
            "properties": {
                "destIpv6": {
                    "type": "string"
                },
                "dstVrf": {
                    "type": "string"
                },
                "srcIpv6": {
                    "type": "string"
                },
                "srcVrf": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIpv6",
                "dstVrf",
                "srcIpv6",
                "srcVrf",
                "templateName"
            ]
        },
        "nxos:nxos/BfdIpv6WithDstVrf:BfdIpv6WithDstVrf": {
            "properties": {
                "destIpv6": {
                    "type": "string"
                },
                "dstVrf": {
                    "type": "string"
                },
                "srcIpv6": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIpv6",
                "dstVrf",
                "srcIpv6",
                "templateName"
            ]
        },
        "nxos:nxos/BfdIpv6WithSrcVrf:BfdIpv6WithSrcVrf": {
            "properties": {
                "destIpv6": {
                    "type": "string"
                },
                "srcIpv6": {
                    "type": "string"
                },
                "srcVrf": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIpv6",
                "srcIpv6",
                "srcVrf",
                "templateName"
            ]
        },
        "nxos:nxos/BfdIpv6WithoutVrf:BfdIpv6WithoutVrf": {
            "properties": {
                "destIpv6": {
                    "type": "string"
                },
                "srcIpv6": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIpv6",
                "srcIpv6",
                "templateName"
            ]
        },
        "nxos:nxos/BgpAddressFamilyIpv4Ipv4UnicastNetwork:BgpAddressFamilyIpv4Ipv4UnicastNetwork": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "nxos:nxos/BgpAddressFamilyIpv4Ipv4UnicastNetworksMask:BgpAddressFamilyIpv4Ipv4UnicastNetworksMask": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "mask": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mask",
                "network"
            ]
        },
        "nxos:nxos/BgpAddressFamilyIpv4VrfVrf:BgpAddressFamilyIpv4VrfVrf": {
            "properties": {
                "ipv4UnicastAdvertiseL2vpnEvpn": {
                    "type": "boolean"
                },
                "ipv4UnicastNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv4VrfVrfIpv4UnicastNetwork:BgpAddressFamilyIpv4VrfVrfIpv4UnicastNetwork"
                    }
                },
                "ipv4UnicastNetworksMasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv4VrfVrfIpv4UnicastNetworksMask:BgpAddressFamilyIpv4VrfVrfIpv4UnicastNetworksMask"
                    }
                },
                "ipv4UnicastRedistributeConnected": {
                    "type": "boolean"
                },
                "ipv4UnicastRedistributeStatic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/BgpAddressFamilyIpv4VrfVrfIpv4UnicastNetwork:BgpAddressFamilyIpv4VrfVrfIpv4UnicastNetwork": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "evpn": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "nxos:nxos/BgpAddressFamilyIpv4VrfVrfIpv4UnicastNetworksMask:BgpAddressFamilyIpv4VrfVrfIpv4UnicastNetworksMask": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "evpn": {
                    "type": "boolean"
                },
                "mask": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mask",
                "network"
            ]
        },
        "nxos:nxos/BgpAddressFamilyIpv6Ipv6UnicastNetwork:BgpAddressFamilyIpv6Ipv6UnicastNetwork": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "nxos:nxos/BgpAddressFamilyIpv6VrfVrf:BgpAddressFamilyIpv6VrfVrf": {
            "properties": {
                "ipv6UnicastAdvertiseL2vpnEvpn": {
                    "type": "boolean"
                },
                "ipv6UnicastNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv6VrfVrfIpv6UnicastNetwork:BgpAddressFamilyIpv6VrfVrfIpv6UnicastNetwork"
                    }
                },
                "ipv6UnicastRedistributeConnected": {
                    "type": "boolean"
                },
                "ipv6UnicastRedistributeStatic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/BgpAddressFamilyIpv6VrfVrfIpv6UnicastNetwork:BgpAddressFamilyIpv6VrfVrfIpv6UnicastNetwork": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "evpn": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "nxos:nxos/BgpIpv4UnicastNeighborRouteMap:BgpIpv4UnicastNeighborRouteMap": {
            "properties": {
                "inOut": {
                    "type": "string"
                },
                "routeMapName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "inOut",
                "routeMapName"
            ]
        },
        "nxos:nxos/BgpIpv4UnicastVrfNeighborRouteMap:BgpIpv4UnicastVrfNeighborRouteMap": {
            "properties": {
                "inOut": {
                    "type": "string"
                },
                "routeMapName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "inOut",
                "routeMapName"
            ]
        },
        "nxos:nxos/BgpIpv6UnicastNeighborRouteMap:BgpIpv6UnicastNeighborRouteMap": {
            "properties": {
                "inOut": {
                    "type": "string"
                },
                "routeMapName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "inOut",
                "routeMapName"
            ]
        },
        "nxos:nxos/CdpTlvList:CdpTlvList": {
            "properties": {
                "cos": {
                    "type": "boolean"
                },
                "duplex": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "trust": {
                    "type": "boolean"
                },
                "version": {
                    "type": "boolean"
                },
                "vtpMgmtDomain": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/ClassMapMatchActivatedServiceTemplate:ClassMapMatchActivatedServiceTemplate": {
            "properties": {
                "serviceName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ]
        },
        "nxos:nxos/CryptoIkev2KeyringPeer:CryptoIkev2KeyringPeer": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "identityAddress": {
                    "type": "string"
                },
                "identityEmailDomain": {
                    "type": "string"
                },
                "identityEmailName": {
                    "type": "string"
                },
                "identityFqdnDomain": {
                    "type": "string"
                },
                "identityFqdnName": {
                    "type": "string"
                },
                "identityKeyId": {
                    "type": "string"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4Mask": {
                    "type": "string"
                },
                "ipv6Prefix": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "preSharedKey": {
                    "type": "string"
                },
                "preSharedKeyEncryption": {
                    "type": "string"
                },
                "preSharedKeyLocal": {
                    "type": "string"
                },
                "preSharedKeyLocalEncryption": {
                    "type": "string"
                },
                "preSharedKeyRemote": {
                    "type": "string"
                },
                "preSharedKeyRemoteEncryption": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/CryptoIkev2PolicyProposal:CryptoIkev2PolicyProposal": {
            "properties": {
                "proposals": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "proposals"
            ]
        },
        "nxos:nxos/CryptoIkev2ProfileMatchIdentityRemoteIpv4Address:CryptoIkev2ProfileMatchIdentityRemoteIpv4Address": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "mask": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "nxos:nxos/DhcpSnoopingVlan:DhcpSnoopingVlan": {
            "properties": {
                "vlanId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "vlanId"
            ]
        },
        "nxos:nxos/Dot1xCredential:Dot1xCredential": {
            "properties": {
                "anonymousId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordType": {
                    "type": "string"
                },
                "pkiTrustpoint": {
                    "type": "string"
                },
                "profileName": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "profileName"
            ]
        },
        "nxos:nxos/InterfaceEthernetHelperAddress:InterfaceEthernetHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "nxos:nxos/InterfaceEthernetIpv6Address:InterfaceEthernetIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "prefix"
            ]
        },
        "nxos:nxos/InterfaceEthernetIpv6LinkLocalAddress:InterfaceEthernetIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "nxos:nxos/InterfaceEthernetSourceTemplate:InterfaceEthernetSourceTemplate": {
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "templateName"
            ]
        },
        "nxos:nxos/InterfaceLoopbackIpv6Address:InterfaceLoopbackIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "prefix"
            ]
        },
        "nxos:nxos/InterfaceLoopbackIpv6LinkLocalAddress:InterfaceLoopbackIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "nxos:nxos/InterfaceNveVni:InterfaceNveVni": {
            "properties": {
                "ingressReplication": {
                    "type": "boolean"
                },
                "ipv4MulticastGroup": {
                    "type": "string"
                },
                "vniRange": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "vniRange"
            ]
        },
        "nxos:nxos/InterfaceNveVniVrf:InterfaceNveVniVrf": {
            "properties": {
                "vniRange": {
                    "type": "string"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "vniRange"
            ]
        },
        "nxos:nxos/InterfaceOspfMessageDigestKey:InterfaceOspfMessageDigestKey": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "md5AuthKey": {
                    "type": "string"
                },
                "md5AuthType": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "nxos:nxos/InterfaceOspfProcessId:InterfaceOspfProcessId": {
            "properties": {
                "areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceOspfProcessIdArea:InterfaceOspfProcessIdArea"
                    }
                },
                "id": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "nxos:nxos/InterfaceOspfProcessIdArea:InterfaceOspfProcessIdArea": {
            "properties": {
                "areaId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "areaId"
            ]
        },
        "nxos:nxos/InterfacePortChannelHelperAddress:InterfacePortChannelHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "nxos:nxos/InterfacePortChannelIpv6Address:InterfacePortChannelIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "prefix"
            ]
        },
        "nxos:nxos/InterfacePortChannelIpv6LinkLocalAddress:InterfacePortChannelIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "nxos:nxos/InterfacePortChannelSubinterfaceHelperAddress:InterfacePortChannelSubinterfaceHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "nxos:nxos/InterfacePortChannelSubinterfaceIpv6Address:InterfacePortChannelSubinterfaceIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "prefix"
            ]
        },
        "nxos:nxos/InterfacePortChannelSubinterfaceIpv6LinkLocalAddress:InterfacePortChannelSubinterfaceIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "nxos:nxos/InterfaceTunnelHelperAddress:InterfaceTunnelHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "nxos:nxos/InterfaceTunnelIpv6Address:InterfaceTunnelIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "prefix"
            ]
        },
        "nxos:nxos/InterfaceTunnelIpv6LinkLocalAddress:InterfaceTunnelIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "nxos:nxos/InterfaceVlanHelperAddress:InterfaceVlanHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "nxos:nxos/InterfaceVlanIpv6Address:InterfaceVlanIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "prefix"
            ]
        },
        "nxos:nxos/InterfaceVlanIpv6LinkLocalAddress:InterfaceVlanIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "nxos:nxos/LineConsole:LineConsole": {
            "properties": {
                "execTimeoutMinutes": {
                    "type": "integer"
                },
                "execTimeoutSeconds": {
                    "type": "integer"
                },
                "first": {
                    "type": "string"
                },
                "loginAuthentication": {
                    "type": "string"
                },
                "loginLocal": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "passwordLevel": {
                    "type": "integer"
                },
                "passwordType": {
                    "type": "string"
                },
                "privilegeLevel": {
                    "type": "integer"
                },
                "stopbits": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "first"
            ]
        },
        "nxos:nxos/LineVty:LineVty": {
            "properties": {
                "accessClasses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LineVtyAccessClass:LineVtyAccessClass"
                    }
                },
                "escapeCharacter": {
                    "type": "string"
                },
                "execTimeoutMinutes": {
                    "type": "integer"
                },
                "execTimeoutSeconds": {
                    "type": "integer"
                },
                "first": {
                    "type": "integer"
                },
                "last": {
                    "type": "integer"
                },
                "loginAuthentication": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordLevel": {
                    "type": "integer"
                },
                "passwordType": {
                    "type": "string"
                },
                "transportPreferredProtocol": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "first"
            ]
        },
        "nxos:nxos/LineVtyAccessClass:LineVtyAccessClass": {
            "properties": {
                "accessList": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "vrfAlso": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "accessList",
                "direction"
            ]
        },
        "nxos:nxos/LoggingIpv4Host:LoggingIpv4Host": {
            "properties": {
                "ipv4Host": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv4Host"
            ]
        },
        "nxos:nxos/LoggingIpv4HostTransportTransportTcpPort:LoggingIpv4HostTransportTransportTcpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "nxos:nxos/LoggingIpv4HostTransportTransportTlsPort:LoggingIpv4HostTransportTransportTlsPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                },
                "profile": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "nxos:nxos/LoggingIpv4HostTransportTransportUdpPort:LoggingIpv4HostTransportTransportUdpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "nxos:nxos/LoggingIpv4HostVrfTransportTransportTcpPort:LoggingIpv4HostVrfTransportTransportTcpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "nxos:nxos/LoggingIpv4HostVrfTransportTransportTlsPort:LoggingIpv4HostVrfTransportTransportTlsPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                },
                "profile": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "nxos:nxos/LoggingIpv4HostVrfTransportTransportUdpPort:LoggingIpv4HostVrfTransportTransportUdpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "nxos:nxos/LoggingIpv4VrfHost:LoggingIpv4VrfHost": {
            "properties": {
                "ipv4Host": {
                    "type": "string"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv4Host",
                "vrf"
            ]
        },
        "nxos:nxos/LoggingIpv6Host:LoggingIpv6Host": {
            "properties": {
                "ipv6Host": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv6Host"
            ]
        },
        "nxos:nxos/LoggingIpv6HostTransportTransportTcpPort:LoggingIpv6HostTransportTransportTcpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "nxos:nxos/LoggingIpv6HostTransportTransportTlsPort:LoggingIpv6HostTransportTransportTlsPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                },
                "profile": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "nxos:nxos/LoggingIpv6HostTransportTransportUdpPort:LoggingIpv6HostTransportTransportUdpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "nxos:nxos/LoggingIpv6HostVrfTransportTransportTcpPort:LoggingIpv6HostVrfTransportTransportTcpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "nxos:nxos/LoggingIpv6HostVrfTransportTransportTlsPort:LoggingIpv6HostVrfTransportTransportTlsPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                },
                "profile": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "nxos:nxos/LoggingIpv6HostVrfTransportTransportUdpPort:LoggingIpv6HostVrfTransportTransportUdpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "nxos:nxos/LoggingIpv6VrfHost:LoggingIpv6VrfHost": {
            "properties": {
                "ipv6Host": {
                    "type": "string"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv6Host",
                "vrf"
            ]
        },
        "nxos:nxos/LoggingSourceInterfacesVrf:LoggingSourceInterfacesVrf": {
            "properties": {
                "interfaceName": {
                    "type": "string"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "interfaceName",
                "vrf"
            ]
        },
        "nxos:nxos/MdtSubscriptionReceiver:MdtSubscriptionReceiver": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "port",
                "protocol"
            ]
        },
        "nxos:nxos/MsdpPassword:MsdpPassword": {
            "properties": {
                "addr": {
                    "type": "string"
                },
                "encryption": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "addr",
                "password"
            ]
        },
        "nxos:nxos/MsdpPeer:MsdpPeer": {
            "properties": {
                "addr": {
                    "type": "string"
                },
                "connectSourceLoopback": {
                    "type": "integer"
                },
                "remoteAs": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "addr"
            ]
        },
        "nxos:nxos/MsdpVrfPassword:MsdpVrfPassword": {
            "properties": {
                "addr": {
                    "type": "string"
                },
                "encryption": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "addr",
                "password"
            ]
        },
        "nxos:nxos/MsdpVrfPeer:MsdpVrfPeer": {
            "properties": {
                "addr": {
                    "type": "string"
                },
                "connectSourceLoopback": {
                    "type": "integer"
                },
                "remoteAs": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "addr"
            ]
        },
        "nxos:nxos/NtpAuthenticationKey:NtpAuthenticationKey": {
            "properties": {
                "cmacAes128": {
                    "type": "string"
                },
                "encryptionType": {
                    "type": "integer"
                },
                "hmacSha1": {
                    "type": "string"
                },
                "hmacSha2256": {
                    "type": "string"
                },
                "md5": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "sha1": {
                    "type": "string"
                },
                "sha2": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "number"
            ]
        },
        "nxos:nxos/NtpPeer:NtpPeer": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "integer"
                },
                "prefer": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "ipAddress"
            ]
        },
        "nxos:nxos/NtpPeerVrf:NtpPeerVrf": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/NtpPeerVrfPeer:NtpPeerVrfPeer"
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/NtpPeerVrfPeer:NtpPeerVrfPeer": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "integer"
                },
                "prefer": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "ipAddress"
            ]
        },
        "nxos:nxos/NtpServer:NtpServer": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "integer"
                },
                "prefer": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "ipAddress"
            ]
        },
        "nxos:nxos/NtpServerVrf:NtpServerVrf": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/NtpServerVrfServer:NtpServerVrfServer"
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/NtpServerVrfServer:NtpServerVrfServer": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "integer"
                },
                "prefer": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "ipAddress"
            ]
        },
        "nxos:nxos/OspfArea:OspfArea": {
            "properties": {
                "areaId": {
                    "type": "string"
                },
                "authenticationMessageDigest": {
                    "type": "boolean"
                },
                "nssa": {
                    "type": "boolean"
                },
                "nssaDefaultInformationOriginate": {
                    "type": "boolean"
                },
                "nssaDefaultInformationOriginateMetric": {
                    "type": "integer"
                },
                "nssaDefaultInformationOriginateMetricType": {
                    "type": "integer"
                },
                "nssaNoRedistribution": {
                    "type": "boolean"
                },
                "nssaNoSummary": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "areaId"
            ]
        },
        "nxos:nxos/OspfNeighbor:OspfNeighbor": {
            "properties": {
                "cost": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "nxos:nxos/OspfNetwork:OspfNetwork": {
            "properties": {
                "area": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "wildcard": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "nxos:nxos/OspfSummaryAddress:OspfSummaryAddress": {
            "properties": {
                "ip": {
                    "type": "string"
                },
                "mask": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "nxos:nxos/OspfVrfArea:OspfVrfArea": {
            "properties": {
                "areaId": {
                    "type": "string"
                },
                "authenticationMessageDigest": {
                    "type": "boolean"
                },
                "nssa": {
                    "type": "boolean"
                },
                "nssaDefaultInformationOriginate": {
                    "type": "boolean"
                },
                "nssaDefaultInformationOriginateMetric": {
                    "type": "integer"
                },
                "nssaDefaultInformationOriginateMetricType": {
                    "type": "integer"
                },
                "nssaNoRedistribution": {
                    "type": "boolean"
                },
                "nssaNoSummary": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "areaId"
            ]
        },
        "nxos:nxos/OspfVrfNeighbor:OspfVrfNeighbor": {
            "properties": {
                "cost": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "nxos:nxos/OspfVrfNetwork:OspfVrfNetwork": {
            "properties": {
                "area": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "wildcard": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "nxos:nxos/OspfVrfSummaryAddress:OspfVrfSummaryAddress": {
            "properties": {
                "ip": {
                    "type": "string"
                },
                "mask": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "nxos:nxos/PimRpAddress:PimRpAddress": {
            "properties": {
                "accessList": {
                    "type": "string"
                },
                "bidir": {
                    "type": "boolean"
                },
                "override": {
                    "type": "boolean"
                },
                "rpAddress": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessList"
            ]
        },
        "nxos:nxos/PimRpCandidate:PimRpCandidate": {
            "properties": {
                "bidir": {
                    "type": "boolean"
                },
                "groupList": {
                    "type": "string"
                },
                "interface": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "interface"
            ]
        },
        "nxos:nxos/PimVrfRpAddress:PimVrfRpAddress": {
            "properties": {
                "accessList": {
                    "type": "string"
                },
                "bidir": {
                    "type": "boolean"
                },
                "override": {
                    "type": "boolean"
                },
                "rpAddress": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessList"
            ]
        },
        "nxos:nxos/PimVrfRpCandidate:PimVrfRpCandidate": {
            "properties": {
                "bidir": {
                    "type": "boolean"
                },
                "groupList": {
                    "type": "string"
                },
                "interface": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "interface"
            ]
        },
        "nxos:nxos/PolicyMapEventClassNumber:PolicyMapEventClassNumber": {
            "properties": {
                "actionNumbers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/PolicyMapEventClassNumberActionNumber:PolicyMapEventClassNumberActionNumber"
                    }
                },
                "class": {
                    "type": "string"
                },
                "executionType": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "number"
            ]
        },
        "nxos:nxos/PolicyMapEventClassNumberActionNumber:PolicyMapEventClassNumberActionNumber": {
            "properties": {
                "activateServiceTemplateConfigServiceTemplate": {
                    "type": "string"
                },
                "authenticateUsingMethod": {
                    "type": "string"
                },
                "authenticateUsingPriority": {
                    "type": "integer"
                },
                "authenticateUsingRetries": {
                    "type": "integer"
                },
                "authenticateUsingRetryTime": {
                    "type": "integer"
                },
                "authorize": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer"
                },
                "pauseReauthentication": {
                    "type": "boolean"
                },
                "terminateConfig": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "number"
            ]
        },
        "nxos:nxos/PrefixListPrefix:PrefixListPrefix": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "ge": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "le": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "seq": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "name",
                "seq"
            ]
        },
        "nxos:nxos/RadiusServerAttribute:RadiusServerAttribute": {
            "properties": {
                "accessRequestInclude": {
                    "type": "boolean"
                },
                "attribute31Parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/RadiusServerAttributeAttribute31Parameter:RadiusServerAttributeAttribute31Parameter"
                    }
                },
                "number": {
                    "type": "string"
                },
                "sendAttributes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "number"
            ]
        },
        "nxos:nxos/RadiusServerAttributeAttribute31Parameter:RadiusServerAttributeAttribute31Parameter": {
            "properties": {
                "callingStationId": {
                    "type": "string"
                },
                "idMacFormat": {
                    "type": "string"
                },
                "idMacLuCase": {
                    "type": "string"
                },
                "idSendMacOnly": {
                    "type": "boolean"
                },
                "idSendNasPortDetail": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "callingStationId"
            ]
        },
        "nxos:nxos/RestconfList:RestconfList": {
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "name"
            ]
        },
        "nxos:nxos/RouteMapEntry:RouteMapEntry": {
            "properties": {
                "continue": {
                    "type": "boolean"
                },
                "continueSequenceNumber": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "matchAsPaths": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchAsPathsLegacies": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchCommunityListExactMatch": {
                    "type": "boolean"
                },
                "matchCommunityLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchCommunityListsLegacies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchExtcommunityLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchExtcommunityListsLegacies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchInterfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpAddressAccessLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpAddressPrefixLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpNextHopAccessLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpNextHopPrefixLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpv6AddressAccessLists": {
                    "type": "string"
                },
                "matchIpv6AddressPrefixLists": {
                    "type": "string"
                },
                "matchIpv6NextHopAccessLists": {
                    "type": "string"
                },
                "matchIpv6NextHopPrefixLists": {
                    "type": "string"
                },
                "matchLocalPreferences": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchLocalPreferencesLegacies": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchRouteTypeExternal": {
                    "type": "boolean"
                },
                "matchRouteTypeExternalType1": {
                    "type": "boolean"
                },
                "matchRouteTypeExternalType2": {
                    "type": "boolean"
                },
                "matchRouteTypeInternal": {
                    "type": "boolean"
                },
                "matchRouteTypeLevel1": {
                    "type": "boolean"
                },
                "matchRouteTypeLevel2": {
                    "type": "boolean"
                },
                "matchRouteTypeLocal": {
                    "type": "boolean"
                },
                "matchSourceProtocolBgps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchSourceProtocolConnected": {
                    "type": "boolean"
                },
                "matchSourceProtocolEigrps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchSourceProtocolIsis": {
                    "type": "boolean"
                },
                "matchSourceProtocolLisp": {
                    "type": "boolean"
                },
                "matchSourceProtocolOspfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchSourceProtocolOspfv3s": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchSourceProtocolRip": {
                    "type": "boolean"
                },
                "matchSourceProtocolStatic": {
                    "type": "boolean"
                },
                "matchTags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchTrack": {
                    "type": "integer"
                },
                "operation": {
                    "type": "string"
                },
                "seq": {
                    "type": "integer"
                },
                "setAsPathPrependAs": {
                    "type": "string"
                },
                "setAsPathPrependAsLegacy": {
                    "type": "string"
                },
                "setAsPathPrependLastAs": {
                    "type": "integer"
                },
                "setAsPathPrependLastAsLegacy": {
                    "type": "integer"
                },
                "setAsPathTag": {
                    "type": "boolean"
                },
                "setAsPathTagLegacy": {
                    "type": "boolean"
                },
                "setCommunities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setCommunitiesAdditive": {
                    "type": "boolean"
                },
                "setCommunitiesAdditiveLegacy": {
                    "type": "boolean"
                },
                "setCommunitiesLegacies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setCommunityListDelete": {
                    "type": "boolean"
                },
                "setCommunityListDeleteLegacy": {
                    "type": "boolean"
                },
                "setCommunityListExpanded": {
                    "type": "integer"
                },
                "setCommunityListExpandedLegacy": {
                    "type": "integer"
                },
                "setCommunityListName": {
                    "type": "string"
                },
                "setCommunityListNameLegacy": {
                    "type": "string"
                },
                "setCommunityListStandard": {
                    "type": "integer"
                },
                "setCommunityListStandardLegacy": {
                    "type": "integer"
                },
                "setCommunityNone": {
                    "type": "boolean"
                },
                "setCommunityNoneLegacy": {
                    "type": "boolean"
                },
                "setDefaultInterfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setExtcomunityRtLegacies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setExtcomunityRts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setExtcomunitySoo": {
                    "type": "string"
                },
                "setExtcomunitySooLegacy": {
                    "type": "string"
                },
                "setExtcomunityVpnDistinguisher": {
                    "type": "string"
                },
                "setExtcomunityVpnDistinguisherAdditive": {
                    "type": "boolean"
                },
                "setExtcomunityVpnDistinguisherLegacy": {
                    "type": "string"
                },
                "setGlobal": {
                    "type": "boolean"
                },
                "setInterfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpAddress": {
                    "type": "string"
                },
                "setIpDefaultGlobalNextHopAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpDefaultNextHopAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpGlobalNextHopAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpNextHopAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpNextHopSelf": {
                    "type": "boolean"
                },
                "setIpQosGroup": {
                    "type": "integer"
                },
                "setIpv6Addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpv6DefaultGlobalNextHop": {
                    "type": "string"
                },
                "setIpv6DefaultNextHops": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpv6NextHops": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setLevel1": {
                    "type": "boolean"
                },
                "setLevel12": {
                    "type": "boolean"
                },
                "setLevel2": {
                    "type": "boolean"
                },
                "setLocalPreference": {
                    "type": "integer"
                },
                "setLocalPreferenceLegacy": {
                    "type": "integer"
                },
                "setMetricChange": {
                    "type": "string"
                },
                "setMetricDelay": {
                    "type": "string"
                },
                "setMetricLoading": {
                    "type": "integer"
                },
                "setMetricMtu": {
                    "type": "integer"
                },
                "setMetricReliability": {
                    "type": "integer"
                },
                "setMetricType": {
                    "type": "string"
                },
                "setMetricValue": {
                    "type": "integer"
                },
                "setTag": {
                    "type": "integer"
                },
                "setVrf": {
                    "type": "string"
                },
                "setWeight": {
                    "type": "integer"
                },
                "setWeightLegacy": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "seq"
            ]
        },
        "nxos:nxos/ServiceTemplateAccessGroup:ServiceTemplateAccessGroup": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/ServiceTemplateInterfaceTemplate:ServiceTemplateInterfaceTemplate": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/ServiceTemplateTag:ServiceTemplateTag": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/SnmpServerContext:SnmpServerContext": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/SnmpServerGroupV3Security:SnmpServerGroupV3Security": {
            "properties": {
                "accessAclName": {
                    "type": "string"
                },
                "accessIpv6Acl": {
                    "type": "string"
                },
                "accessStandardAcl": {
                    "type": "integer"
                },
                "contextNode": {
                    "type": "string"
                },
                "matchNode": {
                    "type": "string"
                },
                "notifyNode": {
                    "type": "string"
                },
                "readNode": {
                    "type": "string"
                },
                "securityLevel": {
                    "type": "string"
                },
                "writeNode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "securityLevel"
            ]
        },
        "nxos:nxos/SnmpServerHost:SnmpServerHost": {
            "properties": {
                "communityOrUser": {
                    "type": "string"
                },
                "encryption": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipAddress"
            ]
        },
        "nxos:nxos/SnmpServerSnmpCommunity:SnmpServerSnmpCommunity": {
            "properties": {
                "accessListName": {
                    "type": "string"
                },
                "ipv6": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "view": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nxos:nxos/SnmpServerView:SnmpServerView": {
            "properties": {
                "incExl": {
                    "type": "string"
                },
                "mib": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mib",
                "name"
            ]
        },
        "nxos:nxos/StaticRouteNextHop:StaticRouteNextHop": {
            "properties": {
                "global": {
                    "type": "boolean"
                },
                "metric": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nextHop": {
                    "type": "string"
                },
                "permanent": {
                    "type": "boolean"
                },
                "tag": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "nextHop"
            ]
        },
        "nxos:nxos/StaticRouteVrfRoute:StaticRouteVrfRoute": {
            "properties": {
                "mask": {
                    "type": "string"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/StaticRouteVrfRouteNextHop:StaticRouteVrfRouteNextHop"
                    }
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mask",
                "prefix"
            ]
        },
        "nxos:nxos/StaticRouteVrfRouteNextHop:StaticRouteVrfRouteNextHop": {
            "properties": {
                "global": {
                    "type": "boolean"
                },
                "metric": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nextHop": {
                    "type": "string"
                },
                "permanent": {
                    "type": "boolean"
                },
                "tag": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "nextHop"
            ]
        },
        "nxos:nxos/SystemMulticastRoutingVrf:SystemMulticastRoutingVrf": {
            "properties": {
                "distributed": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "vrf"
            ]
        },
        "nxos:nxos/TemplateDeviceTrackingAttachPolicy:TemplateDeviceTrackingAttachPolicy": {
            "properties": {
                "policyName": {
                    "type": "string"
                },
                "vlanRange": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "policyName"
            ]
        },
        "nxos:nxos/TemplateIpAccessGroup:TemplateIpAccessGroup": {
            "properties": {
                "accessList": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "direction"
            ]
        },
        "nxos:nxos/TemplateSwitchportPortSecurityMaximumRange:TemplateSwitchportPortSecurityMaximumRange": {
            "properties": {
                "range": {
                    "type": "integer"
                },
                "vlan": {
                    "type": "boolean"
                },
                "vlanAccess": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "range"
            ]
        },
        "nxos:nxos/VrfIpv4RouteTargetExport:VrfIpv4RouteTargetExport": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "nxos:nxos/VrfIpv4RouteTargetExportStitching:VrfIpv4RouteTargetExportStitching": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "stitching",
                        "value"
                    ]
                }
            }
        },
        "nxos:nxos/VrfIpv4RouteTargetImport:VrfIpv4RouteTargetImport": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "nxos:nxos/VrfIpv4RouteTargetImportStitching:VrfIpv4RouteTargetImportStitching": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "stitching",
                        "value"
                    ]
                }
            }
        },
        "nxos:nxos/VrfIpv6RouteTargetExport:VrfIpv6RouteTargetExport": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "nxos:nxos/VrfIpv6RouteTargetExportStitching:VrfIpv6RouteTargetExportStitching": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "stitching",
                        "value"
                    ]
                }
            }
        },
        "nxos:nxos/VrfIpv6RouteTargetImport:VrfIpv6RouteTargetImport": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "nxos:nxos/VrfIpv6RouteTargetImportStitching:VrfIpv6RouteTargetImportStitching": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "stitching",
                        "value"
                    ]
                }
            }
        },
        "nxos:nxos/VrfRouteTargetExport:VrfRouteTargetExport": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "nxos:nxos/VrfRouteTargetImport:VrfRouteTargetImport": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "nxos:nxos/getAaaAccountingExec:getAaaAccountingExec": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "startStopGroup1": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "startStopGroup1"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getAaaAccountingNetwork:getAaaAccountingNetwork": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "startStopGroup1": {
                    "type": "string"
                },
                "startStopGroup2": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "startStopGroup1",
                "startStopGroup2"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getAaaAuthenticationLogin:getAaaAuthenticationLogin": {
            "properties": {
                "a1Enable": {
                    "type": "boolean"
                },
                "a1Group": {
                    "type": "string"
                },
                "a1Line": {
                    "type": "boolean"
                },
                "a1Local": {
                    "type": "boolean"
                },
                "a1None": {
                    "type": "boolean"
                },
                "a2Enable": {
                    "type": "boolean"
                },
                "a2Group": {
                    "type": "string"
                },
                "a2Line": {
                    "type": "boolean"
                },
                "a2Local": {
                    "type": "boolean"
                },
                "a2None": {
                    "type": "boolean"
                },
                "a3Enable": {
                    "type": "boolean"
                },
                "a3Group": {
                    "type": "string"
                },
                "a3Line": {
                    "type": "boolean"
                },
                "a3Local": {
                    "type": "boolean"
                },
                "a3None": {
                    "type": "boolean"
                },
                "a4Enable": {
                    "type": "boolean"
                },
                "a4Group": {
                    "type": "string"
                },
                "a4Line": {
                    "type": "boolean"
                },
                "a4Local": {
                    "type": "boolean"
                },
                "a4None": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "a1Enable",
                "a1Group",
                "a1Line",
                "a1Local",
                "a1None",
                "a2Enable",
                "a2Group",
                "a2Line",
                "a2Local",
                "a2None",
                "a3Enable",
                "a3Group",
                "a3Line",
                "a3Local",
                "a3None",
                "a4Enable",
                "a4Group",
                "a4Line",
                "a4Local",
                "a4None",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getAaaAuthorizationExec:getAaaAuthorizationExec": {
            "properties": {
                "a1Group": {
                    "type": "string"
                },
                "a1IfAuthenticated": {
                    "type": "boolean"
                },
                "a1Local": {
                    "type": "boolean"
                },
                "a2Local": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "a1Group",
                "a1IfAuthenticated",
                "a1Local",
                "a2Local",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getAaaAuthorizationNetwork:getAaaAuthorizationNetwork": {
            "properties": {
                "a1Group": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "a1Group",
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getAaaGroupServerRadius:getAaaGroupServerRadius": {
            "properties": {
                "ipRadiusSourceInterfaceLoopback": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "serverNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/getAaaGroupServerRadiusServerName:getAaaGroupServerRadiusServerName"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipRadiusSourceInterfaceLoopback",
                "name",
                "serverNames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getAaaGroupServerRadiusServerName:getAaaGroupServerRadiusServerName": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getAaaGroupServerTacacsplus:getAaaGroupServerTacacsplus": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "serverNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/getAaaGroupServerTacacsplusServerName:getAaaGroupServerTacacsplusServerName"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "serverNames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getAaaGroupServerTacacsplusServerName:getAaaGroupServerTacacsplusServerName": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getAaaServerRadiusDynamicAuthorClient:getAaaServerRadiusDynamicAuthorClient": {
            "properties": {
                "ip": {
                    "type": "string"
                },
                "serverKey": {
                    "type": "string"
                },
                "serverKeyType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip",
                "serverKey",
                "serverKeyType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getAccessListExtendedEntry:getAccessListExtendedEntry": {
            "properties": {
                "aceRuleAction": {
                    "type": "string"
                },
                "aceRuleProtocol": {
                    "type": "string"
                },
                "ack": {
                    "type": "boolean"
                },
                "destinationAny": {
                    "type": "boolean"
                },
                "destinationHost": {
                    "type": "string"
                },
                "destinationObjectGroup": {
                    "type": "string"
                },
                "destinationPortEqual": {
                    "type": "string"
                },
                "destinationPortGreaterThan": {
                    "type": "string"
                },
                "destinationPortLesserThan": {
                    "type": "string"
                },
                "destinationPortRangeFrom": {
                    "type": "string"
                },
                "destinationPortRangeTo": {
                    "type": "string"
                },
                "destinationPrefix": {
                    "type": "string"
                },
                "destinationPrefixMask": {
                    "type": "string"
                },
                "dscp": {
                    "type": "string"
                },
                "established": {
                    "type": "boolean"
                },
                "fin": {
                    "type": "boolean"
                },
                "fragments": {
                    "type": "boolean"
                },
                "log": {
                    "type": "boolean"
                },
                "logInput": {
                    "type": "boolean"
                },
                "precedence": {
                    "type": "string"
                },
                "psh": {
                    "type": "boolean"
                },
                "remark": {
                    "type": "string"
                },
                "rst": {
                    "type": "boolean"
                },
                "sequence": {
                    "type": "integer"
                },
                "serviceObjectGroup": {
                    "type": "string"
                },
                "sourceAny": {
                    "type": "boolean"
                },
                "sourceHost": {
                    "type": "string"
                },
                "sourceObjectGroup": {
                    "type": "string"
                },
                "sourcePortEqual": {
                    "type": "string"
                },
                "sourcePortGreaterThan": {
                    "type": "string"
                },
                "sourcePortLesserThan": {
                    "type": "string"
                },
                "sourcePortRangeFrom": {
                    "type": "string"
                },
                "sourcePortRangeTo": {
                    "type": "string"
                },
                "sourcePrefix": {
                    "type": "string"
                },
                "sourcePrefixMask": {
                    "type": "string"
                },
                "syn": {
                    "type": "boolean"
                },
                "tos": {
                    "type": "string"
                },
                "urg": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "aceRuleAction",
                "aceRuleProtocol",
                "ack",
                "destinationAny",
                "destinationHost",
                "destinationObjectGroup",
                "destinationPortEqual",
                "destinationPortGreaterThan",
                "destinationPortLesserThan",
                "destinationPortRangeFrom",
                "destinationPortRangeTo",
                "destinationPrefix",
                "destinationPrefixMask",
                "dscp",
                "established",
                "fin",
                "fragments",
                "log",
                "logInput",
                "precedence",
                "psh",
                "remark",
                "rst",
                "sequence",
                "serviceObjectGroup",
                "sourceAny",
                "sourceHost",
                "sourceObjectGroup",
                "sourcePortEqual",
                "sourcePortGreaterThan",
                "sourcePortLesserThan",
                "sourcePortRangeFrom",
                "sourcePortRangeTo",
                "sourcePrefix",
                "sourcePrefixMask",
                "syn",
                "tos",
                "urg"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getAccessListStandardEntry:getAccessListStandardEntry": {
            "properties": {
                "denyAny": {
                    "type": "boolean"
                },
                "denyHost": {
                    "type": "string"
                },
                "denyLog": {
                    "type": "boolean"
                },
                "denyPrefix": {
                    "type": "string"
                },
                "denyPrefixMask": {
                    "type": "string"
                },
                "permitAny": {
                    "type": "boolean"
                },
                "permitHost": {
                    "type": "string"
                },
                "permitLog": {
                    "type": "boolean"
                },
                "permitPrefix": {
                    "type": "string"
                },
                "permitPrefixMask": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "denyAny",
                "denyHost",
                "denyLog",
                "denyPrefix",
                "denyPrefixMask",
                "permitAny",
                "permitHost",
                "permitLog",
                "permitPrefix",
                "permitPrefixMask",
                "remark",
                "sequence"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getArpInspectionFilter:getArpInspectionFilter": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "vlans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/getArpInspectionFilterVlan:getArpInspectionFilterVlan"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "vlans"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getArpInspectionFilterVlan:getArpInspectionFilterVlan": {
            "properties": {
                "static": {
                    "type": "boolean"
                },
                "vlanRange": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "static",
                "vlanRange"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBfdIpv4BothVrf:getBfdIpv4BothVrf": {
            "properties": {
                "destIp": {
                    "type": "string"
                },
                "dstVrf": {
                    "type": "string"
                },
                "srcIp": {
                    "type": "string"
                },
                "srcVrf": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIp",
                "dstVrf",
                "srcIp",
                "srcVrf",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBfdIpv4WithDstVrf:getBfdIpv4WithDstVrf": {
            "properties": {
                "destIp": {
                    "type": "string"
                },
                "dstVrf": {
                    "type": "string"
                },
                "srcIp": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIp",
                "dstVrf",
                "srcIp",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBfdIpv4WithSrcVrf:getBfdIpv4WithSrcVrf": {
            "properties": {
                "destIp": {
                    "type": "string"
                },
                "srcIp": {
                    "type": "string"
                },
                "srcVrf": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIp",
                "srcIp",
                "srcVrf",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBfdIpv4WithoutVrf:getBfdIpv4WithoutVrf": {
            "properties": {
                "destIp": {
                    "type": "string"
                },
                "srcIp": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIp",
                "srcIp",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBfdIpv6WithBothVrf:getBfdIpv6WithBothVrf": {
            "properties": {
                "destIpv6": {
                    "type": "string"
                },
                "dstVrf": {
                    "type": "string"
                },
                "srcIpv6": {
                    "type": "string"
                },
                "srcVrf": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIpv6",
                "dstVrf",
                "srcIpv6",
                "srcVrf",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBfdIpv6WithDstVrf:getBfdIpv6WithDstVrf": {
            "properties": {
                "destIpv6": {
                    "type": "string"
                },
                "dstVrf": {
                    "type": "string"
                },
                "srcIpv6": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIpv6",
                "dstVrf",
                "srcIpv6",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBfdIpv6WithSrcVrf:getBfdIpv6WithSrcVrf": {
            "properties": {
                "destIpv6": {
                    "type": "string"
                },
                "srcIpv6": {
                    "type": "string"
                },
                "srcVrf": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIpv6",
                "srcIpv6",
                "srcVrf",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBfdIpv6WithoutVrf:getBfdIpv6WithoutVrf": {
            "properties": {
                "destIpv6": {
                    "type": "string"
                },
                "srcIpv6": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIpv6",
                "srcIpv6",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBgpAddressFamilyIpv4Ipv4UnicastNetwork:getBgpAddressFamilyIpv4Ipv4UnicastNetwork": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "backdoor",
                "network",
                "routeMap"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBgpAddressFamilyIpv4Ipv4UnicastNetworksMask:getBgpAddressFamilyIpv4Ipv4UnicastNetworksMask": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "mask": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "backdoor",
                "mask",
                "network",
                "routeMap"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBgpAddressFamilyIpv4VrfVrf:getBgpAddressFamilyIpv4VrfVrf": {
            "properties": {
                "ipv4UnicastAdvertiseL2vpnEvpn": {
                    "type": "boolean"
                },
                "ipv4UnicastNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/getBgpAddressFamilyIpv4VrfVrfIpv4UnicastNetwork:getBgpAddressFamilyIpv4VrfVrfIpv4UnicastNetwork"
                    }
                },
                "ipv4UnicastNetworksMasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/getBgpAddressFamilyIpv4VrfVrfIpv4UnicastNetworksMask:getBgpAddressFamilyIpv4VrfVrfIpv4UnicastNetworksMask"
                    }
                },
                "ipv4UnicastRedistributeConnected": {
                    "type": "boolean"
                },
                "ipv4UnicastRedistributeStatic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv4UnicastAdvertiseL2vpnEvpn",
                "ipv4UnicastNetworks",
                "ipv4UnicastNetworksMasks",
                "ipv4UnicastRedistributeConnected",
                "ipv4UnicastRedistributeStatic",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBgpAddressFamilyIpv4VrfVrfIpv4UnicastNetwork:getBgpAddressFamilyIpv4VrfVrfIpv4UnicastNetwork": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "evpn": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "backdoor",
                "evpn",
                "network",
                "routeMap"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBgpAddressFamilyIpv4VrfVrfIpv4UnicastNetworksMask:getBgpAddressFamilyIpv4VrfVrfIpv4UnicastNetworksMask": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "evpn": {
                    "type": "boolean"
                },
                "mask": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "backdoor",
                "evpn",
                "mask",
                "network",
                "routeMap"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBgpAddressFamilyIpv6Ipv6UnicastNetwork:getBgpAddressFamilyIpv6Ipv6UnicastNetwork": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "backdoor",
                "network",
                "routeMap"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBgpAddressFamilyIpv6VrfVrf:getBgpAddressFamilyIpv6VrfVrf": {
            "properties": {
                "ipv6UnicastAdvertiseL2vpnEvpn": {
                    "type": "boolean"
                },
                "ipv6UnicastNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/getBgpAddressFamilyIpv6VrfVrfIpv6UnicastNetwork:getBgpAddressFamilyIpv6VrfVrfIpv6UnicastNetwork"
                    }
                },
                "ipv6UnicastRedistributeConnected": {
                    "type": "boolean"
                },
                "ipv6UnicastRedistributeStatic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv6UnicastAdvertiseL2vpnEvpn",
                "ipv6UnicastNetworks",
                "ipv6UnicastRedistributeConnected",
                "ipv6UnicastRedistributeStatic",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBgpAddressFamilyIpv6VrfVrfIpv6UnicastNetwork:getBgpAddressFamilyIpv6VrfVrfIpv6UnicastNetwork": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "evpn": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "backdoor",
                "evpn",
                "network",
                "routeMap"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBgpIpv4UnicastNeighborRouteMap:getBgpIpv4UnicastNeighborRouteMap": {
            "properties": {
                "inOut": {
                    "type": "string"
                },
                "routeMapName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "inOut",
                "routeMapName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBgpIpv4UnicastVrfNeighborRouteMap:getBgpIpv4UnicastVrfNeighborRouteMap": {
            "properties": {
                "inOut": {
                    "type": "string"
                },
                "routeMapName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "inOut",
                "routeMapName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getBgpIpv6UnicastNeighborRouteMap:getBgpIpv6UnicastNeighborRouteMap": {
            "properties": {
                "inOut": {
                    "type": "string"
                },
                "routeMapName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "inOut",
                "routeMapName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getCdpTlvList:getCdpTlvList": {
            "properties": {
                "cos": {
                    "type": "boolean"
                },
                "duplex": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "trust": {
                    "type": "boolean"
                },
                "version": {
                    "type": "boolean"
                },
                "vtpMgmtDomain": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "cos",
                "duplex",
                "name",
                "trust",
                "version",
                "vtpMgmtDomain"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getClassMapMatchActivatedServiceTemplate:getClassMapMatchActivatedServiceTemplate": {
            "properties": {
                "serviceName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getCryptoIkev2KeyringPeer:getCryptoIkev2KeyringPeer": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "identityAddress": {
                    "type": "string"
                },
                "identityEmailDomain": {
                    "type": "string"
                },
                "identityEmailName": {
                    "type": "string"
                },
                "identityFqdnDomain": {
                    "type": "string"
                },
                "identityFqdnName": {
                    "type": "string"
                },
                "identityKeyId": {
                    "type": "string"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4Mask": {
                    "type": "string"
                },
                "ipv6Prefix": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "preSharedKey": {
                    "type": "string"
                },
                "preSharedKeyEncryption": {
                    "type": "string"
                },
                "preSharedKeyLocal": {
                    "type": "string"
                },
                "preSharedKeyLocalEncryption": {
                    "type": "string"
                },
                "preSharedKeyRemote": {
                    "type": "string"
                },
                "preSharedKeyRemoteEncryption": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "hostname",
                "identityAddress",
                "identityEmailDomain",
                "identityEmailName",
                "identityFqdnDomain",
                "identityFqdnName",
                "identityKeyId",
                "ipv4Address",
                "ipv4Mask",
                "ipv6Prefix",
                "name",
                "preSharedKey",
                "preSharedKeyEncryption",
                "preSharedKeyLocal",
                "preSharedKeyLocalEncryption",
                "preSharedKeyRemote",
                "preSharedKeyRemoteEncryption"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getCryptoIkev2PolicyProposal:getCryptoIkev2PolicyProposal": {
            "properties": {
                "proposals": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "proposals"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getCryptoIkev2ProfileMatchIdentityRemoteIpv4Address:getCryptoIkev2ProfileMatchIdentityRemoteIpv4Address": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "mask": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "mask"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getDhcpSnoopingVlan:getDhcpSnoopingVlan": {
            "properties": {
                "vlanId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "vlanId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getDot1xCredential:getDot1xCredential": {
            "properties": {
                "anonymousId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordType": {
                    "type": "string"
                },
                "pkiTrustpoint": {
                    "type": "string"
                },
                "profileName": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "anonymousId",
                "description",
                "password",
                "passwordType",
                "pkiTrustpoint",
                "profileName",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceEthernetHelperAddress:getInterfaceEthernetHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "global",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceEthernetIpv6Address:getInterfaceEthernetIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "eui64",
                "prefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceEthernetIpv6LinkLocalAddress:getInterfaceEthernetIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address",
                "linkLocal"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceEthernetSourceTemplate:getInterfaceEthernetSourceTemplate": {
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "merge",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceLoopbackIpv6Address:getInterfaceLoopbackIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "eui64",
                "prefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceLoopbackIpv6LinkLocalAddress:getInterfaceLoopbackIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address",
                "linkLocal"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceNveVni:getInterfaceNveVni": {
            "properties": {
                "ingressReplication": {
                    "type": "boolean"
                },
                "ipv4MulticastGroup": {
                    "type": "string"
                },
                "vniRange": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ingressReplication",
                "ipv4MulticastGroup",
                "vniRange"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceNveVniVrf:getInterfaceNveVniVrf": {
            "properties": {
                "vniRange": {
                    "type": "string"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "vniRange",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceOspfMessageDigestKey:getInterfaceOspfMessageDigestKey": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "md5AuthKey": {
                    "type": "string"
                },
                "md5AuthType": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id",
                "md5AuthKey",
                "md5AuthType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceOspfProcessId:getInterfaceOspfProcessId": {
            "properties": {
                "areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/getInterfaceOspfProcessIdArea:getInterfaceOspfProcessIdArea"
                    }
                },
                "id": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "areas",
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceOspfProcessIdArea:getInterfaceOspfProcessIdArea": {
            "properties": {
                "areaId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "areaId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfacePortChannelHelperAddress:getInterfacePortChannelHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "global",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfacePortChannelIpv6Address:getInterfacePortChannelIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "eui64",
                "prefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfacePortChannelIpv6LinkLocalAddress:getInterfacePortChannelIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address",
                "linkLocal"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfacePortChannelSubinterfaceHelperAddress:getInterfacePortChannelSubinterfaceHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "global",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfacePortChannelSubinterfaceIpv6Address:getInterfacePortChannelSubinterfaceIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "eui64",
                "prefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfacePortChannelSubinterfaceIpv6LinkLocalAddress:getInterfacePortChannelSubinterfaceIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address",
                "linkLocal"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceTunnelHelperAddress:getInterfaceTunnelHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "global",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceTunnelIpv6Address:getInterfaceTunnelIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "eui64",
                "prefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceTunnelIpv6LinkLocalAddress:getInterfaceTunnelIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address",
                "linkLocal"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceVlanHelperAddress:getInterfaceVlanHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "global",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceVlanIpv6Address:getInterfaceVlanIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "eui64",
                "prefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getInterfaceVlanIpv6LinkLocalAddress:getInterfaceVlanIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address",
                "linkLocal"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLineConsole:getLineConsole": {
            "properties": {
                "execTimeoutMinutes": {
                    "type": "integer"
                },
                "execTimeoutSeconds": {
                    "type": "integer"
                },
                "first": {
                    "type": "string"
                },
                "loginAuthentication": {
                    "type": "string"
                },
                "loginLocal": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "passwordLevel": {
                    "type": "integer"
                },
                "passwordType": {
                    "type": "string"
                },
                "privilegeLevel": {
                    "type": "integer"
                },
                "stopbits": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "execTimeoutMinutes",
                "execTimeoutSeconds",
                "first",
                "loginAuthentication",
                "loginLocal",
                "password",
                "passwordLevel",
                "passwordType",
                "privilegeLevel",
                "stopbits"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLineVty:getLineVty": {
            "properties": {
                "accessClasses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/getLineVtyAccessClass:getLineVtyAccessClass"
                    }
                },
                "escapeCharacter": {
                    "type": "string"
                },
                "execTimeoutMinutes": {
                    "type": "integer"
                },
                "execTimeoutSeconds": {
                    "type": "integer"
                },
                "first": {
                    "type": "integer"
                },
                "last": {
                    "type": "integer"
                },
                "loginAuthentication": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordLevel": {
                    "type": "integer"
                },
                "passwordType": {
                    "type": "string"
                },
                "transportPreferredProtocol": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessClasses",
                "escapeCharacter",
                "execTimeoutMinutes",
                "execTimeoutSeconds",
                "first",
                "last",
                "loginAuthentication",
                "password",
                "passwordLevel",
                "passwordType",
                "transportPreferredProtocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLineVtyAccessClass:getLineVtyAccessClass": {
            "properties": {
                "accessList": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "vrfAlso": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "accessList",
                "direction",
                "vrfAlso"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingIpv4Host:getLoggingIpv4Host": {
            "properties": {
                "ipv4Host": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv4Host"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingIpv4HostTransportTransportTcpPort:getLoggingIpv4HostTransportTransportTcpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingIpv4HostTransportTransportTlsPort:getLoggingIpv4HostTransportTransportTlsPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                },
                "profile": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "portNumber",
                "profile"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingIpv4HostTransportTransportUdpPort:getLoggingIpv4HostTransportTransportUdpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingIpv4HostVrfTransportTransportTcpPort:getLoggingIpv4HostVrfTransportTransportTcpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingIpv4HostVrfTransportTransportTlsPort:getLoggingIpv4HostVrfTransportTransportTlsPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                },
                "profile": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "portNumber",
                "profile"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingIpv4HostVrfTransportTransportUdpPort:getLoggingIpv4HostVrfTransportTransportUdpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingIpv4VrfHost:getLoggingIpv4VrfHost": {
            "properties": {
                "ipv4Host": {
                    "type": "string"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv4Host",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingIpv6Host:getLoggingIpv6Host": {
            "properties": {
                "ipv6Host": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv6Host"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingIpv6HostTransportTransportTcpPort:getLoggingIpv6HostTransportTransportTcpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingIpv6HostTransportTransportTlsPort:getLoggingIpv6HostTransportTransportTlsPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                },
                "profile": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "portNumber",
                "profile"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingIpv6HostTransportTransportUdpPort:getLoggingIpv6HostTransportTransportUdpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingIpv6HostVrfTransportTransportTcpPort:getLoggingIpv6HostVrfTransportTransportTcpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingIpv6HostVrfTransportTransportTlsPort:getLoggingIpv6HostVrfTransportTransportTlsPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                },
                "profile": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "portNumber",
                "profile"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingIpv6HostVrfTransportTransportUdpPort:getLoggingIpv6HostVrfTransportTransportUdpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingIpv6VrfHost:getLoggingIpv6VrfHost": {
            "properties": {
                "ipv6Host": {
                    "type": "string"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv6Host",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getLoggingSourceInterfacesVrf:getLoggingSourceInterfacesVrf": {
            "properties": {
                "interfaceName": {
                    "type": "string"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "interfaceName",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getMdtSubscriptionReceiver:getMdtSubscriptionReceiver": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "port",
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getMsdpPassword:getMsdpPassword": {
            "properties": {
                "addr": {
                    "type": "string"
                },
                "encryption": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "addr",
                "encryption",
                "password"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getMsdpPeer:getMsdpPeer": {
            "properties": {
                "addr": {
                    "type": "string"
                },
                "connectSourceLoopback": {
                    "type": "integer"
                },
                "remoteAs": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "addr",
                "connectSourceLoopback",
                "remoteAs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getMsdpVrfPassword:getMsdpVrfPassword": {
            "properties": {
                "addr": {
                    "type": "string"
                },
                "encryption": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "addr",
                "encryption",
                "password"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getMsdpVrfPeer:getMsdpVrfPeer": {
            "properties": {
                "addr": {
                    "type": "string"
                },
                "connectSourceLoopback": {
                    "type": "integer"
                },
                "remoteAs": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "addr",
                "connectSourceLoopback",
                "remoteAs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getNtpAuthenticationKey:getNtpAuthenticationKey": {
            "properties": {
                "cmacAes128": {
                    "type": "string"
                },
                "encryptionType": {
                    "type": "integer"
                },
                "hmacSha1": {
                    "type": "string"
                },
                "hmacSha2256": {
                    "type": "string"
                },
                "md5": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "sha1": {
                    "type": "string"
                },
                "sha2": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cmacAes128",
                "encryptionType",
                "hmacSha1",
                "hmacSha2256",
                "md5",
                "number",
                "sha1",
                "sha2"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getNtpPeer:getNtpPeer": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "integer"
                },
                "prefer": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "ipAddress",
                "key",
                "prefer",
                "source",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getNtpPeerVrf:getNtpPeerVrf": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/getNtpPeerVrfPeer:getNtpPeerVrfPeer"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "peers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getNtpPeerVrfPeer:getNtpPeerVrfPeer": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "integer"
                },
                "prefer": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "ipAddress",
                "key",
                "prefer",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getNtpServer:getNtpServer": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "integer"
                },
                "prefer": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "ipAddress",
                "key",
                "prefer",
                "source",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getNtpServerVrf:getNtpServerVrf": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/getNtpServerVrfServer:getNtpServerVrfServer"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "servers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getNtpServerVrfServer:getNtpServerVrfServer": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "integer"
                },
                "prefer": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "ipAddress",
                "key",
                "prefer",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getOspfArea:getOspfArea": {
            "properties": {
                "areaId": {
                    "type": "string"
                },
                "authenticationMessageDigest": {
                    "type": "boolean"
                },
                "nssa": {
                    "type": "boolean"
                },
                "nssaDefaultInformationOriginate": {
                    "type": "boolean"
                },
                "nssaDefaultInformationOriginateMetric": {
                    "type": "integer"
                },
                "nssaDefaultInformationOriginateMetricType": {
                    "type": "integer"
                },
                "nssaNoRedistribution": {
                    "type": "boolean"
                },
                "nssaNoSummary": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "areaId",
                "authenticationMessageDigest",
                "nssa",
                "nssaDefaultInformationOriginate",
                "nssaDefaultInformationOriginateMetric",
                "nssaDefaultInformationOriginateMetricType",
                "nssaNoRedistribution",
                "nssaNoSummary"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getOspfNeighbor:getOspfNeighbor": {
            "properties": {
                "cost": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "cost",
                "ip",
                "priority"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getOspfNetwork:getOspfNetwork": {
            "properties": {
                "area": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "wildcard": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "area",
                "ip",
                "wildcard"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getOspfSummaryAddress:getOspfSummaryAddress": {
            "properties": {
                "ip": {
                    "type": "string"
                },
                "mask": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip",
                "mask"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getOspfVrfArea:getOspfVrfArea": {
            "properties": {
                "areaId": {
                    "type": "string"
                },
                "authenticationMessageDigest": {
                    "type": "boolean"
                },
                "nssa": {
                    "type": "boolean"
                },
                "nssaDefaultInformationOriginate": {
                    "type": "boolean"
                },
                "nssaDefaultInformationOriginateMetric": {
                    "type": "integer"
                },
                "nssaDefaultInformationOriginateMetricType": {
                    "type": "integer"
                },
                "nssaNoRedistribution": {
                    "type": "boolean"
                },
                "nssaNoSummary": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "areaId",
                "authenticationMessageDigest",
                "nssa",
                "nssaDefaultInformationOriginate",
                "nssaDefaultInformationOriginateMetric",
                "nssaDefaultInformationOriginateMetricType",
                "nssaNoRedistribution",
                "nssaNoSummary"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getOspfVrfNeighbor:getOspfVrfNeighbor": {
            "properties": {
                "cost": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "cost",
                "ip",
                "priority"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getOspfVrfNetwork:getOspfVrfNetwork": {
            "properties": {
                "area": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "wildcard": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "area",
                "ip",
                "wildcard"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getOspfVrfSummaryAddress:getOspfVrfSummaryAddress": {
            "properties": {
                "ip": {
                    "type": "string"
                },
                "mask": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip",
                "mask"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getPimRpAddress:getPimRpAddress": {
            "properties": {
                "accessList": {
                    "type": "string"
                },
                "bidir": {
                    "type": "boolean"
                },
                "override": {
                    "type": "boolean"
                },
                "rpAddress": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessList",
                "bidir",
                "override",
                "rpAddress"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getPimRpCandidate:getPimRpCandidate": {
            "properties": {
                "bidir": {
                    "type": "boolean"
                },
                "groupList": {
                    "type": "string"
                },
                "interface": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "bidir",
                "groupList",
                "interface",
                "interval",
                "priority"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getPimVrfRpAddress:getPimVrfRpAddress": {
            "properties": {
                "accessList": {
                    "type": "string"
                },
                "bidir": {
                    "type": "boolean"
                },
                "override": {
                    "type": "boolean"
                },
                "rpAddress": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessList",
                "bidir",
                "override",
                "rpAddress"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getPimVrfRpCandidate:getPimVrfRpCandidate": {
            "properties": {
                "bidir": {
                    "type": "boolean"
                },
                "groupList": {
                    "type": "string"
                },
                "interface": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "bidir",
                "groupList",
                "interface",
                "interval",
                "priority"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getPolicyMapEventClassNumber:getPolicyMapEventClassNumber": {
            "properties": {
                "actionNumbers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/getPolicyMapEventClassNumberActionNumber:getPolicyMapEventClassNumberActionNumber"
                    }
                },
                "class": {
                    "type": "string"
                },
                "executionType": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "actionNumbers",
                "class",
                "executionType",
                "number"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getPolicyMapEventClassNumberActionNumber:getPolicyMapEventClassNumberActionNumber": {
            "properties": {
                "activateServiceTemplateConfigServiceTemplate": {
                    "type": "string"
                },
                "authenticateUsingMethod": {
                    "type": "string"
                },
                "authenticateUsingPriority": {
                    "type": "integer"
                },
                "authenticateUsingRetries": {
                    "type": "integer"
                },
                "authenticateUsingRetryTime": {
                    "type": "integer"
                },
                "authorize": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer"
                },
                "pauseReauthentication": {
                    "type": "boolean"
                },
                "terminateConfig": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "activateServiceTemplateConfigServiceTemplate",
                "authenticateUsingMethod",
                "authenticateUsingPriority",
                "authenticateUsingRetries",
                "authenticateUsingRetryTime",
                "authorize",
                "number",
                "pauseReauthentication",
                "terminateConfig"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getPrefixListPrefix:getPrefixListPrefix": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "ge": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "le": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "seq": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "action",
                "ge",
                "ip",
                "le",
                "name",
                "seq"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getRadiusServerAttribute:getRadiusServerAttribute": {
            "properties": {
                "accessRequestInclude": {
                    "type": "boolean"
                },
                "attribute31Parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/getRadiusServerAttributeAttribute31Parameter:getRadiusServerAttributeAttribute31Parameter"
                    }
                },
                "number": {
                    "type": "string"
                },
                "sendAttributes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "accessRequestInclude",
                "attribute31Parameters",
                "number",
                "sendAttributes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getRadiusServerAttributeAttribute31Parameter:getRadiusServerAttributeAttribute31Parameter": {
            "properties": {
                "callingStationId": {
                    "type": "string"
                },
                "idMacFormat": {
                    "type": "string"
                },
                "idMacLuCase": {
                    "type": "string"
                },
                "idSendMacOnly": {
                    "type": "boolean"
                },
                "idSendNasPortDetail": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "callingStationId",
                "idMacFormat",
                "idMacLuCase",
                "idSendMacOnly",
                "idSendNasPortDetail"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getRouteMapEntry:getRouteMapEntry": {
            "properties": {
                "continue": {
                    "type": "boolean"
                },
                "continueSequenceNumber": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "matchAsPaths": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchAsPathsLegacies": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchCommunityListExactMatch": {
                    "type": "boolean"
                },
                "matchCommunityLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchCommunityListsLegacies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchExtcommunityLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchExtcommunityListsLegacies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchInterfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpAddressAccessLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpAddressPrefixLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpNextHopAccessLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpNextHopPrefixLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpv6AddressAccessLists": {
                    "type": "string"
                },
                "matchIpv6AddressPrefixLists": {
                    "type": "string"
                },
                "matchIpv6NextHopAccessLists": {
                    "type": "string"
                },
                "matchIpv6NextHopPrefixLists": {
                    "type": "string"
                },
                "matchLocalPreferences": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchLocalPreferencesLegacies": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchRouteTypeExternal": {
                    "type": "boolean"
                },
                "matchRouteTypeExternalType1": {
                    "type": "boolean"
                },
                "matchRouteTypeExternalType2": {
                    "type": "boolean"
                },
                "matchRouteTypeInternal": {
                    "type": "boolean"
                },
                "matchRouteTypeLevel1": {
                    "type": "boolean"
                },
                "matchRouteTypeLevel2": {
                    "type": "boolean"
                },
                "matchRouteTypeLocal": {
                    "type": "boolean"
                },
                "matchSourceProtocolBgps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchSourceProtocolConnected": {
                    "type": "boolean"
                },
                "matchSourceProtocolEigrps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchSourceProtocolIsis": {
                    "type": "boolean"
                },
                "matchSourceProtocolLisp": {
                    "type": "boolean"
                },
                "matchSourceProtocolOspfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchSourceProtocolOspfv3s": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchSourceProtocolRip": {
                    "type": "boolean"
                },
                "matchSourceProtocolStatic": {
                    "type": "boolean"
                },
                "matchTags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchTrack": {
                    "type": "integer"
                },
                "operation": {
                    "type": "string"
                },
                "seq": {
                    "type": "integer"
                },
                "setAsPathPrependAs": {
                    "type": "string"
                },
                "setAsPathPrependAsLegacy": {
                    "type": "string"
                },
                "setAsPathPrependLastAs": {
                    "type": "integer"
                },
                "setAsPathPrependLastAsLegacy": {
                    "type": "integer"
                },
                "setAsPathTag": {
                    "type": "boolean"
                },
                "setAsPathTagLegacy": {
                    "type": "boolean"
                },
                "setCommunities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setCommunitiesAdditive": {
                    "type": "boolean"
                },
                "setCommunitiesAdditiveLegacy": {
                    "type": "boolean"
                },
                "setCommunitiesLegacies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setCommunityListDelete": {
                    "type": "boolean"
                },
                "setCommunityListDeleteLegacy": {
                    "type": "boolean"
                },
                "setCommunityListExpanded": {
                    "type": "integer"
                },
                "setCommunityListExpandedLegacy": {
                    "type": "integer"
                },
                "setCommunityListName": {
                    "type": "string"
                },
                "setCommunityListNameLegacy": {
                    "type": "string"
                },
                "setCommunityListStandard": {
                    "type": "integer"
                },
                "setCommunityListStandardLegacy": {
                    "type": "integer"
                },
                "setCommunityNone": {
                    "type": "boolean"
                },
                "setCommunityNoneLegacy": {
                    "type": "boolean"
                },
                "setDefaultInterfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setExtcomunityRtLegacies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setExtcomunityRts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setExtcomunitySoo": {
                    "type": "string"
                },
                "setExtcomunitySooLegacy": {
                    "type": "string"
                },
                "setExtcomunityVpnDistinguisher": {
                    "type": "string"
                },
                "setExtcomunityVpnDistinguisherAdditive": {
                    "type": "boolean"
                },
                "setExtcomunityVpnDistinguisherLegacy": {
                    "type": "string"
                },
                "setGlobal": {
                    "type": "boolean"
                },
                "setInterfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpAddress": {
                    "type": "string"
                },
                "setIpDefaultGlobalNextHopAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpDefaultNextHopAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpGlobalNextHopAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpNextHopAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpNextHopSelf": {
                    "type": "boolean"
                },
                "setIpQosGroup": {
                    "type": "integer"
                },
                "setIpv6Addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpv6DefaultGlobalNextHop": {
                    "type": "string"
                },
                "setIpv6DefaultNextHops": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpv6NextHops": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setLevel1": {
                    "type": "boolean"
                },
                "setLevel12": {
                    "type": "boolean"
                },
                "setLevel2": {
                    "type": "boolean"
                },
                "setLocalPreference": {
                    "type": "integer"
                },
                "setLocalPreferenceLegacy": {
                    "type": "integer"
                },
                "setMetricChange": {
                    "type": "string"
                },
                "setMetricDelay": {
                    "type": "string"
                },
                "setMetricLoading": {
                    "type": "integer"
                },
                "setMetricMtu": {
                    "type": "integer"
                },
                "setMetricReliability": {
                    "type": "integer"
                },
                "setMetricType": {
                    "type": "string"
                },
                "setMetricValue": {
                    "type": "integer"
                },
                "setTag": {
                    "type": "integer"
                },
                "setVrf": {
                    "type": "string"
                },
                "setWeight": {
                    "type": "integer"
                },
                "setWeightLegacy": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "continue",
                "continueSequenceNumber",
                "description",
                "matchAsPaths",
                "matchAsPathsLegacies",
                "matchCommunityListExactMatch",
                "matchCommunityLists",
                "matchCommunityListsLegacies",
                "matchExtcommunityLists",
                "matchExtcommunityListsLegacies",
                "matchInterfaces",
                "matchIpAddressAccessLists",
                "matchIpAddressPrefixLists",
                "matchIpNextHopAccessLists",
                "matchIpNextHopPrefixLists",
                "matchIpv6AddressAccessLists",
                "matchIpv6AddressPrefixLists",
                "matchIpv6NextHopAccessLists",
                "matchIpv6NextHopPrefixLists",
                "matchLocalPreferences",
                "matchLocalPreferencesLegacies",
                "matchRouteTypeExternal",
                "matchRouteTypeExternalType1",
                "matchRouteTypeExternalType2",
                "matchRouteTypeInternal",
                "matchRouteTypeLevel1",
                "matchRouteTypeLevel2",
                "matchRouteTypeLocal",
                "matchSourceProtocolBgps",
                "matchSourceProtocolConnected",
                "matchSourceProtocolEigrps",
                "matchSourceProtocolIsis",
                "matchSourceProtocolLisp",
                "matchSourceProtocolOspfs",
                "matchSourceProtocolOspfv3s",
                "matchSourceProtocolRip",
                "matchSourceProtocolStatic",
                "matchTags",
                "matchTrack",
                "operation",
                "seq",
                "setAsPathPrependAs",
                "setAsPathPrependAsLegacy",
                "setAsPathPrependLastAs",
                "setAsPathPrependLastAsLegacy",
                "setAsPathTag",
                "setAsPathTagLegacy",
                "setCommunities",
                "setCommunitiesAdditive",
                "setCommunitiesAdditiveLegacy",
                "setCommunitiesLegacies",
                "setCommunityListDelete",
                "setCommunityListDeleteLegacy",
                "setCommunityListExpanded",
                "setCommunityListExpandedLegacy",
                "setCommunityListName",
                "setCommunityListNameLegacy",
                "setCommunityListStandard",
                "setCommunityListStandardLegacy",
                "setCommunityNone",
                "setCommunityNoneLegacy",
                "setDefaultInterfaces",
                "setExtcomunityRts",
                "setExtcomunityRtLegacies",
                "setExtcomunitySoo",
                "setExtcomunitySooLegacy",
                "setExtcomunityVpnDistinguisher",
                "setExtcomunityVpnDistinguisherAdditive",
                "setExtcomunityVpnDistinguisherLegacy",
                "setGlobal",
                "setInterfaces",
                "setIpAddress",
                "setIpDefaultGlobalNextHopAddresses",
                "setIpDefaultNextHopAddresses",
                "setIpGlobalNextHopAddresses",
                "setIpNextHopAddresses",
                "setIpNextHopSelf",
                "setIpQosGroup",
                "setIpv6Addresses",
                "setIpv6DefaultGlobalNextHop",
                "setIpv6DefaultNextHops",
                "setIpv6NextHops",
                "setLevel1",
                "setLevel12",
                "setLevel2",
                "setLocalPreference",
                "setLocalPreferenceLegacy",
                "setMetricChange",
                "setMetricDelay",
                "setMetricLoading",
                "setMetricMtu",
                "setMetricReliability",
                "setMetricType",
                "setMetricValue",
                "setTag",
                "setVrf",
                "setWeight",
                "setWeightLegacy"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getServiceTemplateAccessGroup:getServiceTemplateAccessGroup": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getServiceTemplateInterfaceTemplate:getServiceTemplateInterfaceTemplate": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getServiceTemplateTag:getServiceTemplateTag": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getSnmpServerContext:getSnmpServerContext": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getSnmpServerGroupV3Security:getSnmpServerGroupV3Security": {
            "properties": {
                "accessAclName": {
                    "type": "string"
                },
                "accessIpv6Acl": {
                    "type": "string"
                },
                "accessStandardAcl": {
                    "type": "integer"
                },
                "contextNode": {
                    "type": "string"
                },
                "matchNode": {
                    "type": "string"
                },
                "notifyNode": {
                    "type": "string"
                },
                "readNode": {
                    "type": "string"
                },
                "securityLevel": {
                    "type": "string"
                },
                "writeNode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessAclName",
                "accessIpv6Acl",
                "accessStandardAcl",
                "contextNode",
                "matchNode",
                "notifyNode",
                "readNode",
                "securityLevel",
                "writeNode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getSnmpServerHost:getSnmpServerHost": {
            "properties": {
                "communityOrUser": {
                    "type": "string"
                },
                "encryption": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "communityOrUser",
                "encryption",
                "ipAddress",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getSnmpServerSnmpCommunity:getSnmpServerSnmpCommunity": {
            "properties": {
                "accessListName": {
                    "type": "string"
                },
                "ipv6": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "view": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessListName",
                "ipv6",
                "name",
                "permission",
                "view"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getSnmpServerView:getSnmpServerView": {
            "properties": {
                "incExl": {
                    "type": "string"
                },
                "mib": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "incExl",
                "mib",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getStaticRouteNextHop:getStaticRouteNextHop": {
            "properties": {
                "global": {
                    "type": "boolean"
                },
                "metric": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nextHop": {
                    "type": "string"
                },
                "permanent": {
                    "type": "boolean"
                },
                "tag": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "global",
                "metric",
                "name",
                "nextHop",
                "permanent",
                "tag"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getStaticRouteVrfRoute:getStaticRouteVrfRoute": {
            "properties": {
                "mask": {
                    "type": "string"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/getStaticRouteVrfRouteNextHop:getStaticRouteVrfRouteNextHop"
                    }
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mask",
                "nextHops",
                "prefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getStaticRouteVrfRouteNextHop:getStaticRouteVrfRouteNextHop": {
            "properties": {
                "global": {
                    "type": "boolean"
                },
                "metric": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nextHop": {
                    "type": "string"
                },
                "permanent": {
                    "type": "boolean"
                },
                "tag": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "global",
                "metric",
                "name",
                "nextHop",
                "permanent",
                "tag"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getSystemMulticastRoutingVrf:getSystemMulticastRoutingVrf": {
            "properties": {
                "distributed": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "distributed",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getTemplateDeviceTrackingAttachPolicy:getTemplateDeviceTrackingAttachPolicy": {
            "properties": {
                "policyName": {
                    "type": "string"
                },
                "vlanRange": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "policyName",
                "vlanRange"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getTemplateIpAccessGroup:getTemplateIpAccessGroup": {
            "properties": {
                "accessList": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessList",
                "direction"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getTemplateSwitchportPortSecurityMaximumRange:getTemplateSwitchportPortSecurityMaximumRange": {
            "properties": {
                "range": {
                    "type": "integer"
                },
                "vlan": {
                    "type": "boolean"
                },
                "vlanAccess": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "range",
                "vlan",
                "vlanAccess"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getVrfIpv4RouteTargetExport:getVrfIpv4RouteTargetExport": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getVrfIpv4RouteTargetExportStitching:getVrfIpv4RouteTargetExportStitching": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "stitching",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getVrfIpv4RouteTargetImport:getVrfIpv4RouteTargetImport": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getVrfIpv4RouteTargetImportStitching:getVrfIpv4RouteTargetImportStitching": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "stitching",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getVrfIpv6RouteTargetExport:getVrfIpv6RouteTargetExport": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getVrfIpv6RouteTargetExportStitching:getVrfIpv6RouteTargetExportStitching": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "stitching",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getVrfIpv6RouteTargetImport:getVrfIpv6RouteTargetImport": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getVrfIpv6RouteTargetImportStitching:getVrfIpv6RouteTargetImportStitching": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "stitching",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getVrfRouteTargetExport:getVrfRouteTargetExport": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "stitching",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "nxos:nxos/getVrfRouteTargetImport:getVrfRouteTargetImport": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "stitching",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the IOS XE package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "devices": {
                "type": "array",
                "items": {
                    "$ref": "#/types/nxos:index/ProviderDevice:ProviderDevice"
                },
                "description": "This can be used to manage a list of devices from a single provider. All devices must use the same credentials. Each\nresource and data source has an optional attribute named `device`, which can then select a device by its name from this\nlist.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Allow insecure HTTPS client. This can also be set as the nxos_INSECURE environment variable. Defaults to `true`.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for the IOS-XE device. This can also be set as the nxos_PASSWORD environment variable.\n",
                "secret": true
            },
            "retries": {
                "type": "integer",
                "description": "Number of retries for REST API calls. This can also be set as the nxos_RETRIES environment variable. Defaults to `10`.\n"
            },
            "url": {
                "type": "string",
                "description": "URL of the Cisco IOS-XE device. Optionally a port can be added with `:12345`. The default port is `443`. This can also\nbe set as the nxos_URL environment variable.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for the IOS-XE device. This can also be set as the nxos_USERNAME environment variable.\n"
            }
        },
        "inputProperties": {
            "devices": {
                "type": "array",
                "items": {
                    "$ref": "#/types/nxos:index/ProviderDevice:ProviderDevice"
                },
                "description": "This can be used to manage a list of devices from a single provider. All devices must use the same credentials. Each\nresource and data source has an optional attribute named `device`, which can then select a device by its name from this\nlist.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Allow insecure HTTPS client. This can also be set as the nxos_INSECURE environment variable. Defaults to `true`.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for the IOS-XE device. This can also be set as the nxos_PASSWORD environment variable.\n",
                "secret": true
            },
            "retries": {
                "type": "integer",
                "description": "Number of retries for REST API calls. This can also be set as the nxos_RETRIES environment variable. Defaults to `10`.\n"
            },
            "url": {
                "type": "string",
                "description": "URL of the Cisco IOS-XE device. Optionally a port can be added with `:12345`. The default port is `443`. This can also\nbe set as the nxos_URL environment variable.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for the IOS-XE device. This can also be set as the nxos_USERNAME environment variable.\n"
            }
        }
    },
    "resources": {
        "nxos:nxos/aaa:Aaa": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "groupServerRadii": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaGroupServerRadius:AaaGroupServerRadius"
                    },
                    "description": "Radius server-group definition\n"
                },
                "groupServerTacacspluses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaGroupServerTacacsplus:AaaGroupServerTacacsplus"
                    },
                    "description": "Tacacs+ server-group definition\n"
                },
                "newModel": {
                    "type": "boolean",
                    "description": "Enable NEW access control commands and functions.(Disables OLD commands.)\n"
                },
                "serverRadiusDynamicAuthor": {
                    "type": "boolean",
                    "description": "Local server profile for RFC 3576 support\n"
                },
                "serverRadiusDynamicAuthorClients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaServerRadiusDynamicAuthorClient:AaaServerRadiusDynamicAuthorClient"
                    },
                    "description": "Specify a RADIUS client\n"
                },
                "sessionId": {
                    "type": "string",
                    "description": "AAA Session ID - Choices: `common`, `unique`\n"
                }
            },
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "groupServerRadii": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaGroupServerRadius:AaaGroupServerRadius"
                    },
                    "description": "Radius server-group definition\n"
                },
                "groupServerTacacspluses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaGroupServerTacacsplus:AaaGroupServerTacacsplus"
                    },
                    "description": "Tacacs+ server-group definition\n"
                },
                "newModel": {
                    "type": "boolean",
                    "description": "Enable NEW access control commands and functions.(Disables OLD commands.)\n"
                },
                "serverRadiusDynamicAuthor": {
                    "type": "boolean",
                    "description": "Local server profile for RFC 3576 support\n"
                },
                "serverRadiusDynamicAuthorClients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaServerRadiusDynamicAuthorClient:AaaServerRadiusDynamicAuthorClient"
                    },
                    "description": "Specify a RADIUS client\n"
                },
                "sessionId": {
                    "type": "string",
                    "description": "AAA Session ID - Choices: `common`, `unique`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Aaa resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "groupServerRadii": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/AaaGroupServerRadius:AaaGroupServerRadius"
                        },
                        "description": "Radius server-group definition\n"
                    },
                    "groupServerTacacspluses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/AaaGroupServerTacacsplus:AaaGroupServerTacacsplus"
                        },
                        "description": "Tacacs+ server-group definition\n"
                    },
                    "newModel": {
                        "type": "boolean",
                        "description": "Enable NEW access control commands and functions.(Disables OLD commands.)\n"
                    },
                    "serverRadiusDynamicAuthor": {
                        "type": "boolean",
                        "description": "Local server profile for RFC 3576 support\n"
                    },
                    "serverRadiusDynamicAuthorClients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/AaaServerRadiusDynamicAuthorClient:AaaServerRadiusDynamicAuthorClient"
                        },
                        "description": "Specify a RADIUS client\n"
                    },
                    "sessionId": {
                        "type": "string",
                        "description": "AAA Session ID - Choices: `common`, `unique`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/aaaAccounting:AaaAccounting": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "execs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaAccountingExec:AaaAccountingExec"
                    },
                    "description": "For starting an exec (shell).\n"
                },
                "identityDefaultStartStopGroup1": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "identityDefaultStartStopGroup2": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "identityDefaultStartStopGroup3": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "identityDefaultStartStopGroup4": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaAccountingNetwork:AaaAccountingNetwork"
                    },
                    "description": "For network services. (PPP, SLIP, ARAP)\n"
                },
                "systemGuaranteeFirst": {
                    "type": "boolean",
                    "description": "Guarantee system accounting as first record.\n"
                },
                "updateNewinfoPeriodic": {
                    "type": "integer",
                    "description": "Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "execs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaAccountingExec:AaaAccountingExec"
                    },
                    "description": "For starting an exec (shell).\n"
                },
                "identityDefaultStartStopGroup1": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "identityDefaultStartStopGroup2": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "identityDefaultStartStopGroup3": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "identityDefaultStartStopGroup4": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaAccountingNetwork:AaaAccountingNetwork"
                    },
                    "description": "For network services. (PPP, SLIP, ARAP)\n"
                },
                "systemGuaranteeFirst": {
                    "type": "boolean",
                    "description": "Guarantee system accounting as first record.\n"
                },
                "updateNewinfoPeriodic": {
                    "type": "integer",
                    "description": "Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AaaAccounting resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "execs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/AaaAccountingExec:AaaAccountingExec"
                        },
                        "description": "For starting an exec (shell).\n"
                    },
                    "identityDefaultStartStopGroup1": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "identityDefaultStartStopGroup2": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "identityDefaultStartStopGroup3": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "identityDefaultStartStopGroup4": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/AaaAccountingNetwork:AaaAccountingNetwork"
                        },
                        "description": "For network services. (PPP, SLIP, ARAP)\n"
                    },
                    "systemGuaranteeFirst": {
                        "type": "boolean",
                        "description": "Guarantee system accounting as first record.\n"
                    },
                    "updateNewinfoPeriodic": {
                        "type": "integer",
                        "description": "Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/aaaAuthentication:AaaAuthentication": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dot1xDefaultA1Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "dot1xDefaultA1Local": {
                    "type": "boolean",
                    "description": "Use local username authentication\n"
                },
                "dot1xDefaultA2Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "dot1xDefaultA2Local": {
                    "type": "boolean",
                    "description": "Use local username authentication\n"
                },
                "dot1xDefaultA3Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "dot1xDefaultA3Local": {
                    "type": "boolean",
                    "description": "Use local username authentication\n"
                },
                "dot1xDefaultA4Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "dot1xDefaultA4Local": {
                    "type": "boolean",
                    "description": "Use local username authentication\n"
                },
                "logins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaAuthenticationLogin:AaaAuthenticationLogin"
                    },
                    "description": "Set authentication lists for logins.\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dot1xDefaultA1Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "dot1xDefaultA1Local": {
                    "type": "boolean",
                    "description": "Use local username authentication\n"
                },
                "dot1xDefaultA2Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "dot1xDefaultA2Local": {
                    "type": "boolean",
                    "description": "Use local username authentication\n"
                },
                "dot1xDefaultA3Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "dot1xDefaultA3Local": {
                    "type": "boolean",
                    "description": "Use local username authentication\n"
                },
                "dot1xDefaultA4Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "dot1xDefaultA4Local": {
                    "type": "boolean",
                    "description": "Use local username authentication\n"
                },
                "logins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaAuthenticationLogin:AaaAuthenticationLogin"
                    },
                    "description": "Set authentication lists for logins.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AaaAuthentication resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dot1xDefaultA1Group": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "dot1xDefaultA1Local": {
                        "type": "boolean",
                        "description": "Use local username authentication\n"
                    },
                    "dot1xDefaultA2Group": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "dot1xDefaultA2Local": {
                        "type": "boolean",
                        "description": "Use local username authentication\n"
                    },
                    "dot1xDefaultA3Group": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "dot1xDefaultA3Local": {
                        "type": "boolean",
                        "description": "Use local username authentication\n"
                    },
                    "dot1xDefaultA4Group": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "dot1xDefaultA4Local": {
                        "type": "boolean",
                        "description": "Use local username authentication\n"
                    },
                    "logins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/AaaAuthenticationLogin:AaaAuthenticationLogin"
                        },
                        "description": "Set authentication lists for logins.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/aaaAuthorization:AaaAuthorization": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "execs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaAuthorizationExec:AaaAuthorizationExec"
                    },
                    "description": "For starting an exec (shell).\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaAuthorizationNetwork:AaaAuthorizationNetwork"
                    },
                    "description": "For network services. (PPP, SLIP, ARAP)\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "execs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaAuthorizationExec:AaaAuthorizationExec"
                    },
                    "description": "For starting an exec (shell).\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AaaAuthorizationNetwork:AaaAuthorizationNetwork"
                    },
                    "description": "For network services. (PPP, SLIP, ARAP)\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AaaAuthorization resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "execs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/AaaAuthorizationExec:AaaAuthorizationExec"
                        },
                        "description": "For starting an exec (shell).\n"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/AaaAuthorizationNetwork:AaaAuthorizationNetwork"
                        },
                        "description": "For network services. (PPP, SLIP, ARAP)\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/accessListExtended:AccessListExtended": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AccessListExtendedEntry:AccessListExtendedEntry"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AccessListExtendedEntry:AccessListExtendedEntry"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessListExtended resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/AccessListExtendedEntry:AccessListExtendedEntry"
                        }
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/accessListStandard:AccessListStandard": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AccessListStandardEntry:AccessListStandardEntry"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/AccessListStandardEntry:AccessListStandardEntry"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessListStandard resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/AccessListStandardEntry:AccessListStandardEntry"
                        }
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/arp:Arp": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "entryLearn": {
                    "type": "integer",
                    "description": "Maximum learn entry limit - Range: `255`-`512000`\n"
                },
                "incompleteEntries": {
                    "type": "integer",
                    "description": "Specify the number of IP addresses to resolve - Range: `1`-`2147483647`\n"
                },
                "inspectionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/ArpInspectionFilter:ArpInspectionFilter"
                    },
                    "description": "Specify ARP acl to be applied\n"
                },
                "inspectionLogBufferEntries": {
                    "type": "integer",
                    "description": "Number of entries for log buffer - Range: `0`-`1024`\n"
                },
                "inspectionLogBufferLogsEntries": {
                    "type": "integer",
                    "description": "Number of entries for log buffer - Range: `0`-`1024`\n"
                },
                "inspectionLogBufferLogsInterval": {
                    "type": "integer",
                    "description": "Interval for controlling logging rate - Range: `0`-`86400`\n"
                },
                "inspectionValidateAllowZeros": {
                    "type": "boolean",
                    "description": "Allow 0.0.0.0 sender IP address\n"
                },
                "inspectionValidateDstMac": {
                    "type": "boolean",
                    "description": "Validate destination MAC address\n"
                },
                "inspectionValidateIp": {
                    "type": "boolean",
                    "description": "Validate IP addresses\n"
                },
                "inspectionValidateSrcMac": {
                    "type": "boolean",
                    "description": "Validate source MAC address\n"
                },
                "inspectionVlan": {
                    "type": "string",
                    "description": "Enable/Disable ARP Inspection on vlans\n"
                },
                "proxyDisable": {
                    "type": "boolean",
                    "description": "Disable proxy ARP on all interfaces\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "entryLearn": {
                    "type": "integer",
                    "description": "Maximum learn entry limit - Range: `255`-`512000`\n"
                },
                "incompleteEntries": {
                    "type": "integer",
                    "description": "Specify the number of IP addresses to resolve - Range: `1`-`2147483647`\n"
                },
                "inspectionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/ArpInspectionFilter:ArpInspectionFilter"
                    },
                    "description": "Specify ARP acl to be applied\n"
                },
                "inspectionLogBufferEntries": {
                    "type": "integer",
                    "description": "Number of entries for log buffer - Range: `0`-`1024`\n"
                },
                "inspectionLogBufferLogsEntries": {
                    "type": "integer",
                    "description": "Number of entries for log buffer - Range: `0`-`1024`\n"
                },
                "inspectionLogBufferLogsInterval": {
                    "type": "integer",
                    "description": "Interval for controlling logging rate - Range: `0`-`86400`\n"
                },
                "inspectionValidateAllowZeros": {
                    "type": "boolean",
                    "description": "Allow 0.0.0.0 sender IP address\n"
                },
                "inspectionValidateDstMac": {
                    "type": "boolean",
                    "description": "Validate destination MAC address\n"
                },
                "inspectionValidateIp": {
                    "type": "boolean",
                    "description": "Validate IP addresses\n"
                },
                "inspectionValidateSrcMac": {
                    "type": "boolean",
                    "description": "Validate source MAC address\n"
                },
                "inspectionVlan": {
                    "type": "string",
                    "description": "Enable/Disable ARP Inspection on vlans\n"
                },
                "proxyDisable": {
                    "type": "boolean",
                    "description": "Disable proxy ARP on all interfaces\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Arp resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "entryLearn": {
                        "type": "integer",
                        "description": "Maximum learn entry limit - Range: `255`-`512000`\n"
                    },
                    "incompleteEntries": {
                        "type": "integer",
                        "description": "Specify the number of IP addresses to resolve - Range: `1`-`2147483647`\n"
                    },
                    "inspectionFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/ArpInspectionFilter:ArpInspectionFilter"
                        },
                        "description": "Specify ARP acl to be applied\n"
                    },
                    "inspectionLogBufferEntries": {
                        "type": "integer",
                        "description": "Number of entries for log buffer - Range: `0`-`1024`\n"
                    },
                    "inspectionLogBufferLogsEntries": {
                        "type": "integer",
                        "description": "Number of entries for log buffer - Range: `0`-`1024`\n"
                    },
                    "inspectionLogBufferLogsInterval": {
                        "type": "integer",
                        "description": "Interval for controlling logging rate - Range: `0`-`86400`\n"
                    },
                    "inspectionValidateAllowZeros": {
                        "type": "boolean",
                        "description": "Allow 0.0.0.0 sender IP address\n"
                    },
                    "inspectionValidateDstMac": {
                        "type": "boolean",
                        "description": "Validate destination MAC address\n"
                    },
                    "inspectionValidateIp": {
                        "type": "boolean",
                        "description": "Validate IP addresses\n"
                    },
                    "inspectionValidateSrcMac": {
                        "type": "boolean",
                        "description": "Validate source MAC address\n"
                    },
                    "inspectionVlan": {
                        "type": "string",
                        "description": "Enable/Disable ARP Inspection on vlans\n"
                    },
                    "proxyDisable": {
                        "type": "boolean",
                        "description": "Disable proxy ARP on all interfaces\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/banner:Banner": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "execBanner": {
                    "type": "string",
                    "description": "Banner message\n"
                },
                "loginBanner": {
                    "type": "string",
                    "description": "Banner message\n"
                },
                "motdBanner": {
                    "type": "string",
                    "description": "Banner message\n"
                },
                "promptTimeoutBanner": {
                    "type": "string",
                    "description": "Banner message\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "execBanner": {
                    "type": "string",
                    "description": "Banner message\n"
                },
                "loginBanner": {
                    "type": "string",
                    "description": "Banner message\n"
                },
                "motdBanner": {
                    "type": "string",
                    "description": "Banner message\n"
                },
                "promptTimeoutBanner": {
                    "type": "string",
                    "description": "Banner message\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Banner resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "execBanner": {
                        "type": "string",
                        "description": "Banner message\n"
                    },
                    "loginBanner": {
                        "type": "string",
                        "description": "Banner message\n"
                    },
                    "motdBanner": {
                        "type": "string",
                        "description": "Banner message\n"
                    },
                    "promptTimeoutBanner": {
                        "type": "string",
                        "description": "Banner message\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bfd:Bfd": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4BothVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BfdIpv4BothVrf:BfdIpv4BothVrf"
                    },
                    "description": "IPv4 Address Family with vrf\n"
                },
                "ipv4WithDstVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BfdIpv4WithDstVrf:BfdIpv4WithDstVrf"
                    },
                    "description": "IPv4 Address Family with vrf\n"
                },
                "ipv4WithSrcVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BfdIpv4WithSrcVrf:BfdIpv4WithSrcVrf"
                    },
                    "description": "IPv4 Address Family with vrf\n"
                },
                "ipv4WithoutVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BfdIpv4WithoutVrf:BfdIpv4WithoutVrf"
                    },
                    "description": "IPv4 Address Family with vrf\n"
                },
                "ipv6WithBothVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BfdIpv6WithBothVrf:BfdIpv6WithBothVrf"
                    },
                    "description": "IPv6 Address Family with vrf\n"
                },
                "ipv6WithDstVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BfdIpv6WithDstVrf:BfdIpv6WithDstVrf"
                    },
                    "description": "IPv6 Address Family with vrf\n"
                },
                "ipv6WithSrcVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BfdIpv6WithSrcVrf:BfdIpv6WithSrcVrf"
                    },
                    "description": "IPv6 Address Family with vrf\n"
                },
                "ipv6WithoutVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BfdIpv6WithoutVrf:BfdIpv6WithoutVrf"
                    },
                    "description": "IPv6 Address Family with vrf\n"
                },
                "slowTimers": {
                    "type": "integer",
                    "description": "Value in ms to use for slow timers - Range: `1000`-`30000`\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4BothVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BfdIpv4BothVrf:BfdIpv4BothVrf"
                    },
                    "description": "IPv4 Address Family with vrf\n"
                },
                "ipv4WithDstVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BfdIpv4WithDstVrf:BfdIpv4WithDstVrf"
                    },
                    "description": "IPv4 Address Family with vrf\n"
                },
                "ipv4WithSrcVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BfdIpv4WithSrcVrf:BfdIpv4WithSrcVrf"
                    },
                    "description": "IPv4 Address Family with vrf\n"
                },
                "ipv4WithoutVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BfdIpv4WithoutVrf:BfdIpv4WithoutVrf"
                    },
                    "description": "IPv4 Address Family with vrf\n"
                },
                "ipv6WithBothVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BfdIpv6WithBothVrf:BfdIpv6WithBothVrf"
                    },
                    "description": "IPv6 Address Family with vrf\n"
                },
                "ipv6WithDstVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BfdIpv6WithDstVrf:BfdIpv6WithDstVrf"
                    },
                    "description": "IPv6 Address Family with vrf\n"
                },
                "ipv6WithSrcVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BfdIpv6WithSrcVrf:BfdIpv6WithSrcVrf"
                    },
                    "description": "IPv6 Address Family with vrf\n"
                },
                "ipv6WithoutVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BfdIpv6WithoutVrf:BfdIpv6WithoutVrf"
                    },
                    "description": "IPv6 Address Family with vrf\n"
                },
                "slowTimers": {
                    "type": "integer",
                    "description": "Value in ms to use for slow timers - Range: `1000`-`30000`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Bfd resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv4BothVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/BfdIpv4BothVrf:BfdIpv4BothVrf"
                        },
                        "description": "IPv4 Address Family with vrf\n"
                    },
                    "ipv4WithDstVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/BfdIpv4WithDstVrf:BfdIpv4WithDstVrf"
                        },
                        "description": "IPv4 Address Family with vrf\n"
                    },
                    "ipv4WithSrcVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/BfdIpv4WithSrcVrf:BfdIpv4WithSrcVrf"
                        },
                        "description": "IPv4 Address Family with vrf\n"
                    },
                    "ipv4WithoutVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/BfdIpv4WithoutVrf:BfdIpv4WithoutVrf"
                        },
                        "description": "IPv4 Address Family with vrf\n"
                    },
                    "ipv6WithBothVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/BfdIpv6WithBothVrf:BfdIpv6WithBothVrf"
                        },
                        "description": "IPv6 Address Family with vrf\n"
                    },
                    "ipv6WithDstVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/BfdIpv6WithDstVrf:BfdIpv6WithDstVrf"
                        },
                        "description": "IPv6 Address Family with vrf\n"
                    },
                    "ipv6WithSrcVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/BfdIpv6WithSrcVrf:BfdIpv6WithSrcVrf"
                        },
                        "description": "IPv6 Address Family with vrf\n"
                    },
                    "ipv6WithoutVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/BfdIpv6WithoutVrf:BfdIpv6WithoutVrf"
                        },
                        "description": "IPv6 Address Family with vrf\n"
                    },
                    "slowTimers": {
                        "type": "integer",
                        "description": "Value in ms to use for slow timers - Range: `1000`-`30000`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bfdTemplateMultiHop:BfdTemplateMultiHop": {
            "properties": {
                "authenticationMd5Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationMeticulousMd5Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationMeticulousSha1keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationSha1Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "dampeningDownMonitoring": {
                    "type": "boolean",
                    "description": "down monitoring\n"
                },
                "dampeningHalfTime": {
                    "type": "integer",
                    "description": "Half-life time for the penalty - Range: `1`-`30`\n"
                },
                "dampeningMaxSuppressingTime": {
                    "type": "integer",
                    "description": "Maximum duration to suppress a session - Range: `1`-`420`\n"
                },
                "dampeningSuppressTime": {
                    "type": "integer",
                    "description": "Value to start suppressing a session - Range: `1`-`18000`\n"
                },
                "dampeningThreshold": {
                    "type": "integer",
                    "description": "Stability threshold to enter dampening in down dampened state(seconds) - Range: `60`-`3600`\n"
                },
                "dampeningUnsuppressTime": {
                    "type": "integer",
                    "description": "Value to unsuppress a session - Range: `1`-`18000`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "echo": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "intervalMicroseconds": {
                    "type": "boolean",
                    "description": "Specify BFD timers in microseconds\n"
                },
                "intervalMicrosecondsBoth": {
                    "type": "integer",
                    "description": "Minimum transmit and receive interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMicrosecondsMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMicrosecondsMinTx": {
                    "type": "integer",
                    "description": "Minimum transmit interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMicrosecondsMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "intervalMillisecondsBoth": {
                    "type": "integer",
                    "description": "Minimum transmit and receive interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMinTx": {
                    "type": "integer",
                    "description": "Minimum transmit interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "authenticationMd5Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationMeticulousMd5Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationMeticulousSha1keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationSha1Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "dampeningDownMonitoring": {
                    "type": "boolean",
                    "description": "down monitoring\n"
                },
                "dampeningHalfTime": {
                    "type": "integer",
                    "description": "Half-life time for the penalty - Range: `1`-`30`\n"
                },
                "dampeningMaxSuppressingTime": {
                    "type": "integer",
                    "description": "Maximum duration to suppress a session - Range: `1`-`420`\n"
                },
                "dampeningSuppressTime": {
                    "type": "integer",
                    "description": "Value to start suppressing a session - Range: `1`-`18000`\n"
                },
                "dampeningThreshold": {
                    "type": "integer",
                    "description": "Stability threshold to enter dampening in down dampened state(seconds) - Range: `60`-`3600`\n"
                },
                "dampeningUnsuppressTime": {
                    "type": "integer",
                    "description": "Value to unsuppress a session - Range: `1`-`18000`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "echo": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "intervalMicroseconds": {
                    "type": "boolean",
                    "description": "Specify BFD timers in microseconds\n"
                },
                "intervalMicrosecondsBoth": {
                    "type": "integer",
                    "description": "Minimum transmit and receive interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMicrosecondsMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMicrosecondsMinTx": {
                    "type": "integer",
                    "description": "Minimum transmit interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMicrosecondsMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "intervalMillisecondsBoth": {
                    "type": "integer",
                    "description": "Minimum transmit and receive interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMinTx": {
                    "type": "integer",
                    "description": "Minimum transmit interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BfdTemplateMultiHop resources.\n",
                "properties": {
                    "authenticationMd5Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationMeticulousMd5Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationMeticulousSha1keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationSha1Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "dampeningDownMonitoring": {
                        "type": "boolean",
                        "description": "down monitoring\n"
                    },
                    "dampeningHalfTime": {
                        "type": "integer",
                        "description": "Half-life time for the penalty - Range: `1`-`30`\n"
                    },
                    "dampeningMaxSuppressingTime": {
                        "type": "integer",
                        "description": "Maximum duration to suppress a session - Range: `1`-`420`\n"
                    },
                    "dampeningSuppressTime": {
                        "type": "integer",
                        "description": "Value to start suppressing a session - Range: `1`-`18000`\n"
                    },
                    "dampeningThreshold": {
                        "type": "integer",
                        "description": "Stability threshold to enter dampening in down dampened state(seconds) - Range: `60`-`3600`\n"
                    },
                    "dampeningUnsuppressTime": {
                        "type": "integer",
                        "description": "Value to unsuppress a session - Range: `1`-`18000`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "echo": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "intervalMicroseconds": {
                        "type": "boolean",
                        "description": "Specify BFD timers in microseconds\n"
                    },
                    "intervalMicrosecondsBoth": {
                        "type": "integer",
                        "description": "Minimum transmit and receive interval capability - Range: `3300`-`9999000`\n"
                    },
                    "intervalMicrosecondsMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `3300`-`9999000`\n"
                    },
                    "intervalMicrosecondsMinTx": {
                        "type": "integer",
                        "description": "Minimum transmit interval capability - Range: `3300`-`9999000`\n"
                    },
                    "intervalMicrosecondsMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                    },
                    "intervalMillisecondsBoth": {
                        "type": "integer",
                        "description": "Minimum transmit and receive interval capability - Range: `4`-`9999`\n"
                    },
                    "intervalMillisecondsMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `4`-`9999`\n"
                    },
                    "intervalMillisecondsMinTx": {
                        "type": "integer",
                        "description": "Minimum transmit interval capability - Range: `4`-`9999`\n"
                    },
                    "intervalMillisecondsMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bfdTemplateSingleHop:BfdTemplateSingleHop": {
            "properties": {
                "authenticationMd5Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationMeticulousMd5Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationMeticulousSha1Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationSha1Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "dampeningHalfTime": {
                    "type": "integer",
                    "description": "Half-life time for the penalty - Range: `1`-`30`\n"
                },
                "dampeningMaxSuppressingTime": {
                    "type": "integer",
                    "description": "Maximum duration to suppress a session - Range: `1`-`420`\n"
                },
                "dampeningSuppressTime": {
                    "type": "integer",
                    "description": "Value to start suppressing a session - Range: `1`-`18000`\n"
                },
                "dampeningUnsuppressTime": {
                    "type": "integer",
                    "description": "Value to unsuppress a session - Range: `1`-`18000`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "echo": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "intervalMicrosecondsMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMicrosecondsMinTx": {
                    "type": "integer",
                    "description": "Minimum transmit interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMillisecondsBoth": {
                    "type": "integer",
                    "description": "Minimum transmit and receive interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMinTx": {
                    "type": "integer",
                    "description": "Minimum transmit interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "authenticationMd5Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationMeticulousMd5Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationMeticulousSha1Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationSha1Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "dampeningHalfTime": {
                    "type": "integer",
                    "description": "Half-life time for the penalty - Range: `1`-`30`\n"
                },
                "dampeningMaxSuppressingTime": {
                    "type": "integer",
                    "description": "Maximum duration to suppress a session - Range: `1`-`420`\n"
                },
                "dampeningSuppressTime": {
                    "type": "integer",
                    "description": "Value to start suppressing a session - Range: `1`-`18000`\n"
                },
                "dampeningUnsuppressTime": {
                    "type": "integer",
                    "description": "Value to unsuppress a session - Range: `1`-`18000`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "echo": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "intervalMicrosecondsMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMicrosecondsMinTx": {
                    "type": "integer",
                    "description": "Minimum transmit interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMillisecondsBoth": {
                    "type": "integer",
                    "description": "Minimum transmit and receive interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMinTx": {
                    "type": "integer",
                    "description": "Minimum transmit interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BfdTemplateSingleHop resources.\n",
                "properties": {
                    "authenticationMd5Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationMeticulousMd5Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationMeticulousSha1Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationSha1Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "dampeningHalfTime": {
                        "type": "integer",
                        "description": "Half-life time for the penalty - Range: `1`-`30`\n"
                    },
                    "dampeningMaxSuppressingTime": {
                        "type": "integer",
                        "description": "Maximum duration to suppress a session - Range: `1`-`420`\n"
                    },
                    "dampeningSuppressTime": {
                        "type": "integer",
                        "description": "Value to start suppressing a session - Range: `1`-`18000`\n"
                    },
                    "dampeningUnsuppressTime": {
                        "type": "integer",
                        "description": "Value to unsuppress a session - Range: `1`-`18000`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "echo": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "intervalMicrosecondsMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `3300`-`9999000`\n"
                    },
                    "intervalMicrosecondsMinTx": {
                        "type": "integer",
                        "description": "Minimum transmit interval capability - Range: `3300`-`9999000`\n"
                    },
                    "intervalMillisecondsBoth": {
                        "type": "integer",
                        "description": "Minimum transmit and receive interval capability - Range: `4`-`9999`\n"
                    },
                    "intervalMillisecondsMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `4`-`9999`\n"
                    },
                    "intervalMillisecondsMinTx": {
                        "type": "integer",
                        "description": "Minimum transmit interval capability - Range: `4`-`9999`\n"
                    },
                    "intervalMillisecondsMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgp:Bgp": {
            "properties": {
                "asn": {
                    "type": "string"
                },
                "defaultIpv4Unicast": {
                    "type": "boolean",
                    "description": "Activate ipv4-unicast for a peer by default\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "logNeighborChanges": {
                    "type": "boolean",
                    "description": "Log neighbor up/down and reset reason\n"
                },
                "routerIdLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                }
            },
            "required": [
                "asn"
            ],
            "inputProperties": {
                "asn": {
                    "type": "string"
                },
                "defaultIpv4Unicast": {
                    "type": "boolean",
                    "description": "Activate ipv4-unicast for a peer by default\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "logNeighborChanges": {
                    "type": "boolean",
                    "description": "Log neighbor up/down and reset reason\n"
                },
                "routerIdLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                }
            },
            "requiredInputs": [
                "asn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Bgp resources.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "defaultIpv4Unicast": {
                        "type": "boolean",
                        "description": "Activate ipv4-unicast for a peer by default\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "logNeighborChanges": {
                        "type": "boolean",
                        "description": "Log neighbor up/down and reset reason\n"
                    },
                    "routerIdLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpAddressFamilyIpv4:BgpAddressFamilyIpv4": {
            "properties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4UnicastNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv4Ipv4UnicastNetwork:BgpAddressFamilyIpv4Ipv4UnicastNetwork"
                    },
                    "description": "Specify a network to announce via BGP\n"
                },
                "ipv4UnicastNetworksMasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv4Ipv4UnicastNetworksMask:BgpAddressFamilyIpv4Ipv4UnicastNetworksMask"
                    },
                    "description": "Specify a network to announce via BGP\n"
                },
                "ipv4UnicastRedistributeConnected": {
                    "type": "boolean",
                    "description": "Connected\n"
                },
                "ipv4UnicastRedistributeStatic": {
                    "type": "boolean",
                    "description": "Static routes\n"
                }
            },
            "required": [
                "afName",
                "asn"
            ],
            "inputProperties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4UnicastNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv4Ipv4UnicastNetwork:BgpAddressFamilyIpv4Ipv4UnicastNetwork"
                    },
                    "description": "Specify a network to announce via BGP\n"
                },
                "ipv4UnicastNetworksMasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv4Ipv4UnicastNetworksMask:BgpAddressFamilyIpv4Ipv4UnicastNetworksMask"
                    },
                    "description": "Specify a network to announce via BGP\n"
                },
                "ipv4UnicastRedistributeConnected": {
                    "type": "boolean",
                    "description": "Connected\n"
                },
                "ipv4UnicastRedistributeStatic": {
                    "type": "boolean",
                    "description": "Static routes\n"
                }
            },
            "requiredInputs": [
                "afName",
                "asn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpAddressFamilyIpv4 resources.\n",
                "properties": {
                    "afName": {
                        "type": "string",
                        "description": "- Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv4UnicastNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv4Ipv4UnicastNetwork:BgpAddressFamilyIpv4Ipv4UnicastNetwork"
                        },
                        "description": "Specify a network to announce via BGP\n"
                    },
                    "ipv4UnicastNetworksMasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv4Ipv4UnicastNetworksMask:BgpAddressFamilyIpv4Ipv4UnicastNetworksMask"
                        },
                        "description": "Specify a network to announce via BGP\n"
                    },
                    "ipv4UnicastRedistributeConnected": {
                        "type": "boolean",
                        "description": "Connected\n"
                    },
                    "ipv4UnicastRedistributeStatic": {
                        "type": "boolean",
                        "description": "Static routes\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpAddressFamilyIpv4Vrf:BgpAddressFamilyIpv4Vrf": {
            "properties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv4VrfVrf:BgpAddressFamilyIpv4VrfVrf"
                    }
                }
            },
            "required": [
                "afName",
                "asn"
            ],
            "inputProperties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv4VrfVrf:BgpAddressFamilyIpv4VrfVrf"
                    }
                }
            },
            "requiredInputs": [
                "afName",
                "asn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpAddressFamilyIpv4Vrf resources.\n",
                "properties": {
                    "afName": {
                        "type": "string",
                        "description": "- Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv4VrfVrf:BgpAddressFamilyIpv4VrfVrf"
                        }
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpAddressFamilyIpv6:BgpAddressFamilyIpv6": {
            "properties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `flowspec`, `mdt`, `multicast`, `mvpn`, `unicast`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv6UnicastNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv6Ipv6UnicastNetwork:BgpAddressFamilyIpv6Ipv6UnicastNetwork"
                    },
                    "description": "Specify a network to announce via BGP\n"
                },
                "ipv6UnicastRedistributeConnected": {
                    "type": "boolean",
                    "description": "Connected\n"
                },
                "ipv6UnicastRedistributeStatic": {
                    "type": "boolean",
                    "description": "Static routes\n"
                }
            },
            "required": [
                "afName",
                "asn"
            ],
            "inputProperties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `flowspec`, `mdt`, `multicast`, `mvpn`, `unicast`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv6UnicastNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv6Ipv6UnicastNetwork:BgpAddressFamilyIpv6Ipv6UnicastNetwork"
                    },
                    "description": "Specify a network to announce via BGP\n"
                },
                "ipv6UnicastRedistributeConnected": {
                    "type": "boolean",
                    "description": "Connected\n"
                },
                "ipv6UnicastRedistributeStatic": {
                    "type": "boolean",
                    "description": "Static routes\n"
                }
            },
            "requiredInputs": [
                "afName",
                "asn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpAddressFamilyIpv6 resources.\n",
                "properties": {
                    "afName": {
                        "type": "string",
                        "description": "- Choices: `flowspec`, `mdt`, `multicast`, `mvpn`, `unicast`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv6UnicastNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv6Ipv6UnicastNetwork:BgpAddressFamilyIpv6Ipv6UnicastNetwork"
                        },
                        "description": "Specify a network to announce via BGP\n"
                    },
                    "ipv6UnicastRedistributeConnected": {
                        "type": "boolean",
                        "description": "Connected\n"
                    },
                    "ipv6UnicastRedistributeStatic": {
                        "type": "boolean",
                        "description": "Static routes\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpAddressFamilyIpv6Vrf:BgpAddressFamilyIpv6Vrf": {
            "properties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `flowspec`, `mdt`, `multicast`, `mvpn`, `unicast`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv6VrfVrf:BgpAddressFamilyIpv6VrfVrf"
                    }
                }
            },
            "required": [
                "afName",
                "asn"
            ],
            "inputProperties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `flowspec`, `mdt`, `multicast`, `mvpn`, `unicast`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv6VrfVrf:BgpAddressFamilyIpv6VrfVrf"
                    }
                }
            },
            "requiredInputs": [
                "afName",
                "asn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpAddressFamilyIpv6Vrf resources.\n",
                "properties": {
                    "afName": {
                        "type": "string",
                        "description": "- Choices: `flowspec`, `mdt`, `multicast`, `mvpn`, `unicast`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/BgpAddressFamilyIpv6VrfVrf:BgpAddressFamilyIpv6VrfVrf"
                        }
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpAddressFamilyL2vpn:BgpAddressFamilyL2vpn": {
            "properties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `evpn`, `vpls`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "afName",
                "asn"
            ],
            "inputProperties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `evpn`, `vpls`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "afName",
                "asn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpAddressFamilyL2vpn resources.\n",
                "properties": {
                    "afName": {
                        "type": "string",
                        "description": "- Choices: `evpn`, `vpls`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpIpv4UnicastNeighbor:BgpIpv4UnicastNeighbor": {
            "properties": {
                "activate": {
                    "type": "boolean",
                    "description": "Enable the address family for this neighbor - Default value: `true`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ip": {
                    "type": "string"
                },
                "routeMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpIpv4UnicastNeighborRouteMap:BgpIpv4UnicastNeighborRouteMap"
                    },
                    "description": "Apply route map to neighbor\n"
                },
                "routeReflectorClient": {
                    "type": "boolean",
                    "description": "Configure a neighbor as Route Reflector client\n"
                },
                "sendCommunity": {
                    "type": "string",
                    "description": "- Choices: `both`, `extended`, `standard`\n"
                }
            },
            "required": [
                "activate",
                "asn",
                "ip"
            ],
            "inputProperties": {
                "activate": {
                    "type": "boolean",
                    "description": "Enable the address family for this neighbor - Default value: `true`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ip": {
                    "type": "string"
                },
                "routeMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpIpv4UnicastNeighborRouteMap:BgpIpv4UnicastNeighborRouteMap"
                    },
                    "description": "Apply route map to neighbor\n"
                },
                "routeReflectorClient": {
                    "type": "boolean",
                    "description": "Configure a neighbor as Route Reflector client\n"
                },
                "sendCommunity": {
                    "type": "string",
                    "description": "- Choices: `both`, `extended`, `standard`\n"
                }
            },
            "requiredInputs": [
                "asn",
                "ip"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpIpv4UnicastNeighbor resources.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": "Enable the address family for this neighbor - Default value: `true`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "routeMaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/BgpIpv4UnicastNeighborRouteMap:BgpIpv4UnicastNeighborRouteMap"
                        },
                        "description": "Apply route map to neighbor\n"
                    },
                    "routeReflectorClient": {
                        "type": "boolean",
                        "description": "Configure a neighbor as Route Reflector client\n"
                    },
                    "sendCommunity": {
                        "type": "string",
                        "description": "- Choices: `both`, `extended`, `standard`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpIpv4UnicastVrfNeighbor:BgpIpv4UnicastVrfNeighbor": {
            "properties": {
                "activate": {
                    "type": "boolean",
                    "description": "Enable the address family for this neighbor - Default value: `true`\n"
                },
                "asn": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Neighbor specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "disableConnectedCheck": {
                    "type": "boolean",
                    "description": "one-hop away EBGP peer using loopback address\n"
                },
                "ebgpMultihop": {
                    "type": "boolean",
                    "description": "Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.\n"
                },
                "ebgpMultihopMaxHop": {
                    "type": "integer",
                    "description": "- Range: `2`-`255`\n"
                },
                "fallOverBfdCheckControlPlaneFailure": {
                    "type": "boolean",
                    "description": "Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation\n"
                },
                "fallOverBfdMultiHop": {
                    "type": "boolean",
                    "description": "Force BFD multi-hop to detect failure\n"
                },
                "fallOverBfdSingleHop": {
                    "type": "boolean",
                    "description": "Force BFD single-hop to detect failure\n"
                },
                "fallOverBfdStrictMode": {
                    "type": "boolean",
                    "description": "Enable BFD strict-mode\n"
                },
                "fallOverDefaultRouteMap": {
                    "type": "string"
                },
                "fallOverMaximumMetricRouteMap": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "localAs": {
                    "type": "string"
                },
                "localAsDualAs": {
                    "type": "boolean",
                    "description": "Accept either real AS or local AS from the ebgp peer\n"
                },
                "localAsNoPrepend": {
                    "type": "boolean",
                    "description": "Do not prepend local-as to updates from ebgp peers\n"
                },
                "localAsReplaceAs": {
                    "type": "boolean",
                    "description": "Replace real AS with local AS in the EBGP updates\n"
                },
                "logNeighborChangesDisable": {
                    "type": "boolean",
                    "description": "disable\n"
                },
                "password": {
                    "type": "string"
                },
                "passwordType": {
                    "type": "integer",
                    "description": "Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`\n"
                },
                "remoteAs": {
                    "type": "string",
                    "description": "Specify a BGP peer-group remote-as\n"
                },
                "routeMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpIpv4UnicastVrfNeighborRouteMap:BgpIpv4UnicastVrfNeighborRouteMap"
                    },
                    "description": "Apply route map to neighbor\n"
                },
                "routeReflectorClient": {
                    "type": "boolean",
                    "description": "Configure a neighbor as Route Reflector client\n"
                },
                "sendCommunity": {
                    "type": "string",
                    "description": "- Choices: `both`, `extended`, `standard`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Administratively shut down this neighbor\n"
                },
                "timersHoldtime": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "timersKeepaliveInterval": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "timersMinimumNeighborHold": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "ttlSecurityHops": {
                    "type": "integer",
                    "description": "IP hops - Range: `1`-`254`\n"
                },
                "updateSourceLoopback": {
                    "type": "string",
                    "description": "Loopback interface\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Set the BGP version to match a neighbor - Range: `4`-`4`\n"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "required": [
                "activate",
                "asn",
                "ip",
                "vrf"
            ],
            "inputProperties": {
                "activate": {
                    "type": "boolean",
                    "description": "Enable the address family for this neighbor - Default value: `true`\n"
                },
                "asn": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Neighbor specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "disableConnectedCheck": {
                    "type": "boolean",
                    "description": "one-hop away EBGP peer using loopback address\n"
                },
                "ebgpMultihop": {
                    "type": "boolean",
                    "description": "Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.\n"
                },
                "ebgpMultihopMaxHop": {
                    "type": "integer",
                    "description": "- Range: `2`-`255`\n"
                },
                "fallOverBfdCheckControlPlaneFailure": {
                    "type": "boolean",
                    "description": "Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation\n"
                },
                "fallOverBfdMultiHop": {
                    "type": "boolean",
                    "description": "Force BFD multi-hop to detect failure\n"
                },
                "fallOverBfdSingleHop": {
                    "type": "boolean",
                    "description": "Force BFD single-hop to detect failure\n"
                },
                "fallOverBfdStrictMode": {
                    "type": "boolean",
                    "description": "Enable BFD strict-mode\n"
                },
                "fallOverDefaultRouteMap": {
                    "type": "string"
                },
                "fallOverMaximumMetricRouteMap": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "localAs": {
                    "type": "string"
                },
                "localAsDualAs": {
                    "type": "boolean",
                    "description": "Accept either real AS or local AS from the ebgp peer\n"
                },
                "localAsNoPrepend": {
                    "type": "boolean",
                    "description": "Do not prepend local-as to updates from ebgp peers\n"
                },
                "localAsReplaceAs": {
                    "type": "boolean",
                    "description": "Replace real AS with local AS in the EBGP updates\n"
                },
                "logNeighborChangesDisable": {
                    "type": "boolean",
                    "description": "disable\n"
                },
                "password": {
                    "type": "string"
                },
                "passwordType": {
                    "type": "integer",
                    "description": "Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`\n"
                },
                "remoteAs": {
                    "type": "string",
                    "description": "Specify a BGP peer-group remote-as\n"
                },
                "routeMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpIpv4UnicastVrfNeighborRouteMap:BgpIpv4UnicastVrfNeighborRouteMap"
                    },
                    "description": "Apply route map to neighbor\n"
                },
                "routeReflectorClient": {
                    "type": "boolean",
                    "description": "Configure a neighbor as Route Reflector client\n"
                },
                "sendCommunity": {
                    "type": "string",
                    "description": "- Choices: `both`, `extended`, `standard`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Administratively shut down this neighbor\n"
                },
                "timersHoldtime": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "timersKeepaliveInterval": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "timersMinimumNeighborHold": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "ttlSecurityHops": {
                    "type": "integer",
                    "description": "IP hops - Range: `1`-`254`\n"
                },
                "updateSourceLoopback": {
                    "type": "string",
                    "description": "Loopback interface\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Set the BGP version to match a neighbor - Range: `4`-`4`\n"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "asn",
                "ip",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpIpv4UnicastVrfNeighbor resources.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": "Enable the address family for this neighbor - Default value: `true`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Neighbor specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "disableConnectedCheck": {
                        "type": "boolean",
                        "description": "one-hop away EBGP peer using loopback address\n"
                    },
                    "ebgpMultihop": {
                        "type": "boolean",
                        "description": "Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.\n"
                    },
                    "ebgpMultihopMaxHop": {
                        "type": "integer",
                        "description": "- Range: `2`-`255`\n"
                    },
                    "fallOverBfdCheckControlPlaneFailure": {
                        "type": "boolean",
                        "description": "Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation\n"
                    },
                    "fallOverBfdMultiHop": {
                        "type": "boolean",
                        "description": "Force BFD multi-hop to detect failure\n"
                    },
                    "fallOverBfdSingleHop": {
                        "type": "boolean",
                        "description": "Force BFD single-hop to detect failure\n"
                    },
                    "fallOverBfdStrictMode": {
                        "type": "boolean",
                        "description": "Enable BFD strict-mode\n"
                    },
                    "fallOverDefaultRouteMap": {
                        "type": "string"
                    },
                    "fallOverMaximumMetricRouteMap": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "localAs": {
                        "type": "string"
                    },
                    "localAsDualAs": {
                        "type": "boolean",
                        "description": "Accept either real AS or local AS from the ebgp peer\n"
                    },
                    "localAsNoPrepend": {
                        "type": "boolean",
                        "description": "Do not prepend local-as to updates from ebgp peers\n"
                    },
                    "localAsReplaceAs": {
                        "type": "boolean",
                        "description": "Replace real AS with local AS in the EBGP updates\n"
                    },
                    "logNeighborChangesDisable": {
                        "type": "boolean",
                        "description": "disable\n"
                    },
                    "password": {
                        "type": "string"
                    },
                    "passwordType": {
                        "type": "integer",
                        "description": "Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`\n"
                    },
                    "remoteAs": {
                        "type": "string",
                        "description": "Specify a BGP peer-group remote-as\n"
                    },
                    "routeMaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/BgpIpv4UnicastVrfNeighborRouteMap:BgpIpv4UnicastVrfNeighborRouteMap"
                        },
                        "description": "Apply route map to neighbor\n"
                    },
                    "routeReflectorClient": {
                        "type": "boolean",
                        "description": "Configure a neighbor as Route Reflector client\n"
                    },
                    "sendCommunity": {
                        "type": "string",
                        "description": "- Choices: `both`, `extended`, `standard`\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Administratively shut down this neighbor\n"
                    },
                    "timersHoldtime": {
                        "type": "integer",
                        "description": "- Range: `0`-`65535`\n"
                    },
                    "timersKeepaliveInterval": {
                        "type": "integer",
                        "description": "- Range: `0`-`65535`\n"
                    },
                    "timersMinimumNeighborHold": {
                        "type": "integer",
                        "description": "- Range: `0`-`65535`\n"
                    },
                    "ttlSecurityHops": {
                        "type": "integer",
                        "description": "IP hops - Range: `1`-`254`\n"
                    },
                    "updateSourceLoopback": {
                        "type": "string",
                        "description": "Loopback interface\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Set the BGP version to match a neighbor - Range: `4`-`4`\n"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpIpv6UnicastNeighbor:BgpIpv6UnicastNeighbor": {
            "properties": {
                "activate": {
                    "type": "boolean",
                    "description": "Enable the address family for this neighbor - Default value: `true`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ip": {
                    "type": "string"
                },
                "routeMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpIpv6UnicastNeighborRouteMap:BgpIpv6UnicastNeighborRouteMap"
                    },
                    "description": "Apply route map to neighbor\n"
                },
                "routeReflectorClient": {
                    "type": "boolean",
                    "description": "Configure a neighbor as Route Reflector client\n"
                },
                "sendCommunity": {
                    "type": "string",
                    "description": "- Choices: `both`, `extended`, `standard`\n"
                }
            },
            "required": [
                "activate",
                "asn",
                "ip"
            ],
            "inputProperties": {
                "activate": {
                    "type": "boolean",
                    "description": "Enable the address family for this neighbor - Default value: `true`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ip": {
                    "type": "string"
                },
                "routeMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/BgpIpv6UnicastNeighborRouteMap:BgpIpv6UnicastNeighborRouteMap"
                    },
                    "description": "Apply route map to neighbor\n"
                },
                "routeReflectorClient": {
                    "type": "boolean",
                    "description": "Configure a neighbor as Route Reflector client\n"
                },
                "sendCommunity": {
                    "type": "string",
                    "description": "- Choices: `both`, `extended`, `standard`\n"
                }
            },
            "requiredInputs": [
                "asn",
                "ip"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpIpv6UnicastNeighbor resources.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": "Enable the address family for this neighbor - Default value: `true`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "routeMaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/BgpIpv6UnicastNeighborRouteMap:BgpIpv6UnicastNeighborRouteMap"
                        },
                        "description": "Apply route map to neighbor\n"
                    },
                    "routeReflectorClient": {
                        "type": "boolean",
                        "description": "Configure a neighbor as Route Reflector client\n"
                    },
                    "sendCommunity": {
                        "type": "string",
                        "description": "- Choices: `both`, `extended`, `standard`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpL2vpnEvpnNeighbor:BgpL2vpnEvpnNeighbor": {
            "properties": {
                "activate": {
                    "type": "boolean",
                    "description": "Enable the address family for this neighbor - Default value: `true`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ip": {
                    "type": "string"
                },
                "routeReflectorClient": {
                    "type": "boolean",
                    "description": "Configure a neighbor as Route Reflector client\n"
                },
                "sendCommunity": {
                    "type": "string",
                    "description": "- Choices: `both`, `extended`, `standard`\n"
                }
            },
            "required": [
                "activate",
                "asn",
                "ip"
            ],
            "inputProperties": {
                "activate": {
                    "type": "boolean",
                    "description": "Enable the address family for this neighbor - Default value: `true`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ip": {
                    "type": "string"
                },
                "routeReflectorClient": {
                    "type": "boolean",
                    "description": "Configure a neighbor as Route Reflector client\n"
                },
                "sendCommunity": {
                    "type": "string",
                    "description": "- Choices: `both`, `extended`, `standard`\n"
                }
            },
            "requiredInputs": [
                "asn",
                "ip"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpL2vpnEvpnNeighbor resources.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": "Enable the address family for this neighbor - Default value: `true`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "routeReflectorClient": {
                        "type": "boolean",
                        "description": "Configure a neighbor as Route Reflector client\n"
                    },
                    "sendCommunity": {
                        "type": "string",
                        "description": "- Choices: `both`, `extended`, `standard`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/bgpNeighbor:BgpNeighbor": {
            "properties": {
                "asn": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Neighbor specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "disableConnectedCheck": {
                    "type": "boolean",
                    "description": "one-hop away EBGP peer using loopback address\n"
                },
                "ebgpMultihop": {
                    "type": "boolean",
                    "description": "Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.\n"
                },
                "ebgpMultihopMaxHop": {
                    "type": "integer",
                    "description": "- Range: `2`-`255`\n"
                },
                "fallOverBfdCheckControlPlaneFailure": {
                    "type": "boolean",
                    "description": "Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation\n"
                },
                "fallOverBfdMultiHop": {
                    "type": "boolean",
                    "description": "Force BFD multi-hop to detect failure\n"
                },
                "fallOverBfdSingleHop": {
                    "type": "boolean",
                    "description": "Force BFD single-hop to detect failure\n"
                },
                "fallOverBfdStrictMode": {
                    "type": "boolean",
                    "description": "Enable BFD strict-mode\n"
                },
                "fallOverDefaultEnable": {
                    "type": "boolean"
                },
                "fallOverDefaultRouteMap": {
                    "type": "string"
                },
                "fallOverMaximumMetricRouteMap": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "localAs": {
                    "type": "string"
                },
                "localAsDualAs": {
                    "type": "boolean",
                    "description": "Accept either real AS or local AS from the ebgp peer\n"
                },
                "localAsNoPrepend": {
                    "type": "boolean",
                    "description": "Do not prepend local-as to updates from ebgp peers\n"
                },
                "localAsReplaceAs": {
                    "type": "boolean",
                    "description": "Replace real AS with local AS in the EBGP updates\n"
                },
                "logNeighborChanges": {
                    "type": "boolean",
                    "description": "Log neighbor up/down and reset reason\n"
                },
                "password": {
                    "type": "string"
                },
                "passwordType": {
                    "type": "integer",
                    "description": "Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`\n"
                },
                "remoteAs": {
                    "type": "string",
                    "description": "Specify a BGP peer-group remote-as\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Administratively shut down this neighbor\n"
                },
                "timersHoldtime": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "timersKeepaliveInterval": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "timersMinimumNeighborHold": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "ttlSecurityHops": {
                    "type": "integer",
                    "description": "IP hops - Range: `1`-`254`\n"
                },
                "updateSourceLoopback": {
                    "type": "string",
                    "description": "Loopback interface\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Set the BGP version to match a neighbor - Range: `4`-`4`\n"
                }
            },
            "required": [
                "asn",
                "ip"
            ],
            "inputProperties": {
                "asn": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Neighbor specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "disableConnectedCheck": {
                    "type": "boolean",
                    "description": "one-hop away EBGP peer using loopback address\n"
                },
                "ebgpMultihop": {
                    "type": "boolean",
                    "description": "Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.\n"
                },
                "ebgpMultihopMaxHop": {
                    "type": "integer",
                    "description": "- Range: `2`-`255`\n"
                },
                "fallOverBfdCheckControlPlaneFailure": {
                    "type": "boolean",
                    "description": "Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation\n"
                },
                "fallOverBfdMultiHop": {
                    "type": "boolean",
                    "description": "Force BFD multi-hop to detect failure\n"
                },
                "fallOverBfdSingleHop": {
                    "type": "boolean",
                    "description": "Force BFD single-hop to detect failure\n"
                },
                "fallOverBfdStrictMode": {
                    "type": "boolean",
                    "description": "Enable BFD strict-mode\n"
                },
                "fallOverDefaultEnable": {
                    "type": "boolean"
                },
                "fallOverDefaultRouteMap": {
                    "type": "string"
                },
                "fallOverMaximumMetricRouteMap": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "localAs": {
                    "type": "string"
                },
                "localAsDualAs": {
                    "type": "boolean",
                    "description": "Accept either real AS or local AS from the ebgp peer\n"
                },
                "localAsNoPrepend": {
                    "type": "boolean",
                    "description": "Do not prepend local-as to updates from ebgp peers\n"
                },
                "localAsReplaceAs": {
                    "type": "boolean",
                    "description": "Replace real AS with local AS in the EBGP updates\n"
                },
                "logNeighborChanges": {
                    "type": "boolean",
                    "description": "Log neighbor up/down and reset reason\n"
                },
                "password": {
                    "type": "string"
                },
                "passwordType": {
                    "type": "integer",
                    "description": "Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`\n"
                },
                "remoteAs": {
                    "type": "string",
                    "description": "Specify a BGP peer-group remote-as\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Administratively shut down this neighbor\n"
                },
                "timersHoldtime": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "timersKeepaliveInterval": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "timersMinimumNeighborHold": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "ttlSecurityHops": {
                    "type": "integer",
                    "description": "IP hops - Range: `1`-`254`\n"
                },
                "updateSourceLoopback": {
                    "type": "string",
                    "description": "Loopback interface\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Set the BGP version to match a neighbor - Range: `4`-`4`\n"
                }
            },
            "requiredInputs": [
                "asn",
                "ip"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpNeighbor resources.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Neighbor specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "disableConnectedCheck": {
                        "type": "boolean",
                        "description": "one-hop away EBGP peer using loopback address\n"
                    },
                    "ebgpMultihop": {
                        "type": "boolean",
                        "description": "Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.\n"
                    },
                    "ebgpMultihopMaxHop": {
                        "type": "integer",
                        "description": "- Range: `2`-`255`\n"
                    },
                    "fallOverBfdCheckControlPlaneFailure": {
                        "type": "boolean",
                        "description": "Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation\n"
                    },
                    "fallOverBfdMultiHop": {
                        "type": "boolean",
                        "description": "Force BFD multi-hop to detect failure\n"
                    },
                    "fallOverBfdSingleHop": {
                        "type": "boolean",
                        "description": "Force BFD single-hop to detect failure\n"
                    },
                    "fallOverBfdStrictMode": {
                        "type": "boolean",
                        "description": "Enable BFD strict-mode\n"
                    },
                    "fallOverDefaultEnable": {
                        "type": "boolean"
                    },
                    "fallOverDefaultRouteMap": {
                        "type": "string"
                    },
                    "fallOverMaximumMetricRouteMap": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "localAs": {
                        "type": "string"
                    },
                    "localAsDualAs": {
                        "type": "boolean",
                        "description": "Accept either real AS or local AS from the ebgp peer\n"
                    },
                    "localAsNoPrepend": {
                        "type": "boolean",
                        "description": "Do not prepend local-as to updates from ebgp peers\n"
                    },
                    "localAsReplaceAs": {
                        "type": "boolean",
                        "description": "Replace real AS with local AS in the EBGP updates\n"
                    },
                    "logNeighborChanges": {
                        "type": "boolean",
                        "description": "Log neighbor up/down and reset reason\n"
                    },
                    "password": {
                        "type": "string"
                    },
                    "passwordType": {
                        "type": "integer",
                        "description": "Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`\n"
                    },
                    "remoteAs": {
                        "type": "string",
                        "description": "Specify a BGP peer-group remote-as\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Administratively shut down this neighbor\n"
                    },
                    "timersHoldtime": {
                        "type": "integer",
                        "description": "- Range: `0`-`65535`\n"
                    },
                    "timersKeepaliveInterval": {
                        "type": "integer",
                        "description": "- Range: `0`-`65535`\n"
                    },
                    "timersMinimumNeighborHold": {
                        "type": "integer",
                        "description": "- Range: `0`-`65535`\n"
                    },
                    "ttlSecurityHops": {
                        "type": "integer",
                        "description": "IP hops - Range: `1`-`254`\n"
                    },
                    "updateSourceLoopback": {
                        "type": "string",
                        "description": "Loopback interface\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Set the BGP version to match a neighbor - Range: `4`-`4`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/cdp:Cdp": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "filterTlvList": {
                    "type": "string",
                    "description": "Apply tlv-list globally\n"
                },
                "holdtime": {
                    "type": "integer",
                    "description": "Specify the holdtime (in sec) to be sent in packets - Range: `10`-`255`\n"
                },
                "run": {
                    "type": "boolean",
                    "description": "Enable CDP\n"
                },
                "timer": {
                    "type": "integer",
                    "description": "Specify the rate at which CDP packets are sent (in sec) - Range: `5`-`254`\n"
                },
                "tlvLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/CdpTlvList:CdpTlvList"
                    },
                    "description": "Configure tlv-list\n"
                }
            },
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "filterTlvList": {
                    "type": "string",
                    "description": "Apply tlv-list globally\n"
                },
                "holdtime": {
                    "type": "integer",
                    "description": "Specify the holdtime (in sec) to be sent in packets - Range: `10`-`255`\n"
                },
                "run": {
                    "type": "boolean",
                    "description": "Enable CDP\n"
                },
                "timer": {
                    "type": "integer",
                    "description": "Specify the rate at which CDP packets are sent (in sec) - Range: `5`-`254`\n"
                },
                "tlvLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/CdpTlvList:CdpTlvList"
                    },
                    "description": "Configure tlv-list\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cdp resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "filterTlvList": {
                        "type": "string",
                        "description": "Apply tlv-list globally\n"
                    },
                    "holdtime": {
                        "type": "integer",
                        "description": "Specify the holdtime (in sec) to be sent in packets - Range: `10`-`255`\n"
                    },
                    "run": {
                        "type": "boolean",
                        "description": "Enable CDP\n"
                    },
                    "timer": {
                        "type": "integer",
                        "description": "Specify the rate at which CDP packets are sent (in sec) - Range: `5`-`254`\n"
                    },
                    "tlvLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/CdpTlvList:CdpTlvList"
                        },
                        "description": "Configure tlv-list\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/classMap:ClassMap": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Class-Map description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchActivatedServiceTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/ClassMapMatchActivatedServiceTemplate:ClassMapMatchActivatedServiceTemplate"
                    },
                    "description": "match name of service template activated on session\n"
                },
                "matchAuthorizationStatusAuthorized": {
                    "type": "boolean",
                    "description": "authorized\n"
                },
                "matchAuthorizationStatusUnauthorized": {
                    "type": "boolean",
                    "description": "unauthorized\n"
                },
                "matchAuthorizingMethodPriorityGreaterThans": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "greater than\n"
                },
                "matchMethodDot1x": {
                    "type": "boolean",
                    "description": "dot1x\n"
                },
                "matchMethodMab": {
                    "type": "boolean",
                    "description": "mab\n"
                },
                "matchResultTypeAaaTimeout": {
                    "type": "boolean",
                    "description": "aaa timeout type\n"
                },
                "matchResultTypeMethodDot1xAgentNotFound": {
                    "type": "boolean",
                    "description": "agent not found type\n"
                },
                "matchResultTypeMethodDot1xAuthoritative": {
                    "type": "boolean",
                    "description": "failure type\n"
                },
                "matchResultTypeMethodDot1xMethodTimeout": {
                    "type": "boolean",
                    "description": "method_timeout type\n"
                },
                "matchResultTypeMethodMabAuthoritative": {
                    "type": "boolean",
                    "description": "failure type\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the class map\n"
                },
                "prematch": {
                    "type": "string",
                    "description": "Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`\n"
                },
                "subscriber": {
                    "type": "boolean",
                    "description": "Domain name of the class map\n"
                },
                "type": {
                    "type": "string",
                    "description": "type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,\n`stack`, `traffic`\n"
                }
            },
            "required": [
                "name",
                "prematch"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Class-Map description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchActivatedServiceTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/ClassMapMatchActivatedServiceTemplate:ClassMapMatchActivatedServiceTemplate"
                    },
                    "description": "match name of service template activated on session\n"
                },
                "matchAuthorizationStatusAuthorized": {
                    "type": "boolean",
                    "description": "authorized\n"
                },
                "matchAuthorizationStatusUnauthorized": {
                    "type": "boolean",
                    "description": "unauthorized\n"
                },
                "matchAuthorizingMethodPriorityGreaterThans": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "greater than\n"
                },
                "matchMethodDot1x": {
                    "type": "boolean",
                    "description": "dot1x\n"
                },
                "matchMethodMab": {
                    "type": "boolean",
                    "description": "mab\n"
                },
                "matchResultTypeAaaTimeout": {
                    "type": "boolean",
                    "description": "aaa timeout type\n"
                },
                "matchResultTypeMethodDot1xAgentNotFound": {
                    "type": "boolean",
                    "description": "agent not found type\n"
                },
                "matchResultTypeMethodDot1xAuthoritative": {
                    "type": "boolean",
                    "description": "failure type\n"
                },
                "matchResultTypeMethodDot1xMethodTimeout": {
                    "type": "boolean",
                    "description": "method_timeout type\n"
                },
                "matchResultTypeMethodMabAuthoritative": {
                    "type": "boolean",
                    "description": "failure type\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the class map\n"
                },
                "prematch": {
                    "type": "string",
                    "description": "Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`\n"
                },
                "subscriber": {
                    "type": "boolean",
                    "description": "Domain name of the class map\n"
                },
                "type": {
                    "type": "string",
                    "description": "type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,\n`stack`, `traffic`\n"
                }
            },
            "requiredInputs": [
                "prematch"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClassMap resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Class-Map description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "matchActivatedServiceTemplates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/ClassMapMatchActivatedServiceTemplate:ClassMapMatchActivatedServiceTemplate"
                        },
                        "description": "match name of service template activated on session\n"
                    },
                    "matchAuthorizationStatusAuthorized": {
                        "type": "boolean",
                        "description": "authorized\n"
                    },
                    "matchAuthorizationStatusUnauthorized": {
                        "type": "boolean",
                        "description": "unauthorized\n"
                    },
                    "matchAuthorizingMethodPriorityGreaterThans": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "greater than\n"
                    },
                    "matchMethodDot1x": {
                        "type": "boolean",
                        "description": "dot1x\n"
                    },
                    "matchMethodMab": {
                        "type": "boolean",
                        "description": "mab\n"
                    },
                    "matchResultTypeAaaTimeout": {
                        "type": "boolean",
                        "description": "aaa timeout type\n"
                    },
                    "matchResultTypeMethodDot1xAgentNotFound": {
                        "type": "boolean",
                        "description": "agent not found type\n"
                    },
                    "matchResultTypeMethodDot1xAuthoritative": {
                        "type": "boolean",
                        "description": "failure type\n"
                    },
                    "matchResultTypeMethodDot1xMethodTimeout": {
                        "type": "boolean",
                        "description": "method_timeout type\n"
                    },
                    "matchResultTypeMethodMabAuthoritative": {
                        "type": "boolean",
                        "description": "failure type\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the class map\n"
                    },
                    "prematch": {
                        "type": "string",
                        "description": "Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`\n"
                    },
                    "subscriber": {
                        "type": "boolean",
                        "description": "Domain name of the class map\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,\n`stack`, `traffic`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/clock:Clock": {
            "properties": {
                "calendarValid": {
                    "type": "boolean",
                    "description": "Calendar time is authoritative\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "summerTimeDate": {
                    "type": "boolean",
                    "description": "Configure absolute summer time\n"
                },
                "summerTimeDateEndDay": {
                    "type": "integer",
                    "description": "- Range: `1`-`31`\n"
                },
                "summerTimeDateEndMonth": {
                    "type": "string",
                    "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                },
                "summerTimeDateEndTime": {
                    "type": "string"
                },
                "summerTimeDateEndYear": {
                    "type": "integer",
                    "description": "- Range: `1993`-`2035`\n"
                },
                "summerTimeDateOffset": {
                    "type": "integer",
                    "description": "- Range: `1`-`1440`\n"
                },
                "summerTimeDateStartDay": {
                    "type": "integer",
                    "description": "- Range: `1`-`31`\n"
                },
                "summerTimeDateStartMonth": {
                    "type": "string",
                    "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                },
                "summerTimeDateStartTime": {
                    "type": "string"
                },
                "summerTimeDateStartYear": {
                    "type": "integer",
                    "description": "- Range: `1993`-`2035`\n"
                },
                "summerTimeRecurring": {
                    "type": "boolean",
                    "description": "Configure recurring summer time\n"
                },
                "summerTimeRecurringEndMonth": {
                    "type": "string",
                    "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                },
                "summerTimeRecurringEndTime": {
                    "type": "string"
                },
                "summerTimeRecurringEndWeek": {
                    "type": "string"
                },
                "summerTimeRecurringEndWeekday": {
                    "type": "string",
                    "description": "- Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`\n"
                },
                "summerTimeRecurringOffset": {
                    "type": "integer",
                    "description": "- Range: `1`-`1440`\n"
                },
                "summerTimeRecurringStartMonth": {
                    "type": "string",
                    "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                },
                "summerTimeRecurringStartTime": {
                    "type": "string"
                },
                "summerTimeRecurringStartWeek": {
                    "type": "string"
                },
                "summerTimeRecurringStartWeekday": {
                    "type": "string",
                    "description": "- Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`\n"
                },
                "summerTimeZone": {
                    "type": "string",
                    "description": "Name of time zone in summer\n"
                }
            },
            "inputProperties": {
                "calendarValid": {
                    "type": "boolean",
                    "description": "Calendar time is authoritative\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "summerTimeDate": {
                    "type": "boolean",
                    "description": "Configure absolute summer time\n"
                },
                "summerTimeDateEndDay": {
                    "type": "integer",
                    "description": "- Range: `1`-`31`\n"
                },
                "summerTimeDateEndMonth": {
                    "type": "string",
                    "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                },
                "summerTimeDateEndTime": {
                    "type": "string"
                },
                "summerTimeDateEndYear": {
                    "type": "integer",
                    "description": "- Range: `1993`-`2035`\n"
                },
                "summerTimeDateOffset": {
                    "type": "integer",
                    "description": "- Range: `1`-`1440`\n"
                },
                "summerTimeDateStartDay": {
                    "type": "integer",
                    "description": "- Range: `1`-`31`\n"
                },
                "summerTimeDateStartMonth": {
                    "type": "string",
                    "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                },
                "summerTimeDateStartTime": {
                    "type": "string"
                },
                "summerTimeDateStartYear": {
                    "type": "integer",
                    "description": "- Range: `1993`-`2035`\n"
                },
                "summerTimeRecurring": {
                    "type": "boolean",
                    "description": "Configure recurring summer time\n"
                },
                "summerTimeRecurringEndMonth": {
                    "type": "string",
                    "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                },
                "summerTimeRecurringEndTime": {
                    "type": "string"
                },
                "summerTimeRecurringEndWeek": {
                    "type": "string"
                },
                "summerTimeRecurringEndWeekday": {
                    "type": "string",
                    "description": "- Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`\n"
                },
                "summerTimeRecurringOffset": {
                    "type": "integer",
                    "description": "- Range: `1`-`1440`\n"
                },
                "summerTimeRecurringStartMonth": {
                    "type": "string",
                    "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                },
                "summerTimeRecurringStartTime": {
                    "type": "string"
                },
                "summerTimeRecurringStartWeek": {
                    "type": "string"
                },
                "summerTimeRecurringStartWeekday": {
                    "type": "string",
                    "description": "- Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`\n"
                },
                "summerTimeZone": {
                    "type": "string",
                    "description": "Name of time zone in summer\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Clock resources.\n",
                "properties": {
                    "calendarValid": {
                        "type": "boolean",
                        "description": "Calendar time is authoritative\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "summerTimeDate": {
                        "type": "boolean",
                        "description": "Configure absolute summer time\n"
                    },
                    "summerTimeDateEndDay": {
                        "type": "integer",
                        "description": "- Range: `1`-`31`\n"
                    },
                    "summerTimeDateEndMonth": {
                        "type": "string",
                        "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                    },
                    "summerTimeDateEndTime": {
                        "type": "string"
                    },
                    "summerTimeDateEndYear": {
                        "type": "integer",
                        "description": "- Range: `1993`-`2035`\n"
                    },
                    "summerTimeDateOffset": {
                        "type": "integer",
                        "description": "- Range: `1`-`1440`\n"
                    },
                    "summerTimeDateStartDay": {
                        "type": "integer",
                        "description": "- Range: `1`-`31`\n"
                    },
                    "summerTimeDateStartMonth": {
                        "type": "string",
                        "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                    },
                    "summerTimeDateStartTime": {
                        "type": "string"
                    },
                    "summerTimeDateStartYear": {
                        "type": "integer",
                        "description": "- Range: `1993`-`2035`\n"
                    },
                    "summerTimeRecurring": {
                        "type": "boolean",
                        "description": "Configure recurring summer time\n"
                    },
                    "summerTimeRecurringEndMonth": {
                        "type": "string",
                        "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                    },
                    "summerTimeRecurringEndTime": {
                        "type": "string"
                    },
                    "summerTimeRecurringEndWeek": {
                        "type": "string"
                    },
                    "summerTimeRecurringEndWeekday": {
                        "type": "string",
                        "description": "- Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`\n"
                    },
                    "summerTimeRecurringOffset": {
                        "type": "integer",
                        "description": "- Range: `1`-`1440`\n"
                    },
                    "summerTimeRecurringStartMonth": {
                        "type": "string",
                        "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                    },
                    "summerTimeRecurringStartTime": {
                        "type": "string"
                    },
                    "summerTimeRecurringStartWeek": {
                        "type": "string"
                    },
                    "summerTimeRecurringStartWeekday": {
                        "type": "string",
                        "description": "- Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`\n"
                    },
                    "summerTimeZone": {
                        "type": "string",
                        "description": "Name of time zone in summer\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/cryptoIkev2:CryptoIkev2": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dpd": {
                    "type": "integer",
                    "description": "Enable IKE liveness check for peers - Range: `10`-`3600`\n"
                },
                "dpdQuery": {
                    "type": "string",
                    "description": "- Choices: `on-demand`, `periodic`\n"
                },
                "dpdRetryInterval": {
                    "type": "integer",
                    "description": "- Range: `2`-`60`\n"
                },
                "natKeepalive": {
                    "type": "integer",
                    "description": "Set NAT keepalive interval - Range: `5`-`3600`\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dpd": {
                    "type": "integer",
                    "description": "Enable IKE liveness check for peers - Range: `10`-`3600`\n"
                },
                "dpdQuery": {
                    "type": "string",
                    "description": "- Choices: `on-demand`, `periodic`\n"
                },
                "dpdRetryInterval": {
                    "type": "integer",
                    "description": "- Range: `2`-`60`\n"
                },
                "natKeepalive": {
                    "type": "integer",
                    "description": "Set NAT keepalive interval - Range: `5`-`3600`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CryptoIkev2 resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dpd": {
                        "type": "integer",
                        "description": "Enable IKE liveness check for peers - Range: `10`-`3600`\n"
                    },
                    "dpdQuery": {
                        "type": "string",
                        "description": "- Choices: `on-demand`, `periodic`\n"
                    },
                    "dpdRetryInterval": {
                        "type": "integer",
                        "description": "- Range: `2`-`60`\n"
                    },
                    "natKeepalive": {
                        "type": "integer",
                        "description": "Set NAT keepalive interval - Range: `5`-`3600`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/cryptoIkev2Keyring:CryptoIkev2Keyring": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/CryptoIkev2KeyringPeer:CryptoIkev2KeyringPeer"
                    },
                    "description": "Configure a Peer and associated keys\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/CryptoIkev2KeyringPeer:CryptoIkev2KeyringPeer"
                    },
                    "description": "Configure a Peer and associated keys\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CryptoIkev2Keyring resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/CryptoIkev2KeyringPeer:CryptoIkev2KeyringPeer"
                        },
                        "description": "Configure a Peer and associated keys\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/cryptoIkev2Policy:CryptoIkev2Policy": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchAddressLocalIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Local address\n"
                },
                "matchFvrf": {
                    "type": "string"
                },
                "matchFvrfAny": {
                    "type": "boolean",
                    "description": "Any fvrf\n"
                },
                "matchInboundOnly": {
                    "type": "boolean",
                    "description": "inbound only for controller\n"
                },
                "name": {
                    "type": "string"
                },
                "proposals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/CryptoIkev2PolicyProposal:CryptoIkev2PolicyProposal"
                    },
                    "description": "Specify Proposal\n"
                }
            },
            "required": [
                "name",
                "proposals"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchAddressLocalIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Local address\n"
                },
                "matchFvrf": {
                    "type": "string"
                },
                "matchFvrfAny": {
                    "type": "boolean",
                    "description": "Any fvrf\n"
                },
                "matchInboundOnly": {
                    "type": "boolean",
                    "description": "inbound only for controller\n"
                },
                "name": {
                    "type": "string"
                },
                "proposals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/CryptoIkev2PolicyProposal:CryptoIkev2PolicyProposal"
                    },
                    "description": "Specify Proposal\n"
                }
            },
            "requiredInputs": [
                "proposals"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CryptoIkev2Policy resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "matchAddressLocalIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Local address\n"
                    },
                    "matchFvrf": {
                        "type": "string"
                    },
                    "matchFvrfAny": {
                        "type": "boolean",
                        "description": "Any fvrf\n"
                    },
                    "matchInboundOnly": {
                        "type": "boolean",
                        "description": "inbound only for controller\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "proposals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/CryptoIkev2PolicyProposal:CryptoIkev2PolicyProposal"
                        },
                        "description": "Specify Proposal\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/cryptoIkev2Profile:CryptoIkev2Profile": {
            "properties": {
                "authenticationLocalPreShare": {
                    "type": "boolean",
                    "description": "Pre-Shared Key\n"
                },
                "authenticationRemotePreShare": {
                    "type": "boolean",
                    "description": "Pre-Shared Key\n"
                },
                "configExchangeRequest": {
                    "type": "boolean",
                    "description": "enable config-exchange request\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specify a description of this profile\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dpdInterval": {
                    "type": "integer",
                    "description": "- Range: `10`-`3600`\n"
                },
                "dpdQuery": {
                    "type": "string",
                    "description": "- Choices: `on-demand`, `periodic`\n"
                },
                "dpdRetry": {
                    "type": "integer",
                    "description": "- Range: `2`-`60`\n"
                },
                "identityLocalAddress": {
                    "type": "string",
                    "description": "address\n"
                },
                "identityLocalKeyId": {
                    "type": "string",
                    "description": "key-id opaque string - proprietary types of identification key-id string\n"
                },
                "keyringLocal": {
                    "type": "string",
                    "description": "Keyring name\n"
                },
                "matchAddressLocalIp": {
                    "type": "string"
                },
                "matchFvrf": {
                    "type": "string"
                },
                "matchFvrfAny": {
                    "type": "boolean",
                    "description": "Any fvrf\n"
                },
                "matchIdentityRemoteIpv4Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/CryptoIkev2ProfileMatchIdentityRemoteIpv4Address:CryptoIkev2ProfileMatchIdentityRemoteIpv4Address"
                    }
                },
                "matchIdentityRemoteIpv6Prefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIdentityRemoteKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "key-id opaque string\n"
                },
                "matchInboundOnly": {
                    "type": "boolean",
                    "description": "Match the profile for incoming connections only\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "authenticationLocalPreShare": {
                    "type": "boolean",
                    "description": "Pre-Shared Key\n"
                },
                "authenticationRemotePreShare": {
                    "type": "boolean",
                    "description": "Pre-Shared Key\n"
                },
                "configExchangeRequest": {
                    "type": "boolean",
                    "description": "enable config-exchange request\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specify a description of this profile\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dpdInterval": {
                    "type": "integer",
                    "description": "- Range: `10`-`3600`\n"
                },
                "dpdQuery": {
                    "type": "string",
                    "description": "- Choices: `on-demand`, `periodic`\n"
                },
                "dpdRetry": {
                    "type": "integer",
                    "description": "- Range: `2`-`60`\n"
                },
                "identityLocalAddress": {
                    "type": "string",
                    "description": "address\n"
                },
                "identityLocalKeyId": {
                    "type": "string",
                    "description": "key-id opaque string - proprietary types of identification key-id string\n"
                },
                "keyringLocal": {
                    "type": "string",
                    "description": "Keyring name\n"
                },
                "matchAddressLocalIp": {
                    "type": "string"
                },
                "matchFvrf": {
                    "type": "string"
                },
                "matchFvrfAny": {
                    "type": "boolean",
                    "description": "Any fvrf\n"
                },
                "matchIdentityRemoteIpv4Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/CryptoIkev2ProfileMatchIdentityRemoteIpv4Address:CryptoIkev2ProfileMatchIdentityRemoteIpv4Address"
                    }
                },
                "matchIdentityRemoteIpv6Prefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIdentityRemoteKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "key-id opaque string\n"
                },
                "matchInboundOnly": {
                    "type": "boolean",
                    "description": "Match the profile for incoming connections only\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CryptoIkev2Profile resources.\n",
                "properties": {
                    "authenticationLocalPreShare": {
                        "type": "boolean",
                        "description": "Pre-Shared Key\n"
                    },
                    "authenticationRemotePreShare": {
                        "type": "boolean",
                        "description": "Pre-Shared Key\n"
                    },
                    "configExchangeRequest": {
                        "type": "boolean",
                        "description": "enable config-exchange request\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Specify a description of this profile\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dpdInterval": {
                        "type": "integer",
                        "description": "- Range: `10`-`3600`\n"
                    },
                    "dpdQuery": {
                        "type": "string",
                        "description": "- Choices: `on-demand`, `periodic`\n"
                    },
                    "dpdRetry": {
                        "type": "integer",
                        "description": "- Range: `2`-`60`\n"
                    },
                    "identityLocalAddress": {
                        "type": "string",
                        "description": "address\n"
                    },
                    "identityLocalKeyId": {
                        "type": "string",
                        "description": "key-id opaque string - proprietary types of identification key-id string\n"
                    },
                    "keyringLocal": {
                        "type": "string",
                        "description": "Keyring name\n"
                    },
                    "matchAddressLocalIp": {
                        "type": "string"
                    },
                    "matchFvrf": {
                        "type": "string"
                    },
                    "matchFvrfAny": {
                        "type": "boolean",
                        "description": "Any fvrf\n"
                    },
                    "matchIdentityRemoteIpv4Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/CryptoIkev2ProfileMatchIdentityRemoteIpv4Address:CryptoIkev2ProfileMatchIdentityRemoteIpv4Address"
                        }
                    },
                    "matchIdentityRemoteIpv6Prefixes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "matchIdentityRemoteKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "key-id opaque string\n"
                    },
                    "matchInboundOnly": {
                        "type": "boolean",
                        "description": "Match the profile for incoming connections only\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/cryptoIkev2Proposal:CryptoIkev2Proposal": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encryptionAesCbc128": {
                    "type": "boolean",
                    "description": "AES-CBC-128\n"
                },
                "encryptionAesCbc192": {
                    "type": "boolean",
                    "description": "AES-CBC-192\n"
                },
                "encryptionAesCbc256": {
                    "type": "boolean",
                    "description": "AES-CBC-256\n"
                },
                "encryptionAesGcm128": {
                    "type": "boolean",
                    "description": "Combined-mode,128 bit key,16 byte ICV(Authentication Tag)\n"
                },
                "encryptionAesGcm256": {
                    "type": "boolean",
                    "description": "Combined-mode,256 bit key,16 byte ICV(Authentication Tag)\n"
                },
                "encryptionEn3des": {
                    "type": "boolean",
                    "description": "3DES\n"
                },
                "groupFifteen": {
                    "type": "boolean",
                    "description": "DH 3072 MODP\n"
                },
                "groupFourteen": {
                    "type": "boolean",
                    "description": "DH 2048 MODP\n"
                },
                "groupNineteen": {
                    "type": "boolean",
                    "description": "DH 256 ECP\n"
                },
                "groupOne": {
                    "type": "boolean",
                    "description": "DH 768 MODP\n"
                },
                "groupSixteen": {
                    "type": "boolean",
                    "description": "DH 4096 MODP\n"
                },
                "groupTwenty": {
                    "type": "boolean",
                    "description": "DH 384 ECP\n"
                },
                "groupTwentyFour": {
                    "type": "boolean",
                    "description": "DH 2048 (256 subgroup) MODP\n"
                },
                "groupTwentyOne": {
                    "type": "boolean",
                    "description": "DH 521 ECP\n"
                },
                "groupTwo": {
                    "type": "boolean",
                    "description": "DH 1024 MODP\n"
                },
                "integrityMd5": {
                    "type": "boolean",
                    "description": "Message Digest 5\n"
                },
                "integritySha1": {
                    "type": "boolean",
                    "description": "Secure Hash Standard\n"
                },
                "integritySha256": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (256 bit)\n"
                },
                "integritySha384": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (384 bit)\n"
                },
                "integritySha512": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (512 bit)\n"
                },
                "name": {
                    "type": "string"
                },
                "prfMd5": {
                    "type": "boolean",
                    "description": "Message Digest 5\n"
                },
                "prfSha1": {
                    "type": "boolean",
                    "description": "Secure Hash Standard\n"
                },
                "prfSha256": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (256 bit)\n"
                },
                "prfSha384": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (384 bit)\n"
                },
                "prfSha512": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (512 bit)\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encryptionAesCbc128": {
                    "type": "boolean",
                    "description": "AES-CBC-128\n"
                },
                "encryptionAesCbc192": {
                    "type": "boolean",
                    "description": "AES-CBC-192\n"
                },
                "encryptionAesCbc256": {
                    "type": "boolean",
                    "description": "AES-CBC-256\n"
                },
                "encryptionAesGcm128": {
                    "type": "boolean",
                    "description": "Combined-mode,128 bit key,16 byte ICV(Authentication Tag)\n"
                },
                "encryptionAesGcm256": {
                    "type": "boolean",
                    "description": "Combined-mode,256 bit key,16 byte ICV(Authentication Tag)\n"
                },
                "encryptionEn3des": {
                    "type": "boolean",
                    "description": "3DES\n"
                },
                "groupFifteen": {
                    "type": "boolean",
                    "description": "DH 3072 MODP\n"
                },
                "groupFourteen": {
                    "type": "boolean",
                    "description": "DH 2048 MODP\n"
                },
                "groupNineteen": {
                    "type": "boolean",
                    "description": "DH 256 ECP\n"
                },
                "groupOne": {
                    "type": "boolean",
                    "description": "DH 768 MODP\n"
                },
                "groupSixteen": {
                    "type": "boolean",
                    "description": "DH 4096 MODP\n"
                },
                "groupTwenty": {
                    "type": "boolean",
                    "description": "DH 384 ECP\n"
                },
                "groupTwentyFour": {
                    "type": "boolean",
                    "description": "DH 2048 (256 subgroup) MODP\n"
                },
                "groupTwentyOne": {
                    "type": "boolean",
                    "description": "DH 521 ECP\n"
                },
                "groupTwo": {
                    "type": "boolean",
                    "description": "DH 1024 MODP\n"
                },
                "integrityMd5": {
                    "type": "boolean",
                    "description": "Message Digest 5\n"
                },
                "integritySha1": {
                    "type": "boolean",
                    "description": "Secure Hash Standard\n"
                },
                "integritySha256": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (256 bit)\n"
                },
                "integritySha384": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (384 bit)\n"
                },
                "integritySha512": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (512 bit)\n"
                },
                "name": {
                    "type": "string"
                },
                "prfMd5": {
                    "type": "boolean",
                    "description": "Message Digest 5\n"
                },
                "prfSha1": {
                    "type": "boolean",
                    "description": "Secure Hash Standard\n"
                },
                "prfSha256": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (256 bit)\n"
                },
                "prfSha384": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (384 bit)\n"
                },
                "prfSha512": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (512 bit)\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CryptoIkev2Proposal resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encryptionAesCbc128": {
                        "type": "boolean",
                        "description": "AES-CBC-128\n"
                    },
                    "encryptionAesCbc192": {
                        "type": "boolean",
                        "description": "AES-CBC-192\n"
                    },
                    "encryptionAesCbc256": {
                        "type": "boolean",
                        "description": "AES-CBC-256\n"
                    },
                    "encryptionAesGcm128": {
                        "type": "boolean",
                        "description": "Combined-mode,128 bit key,16 byte ICV(Authentication Tag)\n"
                    },
                    "encryptionAesGcm256": {
                        "type": "boolean",
                        "description": "Combined-mode,256 bit key,16 byte ICV(Authentication Tag)\n"
                    },
                    "encryptionEn3des": {
                        "type": "boolean",
                        "description": "3DES\n"
                    },
                    "groupFifteen": {
                        "type": "boolean",
                        "description": "DH 3072 MODP\n"
                    },
                    "groupFourteen": {
                        "type": "boolean",
                        "description": "DH 2048 MODP\n"
                    },
                    "groupNineteen": {
                        "type": "boolean",
                        "description": "DH 256 ECP\n"
                    },
                    "groupOne": {
                        "type": "boolean",
                        "description": "DH 768 MODP\n"
                    },
                    "groupSixteen": {
                        "type": "boolean",
                        "description": "DH 4096 MODP\n"
                    },
                    "groupTwenty": {
                        "type": "boolean",
                        "description": "DH 384 ECP\n"
                    },
                    "groupTwentyFour": {
                        "type": "boolean",
                        "description": "DH 2048 (256 subgroup) MODP\n"
                    },
                    "groupTwentyOne": {
                        "type": "boolean",
                        "description": "DH 521 ECP\n"
                    },
                    "groupTwo": {
                        "type": "boolean",
                        "description": "DH 1024 MODP\n"
                    },
                    "integrityMd5": {
                        "type": "boolean",
                        "description": "Message Digest 5\n"
                    },
                    "integritySha1": {
                        "type": "boolean",
                        "description": "Secure Hash Standard\n"
                    },
                    "integritySha256": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (256 bit)\n"
                    },
                    "integritySha384": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (384 bit)\n"
                    },
                    "integritySha512": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (512 bit)\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "prfMd5": {
                        "type": "boolean",
                        "description": "Message Digest 5\n"
                    },
                    "prfSha1": {
                        "type": "boolean",
                        "description": "Secure Hash Standard\n"
                    },
                    "prfSha256": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (256 bit)\n"
                    },
                    "prfSha384": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (384 bit)\n"
                    },
                    "prfSha512": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (512 bit)\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/cryptoIpsecProfile:CryptoIpsecProfile": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "setIsakmpProfileIkev2ProfileIkev2ProfileCaseIkev2Profile": {
                    "type": "string",
                    "description": "Specify ikev2 Profile\n"
                },
                "setIsakmpProfileIkev2ProfileIsakmpProfileCaseIsakmpProfile": {
                    "type": "string",
                    "description": "Specify isakmp Profile\n"
                },
                "setTransformSets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specify list of transform sets in priority order\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "setIsakmpProfileIkev2ProfileIkev2ProfileCaseIkev2Profile": {
                    "type": "string",
                    "description": "Specify ikev2 Profile\n"
                },
                "setIsakmpProfileIkev2ProfileIsakmpProfileCaseIsakmpProfile": {
                    "type": "string",
                    "description": "Specify isakmp Profile\n"
                },
                "setTransformSets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specify list of transform sets in priority order\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CryptoIpsecProfile resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "setIsakmpProfileIkev2ProfileIkev2ProfileCaseIkev2Profile": {
                        "type": "string",
                        "description": "Specify ikev2 Profile\n"
                    },
                    "setIsakmpProfileIkev2ProfileIsakmpProfileCaseIsakmpProfile": {
                        "type": "string",
                        "description": "Specify isakmp Profile\n"
                    },
                    "setTransformSets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specify list of transform sets in priority order\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/cryptoIpsecTransformSet:CryptoIpsecTransformSet": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "esp": {
                    "type": "string",
                    "description": "- Choices: `esp-3des`, `esp-aes`, `esp-des`, `esp-gcm`, `esp-gmac`, `esp-null`, `esp-seal`\n"
                },
                "espHmac": {
                    "type": "string",
                    "description": "- Choices: `esp-md5-hmac`, `esp-sha-hmac`, `esp-sha256-hmac`, `esp-sha384-hmac`, `esp-sha512-hmac`\n"
                },
                "modeTunnel": {
                    "type": "boolean",
                    "description": "tunnel (datagram encapsulation) mode\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "esp",
                "espHmac",
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "esp": {
                    "type": "string",
                    "description": "- Choices: `esp-3des`, `esp-aes`, `esp-des`, `esp-gcm`, `esp-gmac`, `esp-null`, `esp-seal`\n"
                },
                "espHmac": {
                    "type": "string",
                    "description": "- Choices: `esp-md5-hmac`, `esp-sha-hmac`, `esp-sha256-hmac`, `esp-sha384-hmac`, `esp-sha512-hmac`\n"
                },
                "modeTunnel": {
                    "type": "boolean",
                    "description": "tunnel (datagram encapsulation) mode\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "esp",
                "espHmac"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CryptoIpsecTransformSet resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "esp": {
                        "type": "string",
                        "description": "- Choices: `esp-3des`, `esp-aes`, `esp-des`, `esp-gcm`, `esp-gmac`, `esp-null`, `esp-seal`\n"
                    },
                    "espHmac": {
                        "type": "string",
                        "description": "- Choices: `esp-md5-hmac`, `esp-sha-hmac`, `esp-sha256-hmac`, `esp-sha384-hmac`, `esp-sha512-hmac`\n"
                    },
                    "modeTunnel": {
                        "type": "boolean",
                        "description": "tunnel (datagram encapsulation) mode\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/cts:Cts": {
            "properties": {
                "authorizationList": {
                    "type": "string",
                    "description": "Local authorization list to use for CTS\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "inputProperties": {
                "authorizationList": {
                    "type": "string",
                    "description": "Local authorization list to use for CTS\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cts resources.\n",
                "properties": {
                    "authorizationList": {
                        "type": "string",
                        "description": "Local authorization list to use for CTS\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/dhcp:Dhcp": {
            "properties": {
                "compatibilitySuboptionLinkSelection": {
                    "type": "string",
                    "description": "- Choices: `cisco`, `standard`\n"
                },
                "compatibilitySuboptionServerOverride": {
                    "type": "string",
                    "description": "- Choices: `cisco`, `standard`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "relayInformationOptionDefault": {
                    "type": "boolean",
                    "description": "Default option, no vpn\n"
                },
                "relayInformationOptionVpn": {
                    "type": "boolean",
                    "description": "Insert VPN sub-options and change the giaddr to the outgoing interface\n"
                },
                "relayInformationTrustAll": {
                    "type": "boolean",
                    "description": "Received DHCP packets may contain relay info option with zero giaddr\n"
                },
                "snooping": {
                    "type": "boolean",
                    "description": "DHCP Snooping\n"
                },
                "snoopingInformationOptionFormatRemoteIdHostname": {
                    "type": "boolean",
                    "description": "Use configured hostname for remote id\n"
                },
                "snoopingVlans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/DhcpSnoopingVlan:DhcpSnoopingVlan"
                    },
                    "description": "DHCP Snooping vlan\n"
                }
            },
            "inputProperties": {
                "compatibilitySuboptionLinkSelection": {
                    "type": "string",
                    "description": "- Choices: `cisco`, `standard`\n"
                },
                "compatibilitySuboptionServerOverride": {
                    "type": "string",
                    "description": "- Choices: `cisco`, `standard`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "relayInformationOptionDefault": {
                    "type": "boolean",
                    "description": "Default option, no vpn\n"
                },
                "relayInformationOptionVpn": {
                    "type": "boolean",
                    "description": "Insert VPN sub-options and change the giaddr to the outgoing interface\n"
                },
                "relayInformationTrustAll": {
                    "type": "boolean",
                    "description": "Received DHCP packets may contain relay info option with zero giaddr\n"
                },
                "snooping": {
                    "type": "boolean",
                    "description": "DHCP Snooping\n"
                },
                "snoopingInformationOptionFormatRemoteIdHostname": {
                    "type": "boolean",
                    "description": "Use configured hostname for remote id\n"
                },
                "snoopingVlans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/DhcpSnoopingVlan:DhcpSnoopingVlan"
                    },
                    "description": "DHCP Snooping vlan\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dhcp resources.\n",
                "properties": {
                    "compatibilitySuboptionLinkSelection": {
                        "type": "string",
                        "description": "- Choices: `cisco`, `standard`\n"
                    },
                    "compatibilitySuboptionServerOverride": {
                        "type": "string",
                        "description": "- Choices: `cisco`, `standard`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "relayInformationOptionDefault": {
                        "type": "boolean",
                        "description": "Default option, no vpn\n"
                    },
                    "relayInformationOptionVpn": {
                        "type": "boolean",
                        "description": "Insert VPN sub-options and change the giaddr to the outgoing interface\n"
                    },
                    "relayInformationTrustAll": {
                        "type": "boolean",
                        "description": "Received DHCP packets may contain relay info option with zero giaddr\n"
                    },
                    "snooping": {
                        "type": "boolean",
                        "description": "DHCP Snooping\n"
                    },
                    "snoopingInformationOptionFormatRemoteIdHostname": {
                        "type": "boolean",
                        "description": "Use configured hostname for remote id\n"
                    },
                    "snoopingVlans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/DhcpSnoopingVlan:DhcpSnoopingVlan"
                        },
                        "description": "DHCP Snooping vlan\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/dot1x:Dot1x": {
            "properties": {
                "authFailEapol": {
                    "type": "boolean",
                    "description": "Send EAPOL-Success on successful auth-fail Authorization\n"
                },
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/Dot1xCredential:Dot1xCredential"
                    },
                    "description": "Configure 802.1X credentials profiles\n"
                },
                "criticalEapolConfigBlock": {
                    "type": "boolean",
                    "description": "Block all EAPoL transaction on Critical Authentication\n"
                },
                "criticalRecoveryDelay": {
                    "type": "integer",
                    "description": "Set 802.1x Critical Authentication Recovery Delay period - Range: `1`-`10000`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "loggingVerbose": {
                    "type": "boolean",
                    "description": "Show verbose messages in system logs\n"
                },
                "supplicantControlledTransient": {
                    "type": "boolean",
                    "description": "Controlled access is only applied during authentication\n"
                },
                "supplicantForceMulticast": {
                    "type": "boolean",
                    "description": "Force 802.1X supplicant to send multicast packets\n"
                },
                "systemAuthControl": {
                    "type": "boolean",
                    "description": "Enable or Disable SysAuthControl\n"
                },
                "testTimeout": {
                    "type": "integer",
                    "description": "Timeout for device EAPOL capabilities test in seconds - Range: `1`-`65535`\n"
                }
            },
            "inputProperties": {
                "authFailEapol": {
                    "type": "boolean",
                    "description": "Send EAPOL-Success on successful auth-fail Authorization\n"
                },
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/Dot1xCredential:Dot1xCredential"
                    },
                    "description": "Configure 802.1X credentials profiles\n"
                },
                "criticalEapolConfigBlock": {
                    "type": "boolean",
                    "description": "Block all EAPoL transaction on Critical Authentication\n"
                },
                "criticalRecoveryDelay": {
                    "type": "integer",
                    "description": "Set 802.1x Critical Authentication Recovery Delay period - Range: `1`-`10000`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "loggingVerbose": {
                    "type": "boolean",
                    "description": "Show verbose messages in system logs\n"
                },
                "supplicantControlledTransient": {
                    "type": "boolean",
                    "description": "Controlled access is only applied during authentication\n"
                },
                "supplicantForceMulticast": {
                    "type": "boolean",
                    "description": "Force 802.1X supplicant to send multicast packets\n"
                },
                "systemAuthControl": {
                    "type": "boolean",
                    "description": "Enable or Disable SysAuthControl\n"
                },
                "testTimeout": {
                    "type": "integer",
                    "description": "Timeout for device EAPOL capabilities test in seconds - Range: `1`-`65535`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dot1x resources.\n",
                "properties": {
                    "authFailEapol": {
                        "type": "boolean",
                        "description": "Send EAPOL-Success on successful auth-fail Authorization\n"
                    },
                    "credentials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/Dot1xCredential:Dot1xCredential"
                        },
                        "description": "Configure 802.1X credentials profiles\n"
                    },
                    "criticalEapolConfigBlock": {
                        "type": "boolean",
                        "description": "Block all EAPoL transaction on Critical Authentication\n"
                    },
                    "criticalRecoveryDelay": {
                        "type": "integer",
                        "description": "Set 802.1x Critical Authentication Recovery Delay period - Range: `1`-`10000`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "loggingVerbose": {
                        "type": "boolean",
                        "description": "Show verbose messages in system logs\n"
                    },
                    "supplicantControlledTransient": {
                        "type": "boolean",
                        "description": "Controlled access is only applied during authentication\n"
                    },
                    "supplicantForceMulticast": {
                        "type": "boolean",
                        "description": "Force 802.1X supplicant to send multicast packets\n"
                    },
                    "systemAuthControl": {
                        "type": "boolean",
                        "description": "Enable or Disable SysAuthControl\n"
                    },
                    "testTimeout": {
                        "type": "integer",
                        "description": "Timeout for device EAPOL capabilities test in seconds - Range: `1`-`65535`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/errdisable:Errdisable": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "detectCauseAll": {
                    "type": "boolean",
                    "description": "Enable error detection on all cases\n"
                },
                "detectCauseArpInspection": {
                    "type": "boolean",
                    "description": "Enable error detection for arp inspection\n"
                },
                "detectCauseBpduguard": {
                    "type": "boolean",
                    "description": "Enable error detection on bpdu-guard\n"
                },
                "detectCauseDhcpRateLimit": {
                    "type": "boolean",
                    "description": "Enable error detection on dhcp-rate-limit\n"
                },
                "detectCauseDtpFlap": {
                    "type": "boolean",
                    "description": "Enable error detection on dtp-flapping\n"
                },
                "detectCauseGbicInvalid": {
                    "type": "boolean",
                    "description": "Enable error detection on gbic-invalid\n"
                },
                "detectCauseInlinePower": {
                    "type": "boolean",
                    "description": "Enable error detection for inline-power\n"
                },
                "detectCauseL2ptguard": {
                    "type": "boolean",
                    "description": "Enable timer to recover from l2protocol-tunnel error disable state\n"
                },
                "detectCauseLinkFlap": {
                    "type": "boolean",
                    "description": "Enable error detection on linkstate-flapping\n"
                },
                "detectCauseLoopback": {
                    "type": "boolean",
                    "description": "Enable error detection on loopback\n"
                },
                "detectCauseLoopdetect": {
                    "type": "boolean",
                    "description": "Enable error detection on loop detect\n"
                },
                "detectCauseMlacpMinlink": {
                    "type": "boolean"
                },
                "detectCausePagpFlap": {
                    "type": "boolean",
                    "description": "Enable error detection on pagp-flapping\n"
                },
                "detectCausePppoeIaRateLimit": {
                    "type": "boolean",
                    "description": "Enable error detection on PPPoE IA rate-limit\n"
                },
                "detectCauseSecurityViolationShutdownVlan": {
                    "type": "boolean",
                    "description": "Shutdown vlan on 802.1x-guard violation\n"
                },
                "detectCauseSfpConfigMismatch": {
                    "type": "boolean",
                    "description": "Enable error detection on SFP config mismatch\n"
                },
                "detectCauseSmallFrame": {
                    "type": "boolean",
                    "description": "Enable error detection on small_frame\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "flapSettingCauseDtpFlapMaxFlaps": {
                    "type": "integer",
                    "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                },
                "flapSettingCauseDtpFlapTime": {
                    "type": "integer",
                    "description": "time period the flaps are counted - Range: `1`-`120`\n"
                },
                "flapSettingCauseLinkFlapMaxFlaps": {
                    "type": "integer",
                    "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                },
                "flapSettingCauseLinkFlapTime": {
                    "type": "integer",
                    "description": "time period the flaps are counted - Range: `1`-`120`\n"
                },
                "flapSettingCausePagpFlapMaxFlaps": {
                    "type": "integer",
                    "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                },
                "flapSettingCausePagpFlapTime": {
                    "type": "integer",
                    "description": "time period the flaps are counted - Range: `1`-`120`\n"
                },
                "recoveryCauseAll": {
                    "type": "boolean",
                    "description": "Enable timer to recover from all error causes\n"
                },
                "recoveryCauseArpInspection": {
                    "type": "boolean",
                    "description": "Enable timer to recover from arp inspection error disable state\n"
                },
                "recoveryCauseBpduguard": {
                    "type": "boolean",
                    "description": "Enable timer to recover from BPDU Guard error\n"
                },
                "recoveryCauseChannelMisconfig": {
                    "type": "boolean",
                    "description": "(STP) Enable timer to recover from channel misconfiguration error\n"
                },
                "recoveryCauseDhcpRateLimit": {
                    "type": "boolean",
                    "description": "Enable timer to recover from dhcp-rate-limit error\n"
                },
                "recoveryCauseDtpFlap": {
                    "type": "boolean",
                    "description": "Enable timer to recover from dtp-flap error\n"
                },
                "recoveryCauseGbicInvalid": {
                    "type": "boolean",
                    "description": "Enable timer to recover from invalid GBIC error\n"
                },
                "recoveryCauseInlinePower": {
                    "type": "boolean",
                    "description": "Enable timer to recover from inline-power error\n"
                },
                "recoveryCauseL2ptguard": {
                    "type": "boolean",
                    "description": "Enable timer to recover from l2protocol-tunnel error disable state\n"
                },
                "recoveryCauseLinkFlap": {
                    "type": "boolean",
                    "description": "Enable timer to recover from link-flap error\n"
                },
                "recoveryCauseLinkMonitorFailure": {
                    "type": "boolean"
                },
                "recoveryCauseLoopback": {
                    "type": "boolean",
                    "description": "Enable timer to recover from loopback error\n"
                },
                "recoveryCauseLoopdetect": {
                    "type": "boolean",
                    "description": "Enable timer to recover from loop detect error\n"
                },
                "recoveryCauseMacLimit": {
                    "type": "boolean",
                    "description": "Enable timer to recover from mac limit disable state\n"
                },
                "recoveryCauseMlacpMinlink": {
                    "type": "boolean"
                },
                "recoveryCausePagpFlap": {
                    "type": "boolean",
                    "description": "Enable timer to recover from pagp-flap error\n"
                },
                "recoveryCausePortModeFailure": {
                    "type": "boolean",
                    "description": "Enable timer to recover from port mode change failure\n"
                },
                "recoveryCausePppoeIaRateLimit": {
                    "type": "boolean",
                    "description": "Enable timer to recover from PPPoE IA rate-limit error\n"
                },
                "recoveryCausePsecureViolation": {
                    "type": "boolean",
                    "description": "Enable timer to recover from psecure violation error\n"
                },
                "recoveryCausePsp": {
                    "type": "boolean"
                },
                "recoveryCauseSecurityViolation": {
                    "type": "boolean",
                    "description": "Enable timer to recover from 802.1x violation error\n"
                },
                "recoveryCauseSfpConfigMismatch": {
                    "type": "boolean",
                    "description": "Enable timer to recover from SFP config mismatch error\n"
                },
                "recoveryCauseSmallFrame": {
                    "type": "boolean",
                    "description": "Enable timer to recover from small frame error\n"
                },
                "recoveryCauseStormControl": {
                    "type": "boolean",
                    "description": "Enable timer to recover from storm-control error\n"
                },
                "recoveryCauseUdld": {
                    "type": "boolean",
                    "description": "Enable timer to recover from udld error\n"
                },
                "recoveryCauseUnicastFlood": {
                    "type": "boolean"
                },
                "recoveryCauseVmps": {
                    "type": "boolean",
                    "description": "Enable timer to recover from vmps shutdown error\n"
                },
                "recoveryInterval": {
                    "type": "integer",
                    "description": "Error disable recovery timer value - Range: `30`-`86400`\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "detectCauseAll": {
                    "type": "boolean",
                    "description": "Enable error detection on all cases\n"
                },
                "detectCauseArpInspection": {
                    "type": "boolean",
                    "description": "Enable error detection for arp inspection\n"
                },
                "detectCauseBpduguard": {
                    "type": "boolean",
                    "description": "Enable error detection on bpdu-guard\n"
                },
                "detectCauseDhcpRateLimit": {
                    "type": "boolean",
                    "description": "Enable error detection on dhcp-rate-limit\n"
                },
                "detectCauseDtpFlap": {
                    "type": "boolean",
                    "description": "Enable error detection on dtp-flapping\n"
                },
                "detectCauseGbicInvalid": {
                    "type": "boolean",
                    "description": "Enable error detection on gbic-invalid\n"
                },
                "detectCauseInlinePower": {
                    "type": "boolean",
                    "description": "Enable error detection for inline-power\n"
                },
                "detectCauseL2ptguard": {
                    "type": "boolean",
                    "description": "Enable timer to recover from l2protocol-tunnel error disable state\n"
                },
                "detectCauseLinkFlap": {
                    "type": "boolean",
                    "description": "Enable error detection on linkstate-flapping\n"
                },
                "detectCauseLoopback": {
                    "type": "boolean",
                    "description": "Enable error detection on loopback\n"
                },
                "detectCauseLoopdetect": {
                    "type": "boolean",
                    "description": "Enable error detection on loop detect\n"
                },
                "detectCauseMlacpMinlink": {
                    "type": "boolean"
                },
                "detectCausePagpFlap": {
                    "type": "boolean",
                    "description": "Enable error detection on pagp-flapping\n"
                },
                "detectCausePppoeIaRateLimit": {
                    "type": "boolean",
                    "description": "Enable error detection on PPPoE IA rate-limit\n"
                },
                "detectCauseSecurityViolationShutdownVlan": {
                    "type": "boolean",
                    "description": "Shutdown vlan on 802.1x-guard violation\n"
                },
                "detectCauseSfpConfigMismatch": {
                    "type": "boolean",
                    "description": "Enable error detection on SFP config mismatch\n"
                },
                "detectCauseSmallFrame": {
                    "type": "boolean",
                    "description": "Enable error detection on small_frame\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "flapSettingCauseDtpFlapMaxFlaps": {
                    "type": "integer",
                    "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                },
                "flapSettingCauseDtpFlapTime": {
                    "type": "integer",
                    "description": "time period the flaps are counted - Range: `1`-`120`\n"
                },
                "flapSettingCauseLinkFlapMaxFlaps": {
                    "type": "integer",
                    "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                },
                "flapSettingCauseLinkFlapTime": {
                    "type": "integer",
                    "description": "time period the flaps are counted - Range: `1`-`120`\n"
                },
                "flapSettingCausePagpFlapMaxFlaps": {
                    "type": "integer",
                    "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                },
                "flapSettingCausePagpFlapTime": {
                    "type": "integer",
                    "description": "time period the flaps are counted - Range: `1`-`120`\n"
                },
                "recoveryCauseAll": {
                    "type": "boolean",
                    "description": "Enable timer to recover from all error causes\n"
                },
                "recoveryCauseArpInspection": {
                    "type": "boolean",
                    "description": "Enable timer to recover from arp inspection error disable state\n"
                },
                "recoveryCauseBpduguard": {
                    "type": "boolean",
                    "description": "Enable timer to recover from BPDU Guard error\n"
                },
                "recoveryCauseChannelMisconfig": {
                    "type": "boolean",
                    "description": "(STP) Enable timer to recover from channel misconfiguration error\n"
                },
                "recoveryCauseDhcpRateLimit": {
                    "type": "boolean",
                    "description": "Enable timer to recover from dhcp-rate-limit error\n"
                },
                "recoveryCauseDtpFlap": {
                    "type": "boolean",
                    "description": "Enable timer to recover from dtp-flap error\n"
                },
                "recoveryCauseGbicInvalid": {
                    "type": "boolean",
                    "description": "Enable timer to recover from invalid GBIC error\n"
                },
                "recoveryCauseInlinePower": {
                    "type": "boolean",
                    "description": "Enable timer to recover from inline-power error\n"
                },
                "recoveryCauseL2ptguard": {
                    "type": "boolean",
                    "description": "Enable timer to recover from l2protocol-tunnel error disable state\n"
                },
                "recoveryCauseLinkFlap": {
                    "type": "boolean",
                    "description": "Enable timer to recover from link-flap error\n"
                },
                "recoveryCauseLinkMonitorFailure": {
                    "type": "boolean"
                },
                "recoveryCauseLoopback": {
                    "type": "boolean",
                    "description": "Enable timer to recover from loopback error\n"
                },
                "recoveryCauseLoopdetect": {
                    "type": "boolean",
                    "description": "Enable timer to recover from loop detect error\n"
                },
                "recoveryCauseMacLimit": {
                    "type": "boolean",
                    "description": "Enable timer to recover from mac limit disable state\n"
                },
                "recoveryCauseMlacpMinlink": {
                    "type": "boolean"
                },
                "recoveryCausePagpFlap": {
                    "type": "boolean",
                    "description": "Enable timer to recover from pagp-flap error\n"
                },
                "recoveryCausePortModeFailure": {
                    "type": "boolean",
                    "description": "Enable timer to recover from port mode change failure\n"
                },
                "recoveryCausePppoeIaRateLimit": {
                    "type": "boolean",
                    "description": "Enable timer to recover from PPPoE IA rate-limit error\n"
                },
                "recoveryCausePsecureViolation": {
                    "type": "boolean",
                    "description": "Enable timer to recover from psecure violation error\n"
                },
                "recoveryCausePsp": {
                    "type": "boolean"
                },
                "recoveryCauseSecurityViolation": {
                    "type": "boolean",
                    "description": "Enable timer to recover from 802.1x violation error\n"
                },
                "recoveryCauseSfpConfigMismatch": {
                    "type": "boolean",
                    "description": "Enable timer to recover from SFP config mismatch error\n"
                },
                "recoveryCauseSmallFrame": {
                    "type": "boolean",
                    "description": "Enable timer to recover from small frame error\n"
                },
                "recoveryCauseStormControl": {
                    "type": "boolean",
                    "description": "Enable timer to recover from storm-control error\n"
                },
                "recoveryCauseUdld": {
                    "type": "boolean",
                    "description": "Enable timer to recover from udld error\n"
                },
                "recoveryCauseUnicastFlood": {
                    "type": "boolean"
                },
                "recoveryCauseVmps": {
                    "type": "boolean",
                    "description": "Enable timer to recover from vmps shutdown error\n"
                },
                "recoveryInterval": {
                    "type": "integer",
                    "description": "Error disable recovery timer value - Range: `30`-`86400`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Errdisable resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "detectCauseAll": {
                        "type": "boolean",
                        "description": "Enable error detection on all cases\n"
                    },
                    "detectCauseArpInspection": {
                        "type": "boolean",
                        "description": "Enable error detection for arp inspection\n"
                    },
                    "detectCauseBpduguard": {
                        "type": "boolean",
                        "description": "Enable error detection on bpdu-guard\n"
                    },
                    "detectCauseDhcpRateLimit": {
                        "type": "boolean",
                        "description": "Enable error detection on dhcp-rate-limit\n"
                    },
                    "detectCauseDtpFlap": {
                        "type": "boolean",
                        "description": "Enable error detection on dtp-flapping\n"
                    },
                    "detectCauseGbicInvalid": {
                        "type": "boolean",
                        "description": "Enable error detection on gbic-invalid\n"
                    },
                    "detectCauseInlinePower": {
                        "type": "boolean",
                        "description": "Enable error detection for inline-power\n"
                    },
                    "detectCauseL2ptguard": {
                        "type": "boolean",
                        "description": "Enable timer to recover from l2protocol-tunnel error disable state\n"
                    },
                    "detectCauseLinkFlap": {
                        "type": "boolean",
                        "description": "Enable error detection on linkstate-flapping\n"
                    },
                    "detectCauseLoopback": {
                        "type": "boolean",
                        "description": "Enable error detection on loopback\n"
                    },
                    "detectCauseLoopdetect": {
                        "type": "boolean",
                        "description": "Enable error detection on loop detect\n"
                    },
                    "detectCauseMlacpMinlink": {
                        "type": "boolean"
                    },
                    "detectCausePagpFlap": {
                        "type": "boolean",
                        "description": "Enable error detection on pagp-flapping\n"
                    },
                    "detectCausePppoeIaRateLimit": {
                        "type": "boolean",
                        "description": "Enable error detection on PPPoE IA rate-limit\n"
                    },
                    "detectCauseSecurityViolationShutdownVlan": {
                        "type": "boolean",
                        "description": "Shutdown vlan on 802.1x-guard violation\n"
                    },
                    "detectCauseSfpConfigMismatch": {
                        "type": "boolean",
                        "description": "Enable error detection on SFP config mismatch\n"
                    },
                    "detectCauseSmallFrame": {
                        "type": "boolean",
                        "description": "Enable error detection on small_frame\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "flapSettingCauseDtpFlapMaxFlaps": {
                        "type": "integer",
                        "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                    },
                    "flapSettingCauseDtpFlapTime": {
                        "type": "integer",
                        "description": "time period the flaps are counted - Range: `1`-`120`\n"
                    },
                    "flapSettingCauseLinkFlapMaxFlaps": {
                        "type": "integer",
                        "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                    },
                    "flapSettingCauseLinkFlapTime": {
                        "type": "integer",
                        "description": "time period the flaps are counted - Range: `1`-`120`\n"
                    },
                    "flapSettingCausePagpFlapMaxFlaps": {
                        "type": "integer",
                        "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                    },
                    "flapSettingCausePagpFlapTime": {
                        "type": "integer",
                        "description": "time period the flaps are counted - Range: `1`-`120`\n"
                    },
                    "recoveryCauseAll": {
                        "type": "boolean",
                        "description": "Enable timer to recover from all error causes\n"
                    },
                    "recoveryCauseArpInspection": {
                        "type": "boolean",
                        "description": "Enable timer to recover from arp inspection error disable state\n"
                    },
                    "recoveryCauseBpduguard": {
                        "type": "boolean",
                        "description": "Enable timer to recover from BPDU Guard error\n"
                    },
                    "recoveryCauseChannelMisconfig": {
                        "type": "boolean",
                        "description": "(STP) Enable timer to recover from channel misconfiguration error\n"
                    },
                    "recoveryCauseDhcpRateLimit": {
                        "type": "boolean",
                        "description": "Enable timer to recover from dhcp-rate-limit error\n"
                    },
                    "recoveryCauseDtpFlap": {
                        "type": "boolean",
                        "description": "Enable timer to recover from dtp-flap error\n"
                    },
                    "recoveryCauseGbicInvalid": {
                        "type": "boolean",
                        "description": "Enable timer to recover from invalid GBIC error\n"
                    },
                    "recoveryCauseInlinePower": {
                        "type": "boolean",
                        "description": "Enable timer to recover from inline-power error\n"
                    },
                    "recoveryCauseL2ptguard": {
                        "type": "boolean",
                        "description": "Enable timer to recover from l2protocol-tunnel error disable state\n"
                    },
                    "recoveryCauseLinkFlap": {
                        "type": "boolean",
                        "description": "Enable timer to recover from link-flap error\n"
                    },
                    "recoveryCauseLinkMonitorFailure": {
                        "type": "boolean"
                    },
                    "recoveryCauseLoopback": {
                        "type": "boolean",
                        "description": "Enable timer to recover from loopback error\n"
                    },
                    "recoveryCauseLoopdetect": {
                        "type": "boolean",
                        "description": "Enable timer to recover from loop detect error\n"
                    },
                    "recoveryCauseMacLimit": {
                        "type": "boolean",
                        "description": "Enable timer to recover from mac limit disable state\n"
                    },
                    "recoveryCauseMlacpMinlink": {
                        "type": "boolean"
                    },
                    "recoveryCausePagpFlap": {
                        "type": "boolean",
                        "description": "Enable timer to recover from pagp-flap error\n"
                    },
                    "recoveryCausePortModeFailure": {
                        "type": "boolean",
                        "description": "Enable timer to recover from port mode change failure\n"
                    },
                    "recoveryCausePppoeIaRateLimit": {
                        "type": "boolean",
                        "description": "Enable timer to recover from PPPoE IA rate-limit error\n"
                    },
                    "recoveryCausePsecureViolation": {
                        "type": "boolean",
                        "description": "Enable timer to recover from psecure violation error\n"
                    },
                    "recoveryCausePsp": {
                        "type": "boolean"
                    },
                    "recoveryCauseSecurityViolation": {
                        "type": "boolean",
                        "description": "Enable timer to recover from 802.1x violation error\n"
                    },
                    "recoveryCauseSfpConfigMismatch": {
                        "type": "boolean",
                        "description": "Enable timer to recover from SFP config mismatch error\n"
                    },
                    "recoveryCauseSmallFrame": {
                        "type": "boolean",
                        "description": "Enable timer to recover from small frame error\n"
                    },
                    "recoveryCauseStormControl": {
                        "type": "boolean",
                        "description": "Enable timer to recover from storm-control error\n"
                    },
                    "recoveryCauseUdld": {
                        "type": "boolean",
                        "description": "Enable timer to recover from udld error\n"
                    },
                    "recoveryCauseUnicastFlood": {
                        "type": "boolean"
                    },
                    "recoveryCauseVmps": {
                        "type": "boolean",
                        "description": "Enable timer to recover from vmps shutdown error\n"
                    },
                    "recoveryInterval": {
                        "type": "integer",
                        "description": "Error disable recovery timer value - Range: `30`-`86400`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/evpn:Evpn": {
            "properties": {
                "defaultGatewayAdvertise": {
                    "type": "boolean",
                    "description": "Advertise Default Gateway MAC/IP routes\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipDuplicationLimit": {
                    "type": "integer",
                    "description": "Number of IP moves within specified time interval - Range: `2`-`1000`\n"
                },
                "ipDuplicationTime": {
                    "type": "integer",
                    "description": "IP duplication timer - Range: `10`-`36000`\n"
                },
                "loggingPeerState": {
                    "type": "boolean",
                    "description": "Peer state transition logging\n"
                },
                "macDuplicationLimit": {
                    "type": "integer",
                    "description": "Number of MAC moves within specified time interval - Range: `2`-`1000`\n"
                },
                "macDuplicationTime": {
                    "type": "integer",
                    "description": "MAC duplication timer - Range: `10`-`36000`\n"
                },
                "replicationTypeIngress": {
                    "type": "boolean",
                    "description": "Ingress replication\n"
                },
                "replicationTypeMp2mp": {
                    "type": "boolean",
                    "description": "mp2mp replication\n"
                },
                "replicationTypeP2mp": {
                    "type": "boolean",
                    "description": "p2mp replication\n"
                },
                "replicationTypeStatic": {
                    "type": "boolean",
                    "description": "Static replication\n"
                },
                "routeTargetAutoVni": {
                    "type": "boolean",
                    "description": "Set vni-based route-target\n"
                },
                "routerIdLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                }
            },
            "inputProperties": {
                "defaultGatewayAdvertise": {
                    "type": "boolean",
                    "description": "Advertise Default Gateway MAC/IP routes\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipDuplicationLimit": {
                    "type": "integer",
                    "description": "Number of IP moves within specified time interval - Range: `2`-`1000`\n"
                },
                "ipDuplicationTime": {
                    "type": "integer",
                    "description": "IP duplication timer - Range: `10`-`36000`\n"
                },
                "loggingPeerState": {
                    "type": "boolean",
                    "description": "Peer state transition logging\n"
                },
                "macDuplicationLimit": {
                    "type": "integer",
                    "description": "Number of MAC moves within specified time interval - Range: `2`-`1000`\n"
                },
                "macDuplicationTime": {
                    "type": "integer",
                    "description": "MAC duplication timer - Range: `10`-`36000`\n"
                },
                "replicationTypeIngress": {
                    "type": "boolean",
                    "description": "Ingress replication\n"
                },
                "replicationTypeMp2mp": {
                    "type": "boolean",
                    "description": "mp2mp replication\n"
                },
                "replicationTypeP2mp": {
                    "type": "boolean",
                    "description": "p2mp replication\n"
                },
                "replicationTypeStatic": {
                    "type": "boolean",
                    "description": "Static replication\n"
                },
                "routeTargetAutoVni": {
                    "type": "boolean",
                    "description": "Set vni-based route-target\n"
                },
                "routerIdLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Evpn resources.\n",
                "properties": {
                    "defaultGatewayAdvertise": {
                        "type": "boolean",
                        "description": "Advertise Default Gateway MAC/IP routes\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipDuplicationLimit": {
                        "type": "integer",
                        "description": "Number of IP moves within specified time interval - Range: `2`-`1000`\n"
                    },
                    "ipDuplicationTime": {
                        "type": "integer",
                        "description": "IP duplication timer - Range: `10`-`36000`\n"
                    },
                    "loggingPeerState": {
                        "type": "boolean",
                        "description": "Peer state transition logging\n"
                    },
                    "macDuplicationLimit": {
                        "type": "integer",
                        "description": "Number of MAC moves within specified time interval - Range: `2`-`1000`\n"
                    },
                    "macDuplicationTime": {
                        "type": "integer",
                        "description": "MAC duplication timer - Range: `10`-`36000`\n"
                    },
                    "replicationTypeIngress": {
                        "type": "boolean",
                        "description": "Ingress replication\n"
                    },
                    "replicationTypeMp2mp": {
                        "type": "boolean",
                        "description": "mp2mp replication\n"
                    },
                    "replicationTypeP2mp": {
                        "type": "boolean",
                        "description": "p2mp replication\n"
                    },
                    "replicationTypeStatic": {
                        "type": "boolean",
                        "description": "Static replication\n"
                    },
                    "routeTargetAutoVni": {
                        "type": "boolean",
                        "description": "Set vni-based route-target\n"
                    },
                    "routerIdLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/evpnInstance:EvpnInstance": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "evpnInstanceNum": {
                    "type": "integer",
                    "description": "evpn instance number - Range: `1`-`65535`\n"
                },
                "vlanBasedAutoRouteTarget": {
                    "type": "boolean",
                    "description": "Automatically set a route-target\n"
                },
                "vlanBasedDefaultGatewayAdvertise": {
                    "type": "string",
                    "description": "Advertise Default Gateway MAC/IP routes - Choices: `disable`, `enable`\n"
                },
                "vlanBasedEncapsulation": {
                    "type": "string",
                    "description": "Data encapsulation method - Choices: `mpls`, `vxlan`\n"
                },
                "vlanBasedIpLocalLearningDisable": {
                    "type": "boolean",
                    "description": "Disable IP local learning from dataplane\n"
                },
                "vlanBasedIpLocalLearningEnable": {
                    "type": "boolean",
                    "description": "Enable IP local learning from dataplane\n"
                },
                "vlanBasedRd": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn\n"
                },
                "vlanBasedReOriginateRouteType5": {
                    "type": "boolean",
                    "description": "Re-originate route-type 5\n"
                },
                "vlanBasedReplicationTypeIngress": {
                    "type": "boolean",
                    "description": "Ingress replication\n"
                },
                "vlanBasedReplicationTypeMp2mp": {
                    "type": "boolean",
                    "description": "mp2mp replication\n"
                },
                "vlanBasedReplicationTypeP2mp": {
                    "type": "boolean",
                    "description": "p2mp replication\n"
                },
                "vlanBasedReplicationTypeStatic": {
                    "type": "boolean",
                    "description": "Static replication\n"
                },
                "vlanBasedRouteTarget": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn\n"
                },
                "vlanBasedRouteTargetBoth": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn\n"
                },
                "vlanBasedRouteTargetExport": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)\n"
                },
                "vlanBasedRouteTargetImport": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)\n"
                }
            },
            "required": [
                "evpnInstanceNum"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "evpnInstanceNum": {
                    "type": "integer",
                    "description": "evpn instance number - Range: `1`-`65535`\n"
                },
                "vlanBasedAutoRouteTarget": {
                    "type": "boolean",
                    "description": "Automatically set a route-target\n"
                },
                "vlanBasedDefaultGatewayAdvertise": {
                    "type": "string",
                    "description": "Advertise Default Gateway MAC/IP routes - Choices: `disable`, `enable`\n"
                },
                "vlanBasedEncapsulation": {
                    "type": "string",
                    "description": "Data encapsulation method - Choices: `mpls`, `vxlan`\n"
                },
                "vlanBasedIpLocalLearningDisable": {
                    "type": "boolean",
                    "description": "Disable IP local learning from dataplane\n"
                },
                "vlanBasedIpLocalLearningEnable": {
                    "type": "boolean",
                    "description": "Enable IP local learning from dataplane\n"
                },
                "vlanBasedRd": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn\n"
                },
                "vlanBasedReOriginateRouteType5": {
                    "type": "boolean",
                    "description": "Re-originate route-type 5\n"
                },
                "vlanBasedReplicationTypeIngress": {
                    "type": "boolean",
                    "description": "Ingress replication\n"
                },
                "vlanBasedReplicationTypeMp2mp": {
                    "type": "boolean",
                    "description": "mp2mp replication\n"
                },
                "vlanBasedReplicationTypeP2mp": {
                    "type": "boolean",
                    "description": "p2mp replication\n"
                },
                "vlanBasedReplicationTypeStatic": {
                    "type": "boolean",
                    "description": "Static replication\n"
                },
                "vlanBasedRouteTarget": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn\n"
                },
                "vlanBasedRouteTargetBoth": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn\n"
                },
                "vlanBasedRouteTargetExport": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)\n"
                },
                "vlanBasedRouteTargetImport": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)\n"
                }
            },
            "requiredInputs": [
                "evpnInstanceNum"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EvpnInstance resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "evpnInstanceNum": {
                        "type": "integer",
                        "description": "evpn instance number - Range: `1`-`65535`\n"
                    },
                    "vlanBasedAutoRouteTarget": {
                        "type": "boolean",
                        "description": "Automatically set a route-target\n"
                    },
                    "vlanBasedDefaultGatewayAdvertise": {
                        "type": "string",
                        "description": "Advertise Default Gateway MAC/IP routes - Choices: `disable`, `enable`\n"
                    },
                    "vlanBasedEncapsulation": {
                        "type": "string",
                        "description": "Data encapsulation method - Choices: `mpls`, `vxlan`\n"
                    },
                    "vlanBasedIpLocalLearningDisable": {
                        "type": "boolean",
                        "description": "Disable IP local learning from dataplane\n"
                    },
                    "vlanBasedIpLocalLearningEnable": {
                        "type": "boolean",
                        "description": "Enable IP local learning from dataplane\n"
                    },
                    "vlanBasedRd": {
                        "type": "string",
                        "description": "ASN:nn or IP-address:nn\n"
                    },
                    "vlanBasedReOriginateRouteType5": {
                        "type": "boolean",
                        "description": "Re-originate route-type 5\n"
                    },
                    "vlanBasedReplicationTypeIngress": {
                        "type": "boolean",
                        "description": "Ingress replication\n"
                    },
                    "vlanBasedReplicationTypeMp2mp": {
                        "type": "boolean",
                        "description": "mp2mp replication\n"
                    },
                    "vlanBasedReplicationTypeP2mp": {
                        "type": "boolean",
                        "description": "p2mp replication\n"
                    },
                    "vlanBasedReplicationTypeStatic": {
                        "type": "boolean",
                        "description": "Static replication\n"
                    },
                    "vlanBasedRouteTarget": {
                        "type": "string",
                        "description": "ASN:nn or IP-address:nn\n"
                    },
                    "vlanBasedRouteTargetBoth": {
                        "type": "string",
                        "description": "ASN:nn or IP-address:nn\n"
                    },
                    "vlanBasedRouteTargetExport": {
                        "type": "string",
                        "description": "ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)\n"
                    },
                    "vlanBasedRouteTargetImport": {
                        "type": "string",
                        "description": "ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/interfaceEthernet:InterfaceEthernet": {
            "properties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "autoQosClassify": {
                    "type": "boolean",
                    "description": "Configure classification for untrusted devices\n"
                },
                "autoQosClassifyPolice": {
                    "type": "boolean",
                    "description": "Configure QoS policing for untrusted devices\n"
                },
                "autoQosTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "autoQosTrustCos": {
                    "type": "boolean",
                    "description": "Trust the CoS marking\n"
                },
                "autoQosTrustDscp": {
                    "type": "boolean",
                    "description": "Trust the DSCP marking\n"
                },
                "autoQosVideoCts": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                },
                "autoQosVideoIpCamera": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                },
                "autoQosVideoMediaPlayer": {
                    "type": "boolean",
                    "description": "Trust the Qos marking of the Cisco Media Player\n"
                },
                "autoQosVoip": {
                    "type": "boolean",
                    "description": "Configure AutoQoS for VoIP\n"
                },
                "autoQosVoipCiscoPhone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP Phone\n"
                },
                "autoQosVoipCiscoSoftphone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                },
                "autoQosVoipTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "channelGroupMode": {
                    "type": "string",
                    "description": "Etherchannel Mode of the interface - Choices: `active`, `auto`, `desirable`, `on`, `passive`\n"
                },
                "channelGroupNumber": {
                    "type": "integer",
                    "description": "- Range: `1`-`512`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encapsulationDot1qVlanId": {
                    "type": "integer",
                    "description": "- Range: `1`-`4094`\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceEthernetHelperAddress:InterfaceEthernetHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipArpInspectionLimitRate": {
                    "type": "integer",
                    "description": "Rate Limit - Range: `0`-`4294967295`\n"
                },
                "ipArpInspectionTrust": {
                    "type": "boolean",
                    "description": "Configure Trust state\n"
                },
                "ipDhcpRelaySourceInterface": {
                    "type": "string",
                    "description": "Set source interface for relayed messages\n"
                },
                "ipDhcpSnoopingTrust": {
                    "type": "boolean",
                    "description": "DHCP Snooping trust config\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceEthernetIpv6Address:InterfaceEthernetIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceEthernetIpv6LinkLocalAddress:InterfaceEthernetIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "mediaType": {
                    "type": "string",
                    "description": "Media type - Choices: `auto-select`, `rj45`, `sfp`\n"
                },
                "name": {
                    "type": "string"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "sourceTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceEthernetSourceTemplate:InterfaceEthernetSourceTemplate"
                    }
                },
                "spanningTreeGuard": {
                    "type": "string",
                    "description": "Change an interface's spanning tree guard mode - Choices: `loop`, `none`, `root`\n"
                },
                "spanningTreeLinkType": {
                    "type": "string",
                    "description": "Specify a link type for spanning tree tree protocol use - Choices: `point-to-point`, `shared`\n"
                },
                "spanningTreePortfastTrunk": {
                    "type": "boolean",
                    "description": "Enable portfast on the interface even in trunk mode\n"
                },
                "switchport": {
                    "type": "boolean"
                },
                "trustDevice": {
                    "type": "string",
                    "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`\n"
                },
                "unnumbered": {
                    "type": "string",
                    "description": "Enable IP processing without an explicit address\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "autoQosClassify": {
                    "type": "boolean",
                    "description": "Configure classification for untrusted devices\n"
                },
                "autoQosClassifyPolice": {
                    "type": "boolean",
                    "description": "Configure QoS policing for untrusted devices\n"
                },
                "autoQosTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "autoQosTrustCos": {
                    "type": "boolean",
                    "description": "Trust the CoS marking\n"
                },
                "autoQosTrustDscp": {
                    "type": "boolean",
                    "description": "Trust the DSCP marking\n"
                },
                "autoQosVideoCts": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                },
                "autoQosVideoIpCamera": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                },
                "autoQosVideoMediaPlayer": {
                    "type": "boolean",
                    "description": "Trust the Qos marking of the Cisco Media Player\n"
                },
                "autoQosVoip": {
                    "type": "boolean",
                    "description": "Configure AutoQoS for VoIP\n"
                },
                "autoQosVoipCiscoPhone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP Phone\n"
                },
                "autoQosVoipCiscoSoftphone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                },
                "autoQosVoipTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "channelGroupMode": {
                    "type": "string",
                    "description": "Etherchannel Mode of the interface - Choices: `active`, `auto`, `desirable`, `on`, `passive`\n"
                },
                "channelGroupNumber": {
                    "type": "integer",
                    "description": "- Range: `1`-`512`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encapsulationDot1qVlanId": {
                    "type": "integer",
                    "description": "- Range: `1`-`4094`\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceEthernetHelperAddress:InterfaceEthernetHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipArpInspectionLimitRate": {
                    "type": "integer",
                    "description": "Rate Limit - Range: `0`-`4294967295`\n"
                },
                "ipArpInspectionTrust": {
                    "type": "boolean",
                    "description": "Configure Trust state\n"
                },
                "ipDhcpRelaySourceInterface": {
                    "type": "string",
                    "description": "Set source interface for relayed messages\n"
                },
                "ipDhcpSnoopingTrust": {
                    "type": "boolean",
                    "description": "DHCP Snooping trust config\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceEthernetIpv6Address:InterfaceEthernetIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceEthernetIpv6LinkLocalAddress:InterfaceEthernetIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "mediaType": {
                    "type": "string",
                    "description": "Media type - Choices: `auto-select`, `rj45`, `sfp`\n"
                },
                "name": {
                    "type": "string"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "sourceTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceEthernetSourceTemplate:InterfaceEthernetSourceTemplate"
                    }
                },
                "spanningTreeGuard": {
                    "type": "string",
                    "description": "Change an interface's spanning tree guard mode - Choices: `loop`, `none`, `root`\n"
                },
                "spanningTreeLinkType": {
                    "type": "string",
                    "description": "Specify a link type for spanning tree tree protocol use - Choices: `point-to-point`, `shared`\n"
                },
                "spanningTreePortfastTrunk": {
                    "type": "boolean",
                    "description": "Enable portfast on the interface even in trunk mode\n"
                },
                "switchport": {
                    "type": "boolean"
                },
                "trustDevice": {
                    "type": "string",
                    "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`\n"
                },
                "unnumbered": {
                    "type": "string",
                    "description": "Enable IP processing without an explicit address\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceEthernet resources.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer",
                        "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                    },
                    "autoQosClassify": {
                        "type": "boolean",
                        "description": "Configure classification for untrusted devices\n"
                    },
                    "autoQosClassifyPolice": {
                        "type": "boolean",
                        "description": "Configure QoS policing for untrusted devices\n"
                    },
                    "autoQosTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "autoQosTrustCos": {
                        "type": "boolean",
                        "description": "Trust the CoS marking\n"
                    },
                    "autoQosTrustDscp": {
                        "type": "boolean",
                        "description": "Trust the DSCP marking\n"
                    },
                    "autoQosVideoCts": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                    },
                    "autoQosVideoIpCamera": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                    },
                    "autoQosVideoMediaPlayer": {
                        "type": "boolean",
                        "description": "Trust the Qos marking of the Cisco Media Player\n"
                    },
                    "autoQosVoip": {
                        "type": "boolean",
                        "description": "Configure AutoQoS for VoIP\n"
                    },
                    "autoQosVoipCiscoPhone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP Phone\n"
                    },
                    "autoQosVoipCiscoSoftphone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                    },
                    "autoQosVoipTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "bfdEcho": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "bfdEnable": {
                        "type": "boolean",
                        "description": "Enable BFD under the interface\n"
                    },
                    "bfdInterval": {
                        "type": "integer",
                        "description": "- Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                    },
                    "bfdLocalAddress": {
                        "type": "string",
                        "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                    },
                    "bfdTemplate": {
                        "type": "string",
                        "description": "BFD template\n"
                    },
                    "channelGroupMode": {
                        "type": "string",
                        "description": "Etherchannel Mode of the interface - Choices: `active`, `auto`, `desirable`, `on`, `passive`\n"
                    },
                    "channelGroupNumber": {
                        "type": "integer",
                        "description": "- Range: `1`-`512`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encapsulationDot1qVlanId": {
                        "type": "integer",
                        "description": "- Range: `1`-`4094`\n"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfaceEthernetHelperAddress:InterfaceEthernetHelperAddress"
                        },
                        "description": "Specify a destination address for UDP broadcasts\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipArpInspectionLimitRate": {
                        "type": "integer",
                        "description": "Rate Limit - Range: `0`-`4294967295`\n"
                    },
                    "ipArpInspectionTrust": {
                        "type": "boolean",
                        "description": "Configure Trust state\n"
                    },
                    "ipDhcpRelaySourceInterface": {
                        "type": "string",
                        "description": "Set source interface for relayed messages\n"
                    },
                    "ipDhcpSnoopingTrust": {
                        "type": "boolean",
                        "description": "DHCP Snooping trust config\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfaceEthernetIpv6Address:InterfaceEthernetIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfaceEthernetIpv6LinkLocalAddress:InterfaceEthernetIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "mediaType": {
                        "type": "string",
                        "description": "Media type - Choices: `auto-select`, `rj45`, `sfp`\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "sourceTemplates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfaceEthernetSourceTemplate:InterfaceEthernetSourceTemplate"
                        }
                    },
                    "spanningTreeGuard": {
                        "type": "string",
                        "description": "Change an interface's spanning tree guard mode - Choices: `loop`, `none`, `root`\n"
                    },
                    "spanningTreeLinkType": {
                        "type": "string",
                        "description": "Specify a link type for spanning tree tree protocol use - Choices: `point-to-point`, `shared`\n"
                    },
                    "spanningTreePortfastTrunk": {
                        "type": "boolean",
                        "description": "Enable portfast on the interface even in trunk mode\n"
                    },
                    "switchport": {
                        "type": "boolean"
                    },
                    "trustDevice": {
                        "type": "string",
                        "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`\n"
                    },
                    "unnumbered": {
                        "type": "string",
                        "description": "Enable IP processing without an explicit address\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/interfaceLoopback:InterfaceLoopback": {
            "properties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceLoopbackIpv6Address:InterfaceLoopbackIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceLoopbackIpv6LinkLocalAddress:InterfaceLoopbackIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `0`-`2147483647`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceLoopbackIpv6Address:InterfaceLoopbackIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceLoopbackIpv6LinkLocalAddress:InterfaceLoopbackIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `0`-`2147483647`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceLoopback resources.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer",
                        "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfaceLoopbackIpv6Address:InterfaceLoopbackIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfaceLoopbackIpv6LinkLocalAddress:InterfaceLoopbackIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "name": {
                        "type": "integer",
                        "description": "- Range: `0`-`2147483647`\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/interfaceMpls:InterfaceMpls": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ip": {
                    "type": "boolean",
                    "description": "Configure dynamic MPLS forwarding for IP\n"
                },
                "mtu": {
                    "type": "string",
                    "description": "Set MPLS Maximum Transmission Unit\n"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ip": {
                    "type": "boolean",
                    "description": "Configure dynamic MPLS forwarding for IP\n"
                },
                "mtu": {
                    "type": "string",
                    "description": "Set MPLS Maximum Transmission Unit\n"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceMpls resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ip": {
                        "type": "boolean",
                        "description": "Configure dynamic MPLS forwarding for IP\n"
                    },
                    "mtu": {
                        "type": "string",
                        "description": "Set MPLS Maximum Transmission Unit\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/interfaceNve:InterfaceNve": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "hostReachabilityProtocolBgp": {
                    "type": "boolean"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `1`-`4096`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "sourceInterfaceLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "vniVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceNveVniVrf:InterfaceNveVniVrf"
                    },
                    "description": "Configure VNI information\n"
                },
                "vnis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceNveVni:InterfaceNveVni"
                    },
                    "description": "Configure VNI information\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "hostReachabilityProtocolBgp": {
                    "type": "boolean"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `1`-`4096`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "sourceInterfaceLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "vniVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceNveVniVrf:InterfaceNveVniVrf"
                    },
                    "description": "Configure VNI information\n"
                },
                "vnis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceNveVni:InterfaceNveVni"
                    },
                    "description": "Configure VNI information\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceNve resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "hostReachabilityProtocolBgp": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "integer",
                        "description": "- Range: `1`-`4096`\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "sourceInterfaceLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    },
                    "vniVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfaceNveVniVrf:InterfaceNveVniVrf"
                        },
                        "description": "Configure VNI information\n"
                    },
                    "vnis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfaceNveVni:InterfaceNveVni"
                        },
                        "description": "Configure VNI information\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/interfaceOspf:InterfaceOspf": {
            "properties": {
                "cost": {
                    "type": "integer",
                    "description": "Route cost of this interface - Range: `1`-`65535`\n"
                },
                "deadInterval": {
                    "type": "integer",
                    "description": "Interval after which a neighbor is declared dead - Range: `1`-`65535`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helloInterval": {
                    "type": "integer",
                    "description": "Time between HELLO packets - Range: `1`-`65535`\n"
                },
                "messageDigestKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceOspfMessageDigestKey:InterfaceOspfMessageDigestKey"
                    },
                    "description": "Message digest authentication password (key)\n"
                },
                "mtuIgnore": {
                    "type": "boolean",
                    "description": "Ignores the MTU in DBD packets\n"
                },
                "name": {
                    "type": "string"
                },
                "networkTypeBroadcast": {
                    "type": "boolean",
                    "description": "Specify OSPF broadcast multi-access network\n"
                },
                "networkTypeNonBroadcast": {
                    "type": "boolean",
                    "description": "Specify OSPF NBMA network\n"
                },
                "networkTypePointToMultipoint": {
                    "type": "boolean",
                    "description": "Specify OSPF point-to-multipoint network\n"
                },
                "networkTypePointToPoint": {
                    "type": "boolean",
                    "description": "Specify OSPF point-to-point network\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Router priority - Range: `0`-`255`\n"
                },
                "processIds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceOspfProcessId:InterfaceOspfProcessId"
                    }
                },
                "ttlSecurityHops": {
                    "type": "integer",
                    "description": "IP hops - Range: `1`-`254`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "cost": {
                    "type": "integer",
                    "description": "Route cost of this interface - Range: `1`-`65535`\n"
                },
                "deadInterval": {
                    "type": "integer",
                    "description": "Interval after which a neighbor is declared dead - Range: `1`-`65535`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helloInterval": {
                    "type": "integer",
                    "description": "Time between HELLO packets - Range: `1`-`65535`\n"
                },
                "messageDigestKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceOspfMessageDigestKey:InterfaceOspfMessageDigestKey"
                    },
                    "description": "Message digest authentication password (key)\n"
                },
                "mtuIgnore": {
                    "type": "boolean",
                    "description": "Ignores the MTU in DBD packets\n"
                },
                "name": {
                    "type": "string"
                },
                "networkTypeBroadcast": {
                    "type": "boolean",
                    "description": "Specify OSPF broadcast multi-access network\n"
                },
                "networkTypeNonBroadcast": {
                    "type": "boolean",
                    "description": "Specify OSPF NBMA network\n"
                },
                "networkTypePointToMultipoint": {
                    "type": "boolean",
                    "description": "Specify OSPF point-to-multipoint network\n"
                },
                "networkTypePointToPoint": {
                    "type": "boolean",
                    "description": "Specify OSPF point-to-point network\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Router priority - Range: `0`-`255`\n"
                },
                "processIds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceOspfProcessId:InterfaceOspfProcessId"
                    }
                },
                "ttlSecurityHops": {
                    "type": "integer",
                    "description": "IP hops - Range: `1`-`254`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceOspf resources.\n",
                "properties": {
                    "cost": {
                        "type": "integer",
                        "description": "Route cost of this interface - Range: `1`-`65535`\n"
                    },
                    "deadInterval": {
                        "type": "integer",
                        "description": "Interval after which a neighbor is declared dead - Range: `1`-`65535`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helloInterval": {
                        "type": "integer",
                        "description": "Time between HELLO packets - Range: `1`-`65535`\n"
                    },
                    "messageDigestKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfaceOspfMessageDigestKey:InterfaceOspfMessageDigestKey"
                        },
                        "description": "Message digest authentication password (key)\n"
                    },
                    "mtuIgnore": {
                        "type": "boolean",
                        "description": "Ignores the MTU in DBD packets\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkTypeBroadcast": {
                        "type": "boolean",
                        "description": "Specify OSPF broadcast multi-access network\n"
                    },
                    "networkTypeNonBroadcast": {
                        "type": "boolean",
                        "description": "Specify OSPF NBMA network\n"
                    },
                    "networkTypePointToMultipoint": {
                        "type": "boolean",
                        "description": "Specify OSPF point-to-multipoint network\n"
                    },
                    "networkTypePointToPoint": {
                        "type": "boolean",
                        "description": "Specify OSPF point-to-point network\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Router priority - Range: `0`-`255`\n"
                    },
                    "processIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfaceOspfProcessId:InterfaceOspfProcessId"
                        }
                    },
                    "ttlSecurityHops": {
                        "type": "integer",
                        "description": "IP hops - Range: `1`-`254`\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/interfaceOspfv3:InterfaceOspfv3": {
            "properties": {
                "cost": {
                    "type": "integer",
                    "description": "Static route cost value of the interface - Range: `1`-`65535`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "networkTypeBroadcast": {
                    "type": "boolean",
                    "description": "Specify OSPF broadcast multi-access network\n"
                },
                "networkTypeNonBroadcast": {
                    "type": "boolean",
                    "description": "Specify OSPF NBMA network\n"
                },
                "networkTypePointToMultipoint": {
                    "type": "boolean",
                    "description": "Specify OSPF point-to-multipoint network\n"
                },
                "networkTypePointToPoint": {
                    "type": "boolean",
                    "description": "Specify OSPF point-to-point network\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "cost": {
                    "type": "integer",
                    "description": "Static route cost value of the interface - Range: `1`-`65535`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "networkTypeBroadcast": {
                    "type": "boolean",
                    "description": "Specify OSPF broadcast multi-access network\n"
                },
                "networkTypeNonBroadcast": {
                    "type": "boolean",
                    "description": "Specify OSPF NBMA network\n"
                },
                "networkTypePointToMultipoint": {
                    "type": "boolean",
                    "description": "Specify OSPF point-to-multipoint network\n"
                },
                "networkTypePointToPoint": {
                    "type": "boolean",
                    "description": "Specify OSPF point-to-point network\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceOspfv3 resources.\n",
                "properties": {
                    "cost": {
                        "type": "integer",
                        "description": "Static route cost value of the interface - Range: `1`-`65535`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkTypeBroadcast": {
                        "type": "boolean",
                        "description": "Specify OSPF broadcast multi-access network\n"
                    },
                    "networkTypeNonBroadcast": {
                        "type": "boolean",
                        "description": "Specify OSPF NBMA network\n"
                    },
                    "networkTypePointToMultipoint": {
                        "type": "boolean",
                        "description": "Specify OSPF point-to-multipoint network\n"
                    },
                    "networkTypePointToPoint": {
                        "type": "boolean",
                        "description": "Specify OSPF point-to-point network\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/interfacePim:InterfacePim": {
            "properties": {
                "bfd": {
                    "type": "boolean",
                    "description": "Configure BFD\n"
                },
                "border": {
                    "type": "boolean",
                    "description": "Border of PIM domain\n"
                },
                "bsrBorder": {
                    "type": "boolean",
                    "description": "Border of PIM domain\n"
                },
                "denseMode": {
                    "type": "boolean",
                    "description": "Enable PIM dense-mode operation\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "drPriority": {
                    "type": "integer",
                    "description": "PIM router DR priority - Range: `0`-`4294967295`\n"
                },
                "name": {
                    "type": "string"
                },
                "passive": {
                    "type": "boolean",
                    "description": "Enable PIM passive interface operation\n"
                },
                "sparseDenseMode": {
                    "type": "boolean",
                    "description": "Enable PIM sparse-dense-mode operation\n"
                },
                "sparseMode": {
                    "type": "boolean",
                    "description": "Enable PIM sparse-mode operation\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "bfd": {
                    "type": "boolean",
                    "description": "Configure BFD\n"
                },
                "border": {
                    "type": "boolean",
                    "description": "Border of PIM domain\n"
                },
                "bsrBorder": {
                    "type": "boolean",
                    "description": "Border of PIM domain\n"
                },
                "denseMode": {
                    "type": "boolean",
                    "description": "Enable PIM dense-mode operation\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "drPriority": {
                    "type": "integer",
                    "description": "PIM router DR priority - Range: `0`-`4294967295`\n"
                },
                "name": {
                    "type": "string"
                },
                "passive": {
                    "type": "boolean",
                    "description": "Enable PIM passive interface operation\n"
                },
                "sparseDenseMode": {
                    "type": "boolean",
                    "description": "Enable PIM sparse-dense-mode operation\n"
                },
                "sparseMode": {
                    "type": "boolean",
                    "description": "Enable PIM sparse-mode operation\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfacePim resources.\n",
                "properties": {
                    "bfd": {
                        "type": "boolean",
                        "description": "Configure BFD\n"
                    },
                    "border": {
                        "type": "boolean",
                        "description": "Border of PIM domain\n"
                    },
                    "bsrBorder": {
                        "type": "boolean",
                        "description": "Border of PIM domain\n"
                    },
                    "denseMode": {
                        "type": "boolean",
                        "description": "Enable PIM dense-mode operation\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "drPriority": {
                        "type": "integer",
                        "description": "PIM router DR priority - Range: `0`-`4294967295`\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "passive": {
                        "type": "boolean",
                        "description": "Enable PIM passive interface operation\n"
                    },
                    "sparseDenseMode": {
                        "type": "boolean",
                        "description": "Enable PIM sparse-dense-mode operation\n"
                    },
                    "sparseMode": {
                        "type": "boolean",
                        "description": "Enable PIM sparse-mode operation\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/interfacePortChannel:InterfacePortChannel": {
            "properties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "autoQosClassify": {
                    "type": "boolean",
                    "description": "Configure classification for untrusted devices\n"
                },
                "autoQosClassifyPolice": {
                    "type": "boolean",
                    "description": "Configure QoS policing for untrusted devices\n"
                },
                "autoQosTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "autoQosTrustCos": {
                    "type": "boolean",
                    "description": "Trust the CoS marking\n"
                },
                "autoQosTrustDscp": {
                    "type": "boolean",
                    "description": "Trust the DSCP marking\n"
                },
                "autoQosVideoCts": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                },
                "autoQosVideoIpCamera": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                },
                "autoQosVideoMediaPlayer": {
                    "type": "boolean",
                    "description": "Trust the Qos marking of the Cisco Media Player\n"
                },
                "autoQosVoip": {
                    "type": "boolean",
                    "description": "Configure AutoQoS for VoIP\n"
                },
                "autoQosVoipCiscoPhone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP Phone\n"
                },
                "autoQosVoipCiscoSoftphone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                },
                "autoQosVoipTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfacePortChannelHelperAddress:InterfacePortChannelHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipArpInspectionLimitRate": {
                    "type": "integer",
                    "description": "Rate Limit - Range: `0`-`4294967295`\n"
                },
                "ipArpInspectionTrust": {
                    "type": "boolean",
                    "description": "Configure Trust state\n"
                },
                "ipDhcpRelaySourceInterface": {
                    "type": "string",
                    "description": "Set source interface for relayed messages\n"
                },
                "ipDhcpSnoopingTrust": {
                    "type": "boolean",
                    "description": "DHCP Snooping trust config\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfacePortChannelIpv6Address:InterfacePortChannelIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfacePortChannelIpv6LinkLocalAddress:InterfacePortChannelIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `1`-`512`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "spanningTreeGuard": {
                    "type": "string",
                    "description": "Change an interface's spanning tree guard mode - Choices: `loop`, `none`, `root`\n"
                },
                "spanningTreeLinkType": {
                    "type": "string",
                    "description": "Specify a link type for spanning tree tree protocol use - Choices: `point-to-point`, `shared`\n"
                },
                "switchport": {
                    "type": "boolean"
                },
                "trustDevice": {
                    "type": "string",
                    "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "autoQosClassify": {
                    "type": "boolean",
                    "description": "Configure classification for untrusted devices\n"
                },
                "autoQosClassifyPolice": {
                    "type": "boolean",
                    "description": "Configure QoS policing for untrusted devices\n"
                },
                "autoQosTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "autoQosTrustCos": {
                    "type": "boolean",
                    "description": "Trust the CoS marking\n"
                },
                "autoQosTrustDscp": {
                    "type": "boolean",
                    "description": "Trust the DSCP marking\n"
                },
                "autoQosVideoCts": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                },
                "autoQosVideoIpCamera": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                },
                "autoQosVideoMediaPlayer": {
                    "type": "boolean",
                    "description": "Trust the Qos marking of the Cisco Media Player\n"
                },
                "autoQosVoip": {
                    "type": "boolean",
                    "description": "Configure AutoQoS for VoIP\n"
                },
                "autoQosVoipCiscoPhone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP Phone\n"
                },
                "autoQosVoipCiscoSoftphone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                },
                "autoQosVoipTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfacePortChannelHelperAddress:InterfacePortChannelHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipArpInspectionLimitRate": {
                    "type": "integer",
                    "description": "Rate Limit - Range: `0`-`4294967295`\n"
                },
                "ipArpInspectionTrust": {
                    "type": "boolean",
                    "description": "Configure Trust state\n"
                },
                "ipDhcpRelaySourceInterface": {
                    "type": "string",
                    "description": "Set source interface for relayed messages\n"
                },
                "ipDhcpSnoopingTrust": {
                    "type": "boolean",
                    "description": "DHCP Snooping trust config\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfacePortChannelIpv6Address:InterfacePortChannelIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfacePortChannelIpv6LinkLocalAddress:InterfacePortChannelIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `1`-`512`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "spanningTreeGuard": {
                    "type": "string",
                    "description": "Change an interface's spanning tree guard mode - Choices: `loop`, `none`, `root`\n"
                },
                "spanningTreeLinkType": {
                    "type": "string",
                    "description": "Specify a link type for spanning tree tree protocol use - Choices: `point-to-point`, `shared`\n"
                },
                "switchport": {
                    "type": "boolean"
                },
                "trustDevice": {
                    "type": "string",
                    "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfacePortChannel resources.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer",
                        "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                    },
                    "autoQosClassify": {
                        "type": "boolean",
                        "description": "Configure classification for untrusted devices\n"
                    },
                    "autoQosClassifyPolice": {
                        "type": "boolean",
                        "description": "Configure QoS policing for untrusted devices\n"
                    },
                    "autoQosTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "autoQosTrustCos": {
                        "type": "boolean",
                        "description": "Trust the CoS marking\n"
                    },
                    "autoQosTrustDscp": {
                        "type": "boolean",
                        "description": "Trust the DSCP marking\n"
                    },
                    "autoQosVideoCts": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                    },
                    "autoQosVideoIpCamera": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                    },
                    "autoQosVideoMediaPlayer": {
                        "type": "boolean",
                        "description": "Trust the Qos marking of the Cisco Media Player\n"
                    },
                    "autoQosVoip": {
                        "type": "boolean",
                        "description": "Configure AutoQoS for VoIP\n"
                    },
                    "autoQosVoipCiscoPhone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP Phone\n"
                    },
                    "autoQosVoipCiscoSoftphone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                    },
                    "autoQosVoipTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "bfdEcho": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "bfdEnable": {
                        "type": "boolean",
                        "description": "Enable BFD under the interface\n"
                    },
                    "bfdInterval": {
                        "type": "integer",
                        "description": "- Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                    },
                    "bfdLocalAddress": {
                        "type": "string",
                        "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                    },
                    "bfdTemplate": {
                        "type": "string",
                        "description": "BFD template\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfacePortChannelHelperAddress:InterfacePortChannelHelperAddress"
                        },
                        "description": "Specify a destination address for UDP broadcasts\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipArpInspectionLimitRate": {
                        "type": "integer",
                        "description": "Rate Limit - Range: `0`-`4294967295`\n"
                    },
                    "ipArpInspectionTrust": {
                        "type": "boolean",
                        "description": "Configure Trust state\n"
                    },
                    "ipDhcpRelaySourceInterface": {
                        "type": "string",
                        "description": "Set source interface for relayed messages\n"
                    },
                    "ipDhcpSnoopingTrust": {
                        "type": "boolean",
                        "description": "DHCP Snooping trust config\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfacePortChannelIpv6Address:InterfacePortChannelIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfacePortChannelIpv6LinkLocalAddress:InterfacePortChannelIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "name": {
                        "type": "integer",
                        "description": "- Range: `1`-`512`\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "spanningTreeGuard": {
                        "type": "string",
                        "description": "Change an interface's spanning tree guard mode - Choices: `loop`, `none`, `root`\n"
                    },
                    "spanningTreeLinkType": {
                        "type": "string",
                        "description": "Specify a link type for spanning tree tree protocol use - Choices: `point-to-point`, `shared`\n"
                    },
                    "switchport": {
                        "type": "boolean"
                    },
                    "trustDevice": {
                        "type": "string",
                        "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/interfacePortChannelSubinterface:InterfacePortChannelSubinterface": {
            "properties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "autoQosClassify": {
                    "type": "boolean",
                    "description": "Configure classification for untrusted devices\n"
                },
                "autoQosClassifyPolice": {
                    "type": "boolean",
                    "description": "Configure QoS policing for untrusted devices\n"
                },
                "autoQosTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "autoQosTrustCos": {
                    "type": "boolean",
                    "description": "Trust the CoS marking\n"
                },
                "autoQosTrustDscp": {
                    "type": "boolean",
                    "description": "Trust the DSCP marking\n"
                },
                "autoQosVideoCts": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                },
                "autoQosVideoIpCamera": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                },
                "autoQosVideoMediaPlayer": {
                    "type": "boolean",
                    "description": "Trust the Qos marking of the Cisco Media Player\n"
                },
                "autoQosVoip": {
                    "type": "boolean",
                    "description": "Configure AutoQoS for VoIP\n"
                },
                "autoQosVoipCiscoPhone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP Phone\n"
                },
                "autoQosVoipCiscoSoftphone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                },
                "autoQosVoipTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encapsulationDot1qVlanId": {
                    "type": "integer",
                    "description": "- Range: `1`-`4094`\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfacePortChannelSubinterfaceHelperAddress:InterfacePortChannelSubinterfaceHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipArpInspectionLimitRate": {
                    "type": "integer",
                    "description": "Rate Limit - Range: `0`-`4294967295`\n"
                },
                "ipArpInspectionTrust": {
                    "type": "boolean",
                    "description": "Configure Trust state\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfacePortChannelSubinterfaceIpv6Address:InterfacePortChannelSubinterfaceIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfacePortChannelSubinterfaceIpv6LinkLocalAddress:InterfacePortChannelSubinterfaceIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "string"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "trustDevice": {
                    "type": "string",
                    "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "autoQosClassify": {
                    "type": "boolean",
                    "description": "Configure classification for untrusted devices\n"
                },
                "autoQosClassifyPolice": {
                    "type": "boolean",
                    "description": "Configure QoS policing for untrusted devices\n"
                },
                "autoQosTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "autoQosTrustCos": {
                    "type": "boolean",
                    "description": "Trust the CoS marking\n"
                },
                "autoQosTrustDscp": {
                    "type": "boolean",
                    "description": "Trust the DSCP marking\n"
                },
                "autoQosVideoCts": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                },
                "autoQosVideoIpCamera": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                },
                "autoQosVideoMediaPlayer": {
                    "type": "boolean",
                    "description": "Trust the Qos marking of the Cisco Media Player\n"
                },
                "autoQosVoip": {
                    "type": "boolean",
                    "description": "Configure AutoQoS for VoIP\n"
                },
                "autoQosVoipCiscoPhone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP Phone\n"
                },
                "autoQosVoipCiscoSoftphone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                },
                "autoQosVoipTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encapsulationDot1qVlanId": {
                    "type": "integer",
                    "description": "- Range: `1`-`4094`\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfacePortChannelSubinterfaceHelperAddress:InterfacePortChannelSubinterfaceHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipArpInspectionLimitRate": {
                    "type": "integer",
                    "description": "Rate Limit - Range: `0`-`4294967295`\n"
                },
                "ipArpInspectionTrust": {
                    "type": "boolean",
                    "description": "Configure Trust state\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfacePortChannelSubinterfaceIpv6Address:InterfacePortChannelSubinterfaceIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfacePortChannelSubinterfaceIpv6LinkLocalAddress:InterfacePortChannelSubinterfaceIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "string"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "trustDevice": {
                    "type": "string",
                    "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfacePortChannelSubinterface resources.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer",
                        "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                    },
                    "autoQosClassify": {
                        "type": "boolean",
                        "description": "Configure classification for untrusted devices\n"
                    },
                    "autoQosClassifyPolice": {
                        "type": "boolean",
                        "description": "Configure QoS policing for untrusted devices\n"
                    },
                    "autoQosTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "autoQosTrustCos": {
                        "type": "boolean",
                        "description": "Trust the CoS marking\n"
                    },
                    "autoQosTrustDscp": {
                        "type": "boolean",
                        "description": "Trust the DSCP marking\n"
                    },
                    "autoQosVideoCts": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                    },
                    "autoQosVideoIpCamera": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                    },
                    "autoQosVideoMediaPlayer": {
                        "type": "boolean",
                        "description": "Trust the Qos marking of the Cisco Media Player\n"
                    },
                    "autoQosVoip": {
                        "type": "boolean",
                        "description": "Configure AutoQoS for VoIP\n"
                    },
                    "autoQosVoipCiscoPhone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP Phone\n"
                    },
                    "autoQosVoipCiscoSoftphone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                    },
                    "autoQosVoipTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "bfdEcho": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "bfdEnable": {
                        "type": "boolean",
                        "description": "Enable BFD under the interface\n"
                    },
                    "bfdInterval": {
                        "type": "integer",
                        "description": "- Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                    },
                    "bfdLocalAddress": {
                        "type": "string",
                        "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                    },
                    "bfdTemplate": {
                        "type": "string",
                        "description": "BFD template\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encapsulationDot1qVlanId": {
                        "type": "integer",
                        "description": "- Range: `1`-`4094`\n"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfacePortChannelSubinterfaceHelperAddress:InterfacePortChannelSubinterfaceHelperAddress"
                        },
                        "description": "Specify a destination address for UDP broadcasts\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipArpInspectionLimitRate": {
                        "type": "integer",
                        "description": "Rate Limit - Range: `0`-`4294967295`\n"
                    },
                    "ipArpInspectionTrust": {
                        "type": "boolean",
                        "description": "Configure Trust state\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfacePortChannelSubinterfaceIpv6Address:InterfacePortChannelSubinterfaceIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfacePortChannelSubinterfaceIpv6LinkLocalAddress:InterfacePortChannelSubinterfaceIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "trustDevice": {
                        "type": "string",
                        "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/interfaceSwitchport:InterfaceSwitchport": {
            "properties": {
                "accessVlan": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "host": {
                    "type": "boolean",
                    "description": "Set port host\n"
                },
                "modeAccess": {
                    "type": "boolean",
                    "description": "Set trunking mode to ACCESS unconditionally\n"
                },
                "modeDot1qTunnel": {
                    "type": "boolean",
                    "description": "set trunking mode to TUNNEL unconditionally\n"
                },
                "modePrivateVlanHost": {
                    "type": "boolean",
                    "description": "Set the mode to private-vlan host\n"
                },
                "modePrivateVlanPromiscuous": {
                    "type": "boolean",
                    "description": "Set the mode to private-vlan promiscuous\n"
                },
                "modePrivateVlanTrunk": {
                    "type": "boolean",
                    "description": "Set the mode to private-vlan trunk\n"
                },
                "modeTrunk": {
                    "type": "boolean",
                    "description": "Set trunking mode to TRUNK unconditionally\n"
                },
                "name": {
                    "type": "string"
                },
                "nonegotiate": {
                    "type": "boolean",
                    "description": "Device will not engage in negotiation protocol on this interface\n"
                },
                "trunkAllowedVlans": {
                    "type": "string"
                },
                "trunkAllowedVlansNone": {
                    "type": "boolean",
                    "description": "no VLANs\n"
                },
                "trunkNativeVlan": {
                    "type": "integer",
                    "description": "- Range: `1`-`4094`\n"
                },
                "trunkNativeVlanTag": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Port-channel`\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "accessVlan": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "host": {
                    "type": "boolean",
                    "description": "Set port host\n"
                },
                "modeAccess": {
                    "type": "boolean",
                    "description": "Set trunking mode to ACCESS unconditionally\n"
                },
                "modeDot1qTunnel": {
                    "type": "boolean",
                    "description": "set trunking mode to TUNNEL unconditionally\n"
                },
                "modePrivateVlanHost": {
                    "type": "boolean",
                    "description": "Set the mode to private-vlan host\n"
                },
                "modePrivateVlanPromiscuous": {
                    "type": "boolean",
                    "description": "Set the mode to private-vlan promiscuous\n"
                },
                "modePrivateVlanTrunk": {
                    "type": "boolean",
                    "description": "Set the mode to private-vlan trunk\n"
                },
                "modeTrunk": {
                    "type": "boolean",
                    "description": "Set trunking mode to TRUNK unconditionally\n"
                },
                "name": {
                    "type": "string"
                },
                "nonegotiate": {
                    "type": "boolean",
                    "description": "Device will not engage in negotiation protocol on this interface\n"
                },
                "trunkAllowedVlans": {
                    "type": "string"
                },
                "trunkAllowedVlansNone": {
                    "type": "boolean",
                    "description": "no VLANs\n"
                },
                "trunkNativeVlan": {
                    "type": "integer",
                    "description": "- Range: `1`-`4094`\n"
                },
                "trunkNativeVlanTag": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Port-channel`\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceSwitchport resources.\n",
                "properties": {
                    "accessVlan": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "host": {
                        "type": "boolean",
                        "description": "Set port host\n"
                    },
                    "modeAccess": {
                        "type": "boolean",
                        "description": "Set trunking mode to ACCESS unconditionally\n"
                    },
                    "modeDot1qTunnel": {
                        "type": "boolean",
                        "description": "set trunking mode to TUNNEL unconditionally\n"
                    },
                    "modePrivateVlanHost": {
                        "type": "boolean",
                        "description": "Set the mode to private-vlan host\n"
                    },
                    "modePrivateVlanPromiscuous": {
                        "type": "boolean",
                        "description": "Set the mode to private-vlan promiscuous\n"
                    },
                    "modePrivateVlanTrunk": {
                        "type": "boolean",
                        "description": "Set the mode to private-vlan trunk\n"
                    },
                    "modeTrunk": {
                        "type": "boolean",
                        "description": "Set trunking mode to TRUNK unconditionally\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nonegotiate": {
                        "type": "boolean",
                        "description": "Device will not engage in negotiation protocol on this interface\n"
                    },
                    "trunkAllowedVlans": {
                        "type": "string"
                    },
                    "trunkAllowedVlansNone": {
                        "type": "boolean",
                        "description": "no VLANs\n"
                    },
                    "trunkNativeVlan": {
                        "type": "integer",
                        "description": "- Range: `1`-`4094`\n"
                    },
                    "trunkNativeVlanTag": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Port-channel`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/interfaceTunnel:InterfaceTunnel": {
            "properties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "cryptoIpsecDfBit": {
                    "type": "string",
                    "description": "Handling of encapsulated DF bit. - Choices: `clear`, `copy`, `set`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceTunnelHelperAddress:InterfaceTunnelHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipDhcpRelaySourceInterface": {
                    "type": "string",
                    "description": "Set source interface for relayed messages\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceTunnelIpv6Address:InterfaceTunnelIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceTunnelIpv6LinkLocalAddress:InterfaceTunnelIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `0`-`4294967295`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "tunnelDestinationIpv4": {
                    "type": "string",
                    "description": "ip address or host name\n"
                },
                "tunnelModeIpsecIpv4": {
                    "type": "boolean",
                    "description": "over IPv4\n"
                },
                "tunnelProtectionIpsecProfile": {
                    "type": "string",
                    "description": "Determine the ipsec policy profile to use.\n"
                },
                "tunnelSource": {
                    "type": "string",
                    "description": "source of tunnel packets\n"
                },
                "unnumbered": {
                    "type": "string",
                    "description": "Enable IP processing without an explicit address\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "cryptoIpsecDfBit": {
                    "type": "string",
                    "description": "Handling of encapsulated DF bit. - Choices: `clear`, `copy`, `set`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceTunnelHelperAddress:InterfaceTunnelHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipDhcpRelaySourceInterface": {
                    "type": "string",
                    "description": "Set source interface for relayed messages\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceTunnelIpv6Address:InterfaceTunnelIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceTunnelIpv6LinkLocalAddress:InterfaceTunnelIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `0`-`4294967295`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "tunnelDestinationIpv4": {
                    "type": "string",
                    "description": "ip address or host name\n"
                },
                "tunnelModeIpsecIpv4": {
                    "type": "boolean",
                    "description": "over IPv4\n"
                },
                "tunnelProtectionIpsecProfile": {
                    "type": "string",
                    "description": "Determine the ipsec policy profile to use.\n"
                },
                "tunnelSource": {
                    "type": "string",
                    "description": "source of tunnel packets\n"
                },
                "unnumbered": {
                    "type": "string",
                    "description": "Enable IP processing without an explicit address\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceTunnel resources.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer",
                        "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                    },
                    "bfdEcho": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "bfdEnable": {
                        "type": "boolean",
                        "description": "Enable BFD under the interface\n"
                    },
                    "bfdInterval": {
                        "type": "integer",
                        "description": "- Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                    },
                    "bfdLocalAddress": {
                        "type": "string",
                        "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                    },
                    "bfdTemplate": {
                        "type": "string",
                        "description": "BFD template\n"
                    },
                    "cryptoIpsecDfBit": {
                        "type": "string",
                        "description": "Handling of encapsulated DF bit. - Choices: `clear`, `copy`, `set`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfaceTunnelHelperAddress:InterfaceTunnelHelperAddress"
                        },
                        "description": "Specify a destination address for UDP broadcasts\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipDhcpRelaySourceInterface": {
                        "type": "string",
                        "description": "Set source interface for relayed messages\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfaceTunnelIpv6Address:InterfaceTunnelIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfaceTunnelIpv6LinkLocalAddress:InterfaceTunnelIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "name": {
                        "type": "integer",
                        "description": "- Range: `0`-`4294967295`\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "tunnelDestinationIpv4": {
                        "type": "string",
                        "description": "ip address or host name\n"
                    },
                    "tunnelModeIpsecIpv4": {
                        "type": "boolean",
                        "description": "over IPv4\n"
                    },
                    "tunnelProtectionIpsecProfile": {
                        "type": "string",
                        "description": "Determine the ipsec policy profile to use.\n"
                    },
                    "tunnelSource": {
                        "type": "string",
                        "description": "source of tunnel packets\n"
                    },
                    "unnumbered": {
                        "type": "string",
                        "description": "Enable IP processing without an explicit address\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/interfaceVlan:InterfaceVlan": {
            "properties": {
                "autostate": {
                    "type": "boolean",
                    "description": "Enable auto-state determination for VLAN\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceVlanHelperAddress:InterfaceVlanHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipDhcpRelaySourceInterface": {
                    "type": "string",
                    "description": "Set source interface for relayed messages\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceVlanIpv6Address:InterfaceVlanIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceVlanIpv6LinkLocalAddress:InterfaceVlanIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `1`-`4094`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "unnumbered": {
                    "type": "string",
                    "description": "Enable IP processing without an explicit address\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "autostate": {
                    "type": "boolean",
                    "description": "Enable auto-state determination for VLAN\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceVlanHelperAddress:InterfaceVlanHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipDhcpRelaySourceInterface": {
                    "type": "string",
                    "description": "Set source interface for relayed messages\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceVlanIpv6Address:InterfaceVlanIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/InterfaceVlanIpv6LinkLocalAddress:InterfaceVlanIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `1`-`4094`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "unnumbered": {
                    "type": "string",
                    "description": "Enable IP processing without an explicit address\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceVlan resources.\n",
                "properties": {
                    "autostate": {
                        "type": "boolean",
                        "description": "Enable auto-state determination for VLAN\n"
                    },
                    "bfdEcho": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "bfdEnable": {
                        "type": "boolean",
                        "description": "Enable BFD under the interface\n"
                    },
                    "bfdInterval": {
                        "type": "integer",
                        "description": "- Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                    },
                    "bfdLocalAddress": {
                        "type": "string",
                        "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                    },
                    "bfdTemplate": {
                        "type": "string",
                        "description": "BFD template\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfaceVlanHelperAddress:InterfaceVlanHelperAddress"
                        },
                        "description": "Specify a destination address for UDP broadcasts\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipDhcpRelaySourceInterface": {
                        "type": "string",
                        "description": "Set source interface for relayed messages\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfaceVlanIpv6Address:InterfaceVlanIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/InterfaceVlanIpv6LinkLocalAddress:InterfaceVlanIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "name": {
                        "type": "integer",
                        "description": "- Range: `1`-`4094`\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "unnumbered": {
                        "type": "string",
                        "description": "Enable IP processing without an explicit address\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/line:Line": {
            "properties": {
                "consoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LineConsole:LineConsole"
                    },
                    "description": "Primary terminal line\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LineVty:LineVty"
                    },
                    "description": "Virtual terminal\n"
                }
            },
            "inputProperties": {
                "consoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LineConsole:LineConsole"
                    },
                    "description": "Primary terminal line\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LineVty:LineVty"
                    },
                    "description": "Virtual terminal\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Line resources.\n",
                "properties": {
                    "consoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LineConsole:LineConsole"
                        },
                        "description": "Primary terminal line\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LineVty:LineVty"
                        },
                        "description": "Virtual terminal\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/logging:Logging": {
            "properties": {
                "bufferedSeverity": {
                    "type": "string",
                    "description": "Logging severity level\n"
                },
                "bufferedSize": {
                    "type": "integer",
                    "description": "Logging buffer size - Range: `4096`-`2147483647`\n"
                },
                "consoleSeverity": {
                    "type": "string"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "facility": {
                    "type": "string",
                    "description": "Facility parameter for syslog messages - Choices: `auth`, `cron`, `daemon`, `kern`, `local0`, `local1`, `local2`,\n`local3`, `local4`, `local5`, `local6`, `local7`, `lpr`, `mail`, `news`, `sys10`, `sys11`, `sys12`, `sys13`, `sys14`,\n`sys9`, `syslog`, `user`, `uucp`\n"
                },
                "fileMaxSize": {
                    "type": "integer",
                    "description": "- Range: `0`-`4294967295`\n"
                },
                "fileMinSize": {
                    "type": "integer",
                    "description": "- Range: `0`-`4294967295`\n"
                },
                "fileName": {
                    "type": "string"
                },
                "fileSeverity": {
                    "type": "string"
                },
                "historySeverity": {
                    "type": "string"
                },
                "historySize": {
                    "type": "integer",
                    "description": "Set history table size - Range: `0`-`65535`\n"
                },
                "ipv4Hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv4Host:LoggingIpv4Host"
                    }
                },
                "ipv4VrfHosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv4VrfHost:LoggingIpv4VrfHost"
                    }
                },
                "ipv6Hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv6Host:LoggingIpv6Host"
                    }
                },
                "ipv6VrfHosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv6VrfHost:LoggingIpv6VrfHost"
                    }
                },
                "monitorSeverity": {
                    "type": "string"
                },
                "originIdName": {
                    "type": "string",
                    "description": "Define a unique text string as ID\n"
                },
                "originIdType": {
                    "type": "string",
                    "description": "Use origin hostname/ip/ipv6 as ID - Choices: `hostname`, `ip`, `ipv6`\n"
                },
                "sourceInterface": {
                    "type": "string"
                },
                "sourceInterfacesVrves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingSourceInterfacesVrf:LoggingSourceInterfacesVrf"
                    },
                    "description": "Specify interface and vrf for source address in logging transactions\n"
                },
                "trap": {
                    "type": "boolean",
                    "description": "Set trap server logging level\n"
                },
                "trapSeverity": {
                    "type": "string"
                }
            },
            "inputProperties": {
                "bufferedSeverity": {
                    "type": "string",
                    "description": "Logging severity level\n"
                },
                "bufferedSize": {
                    "type": "integer",
                    "description": "Logging buffer size - Range: `4096`-`2147483647`\n"
                },
                "consoleSeverity": {
                    "type": "string"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "facility": {
                    "type": "string",
                    "description": "Facility parameter for syslog messages - Choices: `auth`, `cron`, `daemon`, `kern`, `local0`, `local1`, `local2`,\n`local3`, `local4`, `local5`, `local6`, `local7`, `lpr`, `mail`, `news`, `sys10`, `sys11`, `sys12`, `sys13`, `sys14`,\n`sys9`, `syslog`, `user`, `uucp`\n"
                },
                "fileMaxSize": {
                    "type": "integer",
                    "description": "- Range: `0`-`4294967295`\n"
                },
                "fileMinSize": {
                    "type": "integer",
                    "description": "- Range: `0`-`4294967295`\n"
                },
                "fileName": {
                    "type": "string"
                },
                "fileSeverity": {
                    "type": "string"
                },
                "historySeverity": {
                    "type": "string"
                },
                "historySize": {
                    "type": "integer",
                    "description": "Set history table size - Range: `0`-`65535`\n"
                },
                "ipv4Hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv4Host:LoggingIpv4Host"
                    }
                },
                "ipv4VrfHosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv4VrfHost:LoggingIpv4VrfHost"
                    }
                },
                "ipv6Hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv6Host:LoggingIpv6Host"
                    }
                },
                "ipv6VrfHosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv6VrfHost:LoggingIpv6VrfHost"
                    }
                },
                "monitorSeverity": {
                    "type": "string"
                },
                "originIdName": {
                    "type": "string",
                    "description": "Define a unique text string as ID\n"
                },
                "originIdType": {
                    "type": "string",
                    "description": "Use origin hostname/ip/ipv6 as ID - Choices: `hostname`, `ip`, `ipv6`\n"
                },
                "sourceInterface": {
                    "type": "string"
                },
                "sourceInterfacesVrves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingSourceInterfacesVrf:LoggingSourceInterfacesVrf"
                    },
                    "description": "Specify interface and vrf for source address in logging transactions\n"
                },
                "trap": {
                    "type": "boolean",
                    "description": "Set trap server logging level\n"
                },
                "trapSeverity": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Logging resources.\n",
                "properties": {
                    "bufferedSeverity": {
                        "type": "string",
                        "description": "Logging severity level\n"
                    },
                    "bufferedSize": {
                        "type": "integer",
                        "description": "Logging buffer size - Range: `4096`-`2147483647`\n"
                    },
                    "consoleSeverity": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "facility": {
                        "type": "string",
                        "description": "Facility parameter for syslog messages - Choices: `auth`, `cron`, `daemon`, `kern`, `local0`, `local1`, `local2`,\n`local3`, `local4`, `local5`, `local6`, `local7`, `lpr`, `mail`, `news`, `sys10`, `sys11`, `sys12`, `sys13`, `sys14`,\n`sys9`, `syslog`, `user`, `uucp`\n"
                    },
                    "fileMaxSize": {
                        "type": "integer",
                        "description": "- Range: `0`-`4294967295`\n"
                    },
                    "fileMinSize": {
                        "type": "integer",
                        "description": "- Range: `0`-`4294967295`\n"
                    },
                    "fileName": {
                        "type": "string"
                    },
                    "fileSeverity": {
                        "type": "string"
                    },
                    "historySeverity": {
                        "type": "string"
                    },
                    "historySize": {
                        "type": "integer",
                        "description": "Set history table size - Range: `0`-`65535`\n"
                    },
                    "ipv4Hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingIpv4Host:LoggingIpv4Host"
                        }
                    },
                    "ipv4VrfHosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingIpv4VrfHost:LoggingIpv4VrfHost"
                        }
                    },
                    "ipv6Hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingIpv6Host:LoggingIpv6Host"
                        }
                    },
                    "ipv6VrfHosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingIpv6VrfHost:LoggingIpv6VrfHost"
                        }
                    },
                    "monitorSeverity": {
                        "type": "string"
                    },
                    "originIdName": {
                        "type": "string",
                        "description": "Define a unique text string as ID\n"
                    },
                    "originIdType": {
                        "type": "string",
                        "description": "Use origin hostname/ip/ipv6 as ID - Choices: `hostname`, `ip`, `ipv6`\n"
                    },
                    "sourceInterface": {
                        "type": "string"
                    },
                    "sourceInterfacesVrves": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingSourceInterfacesVrf:LoggingSourceInterfacesVrf"
                        },
                        "description": "Specify interface and vrf for source address in logging transactions\n"
                    },
                    "trap": {
                        "type": "boolean",
                        "description": "Set trap server logging level\n"
                    },
                    "trapSeverity": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/loggingIpv4HostTransport:LoggingIpv4HostTransport": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4Host": {
                    "type": "string"
                },
                "transportTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv4HostTransportTransportTcpPort:LoggingIpv4HostTransportTransportTcpPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportTlsPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv4HostTransportTransportTlsPort:LoggingIpv4HostTransportTransportTlsPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv4HostTransportTransportUdpPort:LoggingIpv4HostTransportTransportUdpPort"
                    },
                    "description": "Port Number List\n"
                }
            },
            "required": [
                "ipv4Host"
            ],
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4Host": {
                    "type": "string"
                },
                "transportTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv4HostTransportTransportTcpPort:LoggingIpv4HostTransportTransportTcpPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportTlsPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv4HostTransportTransportTlsPort:LoggingIpv4HostTransportTransportTlsPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv4HostTransportTransportUdpPort:LoggingIpv4HostTransportTransportUdpPort"
                    },
                    "description": "Port Number List\n"
                }
            },
            "requiredInputs": [
                "ipv4Host"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoggingIpv4HostTransport resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv4Host": {
                        "type": "string"
                    },
                    "transportTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingIpv4HostTransportTransportTcpPort:LoggingIpv4HostTransportTransportTcpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportTlsPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingIpv4HostTransportTransportTlsPort:LoggingIpv4HostTransportTransportTlsPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingIpv4HostTransportTransportUdpPort:LoggingIpv4HostTransportTransportUdpPort"
                        },
                        "description": "Port Number List\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/loggingIpv4HostVrfTransport:LoggingIpv4HostVrfTransport": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4Host": {
                    "type": "string"
                },
                "transportTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv4HostVrfTransportTransportTcpPort:LoggingIpv4HostVrfTransportTransportTcpPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportTlsPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv4HostVrfTransportTransportTlsPort:LoggingIpv4HostVrfTransportTransportTlsPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv4HostVrfTransportTransportUdpPort:LoggingIpv4HostVrfTransportTransportUdpPort"
                    },
                    "description": "Port Number List\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "Set VRF option\n"
                }
            },
            "required": [
                "ipv4Host",
                "vrf"
            ],
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4Host": {
                    "type": "string"
                },
                "transportTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv4HostVrfTransportTransportTcpPort:LoggingIpv4HostVrfTransportTransportTcpPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportTlsPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv4HostVrfTransportTransportTlsPort:LoggingIpv4HostVrfTransportTransportTlsPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv4HostVrfTransportTransportUdpPort:LoggingIpv4HostVrfTransportTransportUdpPort"
                    },
                    "description": "Port Number List\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "Set VRF option\n"
                }
            },
            "requiredInputs": [
                "ipv4Host",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoggingIpv4HostVrfTransport resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv4Host": {
                        "type": "string"
                    },
                    "transportTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingIpv4HostVrfTransportTransportTcpPort:LoggingIpv4HostVrfTransportTransportTcpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportTlsPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingIpv4HostVrfTransportTransportTlsPort:LoggingIpv4HostVrfTransportTransportTlsPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingIpv4HostVrfTransportTransportUdpPort:LoggingIpv4HostVrfTransportTransportUdpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "Set VRF option\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/loggingIpv6HostTransport:LoggingIpv6HostTransport": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv6Host": {
                    "type": "string"
                },
                "transportTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv6HostTransportTransportTcpPort:LoggingIpv6HostTransportTransportTcpPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportTlsPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv6HostTransportTransportTlsPort:LoggingIpv6HostTransportTransportTlsPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv6HostTransportTransportUdpPort:LoggingIpv6HostTransportTransportUdpPort"
                    },
                    "description": "Port Number List\n"
                }
            },
            "required": [
                "ipv6Host"
            ],
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv6Host": {
                    "type": "string"
                },
                "transportTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv6HostTransportTransportTcpPort:LoggingIpv6HostTransportTransportTcpPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportTlsPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv6HostTransportTransportTlsPort:LoggingIpv6HostTransportTransportTlsPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv6HostTransportTransportUdpPort:LoggingIpv6HostTransportTransportUdpPort"
                    },
                    "description": "Port Number List\n"
                }
            },
            "requiredInputs": [
                "ipv6Host"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoggingIpv6HostTransport resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv6Host": {
                        "type": "string"
                    },
                    "transportTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingIpv6HostTransportTransportTcpPort:LoggingIpv6HostTransportTransportTcpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportTlsPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingIpv6HostTransportTransportTlsPort:LoggingIpv6HostTransportTransportTlsPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingIpv6HostTransportTransportUdpPort:LoggingIpv6HostTransportTransportUdpPort"
                        },
                        "description": "Port Number List\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/loggingIpv6HostVrfTransport:LoggingIpv6HostVrfTransport": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv6Host": {
                    "type": "string"
                },
                "transportTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv6HostVrfTransportTransportTcpPort:LoggingIpv6HostVrfTransportTransportTcpPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportTlsPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv6HostVrfTransportTransportTlsPort:LoggingIpv6HostVrfTransportTransportTlsPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv6HostVrfTransportTransportUdpPort:LoggingIpv6HostVrfTransportTransportUdpPort"
                    },
                    "description": "Port Number List\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "Set VRF option\n"
                }
            },
            "required": [
                "ipv6Host",
                "vrf"
            ],
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv6Host": {
                    "type": "string"
                },
                "transportTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv6HostVrfTransportTransportTcpPort:LoggingIpv6HostVrfTransportTransportTcpPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportTlsPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv6HostVrfTransportTransportTlsPort:LoggingIpv6HostVrfTransportTransportTlsPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/LoggingIpv6HostVrfTransportTransportUdpPort:LoggingIpv6HostVrfTransportTransportUdpPort"
                    },
                    "description": "Port Number List\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "Set VRF option\n"
                }
            },
            "requiredInputs": [
                "ipv6Host",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoggingIpv6HostVrfTransport resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv6Host": {
                        "type": "string"
                    },
                    "transportTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingIpv6HostVrfTransportTransportTcpPort:LoggingIpv6HostVrfTransportTransportTcpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportTlsPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingIpv6HostVrfTransportTransportTlsPort:LoggingIpv6HostVrfTransportTransportTlsPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/LoggingIpv6HostVrfTransportTransportUdpPort:LoggingIpv6HostVrfTransportTransportUdpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "Set VRF option\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/mdtSubscription:MdtSubscription": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encoding": {
                    "type": "string",
                    "description": "Update notification encoding\n"
                },
                "filterXpath": {
                    "type": "string",
                    "description": "XPath expression describing the set of objects wanted as part of the subscription\n"
                },
                "receivers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/MdtSubscriptionReceiver:MdtSubscriptionReceiver"
                    },
                    "description": "Configuration of receivers of configured subscriptions. Use of this is deprecated. Use mdt-receiver-names instead.\n"
                },
                "sourceAddress": {
                    "type": "string",
                    "description": "The source address for the notifications\n"
                },
                "sourceVrf": {
                    "type": "string",
                    "description": "Network instance name for the VRF\n"
                },
                "stream": {
                    "type": "string",
                    "description": "The name of the event stream being subscribed to\n"
                },
                "subscriptionId": {
                    "type": "integer",
                    "description": "Unique subscription identifier. - Range: `0`-`2147483647`\n"
                },
                "updatePolicyOnChange": {
                    "type": "boolean",
                    "description": "If true, there is no initial update notification with the current value of all the data. NOT CURRENTLY SUPPORTED. If\nspecified, must be false\n"
                },
                "updatePolicyPeriodic": {
                    "type": "integer",
                    "description": "Period of update notifications in hundredths of a second - Range: `0`-`4294967295`\n"
                }
            },
            "required": [
                "subscriptionId"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encoding": {
                    "type": "string",
                    "description": "Update notification encoding\n"
                },
                "filterXpath": {
                    "type": "string",
                    "description": "XPath expression describing the set of objects wanted as part of the subscription\n"
                },
                "receivers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/MdtSubscriptionReceiver:MdtSubscriptionReceiver"
                    },
                    "description": "Configuration of receivers of configured subscriptions. Use of this is deprecated. Use mdt-receiver-names instead.\n"
                },
                "sourceAddress": {
                    "type": "string",
                    "description": "The source address for the notifications\n"
                },
                "sourceVrf": {
                    "type": "string",
                    "description": "Network instance name for the VRF\n"
                },
                "stream": {
                    "type": "string",
                    "description": "The name of the event stream being subscribed to\n"
                },
                "subscriptionId": {
                    "type": "integer",
                    "description": "Unique subscription identifier. - Range: `0`-`2147483647`\n"
                },
                "updatePolicyOnChange": {
                    "type": "boolean",
                    "description": "If true, there is no initial update notification with the current value of all the data. NOT CURRENTLY SUPPORTED. If\nspecified, must be false\n"
                },
                "updatePolicyPeriodic": {
                    "type": "integer",
                    "description": "Period of update notifications in hundredths of a second - Range: `0`-`4294967295`\n"
                }
            },
            "requiredInputs": [
                "subscriptionId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdtSubscription resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encoding": {
                        "type": "string",
                        "description": "Update notification encoding\n"
                    },
                    "filterXpath": {
                        "type": "string",
                        "description": "XPath expression describing the set of objects wanted as part of the subscription\n"
                    },
                    "receivers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/MdtSubscriptionReceiver:MdtSubscriptionReceiver"
                        },
                        "description": "Configuration of receivers of configured subscriptions. Use of this is deprecated. Use mdt-receiver-names instead.\n"
                    },
                    "sourceAddress": {
                        "type": "string",
                        "description": "The source address for the notifications\n"
                    },
                    "sourceVrf": {
                        "type": "string",
                        "description": "Network instance name for the VRF\n"
                    },
                    "stream": {
                        "type": "string",
                        "description": "The name of the event stream being subscribed to\n"
                    },
                    "subscriptionId": {
                        "type": "integer",
                        "description": "Unique subscription identifier. - Range: `0`-`2147483647`\n"
                    },
                    "updatePolicyOnChange": {
                        "type": "boolean",
                        "description": "If true, there is no initial update notification with the current value of all the data. NOT CURRENTLY SUPPORTED. If\nspecified, must be false\n"
                    },
                    "updatePolicyPeriodic": {
                        "type": "integer",
                        "description": "Period of update notifications in hundredths of a second - Range: `0`-`4294967295`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/msdp:Msdp": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "originatorId": {
                    "type": "string",
                    "description": "Configure MSDP Originator ID\n"
                },
                "passwords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/MsdpPassword:MsdpPassword"
                    },
                    "description": "MSDP peer on which the password is to be set\n"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/MsdpPeer:MsdpPeer"
                    },
                    "description": "Configure an MSDP peer\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "originatorId": {
                    "type": "string",
                    "description": "Configure MSDP Originator ID\n"
                },
                "passwords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/MsdpPassword:MsdpPassword"
                    },
                    "description": "MSDP peer on which the password is to be set\n"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/MsdpPeer:MsdpPeer"
                    },
                    "description": "Configure an MSDP peer\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Msdp resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "originatorId": {
                        "type": "string",
                        "description": "Configure MSDP Originator ID\n"
                    },
                    "passwords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/MsdpPassword:MsdpPassword"
                        },
                        "description": "MSDP peer on which the password is to be set\n"
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/MsdpPeer:MsdpPeer"
                        },
                        "description": "Configure an MSDP peer\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/msdpVrf:MsdpVrf": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "originatorId": {
                    "type": "string",
                    "description": "Configure MSDP Originator ID\n"
                },
                "passwords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/MsdpVrfPassword:MsdpVrfPassword"
                    },
                    "description": "MSDP peer on which the password is to be set\n"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/MsdpVrfPeer:MsdpVrfPeer"
                    },
                    "description": "Configure an MSDP peer\n"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "required": [
                "vrf"
            ],
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "originatorId": {
                    "type": "string",
                    "description": "Configure MSDP Originator ID\n"
                },
                "passwords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/MsdpVrfPassword:MsdpVrfPassword"
                    },
                    "description": "MSDP peer on which the password is to be set\n"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/MsdpVrfPeer:MsdpVrfPeer"
                    },
                    "description": "Configure an MSDP peer\n"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MsdpVrf resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "originatorId": {
                        "type": "string",
                        "description": "Configure MSDP Originator ID\n"
                    },
                    "passwords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/MsdpVrfPassword:MsdpVrfPassword"
                        },
                        "description": "MSDP peer on which the password is to be set\n"
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/MsdpVrfPeer:MsdpVrfPeer"
                        },
                        "description": "Configure an MSDP peer\n"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ntp:Ntp": {
            "properties": {
                "accessGroupPeerAcl": {
                    "type": "string"
                },
                "accessGroupQueryOnlyAcl": {
                    "type": "string"
                },
                "accessGroupServeAcl": {
                    "type": "string"
                },
                "accessGroupServeOnlyAcl": {
                    "type": "string"
                },
                "authenticate": {
                    "type": "boolean",
                    "description": "Authenticate time sources\n"
                },
                "authenticationKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/NtpAuthenticationKey:NtpAuthenticationKey"
                    },
                    "description": "Authentication key for trusted time sources\n"
                },
                "clockPeriod": {
                    "type": "integer",
                    "description": "Length of hardware clock tick - Range: `0`-`4294967295`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "logging": {
                    "type": "boolean",
                    "description": "Enable NTP message logging\n"
                },
                "master": {
                    "type": "boolean",
                    "description": "Act as NTP master clock\n"
                },
                "masterStratum": {
                    "type": "integer",
                    "description": "- Range: `1`-`15`\n"
                },
                "passive": {
                    "type": "boolean",
                    "description": "NTP passive mode\n"
                },
                "peerVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/NtpPeerVrf:NtpPeerVrf"
                    },
                    "description": "VPN Routing/Forwarding Information\n"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/NtpPeer:NtpPeer"
                    }
                },
                "serverVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/NtpServerVrf:NtpServerVrf"
                    },
                    "description": "VPN Routing/Forwarding Information\n"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/NtpServer:NtpServer"
                    }
                },
                "trapSourceFortyGigabitEthernet": {
                    "type": "string",
                    "description": "Forty GigabitEthernet\n"
                },
                "trapSourceGigabitEthernet": {
                    "type": "string",
                    "description": "GigabitEthernet IEEE 802.3z\n"
                },
                "trapSourceHundredGigE": {
                    "type": "string",
                    "description": "Hundred GigabitEthernet\n"
                },
                "trapSourceLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "trapSourcePortChannel": {
                    "type": "integer",
                    "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                },
                "trapSourcePortChannelSubinterface": {
                    "type": "string"
                },
                "trapSourceTenGigabitEthernet": {
                    "type": "string",
                    "description": "Ten Gigabit Ethernet\n"
                },
                "trapSourceVlan": {
                    "type": "integer",
                    "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                },
                "updateCalendar": {
                    "type": "boolean",
                    "description": "Periodically update calendar with NTP time\n"
                }
            },
            "inputProperties": {
                "accessGroupPeerAcl": {
                    "type": "string"
                },
                "accessGroupQueryOnlyAcl": {
                    "type": "string"
                },
                "accessGroupServeAcl": {
                    "type": "string"
                },
                "accessGroupServeOnlyAcl": {
                    "type": "string"
                },
                "authenticate": {
                    "type": "boolean",
                    "description": "Authenticate time sources\n"
                },
                "authenticationKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/NtpAuthenticationKey:NtpAuthenticationKey"
                    },
                    "description": "Authentication key for trusted time sources\n"
                },
                "clockPeriod": {
                    "type": "integer",
                    "description": "Length of hardware clock tick - Range: `0`-`4294967295`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "logging": {
                    "type": "boolean",
                    "description": "Enable NTP message logging\n"
                },
                "master": {
                    "type": "boolean",
                    "description": "Act as NTP master clock\n"
                },
                "masterStratum": {
                    "type": "integer",
                    "description": "- Range: `1`-`15`\n"
                },
                "passive": {
                    "type": "boolean",
                    "description": "NTP passive mode\n"
                },
                "peerVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/NtpPeerVrf:NtpPeerVrf"
                    },
                    "description": "VPN Routing/Forwarding Information\n"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/NtpPeer:NtpPeer"
                    }
                },
                "serverVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/NtpServerVrf:NtpServerVrf"
                    },
                    "description": "VPN Routing/Forwarding Information\n"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/NtpServer:NtpServer"
                    }
                },
                "trapSourceFortyGigabitEthernet": {
                    "type": "string",
                    "description": "Forty GigabitEthernet\n"
                },
                "trapSourceGigabitEthernet": {
                    "type": "string",
                    "description": "GigabitEthernet IEEE 802.3z\n"
                },
                "trapSourceHundredGigE": {
                    "type": "string",
                    "description": "Hundred GigabitEthernet\n"
                },
                "trapSourceLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "trapSourcePortChannel": {
                    "type": "integer",
                    "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                },
                "trapSourcePortChannelSubinterface": {
                    "type": "string"
                },
                "trapSourceTenGigabitEthernet": {
                    "type": "string",
                    "description": "Ten Gigabit Ethernet\n"
                },
                "trapSourceVlan": {
                    "type": "integer",
                    "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                },
                "updateCalendar": {
                    "type": "boolean",
                    "description": "Periodically update calendar with NTP time\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ntp resources.\n",
                "properties": {
                    "accessGroupPeerAcl": {
                        "type": "string"
                    },
                    "accessGroupQueryOnlyAcl": {
                        "type": "string"
                    },
                    "accessGroupServeAcl": {
                        "type": "string"
                    },
                    "accessGroupServeOnlyAcl": {
                        "type": "string"
                    },
                    "authenticate": {
                        "type": "boolean",
                        "description": "Authenticate time sources\n"
                    },
                    "authenticationKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/NtpAuthenticationKey:NtpAuthenticationKey"
                        },
                        "description": "Authentication key for trusted time sources\n"
                    },
                    "clockPeriod": {
                        "type": "integer",
                        "description": "Length of hardware clock tick - Range: `0`-`4294967295`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "logging": {
                        "type": "boolean",
                        "description": "Enable NTP message logging\n"
                    },
                    "master": {
                        "type": "boolean",
                        "description": "Act as NTP master clock\n"
                    },
                    "masterStratum": {
                        "type": "integer",
                        "description": "- Range: `1`-`15`\n"
                    },
                    "passive": {
                        "type": "boolean",
                        "description": "NTP passive mode\n"
                    },
                    "peerVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/NtpPeerVrf:NtpPeerVrf"
                        },
                        "description": "VPN Routing/Forwarding Information\n"
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/NtpPeer:NtpPeer"
                        }
                    },
                    "serverVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/NtpServerVrf:NtpServerVrf"
                        },
                        "description": "VPN Routing/Forwarding Information\n"
                    },
                    "servers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/NtpServer:NtpServer"
                        }
                    },
                    "trapSourceFortyGigabitEthernet": {
                        "type": "string",
                        "description": "Forty GigabitEthernet\n"
                    },
                    "trapSourceGigabitEthernet": {
                        "type": "string",
                        "description": "GigabitEthernet IEEE 802.3z\n"
                    },
                    "trapSourceHundredGigE": {
                        "type": "string",
                        "description": "Hundred GigabitEthernet\n"
                    },
                    "trapSourceLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    },
                    "trapSourcePortChannel": {
                        "type": "integer",
                        "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                    },
                    "trapSourcePortChannelSubinterface": {
                        "type": "string"
                    },
                    "trapSourceTenGigabitEthernet": {
                        "type": "string",
                        "description": "Ten Gigabit Ethernet\n"
                    },
                    "trapSourceVlan": {
                        "type": "integer",
                        "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                    },
                    "updateCalendar": {
                        "type": "boolean",
                        "description": "Periodically update calendar with NTP time\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ospf:Ospf": {
            "properties": {
                "areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/OspfArea:OspfArea"
                    },
                    "description": "OSPF area parameters\n"
                },
                "bfdAllInterfaces": {
                    "type": "boolean",
                    "description": "Enable BFD on all interfaces\n"
                },
                "defaultInformationOriginate": {
                    "type": "boolean",
                    "description": "Distribute a default route\n"
                },
                "defaultInformationOriginateAlways": {
                    "type": "boolean",
                    "description": "Always advertise default route\n"
                },
                "defaultMetric": {
                    "type": "integer",
                    "description": "Set metric of redistributed routes - Range: `1`-`16777214`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "distance": {
                    "type": "integer",
                    "description": "Administrative distance - Range: `1`-`255`\n"
                },
                "domainTag": {
                    "type": "integer",
                    "description": "OSPF domain-tag - Range: `1`-`4294967295`\n"
                },
                "mplsLdpAutoconfig": {
                    "type": "boolean",
                    "description": "Configure LDP automatic configuration\n"
                },
                "mplsLdpSync": {
                    "type": "boolean",
                    "description": "Configure LDP-IGP Synchronization\n"
                },
                "neighbors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/OspfNeighbor:OspfNeighbor"
                    },
                    "description": "Specify a neighbor router\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/OspfNetwork:OspfNetwork"
                    },
                    "description": "Enable routing on an IP network\n"
                },
                "passiveInterfaceDefault": {
                    "type": "boolean",
                    "description": "Suppress routing updates on all interfaces\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "OSPF topology priority - Range: `0`-`127`\n"
                },
                "processId": {
                    "type": "integer",
                    "description": "Process ID - Range: `1`-`65535`\n"
                },
                "routerId": {
                    "type": "string",
                    "description": "Override configured router identifier (peers will reset)\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the OSPF protocol under the current instance\n"
                },
                "summaryAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/OspfSummaryAddress:OspfSummaryAddress"
                    },
                    "description": "Configure IP address summaries\n"
                }
            },
            "required": [
                "processId"
            ],
            "inputProperties": {
                "areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/OspfArea:OspfArea"
                    },
                    "description": "OSPF area parameters\n"
                },
                "bfdAllInterfaces": {
                    "type": "boolean",
                    "description": "Enable BFD on all interfaces\n"
                },
                "defaultInformationOriginate": {
                    "type": "boolean",
                    "description": "Distribute a default route\n"
                },
                "defaultInformationOriginateAlways": {
                    "type": "boolean",
                    "description": "Always advertise default route\n"
                },
                "defaultMetric": {
                    "type": "integer",
                    "description": "Set metric of redistributed routes - Range: `1`-`16777214`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "distance": {
                    "type": "integer",
                    "description": "Administrative distance - Range: `1`-`255`\n"
                },
                "domainTag": {
                    "type": "integer",
                    "description": "OSPF domain-tag - Range: `1`-`4294967295`\n"
                },
                "mplsLdpAutoconfig": {
                    "type": "boolean",
                    "description": "Configure LDP automatic configuration\n"
                },
                "mplsLdpSync": {
                    "type": "boolean",
                    "description": "Configure LDP-IGP Synchronization\n"
                },
                "neighbors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/OspfNeighbor:OspfNeighbor"
                    },
                    "description": "Specify a neighbor router\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/OspfNetwork:OspfNetwork"
                    },
                    "description": "Enable routing on an IP network\n"
                },
                "passiveInterfaceDefault": {
                    "type": "boolean",
                    "description": "Suppress routing updates on all interfaces\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "OSPF topology priority - Range: `0`-`127`\n"
                },
                "processId": {
                    "type": "integer",
                    "description": "Process ID - Range: `1`-`65535`\n"
                },
                "routerId": {
                    "type": "string",
                    "description": "Override configured router identifier (peers will reset)\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the OSPF protocol under the current instance\n"
                },
                "summaryAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/OspfSummaryAddress:OspfSummaryAddress"
                    },
                    "description": "Configure IP address summaries\n"
                }
            },
            "requiredInputs": [
                "processId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ospf resources.\n",
                "properties": {
                    "areas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/OspfArea:OspfArea"
                        },
                        "description": "OSPF area parameters\n"
                    },
                    "bfdAllInterfaces": {
                        "type": "boolean",
                        "description": "Enable BFD on all interfaces\n"
                    },
                    "defaultInformationOriginate": {
                        "type": "boolean",
                        "description": "Distribute a default route\n"
                    },
                    "defaultInformationOriginateAlways": {
                        "type": "boolean",
                        "description": "Always advertise default route\n"
                    },
                    "defaultMetric": {
                        "type": "integer",
                        "description": "Set metric of redistributed routes - Range: `1`-`16777214`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "distance": {
                        "type": "integer",
                        "description": "Administrative distance - Range: `1`-`255`\n"
                    },
                    "domainTag": {
                        "type": "integer",
                        "description": "OSPF domain-tag - Range: `1`-`4294967295`\n"
                    },
                    "mplsLdpAutoconfig": {
                        "type": "boolean",
                        "description": "Configure LDP automatic configuration\n"
                    },
                    "mplsLdpSync": {
                        "type": "boolean",
                        "description": "Configure LDP-IGP Synchronization\n"
                    },
                    "neighbors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/OspfNeighbor:OspfNeighbor"
                        },
                        "description": "Specify a neighbor router\n"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/OspfNetwork:OspfNetwork"
                        },
                        "description": "Enable routing on an IP network\n"
                    },
                    "passiveInterfaceDefault": {
                        "type": "boolean",
                        "description": "Suppress routing updates on all interfaces\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "OSPF topology priority - Range: `0`-`127`\n"
                    },
                    "processId": {
                        "type": "integer",
                        "description": "Process ID - Range: `1`-`65535`\n"
                    },
                    "routerId": {
                        "type": "string",
                        "description": "Override configured router identifier (peers will reset)\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the OSPF protocol under the current instance\n"
                    },
                    "summaryAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/OspfSummaryAddress:OspfSummaryAddress"
                        },
                        "description": "Configure IP address summaries\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/ospfVrf:OspfVrf": {
            "properties": {
                "areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/OspfVrfArea:OspfVrfArea"
                    },
                    "description": "OSPF area parameters\n"
                },
                "bfdAllInterfaces": {
                    "type": "boolean",
                    "description": "Enable BFD on all interfaces\n"
                },
                "defaultInformationOriginate": {
                    "type": "boolean",
                    "description": "Distribute a default route\n"
                },
                "defaultInformationOriginateAlways": {
                    "type": "boolean",
                    "description": "Always advertise default route\n"
                },
                "defaultMetric": {
                    "type": "integer",
                    "description": "Set metric of redistributed routes - Range: `1`-`16777214`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "distance": {
                    "type": "integer",
                    "description": "Administrative distance - Range: `1`-`255`\n"
                },
                "domainTag": {
                    "type": "integer",
                    "description": "OSPF domain-tag - Range: `1`-`4294967295`\n"
                },
                "mplsLdpAutoconfig": {
                    "type": "boolean",
                    "description": "Configure LDP automatic configuration\n"
                },
                "mplsLdpSync": {
                    "type": "boolean",
                    "description": "Configure LDP-IGP Synchronization\n"
                },
                "neighbors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/OspfVrfNeighbor:OspfVrfNeighbor"
                    },
                    "description": "Specify a neighbor router\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/OspfVrfNetwork:OspfVrfNetwork"
                    },
                    "description": "Enable routing on an IP network\n"
                },
                "passiveInterfaceDefault": {
                    "type": "boolean",
                    "description": "Suppress routing updates on all interfaces\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "OSPF topology priority - Range: `0`-`127`\n"
                },
                "processId": {
                    "type": "integer",
                    "description": "Process ID - Range: `1`-`65535`\n"
                },
                "routerId": {
                    "type": "string",
                    "description": "Override configured router identifier (peers will reset)\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the OSPF protocol under the current instance\n"
                },
                "summaryAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/OspfVrfSummaryAddress:OspfVrfSummaryAddress"
                    },
                    "description": "Configure IP address summaries\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VPN Routing/Forwarding Instance\n"
                }
            },
            "required": [
                "processId",
                "vrf"
            ],
            "inputProperties": {
                "areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/OspfVrfArea:OspfVrfArea"
                    },
                    "description": "OSPF area parameters\n"
                },
                "bfdAllInterfaces": {
                    "type": "boolean",
                    "description": "Enable BFD on all interfaces\n"
                },
                "defaultInformationOriginate": {
                    "type": "boolean",
                    "description": "Distribute a default route\n"
                },
                "defaultInformationOriginateAlways": {
                    "type": "boolean",
                    "description": "Always advertise default route\n"
                },
                "defaultMetric": {
                    "type": "integer",
                    "description": "Set metric of redistributed routes - Range: `1`-`16777214`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "distance": {
                    "type": "integer",
                    "description": "Administrative distance - Range: `1`-`255`\n"
                },
                "domainTag": {
                    "type": "integer",
                    "description": "OSPF domain-tag - Range: `1`-`4294967295`\n"
                },
                "mplsLdpAutoconfig": {
                    "type": "boolean",
                    "description": "Configure LDP automatic configuration\n"
                },
                "mplsLdpSync": {
                    "type": "boolean",
                    "description": "Configure LDP-IGP Synchronization\n"
                },
                "neighbors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/OspfVrfNeighbor:OspfVrfNeighbor"
                    },
                    "description": "Specify a neighbor router\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/OspfVrfNetwork:OspfVrfNetwork"
                    },
                    "description": "Enable routing on an IP network\n"
                },
                "passiveInterfaceDefault": {
                    "type": "boolean",
                    "description": "Suppress routing updates on all interfaces\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "OSPF topology priority - Range: `0`-`127`\n"
                },
                "processId": {
                    "type": "integer",
                    "description": "Process ID - Range: `1`-`65535`\n"
                },
                "routerId": {
                    "type": "string",
                    "description": "Override configured router identifier (peers will reset)\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the OSPF protocol under the current instance\n"
                },
                "summaryAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/OspfVrfSummaryAddress:OspfVrfSummaryAddress"
                    },
                    "description": "Configure IP address summaries\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VPN Routing/Forwarding Instance\n"
                }
            },
            "requiredInputs": [
                "processId",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OspfVrf resources.\n",
                "properties": {
                    "areas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/OspfVrfArea:OspfVrfArea"
                        },
                        "description": "OSPF area parameters\n"
                    },
                    "bfdAllInterfaces": {
                        "type": "boolean",
                        "description": "Enable BFD on all interfaces\n"
                    },
                    "defaultInformationOriginate": {
                        "type": "boolean",
                        "description": "Distribute a default route\n"
                    },
                    "defaultInformationOriginateAlways": {
                        "type": "boolean",
                        "description": "Always advertise default route\n"
                    },
                    "defaultMetric": {
                        "type": "integer",
                        "description": "Set metric of redistributed routes - Range: `1`-`16777214`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "distance": {
                        "type": "integer",
                        "description": "Administrative distance - Range: `1`-`255`\n"
                    },
                    "domainTag": {
                        "type": "integer",
                        "description": "OSPF domain-tag - Range: `1`-`4294967295`\n"
                    },
                    "mplsLdpAutoconfig": {
                        "type": "boolean",
                        "description": "Configure LDP automatic configuration\n"
                    },
                    "mplsLdpSync": {
                        "type": "boolean",
                        "description": "Configure LDP-IGP Synchronization\n"
                    },
                    "neighbors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/OspfVrfNeighbor:OspfVrfNeighbor"
                        },
                        "description": "Specify a neighbor router\n"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/OspfVrfNetwork:OspfVrfNetwork"
                        },
                        "description": "Enable routing on an IP network\n"
                    },
                    "passiveInterfaceDefault": {
                        "type": "boolean",
                        "description": "Suppress routing updates on all interfaces\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "OSPF topology priority - Range: `0`-`127`\n"
                    },
                    "processId": {
                        "type": "integer",
                        "description": "Process ID - Range: `1`-`65535`\n"
                    },
                    "routerId": {
                        "type": "string",
                        "description": "Override configured router identifier (peers will reset)\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the OSPF protocol under the current instance\n"
                    },
                    "summaryAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/OspfVrfSummaryAddress:OspfVrfSummaryAddress"
                        },
                        "description": "Configure IP address summaries\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VPN Routing/Forwarding Instance\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/pim:Pim": {
            "properties": {
                "autorp": {
                    "type": "boolean",
                    "description": "Configure AutoRP global operations\n"
                },
                "autorpListener": {
                    "type": "boolean",
                    "description": "Allow AutoRP packets across sparse mode interface\n"
                },
                "bsrCandidateAcceptRpCandidate": {
                    "type": "string",
                    "description": "BSR RP candidate filter\n"
                },
                "bsrCandidateLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "bsrCandidateMask": {
                    "type": "integer",
                    "description": "Hash Mask length for RP selection - Range: `0`-`32`\n"
                },
                "bsrCandidatePriority": {
                    "type": "integer",
                    "description": "Priority value for candidate bootstrap router - Range: `0`-`255`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "rpAddress": {
                    "type": "string",
                    "description": "IP address of Rendezvous-point for group\n"
                },
                "rpAddressBidir": {
                    "type": "boolean",
                    "description": "Group range treated in bidirectional shared-tree mode\n"
                },
                "rpAddressOverride": {
                    "type": "boolean",
                    "description": "Overrides dynamically learnt RP mappings\n"
                },
                "rpAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/PimRpAddress:PimRpAddress"
                    },
                    "description": "PIM RP-address (Rendezvous Point)\n"
                },
                "rpCandidates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/PimRpCandidate:PimRpCandidate"
                    },
                    "description": "To be a PIM version 2 RP candidate\n"
                },
                "ssmDefault": {
                    "type": "boolean",
                    "description": "Use 232/8 group range for SSM\n"
                },
                "ssmRange": {
                    "type": "string",
                    "description": "ACL for group range to be used for SSM\n"
                }
            },
            "inputProperties": {
                "autorp": {
                    "type": "boolean",
                    "description": "Configure AutoRP global operations\n"
                },
                "autorpListener": {
                    "type": "boolean",
                    "description": "Allow AutoRP packets across sparse mode interface\n"
                },
                "bsrCandidateAcceptRpCandidate": {
                    "type": "string",
                    "description": "BSR RP candidate filter\n"
                },
                "bsrCandidateLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "bsrCandidateMask": {
                    "type": "integer",
                    "description": "Hash Mask length for RP selection - Range: `0`-`32`\n"
                },
                "bsrCandidatePriority": {
                    "type": "integer",
                    "description": "Priority value for candidate bootstrap router - Range: `0`-`255`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "rpAddress": {
                    "type": "string",
                    "description": "IP address of Rendezvous-point for group\n"
                },
                "rpAddressBidir": {
                    "type": "boolean",
                    "description": "Group range treated in bidirectional shared-tree mode\n"
                },
                "rpAddressOverride": {
                    "type": "boolean",
                    "description": "Overrides dynamically learnt RP mappings\n"
                },
                "rpAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/PimRpAddress:PimRpAddress"
                    },
                    "description": "PIM RP-address (Rendezvous Point)\n"
                },
                "rpCandidates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/PimRpCandidate:PimRpCandidate"
                    },
                    "description": "To be a PIM version 2 RP candidate\n"
                },
                "ssmDefault": {
                    "type": "boolean",
                    "description": "Use 232/8 group range for SSM\n"
                },
                "ssmRange": {
                    "type": "string",
                    "description": "ACL for group range to be used for SSM\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Pim resources.\n",
                "properties": {
                    "autorp": {
                        "type": "boolean",
                        "description": "Configure AutoRP global operations\n"
                    },
                    "autorpListener": {
                        "type": "boolean",
                        "description": "Allow AutoRP packets across sparse mode interface\n"
                    },
                    "bsrCandidateAcceptRpCandidate": {
                        "type": "string",
                        "description": "BSR RP candidate filter\n"
                    },
                    "bsrCandidateLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    },
                    "bsrCandidateMask": {
                        "type": "integer",
                        "description": "Hash Mask length for RP selection - Range: `0`-`32`\n"
                    },
                    "bsrCandidatePriority": {
                        "type": "integer",
                        "description": "Priority value for candidate bootstrap router - Range: `0`-`255`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "rpAddress": {
                        "type": "string",
                        "description": "IP address of Rendezvous-point for group\n"
                    },
                    "rpAddressBidir": {
                        "type": "boolean",
                        "description": "Group range treated in bidirectional shared-tree mode\n"
                    },
                    "rpAddressOverride": {
                        "type": "boolean",
                        "description": "Overrides dynamically learnt RP mappings\n"
                    },
                    "rpAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/PimRpAddress:PimRpAddress"
                        },
                        "description": "PIM RP-address (Rendezvous Point)\n"
                    },
                    "rpCandidates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/PimRpCandidate:PimRpCandidate"
                        },
                        "description": "To be a PIM version 2 RP candidate\n"
                    },
                    "ssmDefault": {
                        "type": "boolean",
                        "description": "Use 232/8 group range for SSM\n"
                    },
                    "ssmRange": {
                        "type": "string",
                        "description": "ACL for group range to be used for SSM\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/pimVrf:PimVrf": {
            "properties": {
                "autorp": {
                    "type": "boolean",
                    "description": "Configure AutoRP global operations\n"
                },
                "autorpListener": {
                    "type": "boolean",
                    "description": "Allow AutoRP packets across sparse mode interface\n"
                },
                "bsrCandidateAcceptRpCandidate": {
                    "type": "string",
                    "description": "BSR RP candidate filter\n"
                },
                "bsrCandidateLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "bsrCandidateMask": {
                    "type": "integer",
                    "description": "Hash Mask length for RP selection - Range: `0`-`32`\n"
                },
                "bsrCandidatePriority": {
                    "type": "integer",
                    "description": "Priority value for candidate bootstrap router - Range: `0`-`255`\n"
                },
                "cacheRpfOif": {
                    "type": "boolean",
                    "description": "Cache outgoing interface RPF info\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "rpAddress": {
                    "type": "string",
                    "description": "IP address of Rendezvous-point for group\n"
                },
                "rpAddressBidir": {
                    "type": "boolean",
                    "description": "Group range treated in bidirectional shared-tree mode\n"
                },
                "rpAddressOverride": {
                    "type": "boolean",
                    "description": "Overrides dynamically learnt RP mappings\n"
                },
                "rpAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/PimVrfRpAddress:PimVrfRpAddress"
                    },
                    "description": "PIM RP-address (Rendezvous Point)\n"
                },
                "rpCandidates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/PimVrfRpCandidate:PimVrfRpCandidate"
                    },
                    "description": "To be a PIM version 2 RP candidate\n"
                },
                "ssmDefault": {
                    "type": "boolean",
                    "description": "Use 232/8 group range for SSM\n"
                },
                "ssmRange": {
                    "type": "string",
                    "description": "ACL for group range to be used for SSM\n"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "required": [
                "vrf"
            ],
            "inputProperties": {
                "autorp": {
                    "type": "boolean",
                    "description": "Configure AutoRP global operations\n"
                },
                "autorpListener": {
                    "type": "boolean",
                    "description": "Allow AutoRP packets across sparse mode interface\n"
                },
                "bsrCandidateAcceptRpCandidate": {
                    "type": "string",
                    "description": "BSR RP candidate filter\n"
                },
                "bsrCandidateLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "bsrCandidateMask": {
                    "type": "integer",
                    "description": "Hash Mask length for RP selection - Range: `0`-`32`\n"
                },
                "bsrCandidatePriority": {
                    "type": "integer",
                    "description": "Priority value for candidate bootstrap router - Range: `0`-`255`\n"
                },
                "cacheRpfOif": {
                    "type": "boolean",
                    "description": "Cache outgoing interface RPF info\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "rpAddress": {
                    "type": "string",
                    "description": "IP address of Rendezvous-point for group\n"
                },
                "rpAddressBidir": {
                    "type": "boolean",
                    "description": "Group range treated in bidirectional shared-tree mode\n"
                },
                "rpAddressOverride": {
                    "type": "boolean",
                    "description": "Overrides dynamically learnt RP mappings\n"
                },
                "rpAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/PimVrfRpAddress:PimVrfRpAddress"
                    },
                    "description": "PIM RP-address (Rendezvous Point)\n"
                },
                "rpCandidates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/PimVrfRpCandidate:PimVrfRpCandidate"
                    },
                    "description": "To be a PIM version 2 RP candidate\n"
                },
                "ssmDefault": {
                    "type": "boolean",
                    "description": "Use 232/8 group range for SSM\n"
                },
                "ssmRange": {
                    "type": "string",
                    "description": "ACL for group range to be used for SSM\n"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimVrf resources.\n",
                "properties": {
                    "autorp": {
                        "type": "boolean",
                        "description": "Configure AutoRP global operations\n"
                    },
                    "autorpListener": {
                        "type": "boolean",
                        "description": "Allow AutoRP packets across sparse mode interface\n"
                    },
                    "bsrCandidateAcceptRpCandidate": {
                        "type": "string",
                        "description": "BSR RP candidate filter\n"
                    },
                    "bsrCandidateLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    },
                    "bsrCandidateMask": {
                        "type": "integer",
                        "description": "Hash Mask length for RP selection - Range: `0`-`32`\n"
                    },
                    "bsrCandidatePriority": {
                        "type": "integer",
                        "description": "Priority value for candidate bootstrap router - Range: `0`-`255`\n"
                    },
                    "cacheRpfOif": {
                        "type": "boolean",
                        "description": "Cache outgoing interface RPF info\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "rpAddress": {
                        "type": "string",
                        "description": "IP address of Rendezvous-point for group\n"
                    },
                    "rpAddressBidir": {
                        "type": "boolean",
                        "description": "Group range treated in bidirectional shared-tree mode\n"
                    },
                    "rpAddressOverride": {
                        "type": "boolean",
                        "description": "Overrides dynamically learnt RP mappings\n"
                    },
                    "rpAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/PimVrfRpAddress:PimVrfRpAddress"
                        },
                        "description": "PIM RP-address (Rendezvous Point)\n"
                    },
                    "rpCandidates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/PimVrfRpCandidate:PimVrfRpCandidate"
                        },
                        "description": "To be a PIM version 2 RP candidate\n"
                    },
                    "ssmDefault": {
                        "type": "boolean",
                        "description": "Use 232/8 group range for SSM\n"
                    },
                    "ssmRange": {
                        "type": "string",
                        "description": "ACL for group range to be used for SSM\n"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/policyMap:PolicyMap": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy map\n"
                },
                "subscriber": {
                    "type": "boolean",
                    "description": "Domain name of the policy map\n"
                },
                "type": {
                    "type": "string",
                    "description": "type of the policy-map - Choices: `access-control`, `appnav`, `control`, `epbr`, `inspect`, `packet-service`,\n`performance-monitor`, `queueing`, `service`, `service-chain`, `umbrella`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy map\n"
                },
                "subscriber": {
                    "type": "boolean",
                    "description": "Domain name of the policy map\n"
                },
                "type": {
                    "type": "string",
                    "description": "type of the policy-map - Choices: `access-control`, `appnav`, `control`, `epbr`, `inspect`, `packet-service`,\n`performance-monitor`, `queueing`, `service`, `service-chain`, `umbrella`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy map\n"
                    },
                    "subscriber": {
                        "type": "boolean",
                        "description": "Domain name of the policy map\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of the policy-map - Choices: `access-control`, `appnav`, `control`, `epbr`, `inspect`, `packet-service`,\n`performance-monitor`, `queueing`, `service`, `service-chain`, `umbrella`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/policyMapEvent:PolicyMapEvent": {
            "properties": {
                "classNumbers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/PolicyMapEventClassNumber:PolicyMapEventClassNumber"
                    },
                    "description": "class number, 1 for 1st class, 2 for 2nd...\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "eventType": {
                    "type": "string",
                    "description": "- Choices: `aaa-available`, `absolute-timeout`, `agent-found`, `authentication-failure`, `authentication-success`,\n`authorization-failure`, `authorization-success`, `identity-update`, `inactivity-timeout`,\n`remote-authentication-failure`, `remote-authentication-success`, `remote-update`, `session-disconnected`,\n`session-started`, `tag-added`, `tag-removed`, `template-activated`, `template-activation-failed`,\n`template-deactivated`, `template-deactivation-failed`, `timer-expiry`, `violation`\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "- Choices: `match-all`, `match-first`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy map\n"
                }
            },
            "required": [
                "eventType",
                "name"
            ],
            "inputProperties": {
                "classNumbers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/PolicyMapEventClassNumber:PolicyMapEventClassNumber"
                    },
                    "description": "class number, 1 for 1st class, 2 for 2nd...\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "eventType": {
                    "type": "string",
                    "description": "- Choices: `aaa-available`, `absolute-timeout`, `agent-found`, `authentication-failure`, `authentication-success`,\n`authorization-failure`, `authorization-success`, `identity-update`, `inactivity-timeout`,\n`remote-authentication-failure`, `remote-authentication-success`, `remote-update`, `session-disconnected`,\n`session-started`, `tag-added`, `tag-removed`, `template-activated`, `template-activation-failed`,\n`template-deactivated`, `template-deactivation-failed`, `timer-expiry`, `violation`\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "- Choices: `match-all`, `match-first`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy map\n"
                }
            },
            "requiredInputs": [
                "eventType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyMapEvent resources.\n",
                "properties": {
                    "classNumbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/PolicyMapEventClassNumber:PolicyMapEventClassNumber"
                        },
                        "description": "class number, 1 for 1st class, 2 for 2nd...\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "eventType": {
                        "type": "string",
                        "description": "- Choices: `aaa-available`, `absolute-timeout`, `agent-found`, `authentication-failure`, `authentication-success`,\n`authorization-failure`, `authorization-success`, `identity-update`, `inactivity-timeout`,\n`remote-authentication-failure`, `remote-authentication-success`, `remote-update`, `session-disconnected`,\n`session-started`, `tag-added`, `tag-removed`, `template-activated`, `template-activation-failed`,\n`template-deactivated`, `template-deactivation-failed`, `timer-expiry`, `violation`\n"
                    },
                    "matchType": {
                        "type": "string",
                        "description": "- Choices: `match-all`, `match-first`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy map\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/prefixList:PrefixList": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "prefixes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/PrefixListPrefix:PrefixListPrefix"
                    },
                    "description": "Build prefix-lists with name ans seq.no\n"
                }
            },
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "prefixes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/PrefixListPrefix:PrefixListPrefix"
                    },
                    "description": "Build prefix-lists with name ans seq.no\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrefixList resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "prefixes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/PrefixListPrefix:PrefixListPrefix"
                        },
                        "description": "Build prefix-lists with name ans seq.no\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/radius:Radius": {
            "properties": {
                "accountingPort": {
                    "type": "integer",
                    "description": "UDP port for RADIUS accounting server (default is 1813) - Range: `0`-`65534`\n"
                },
                "authenticationPort": {
                    "type": "integer",
                    "description": "UDP port for RADIUS authentication server (default is 1812) - Range: `0`-`65534`\n"
                },
                "automateTesterIgnoreAcctPort": {
                    "type": "boolean",
                    "description": "Do not test accounting ports of the servers.\n"
                },
                "automateTesterProbeOnConfig": {
                    "type": "boolean",
                    "description": "Send a packet to verify the server status\n"
                },
                "automateTesterUsername": {
                    "type": "string"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4Address": {
                    "type": "string",
                    "description": "IPv4 address or Hostname for radius server\n"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name for the radius server configuration\n"
                },
                "pacKey": {
                    "type": "string",
                    "description": "The UNENCRYPTED (cleartext) server key\n"
                },
                "pacKeyEncryption": {
                    "type": "string",
                    "description": "0 - Specifies an UNENCRYPTED key will follow 6 - Specifies an ENCRYPTED key will follow 7 - Specifies HIDDEN key will\nfollow - Choices: `0`, `6`, `7`\n"
                },
                "retransmit": {
                    "type": "integer",
                    "description": "Number of retries to active server (overrides default) - Range: `0`-`100`\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Time to wait for a RADIUS server to reply (overrides default) - Range: `1`-`1000`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "accountingPort": {
                    "type": "integer",
                    "description": "UDP port for RADIUS accounting server (default is 1813) - Range: `0`-`65534`\n"
                },
                "authenticationPort": {
                    "type": "integer",
                    "description": "UDP port for RADIUS authentication server (default is 1812) - Range: `0`-`65534`\n"
                },
                "automateTesterIgnoreAcctPort": {
                    "type": "boolean",
                    "description": "Do not test accounting ports of the servers.\n"
                },
                "automateTesterProbeOnConfig": {
                    "type": "boolean",
                    "description": "Send a packet to verify the server status\n"
                },
                "automateTesterUsername": {
                    "type": "string"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4Address": {
                    "type": "string",
                    "description": "IPv4 address or Hostname for radius server\n"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name for the radius server configuration\n"
                },
                "pacKey": {
                    "type": "string",
                    "description": "The UNENCRYPTED (cleartext) server key\n"
                },
                "pacKeyEncryption": {
                    "type": "string",
                    "description": "0 - Specifies an UNENCRYPTED key will follow 6 - Specifies an ENCRYPTED key will follow 7 - Specifies HIDDEN key will\nfollow - Choices: `0`, `6`, `7`\n"
                },
                "retransmit": {
                    "type": "integer",
                    "description": "Number of retries to active server (overrides default) - Range: `0`-`100`\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Time to wait for a RADIUS server to reply (overrides default) - Range: `1`-`1000`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Radius resources.\n",
                "properties": {
                    "accountingPort": {
                        "type": "integer",
                        "description": "UDP port for RADIUS accounting server (default is 1813) - Range: `0`-`65534`\n"
                    },
                    "authenticationPort": {
                        "type": "integer",
                        "description": "UDP port for RADIUS authentication server (default is 1812) - Range: `0`-`65534`\n"
                    },
                    "automateTesterIgnoreAcctPort": {
                        "type": "boolean",
                        "description": "Do not test accounting ports of the servers.\n"
                    },
                    "automateTesterProbeOnConfig": {
                        "type": "boolean",
                        "description": "Send a packet to verify the server status\n"
                    },
                    "automateTesterUsername": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv4Address": {
                        "type": "string",
                        "description": "IPv4 address or Hostname for radius server\n"
                    },
                    "key": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the radius server configuration\n"
                    },
                    "pacKey": {
                        "type": "string",
                        "description": "The UNENCRYPTED (cleartext) server key\n"
                    },
                    "pacKeyEncryption": {
                        "type": "string",
                        "description": "0 - Specifies an UNENCRYPTED key will follow 6 - Specifies an ENCRYPTED key will follow 7 - Specifies HIDDEN key will\nfollow - Choices: `0`, `6`, `7`\n"
                    },
                    "retransmit": {
                        "type": "integer",
                        "description": "Number of retries to active server (overrides default) - Range: `0`-`100`\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Time to wait for a RADIUS server to reply (overrides default) - Range: `1`-`1000`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/radiusServer:RadiusServer": {
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/RadiusServerAttribute:RadiusServerAttribute"
                    },
                    "description": "Customize selected radius attributes\n"
                },
                "deadCriteriaTime": {
                    "type": "integer",
                    "description": "The time during which no properly formed response must be received from the RADIUS server - Range: `1`-`120`\n"
                },
                "deadCriteriaTries": {
                    "type": "integer",
                    "description": "The number of times the router must fail to receive a response from the radius server to mark it as dead - Range:\n`1`-`100`\n"
                },
                "deadtime": {
                    "type": "integer",
                    "description": "Time to stop using a server that does not respond - Range: `1`-`1440`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "inputProperties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/RadiusServerAttribute:RadiusServerAttribute"
                    },
                    "description": "Customize selected radius attributes\n"
                },
                "deadCriteriaTime": {
                    "type": "integer",
                    "description": "The time during which no properly formed response must be received from the RADIUS server - Range: `1`-`120`\n"
                },
                "deadCriteriaTries": {
                    "type": "integer",
                    "description": "The number of times the router must fail to receive a response from the radius server to mark it as dead - Range:\n`1`-`100`\n"
                },
                "deadtime": {
                    "type": "integer",
                    "description": "Time to stop using a server that does not respond - Range: `1`-`1440`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RadiusServer resources.\n",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/RadiusServerAttribute:RadiusServerAttribute"
                        },
                        "description": "Customize selected radius attributes\n"
                    },
                    "deadCriteriaTime": {
                        "type": "integer",
                        "description": "The time during which no properly formed response must be received from the RADIUS server - Range: `1`-`120`\n"
                    },
                    "deadCriteriaTries": {
                        "type": "integer",
                        "description": "The number of times the router must fail to receive a response from the radius server to mark it as dead - Range:\n`1`-`100`\n"
                    },
                    "deadtime": {
                        "type": "integer",
                        "description": "Time to stop using a server that does not respond - Range: `1`-`1440`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/restconf:Restconf": {
            "properties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of key-value pairs which represents the YANG leafs and its values.\n"
                },
                "delete": {
                    "type": "boolean",
                    "description": "Delete object during destroy operation. Default value is `true`.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/RestconfList:RestconfList"
                    },
                    "description": "YANG lists.\n"
                },
                "path": {
                    "type": "string",
                    "description": "A RESTCONF path, e.g. `openconfig-interfaces:interfaces`.\n"
                }
            },
            "required": [
                "attributes",
                "delete",
                "path"
            ],
            "inputProperties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of key-value pairs which represents the YANG leafs and its values.\n"
                },
                "delete": {
                    "type": "boolean",
                    "description": "Delete object during destroy operation. Default value is `true`.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/RestconfList:RestconfList"
                    },
                    "description": "YANG lists.\n"
                },
                "path": {
                    "type": "string",
                    "description": "A RESTCONF path, e.g. `openconfig-interfaces:interfaces`.\n"
                }
            },
            "requiredInputs": [
                "path"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Restconf resources.\n",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of key-value pairs which represents the YANG leafs and its values.\n"
                    },
                    "delete": {
                        "type": "boolean",
                        "description": "Delete object during destroy operation. Default value is `true`.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "lists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/RestconfList:RestconfList"
                        },
                        "description": "YANG lists.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "A RESTCONF path, e.g. `openconfig-interfaces:interfaces`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/routeMap:RouteMap": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/RouteMapEntry:RouteMapEntry"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "WORD;;Route map tag\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/RouteMapEntry:RouteMapEntry"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "WORD;;Route map tag\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RouteMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/RouteMapEntry:RouteMapEntry"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "WORD;;Route map tag\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/service:Service": {
            "properties": {
                "callHome": {
                    "type": "boolean",
                    "description": "Enable call-home service\n"
                },
                "compressConfig": {
                    "type": "boolean",
                    "description": "Compress the configuration file\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP server and relay agent\n"
                },
                "pad": {
                    "type": "boolean",
                    "description": "Enable PAD commands\n"
                },
                "passwordEncryption": {
                    "type": "boolean",
                    "description": "Encrypt system passwords\n"
                },
                "passwordRecovery": {
                    "type": "boolean",
                    "description": "Enable password recovery\n"
                },
                "sequenceNumbers": {
                    "type": "boolean",
                    "description": "Stamp logger messages with a sequence number\n"
                },
                "tcpKeepalivesIn": {
                    "type": "boolean",
                    "description": "Generate keepalives on idle incoming network connections\n"
                },
                "tcpKeepalivesOut": {
                    "type": "boolean",
                    "description": "Generate keepalives on idle outgoing network connections\n"
                },
                "timestamps": {
                    "type": "boolean",
                    "description": "Timestamp debug/log messages\n"
                },
                "timestampsDebug": {
                    "type": "boolean",
                    "description": "Timestamp debug messages\n"
                },
                "timestampsDebugDatetime": {
                    "type": "boolean",
                    "description": "Timestamp with date and time\n"
                },
                "timestampsDebugDatetimeLocaltime": {
                    "type": "boolean",
                    "description": "Use local time zone for timestamps\n"
                },
                "timestampsDebugDatetimeMsec": {
                    "type": "boolean",
                    "description": "Include milliseconds in timestamp\n"
                },
                "timestampsDebugDatetimeShowTimezone": {
                    "type": "boolean",
                    "description": "Add time zone information to timestamp\n"
                },
                "timestampsDebugDatetimeYear": {
                    "type": "boolean",
                    "description": "Include year in timestamp\n"
                },
                "timestampsDebugUptime": {
                    "type": "boolean",
                    "description": "Timestamp with system uptime\n"
                },
                "timestampsLog": {
                    "type": "boolean",
                    "description": "Timestamp log messages\n"
                },
                "timestampsLogDatetime": {
                    "type": "boolean",
                    "description": "Timestamp with date and time\n"
                },
                "timestampsLogDatetimeLocaltime": {
                    "type": "boolean",
                    "description": "Use local time zone for timestamps\n"
                },
                "timestampsLogDatetimeMsec": {
                    "type": "boolean",
                    "description": "Include milliseconds in timestamp\n"
                },
                "timestampsLogDatetimeShowTimezone": {
                    "type": "boolean",
                    "description": "Add time zone information to timestamp\n"
                },
                "timestampsLogDatetimeYear": {
                    "type": "boolean",
                    "description": "Include year in timestamp\n"
                },
                "timestampsLogUptime": {
                    "type": "boolean",
                    "description": "Timestamp with system uptime\n"
                }
            },
            "inputProperties": {
                "callHome": {
                    "type": "boolean",
                    "description": "Enable call-home service\n"
                },
                "compressConfig": {
                    "type": "boolean",
                    "description": "Compress the configuration file\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP server and relay agent\n"
                },
                "pad": {
                    "type": "boolean",
                    "description": "Enable PAD commands\n"
                },
                "passwordEncryption": {
                    "type": "boolean",
                    "description": "Encrypt system passwords\n"
                },
                "passwordRecovery": {
                    "type": "boolean",
                    "description": "Enable password recovery\n"
                },
                "sequenceNumbers": {
                    "type": "boolean",
                    "description": "Stamp logger messages with a sequence number\n"
                },
                "tcpKeepalivesIn": {
                    "type": "boolean",
                    "description": "Generate keepalives on idle incoming network connections\n"
                },
                "tcpKeepalivesOut": {
                    "type": "boolean",
                    "description": "Generate keepalives on idle outgoing network connections\n"
                },
                "timestamps": {
                    "type": "boolean",
                    "description": "Timestamp debug/log messages\n"
                },
                "timestampsDebug": {
                    "type": "boolean",
                    "description": "Timestamp debug messages\n"
                },
                "timestampsDebugDatetime": {
                    "type": "boolean",
                    "description": "Timestamp with date and time\n"
                },
                "timestampsDebugDatetimeLocaltime": {
                    "type": "boolean",
                    "description": "Use local time zone for timestamps\n"
                },
                "timestampsDebugDatetimeMsec": {
                    "type": "boolean",
                    "description": "Include milliseconds in timestamp\n"
                },
                "timestampsDebugDatetimeShowTimezone": {
                    "type": "boolean",
                    "description": "Add time zone information to timestamp\n"
                },
                "timestampsDebugDatetimeYear": {
                    "type": "boolean",
                    "description": "Include year in timestamp\n"
                },
                "timestampsDebugUptime": {
                    "type": "boolean",
                    "description": "Timestamp with system uptime\n"
                },
                "timestampsLog": {
                    "type": "boolean",
                    "description": "Timestamp log messages\n"
                },
                "timestampsLogDatetime": {
                    "type": "boolean",
                    "description": "Timestamp with date and time\n"
                },
                "timestampsLogDatetimeLocaltime": {
                    "type": "boolean",
                    "description": "Use local time zone for timestamps\n"
                },
                "timestampsLogDatetimeMsec": {
                    "type": "boolean",
                    "description": "Include milliseconds in timestamp\n"
                },
                "timestampsLogDatetimeShowTimezone": {
                    "type": "boolean",
                    "description": "Add time zone information to timestamp\n"
                },
                "timestampsLogDatetimeYear": {
                    "type": "boolean",
                    "description": "Include year in timestamp\n"
                },
                "timestampsLogUptime": {
                    "type": "boolean",
                    "description": "Timestamp with system uptime\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Service resources.\n",
                "properties": {
                    "callHome": {
                        "type": "boolean",
                        "description": "Enable call-home service\n"
                    },
                    "compressConfig": {
                        "type": "boolean",
                        "description": "Compress the configuration file\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dhcp": {
                        "type": "boolean",
                        "description": "Enable DHCP server and relay agent\n"
                    },
                    "pad": {
                        "type": "boolean",
                        "description": "Enable PAD commands\n"
                    },
                    "passwordEncryption": {
                        "type": "boolean",
                        "description": "Encrypt system passwords\n"
                    },
                    "passwordRecovery": {
                        "type": "boolean",
                        "description": "Enable password recovery\n"
                    },
                    "sequenceNumbers": {
                        "type": "boolean",
                        "description": "Stamp logger messages with a sequence number\n"
                    },
                    "tcpKeepalivesIn": {
                        "type": "boolean",
                        "description": "Generate keepalives on idle incoming network connections\n"
                    },
                    "tcpKeepalivesOut": {
                        "type": "boolean",
                        "description": "Generate keepalives on idle outgoing network connections\n"
                    },
                    "timestamps": {
                        "type": "boolean",
                        "description": "Timestamp debug/log messages\n"
                    },
                    "timestampsDebug": {
                        "type": "boolean",
                        "description": "Timestamp debug messages\n"
                    },
                    "timestampsDebugDatetime": {
                        "type": "boolean",
                        "description": "Timestamp with date and time\n"
                    },
                    "timestampsDebugDatetimeLocaltime": {
                        "type": "boolean",
                        "description": "Use local time zone for timestamps\n"
                    },
                    "timestampsDebugDatetimeMsec": {
                        "type": "boolean",
                        "description": "Include milliseconds in timestamp\n"
                    },
                    "timestampsDebugDatetimeShowTimezone": {
                        "type": "boolean",
                        "description": "Add time zone information to timestamp\n"
                    },
                    "timestampsDebugDatetimeYear": {
                        "type": "boolean",
                        "description": "Include year in timestamp\n"
                    },
                    "timestampsDebugUptime": {
                        "type": "boolean",
                        "description": "Timestamp with system uptime\n"
                    },
                    "timestampsLog": {
                        "type": "boolean",
                        "description": "Timestamp log messages\n"
                    },
                    "timestampsLogDatetime": {
                        "type": "boolean",
                        "description": "Timestamp with date and time\n"
                    },
                    "timestampsLogDatetimeLocaltime": {
                        "type": "boolean",
                        "description": "Use local time zone for timestamps\n"
                    },
                    "timestampsLogDatetimeMsec": {
                        "type": "boolean",
                        "description": "Include milliseconds in timestamp\n"
                    },
                    "timestampsLogDatetimeShowTimezone": {
                        "type": "boolean",
                        "description": "Add time zone information to timestamp\n"
                    },
                    "timestampsLogDatetimeYear": {
                        "type": "boolean",
                        "description": "Include year in timestamp\n"
                    },
                    "timestampsLogUptime": {
                        "type": "boolean",
                        "description": "Timestamp with system uptime\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/serviceTemplate:ServiceTemplate": {
            "properties": {
                "absoluteTimer": {
                    "type": "integer",
                    "description": "Enter a value between 1 and 1073741823 - Range: `1`-`1073741823`\n"
                },
                "accessGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/ServiceTemplateAccessGroup:ServiceTemplateAccessGroup"
                    },
                    "description": "Access list to be applied\n"
                },
                "description": {
                    "type": "string",
                    "description": "Enter a description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dnsAclPreauth": {
                    "type": "string",
                    "description": "pre-authentication\n"
                },
                "ianctivityTimer": {
                    "type": "integer",
                    "description": "Enter a value between 1 and 65535 - Range: `1`-`65535`\n"
                },
                "inactivityTimerProbe": {
                    "type": "boolean",
                    "description": "ARP probe\n"
                },
                "interfaceTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/ServiceTemplateInterfaceTemplate:ServiceTemplateInterfaceTemplate"
                    },
                    "description": "Interface template to be applied\n"
                },
                "linksecPolicy": {
                    "type": "string",
                    "description": "Set the link security policy - Choices: `must-not-secure`, `must-secure`, `should-secure`\n"
                },
                "mdnsServicePolicy": {
                    "type": "string",
                    "description": "mdns policy to be applied\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specify a template name (maximum 48 characters)\n"
                },
                "redirectAppendClientMac": {
                    "type": "string",
                    "description": "Append client Mac Address in redirect URL\n"
                },
                "redirectAppendSwitchMac": {
                    "type": "string",
                    "description": "Append switch Mac Address in redirect URL\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "Specify a valid URL\n"
                },
                "redirectUrlMatchAcl": {
                    "type": "string",
                    "description": "Specify the access list name\n"
                },
                "redirectUrlMatchAction": {
                    "type": "string",
                    "description": "- Choices: `one-time-redirect`, `redirect-on-no-match`\n"
                },
                "servicePolicyQosInput": {
                    "type": "string",
                    "description": "Configure input Qos policy\n"
                },
                "servicePolicyQosOutput": {
                    "type": "string",
                    "description": "Configure output Qos policy\n"
                },
                "sgt": {
                    "type": "integer",
                    "description": "SGT tag - Range: `2`-`65519`\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/ServiceTemplateTag:ServiceTemplateTag"
                    },
                    "description": "tag name\n"
                },
                "tunnelCapwapName": {
                    "type": "string",
                    "description": "tunnel profile name\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "Vlan to be applied - Range: `1`-`4094`\n"
                },
                "vnid": {
                    "type": "string",
                    "description": "Vnid to be applied\n"
                },
                "voiceVlan": {
                    "type": "boolean",
                    "description": "Critical voice vlan\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "absoluteTimer": {
                    "type": "integer",
                    "description": "Enter a value between 1 and 1073741823 - Range: `1`-`1073741823`\n"
                },
                "accessGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/ServiceTemplateAccessGroup:ServiceTemplateAccessGroup"
                    },
                    "description": "Access list to be applied\n"
                },
                "description": {
                    "type": "string",
                    "description": "Enter a description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dnsAclPreauth": {
                    "type": "string",
                    "description": "pre-authentication\n"
                },
                "ianctivityTimer": {
                    "type": "integer",
                    "description": "Enter a value between 1 and 65535 - Range: `1`-`65535`\n"
                },
                "inactivityTimerProbe": {
                    "type": "boolean",
                    "description": "ARP probe\n"
                },
                "interfaceTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/ServiceTemplateInterfaceTemplate:ServiceTemplateInterfaceTemplate"
                    },
                    "description": "Interface template to be applied\n"
                },
                "linksecPolicy": {
                    "type": "string",
                    "description": "Set the link security policy - Choices: `must-not-secure`, `must-secure`, `should-secure`\n"
                },
                "mdnsServicePolicy": {
                    "type": "string",
                    "description": "mdns policy to be applied\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specify a template name (maximum 48 characters)\n"
                },
                "redirectAppendClientMac": {
                    "type": "string",
                    "description": "Append client Mac Address in redirect URL\n"
                },
                "redirectAppendSwitchMac": {
                    "type": "string",
                    "description": "Append switch Mac Address in redirect URL\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "Specify a valid URL\n"
                },
                "redirectUrlMatchAcl": {
                    "type": "string",
                    "description": "Specify the access list name\n"
                },
                "redirectUrlMatchAction": {
                    "type": "string",
                    "description": "- Choices: `one-time-redirect`, `redirect-on-no-match`\n"
                },
                "servicePolicyQosInput": {
                    "type": "string",
                    "description": "Configure input Qos policy\n"
                },
                "servicePolicyQosOutput": {
                    "type": "string",
                    "description": "Configure output Qos policy\n"
                },
                "sgt": {
                    "type": "integer",
                    "description": "SGT tag - Range: `2`-`65519`\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/ServiceTemplateTag:ServiceTemplateTag"
                    },
                    "description": "tag name\n"
                },
                "tunnelCapwapName": {
                    "type": "string",
                    "description": "tunnel profile name\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "Vlan to be applied - Range: `1`-`4094`\n"
                },
                "vnid": {
                    "type": "string",
                    "description": "Vnid to be applied\n"
                },
                "voiceVlan": {
                    "type": "boolean",
                    "description": "Critical voice vlan\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceTemplate resources.\n",
                "properties": {
                    "absoluteTimer": {
                        "type": "integer",
                        "description": "Enter a value between 1 and 1073741823 - Range: `1`-`1073741823`\n"
                    },
                    "accessGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/ServiceTemplateAccessGroup:ServiceTemplateAccessGroup"
                        },
                        "description": "Access list to be applied\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Enter a description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dnsAclPreauth": {
                        "type": "string",
                        "description": "pre-authentication\n"
                    },
                    "ianctivityTimer": {
                        "type": "integer",
                        "description": "Enter a value between 1 and 65535 - Range: `1`-`65535`\n"
                    },
                    "inactivityTimerProbe": {
                        "type": "boolean",
                        "description": "ARP probe\n"
                    },
                    "interfaceTemplates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/ServiceTemplateInterfaceTemplate:ServiceTemplateInterfaceTemplate"
                        },
                        "description": "Interface template to be applied\n"
                    },
                    "linksecPolicy": {
                        "type": "string",
                        "description": "Set the link security policy - Choices: `must-not-secure`, `must-secure`, `should-secure`\n"
                    },
                    "mdnsServicePolicy": {
                        "type": "string",
                        "description": "mdns policy to be applied\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specify a template name (maximum 48 characters)\n"
                    },
                    "redirectAppendClientMac": {
                        "type": "string",
                        "description": "Append client Mac Address in redirect URL\n"
                    },
                    "redirectAppendSwitchMac": {
                        "type": "string",
                        "description": "Append switch Mac Address in redirect URL\n"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "description": "Specify a valid URL\n"
                    },
                    "redirectUrlMatchAcl": {
                        "type": "string",
                        "description": "Specify the access list name\n"
                    },
                    "redirectUrlMatchAction": {
                        "type": "string",
                        "description": "- Choices: `one-time-redirect`, `redirect-on-no-match`\n"
                    },
                    "servicePolicyQosInput": {
                        "type": "string",
                        "description": "Configure input Qos policy\n"
                    },
                    "servicePolicyQosOutput": {
                        "type": "string",
                        "description": "Configure output Qos policy\n"
                    },
                    "sgt": {
                        "type": "integer",
                        "description": "SGT tag - Range: `2`-`65519`\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/ServiceTemplateTag:ServiceTemplateTag"
                        },
                        "description": "tag name\n"
                    },
                    "tunnelCapwapName": {
                        "type": "string",
                        "description": "tunnel profile name\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "Vlan to be applied - Range: `1`-`4094`\n"
                    },
                    "vnid": {
                        "type": "string",
                        "description": "Vnid to be applied\n"
                    },
                    "voiceVlan": {
                        "type": "boolean",
                        "description": "Critical voice vlan\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/snmpServer:SnmpServer": {
            "properties": {
                "chassisId": {
                    "type": "string",
                    "description": "String to uniquely identify this chassis\n"
                },
                "contact": {
                    "type": "string",
                    "description": "Text for mib object sysContact\n"
                },
                "contexts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/SnmpServerContext:SnmpServerContext"
                    },
                    "description": "Create/Delete a context apart from default\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "enableInforms": {
                    "type": "boolean",
                    "description": "Enable SNMP Informs\n"
                },
                "enableLoggingGetop": {
                    "type": "boolean",
                    "description": "Enable SNMP GET Operation logging\n"
                },
                "enableLoggingSetop": {
                    "type": "boolean",
                    "description": "Enable SNMP SET Operation logging\n"
                },
                "enableTraps": {
                    "type": "boolean",
                    "description": "Enable SNMP Traps\n"
                },
                "enableTrapsAuthFrameworkSecViolation": {
                    "type": "boolean"
                },
                "enableTrapsBfd": {
                    "type": "boolean"
                },
                "enableTrapsBgpCbgp2": {
                    "type": "boolean",
                    "description": "Enable BGP MIBv2 traps\n"
                },
                "enableTrapsBridgeNewroot": {
                    "type": "boolean"
                },
                "enableTrapsBridgeTopologychange": {
                    "type": "boolean"
                },
                "enableTrapsBulkstatCollection": {
                    "type": "boolean",
                    "description": "Enable Data-Collection-MIB Collection notifications\n"
                },
                "enableTrapsBulkstatTransfer": {
                    "type": "boolean",
                    "description": "Enable Data-Collection-MIB Transfer notifications\n"
                },
                "enableTrapsCallHomeMessageSendFail": {
                    "type": "boolean"
                },
                "enableTrapsCallHomeServerFail": {
                    "type": "boolean"
                },
                "enableTrapsCefInconsistency": {
                    "type": "boolean"
                },
                "enableTrapsCefPeerFibStateChange": {
                    "type": "boolean"
                },
                "enableTrapsCefPeerStateChange": {
                    "type": "boolean"
                },
                "enableTrapsCefResourceFailure": {
                    "type": "boolean"
                },
                "enableTrapsConfig": {
                    "type": "boolean",
                    "description": "Enable SNMP config traps\n"
                },
                "enableTrapsConfigCopy": {
                    "type": "boolean",
                    "description": "Enable SNMP config-copy traps\n"
                },
                "enableTrapsConfigCtid": {
                    "type": "boolean"
                },
                "enableTrapsCpuThreshold": {
                    "type": "boolean",
                    "description": "Allow CPU utilization threshold violation traps\n"
                },
                "enableTrapsDhcp": {
                    "type": "boolean",
                    "description": "Enable SNMP dhcp traps\n"
                },
                "enableTrapsEigrp": {
                    "type": "boolean",
                    "description": "Enable SNMP EIGRP traps\n"
                },
                "enableTrapsEnergywise": {
                    "type": "boolean"
                },
                "enableTrapsEntity": {
                    "type": "boolean",
                    "description": "Enable SNMP entity traps\n"
                },
                "enableTrapsEntityDiagBootUpFail": {
                    "type": "boolean",
                    "description": "Enable SNMP ceDiagBootUpFailedNotif traps\n"
                },
                "enableTrapsEntityDiagHmTestRecover": {
                    "type": "boolean",
                    "description": "Enable SNMP ceDiagHMTestRecoverNotif traps\n"
                },
                "enableTrapsEntityDiagHmThreshReached": {
                    "type": "boolean",
                    "description": "Enable SNMP ceDiagHMThresholdReachedNotif traps\n"
                },
                "enableTrapsEntityDiagScheduledTestFail": {
                    "type": "boolean",
                    "description": "Enable SNMP ceDiagScheduledTestFailedNotif traps\n"
                },
                "enableTrapsEntityPerfThroughputNotif": {
                    "type": "boolean",
                    "description": "Enable ENTITY PERFORMANCE MIB throughput traps\n"
                },
                "enableTrapsEnvmon": {
                    "type": "boolean",
                    "description": "Enable SNMP environmental monitor traps\n"
                },
                "enableTrapsErrdisable": {
                    "type": "boolean",
                    "description": "Enable SNMP errdisable notifications\n"
                },
                "enableTrapsEventManager": {
                    "type": "boolean",
                    "description": "Enable SNMP Embedded Event Manager traps\n"
                },
                "enableTrapsFastRerouteProtected": {
                    "type": "boolean"
                },
                "enableTrapsFlashInsertion": {
                    "type": "boolean",
                    "description": "Enable SNMP Flash Insertion notifications\n"
                },
                "enableTrapsFlashLowspace": {
                    "type": "boolean",
                    "description": "Enable SNMP Flash Lowspace notifications\n"
                },
                "enableTrapsFlashRemoval": {
                    "type": "boolean",
                    "description": "Enable SNMP Flash Removal notifications\n"
                },
                "enableTrapsFlowmon": {
                    "type": "boolean",
                    "description": "Enable SNMP flowmon notifications\n"
                },
                "enableTrapsFruCtrl": {
                    "type": "boolean",
                    "description": "Enable SNMP entity FRU control traps\n"
                },
                "enableTrapsHsrp": {
                    "type": "boolean",
                    "description": "Enable SNMP HSRP traps\n"
                },
                "enableTrapsIkePolicyAdd": {
                    "type": "boolean",
                    "description": "Enable IKE Policy add trap\n"
                },
                "enableTrapsIkePolicyDelete": {
                    "type": "boolean",
                    "description": "Enable IKE Policy delete trap\n"
                },
                "enableTrapsIkeTunnelStart": {
                    "type": "boolean",
                    "description": "Enable IKE Tunnel start trap\n"
                },
                "enableTrapsIkeTunnelStop": {
                    "type": "boolean",
                    "description": "Enable IKE Tunnel stop trap\n"
                },
                "enableTrapsIpmulticast": {
                    "type": "boolean",
                    "description": "Enable SNMP ipmulticast traps\n"
                },
                "enableTrapsIpsecCryptomapAdd": {
                    "type": "boolean",
                    "description": "Enable IPsec Cryptomap add trap\n"
                },
                "enableTrapsIpsecCryptomapAttach": {
                    "type": "boolean",
                    "description": "Enable IPsec Cryptomap Attach trap\n"
                },
                "enableTrapsIpsecCryptomapDelete": {
                    "type": "boolean",
                    "description": "Enable IPsec Cryptomap delete trap\n"
                },
                "enableTrapsIpsecCryptomapDetach": {
                    "type": "boolean",
                    "description": "Enable IPsec Cryptomap Detach trap\n"
                },
                "enableTrapsIpsecTooManySas": {
                    "type": "boolean",
                    "description": "Enable IPsec Tunnel Start trap\n"
                },
                "enableTrapsIpsecTunnelStart": {
                    "type": "boolean",
                    "description": "Enable IPsec Tunnel Start trap\n"
                },
                "enableTrapsIpsecTunnelStop": {
                    "type": "boolean",
                    "description": "Enable IPsec Tunnel Stop trap\n"
                },
                "enableTrapsIpsla": {
                    "type": "boolean",
                    "description": "Enable IPSLA traps traps\n"
                },
                "enableTrapsIsis": {
                    "type": "boolean",
                    "description": "Enable ISIS traps traps\n"
                },
                "enableTrapsLicense": {
                    "type": "boolean",
                    "description": "Enable license traps\n"
                },
                "enableTrapsLocalAuth": {
                    "type": "boolean",
                    "description": "Enable SNMP local auth traps\n"
                },
                "enableTrapsMacNotificationChange": {
                    "type": "boolean",
                    "description": "Enable SNMP Change traps\n"
                },
                "enableTrapsMacNotificationMove": {
                    "type": "boolean",
                    "description": "Enable SNMP Move traps\n"
                },
                "enableTrapsMacNotificationThreshold": {
                    "type": "boolean",
                    "description": "Enable SNMP Threshold traps\n"
                },
                "enableTrapsMemoryBufferpeak": {
                    "type": "boolean",
                    "description": "Enable SNMP Memory Bufferpeak traps\n"
                },
                "enableTrapsMplsLdp": {
                    "type": "boolean",
                    "description": "SNMP MPLS label distribution protocol traps\n"
                },
                "enableTrapsMplsRfcLdp": {
                    "type": "boolean"
                },
                "enableTrapsMplsTrafficEng": {
                    "type": "boolean"
                },
                "enableTrapsMplsVpn": {
                    "type": "boolean"
                },
                "enableTrapsMsdp": {
                    "type": "boolean",
                    "description": "Enable SNMP MSDP traps\n"
                },
                "enableTrapsNhrpNhc": {
                    "type": "boolean"
                },
                "enableTrapsNhrpNhp": {
                    "type": "boolean"
                },
                "enableTrapsNhrpNhs": {
                    "type": "boolean"
                },
                "enableTrapsNhrpQuotaExceeded": {
                    "type": "boolean"
                },
                "enableTrapsOspfConfigErrors": {
                    "type": "boolean",
                    "description": "Enable all traps of errors\n"
                },
                "enableTrapsOspfConfigLsa": {
                    "type": "boolean",
                    "description": "Enable all traps of lsa\n"
                },
                "enableTrapsOspfConfigRetransmit": {
                    "type": "boolean",
                    "description": "Enable all traps of retransmit\n"
                },
                "enableTrapsOspfConfigStateChange": {
                    "type": "boolean",
                    "description": "Enable all traps of state-change\n"
                },
                "enableTrapsOspfErrorsEnable": {
                    "type": "boolean",
                    "description": "Enable all traps of errors\n"
                },
                "enableTrapsOspfLsaEnable": {
                    "type": "boolean",
                    "description": "Enable all traps of lsa\n"
                },
                "enableTrapsOspfNssaTransChange": {
                    "type": "boolean",
                    "description": "Nssa translator state changes\n"
                },
                "enableTrapsOspfRetransmitEnable": {
                    "type": "boolean",
                    "description": "Enable all traps of retransmit\n"
                },
                "enableTrapsOspfShamlinkInterface": {
                    "type": "boolean",
                    "description": "Sham link interface state changes\n"
                },
                "enableTrapsOspfShamlinkNeighbor": {
                    "type": "boolean",
                    "description": "Sham link neighbor state changes\n"
                },
                "enableTrapsOspfv3ConfigErrors": {
                    "type": "boolean",
                    "description": "Enable all traps of errors\n"
                },
                "enableTrapsOspfv3ConfigStateChange": {
                    "type": "boolean",
                    "description": "Enable all traps of state-change\n"
                },
                "enableTrapsPimInvalidPimMessage": {
                    "type": "boolean",
                    "description": "Enable invalid pim message trap\n"
                },
                "enableTrapsPimNeighborChange": {
                    "type": "boolean",
                    "description": "Enable neighbor change trap\n"
                },
                "enableTrapsPimRpMappingChange": {
                    "type": "boolean",
                    "description": "Enable rp mapping change trap\n"
                },
                "enableTrapsPortSecurity": {
                    "type": "boolean",
                    "description": "Enable SNMP port security traps\n"
                },
                "enableTrapsPowerEthernetGroup": {
                    "type": "string",
                    "description": "Enable SNMP inline power group based traps\n"
                },
                "enableTrapsPowerEthernetPolice": {
                    "type": "boolean",
                    "description": "Enable Policing Trap\n"
                },
                "enableTrapsPwVc": {
                    "type": "boolean"
                },
                "enableTrapsRep": {
                    "type": "boolean"
                },
                "enableTrapsRf": {
                    "type": "boolean",
                    "description": "Enable all SNMP traps defined in CISCO-RF-MIB\n"
                },
                "enableTrapsSmartLicense": {
                    "type": "boolean",
                    "description": "Enable smart license traps\n"
                },
                "enableTrapsSnmpAuthentication": {
                    "type": "boolean",
                    "description": "Enable authentication trap\n"
                },
                "enableTrapsSnmpColdstart": {
                    "type": "boolean",
                    "description": "Enable coldStart trap\n"
                },
                "enableTrapsSnmpLinkdown": {
                    "type": "boolean",
                    "description": "Enable linkDown trap\n"
                },
                "enableTrapsSnmpLinkup": {
                    "type": "boolean",
                    "description": "Enable linkUp trap\n"
                },
                "enableTrapsSnmpWarmstart": {
                    "type": "boolean",
                    "description": "Enable warmStart trap\n"
                },
                "enableTrapsStackwise": {
                    "type": "boolean",
                    "description": "Enable SNMP stackwise traps\n"
                },
                "enableTrapsStpxInconsistency": {
                    "type": "boolean"
                },
                "enableTrapsStpxLoopInconsistency": {
                    "type": "boolean"
                },
                "enableTrapsStpxRootInconsistency": {
                    "type": "boolean"
                },
                "enableTrapsSyslog": {
                    "type": "boolean",
                    "description": "Enable SNMP syslog traps\n"
                },
                "enableTrapsTransceiverAll": {
                    "type": "boolean"
                },
                "enableTrapsTty": {
                    "type": "boolean",
                    "description": "Enable TCP connection traps\n"
                },
                "enableTrapsUdldLinkFailRpt": {
                    "type": "boolean",
                    "description": "Enable SNMP cudldpFastHelloLinkFailRptNotification traps\n"
                },
                "enableTrapsUdldStatusChange": {
                    "type": "boolean",
                    "description": "Enable SNMP cudldpFastHelloStatusChangeNotification traps\n"
                },
                "enableTrapsVlanMembership": {
                    "type": "boolean"
                },
                "enableTrapsVlancreate": {
                    "type": "boolean"
                },
                "enableTrapsVlandelete": {
                    "type": "boolean"
                },
                "enableTrapsVrfmibVnetTrunkDown": {
                    "type": "boolean"
                },
                "enableTrapsVrfmibVnetTrunkUp": {
                    "type": "boolean"
                },
                "enableTrapsVrfmibVrfDown": {
                    "type": "boolean"
                },
                "enableTrapsVrfmibVrfUp": {
                    "type": "boolean"
                },
                "enableTrapsVtp": {
                    "type": "boolean"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/SnmpServerHost:SnmpServerHost"
                    },
                    "description": "Specify hosts keyed by (ip-address, community-or-user)\n"
                },
                "ifindexPersist": {
                    "type": "boolean",
                    "description": "Persist interface indices\n"
                },
                "location": {
                    "type": "string",
                    "description": "Text for mib object sysLocation\n"
                },
                "packetsize": {
                    "type": "integer",
                    "description": "Largest SNMP packet size - Range: `484`-`17892`\n"
                },
                "queueLength": {
                    "type": "integer",
                    "description": "Message queue length for each TRAP host - Range: `1`-`5000`\n"
                },
                "snmpCommunities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/SnmpServerSnmpCommunity:SnmpServerSnmpCommunity"
                    },
                    "description": "Enable SNMP; set community string and access privs\n"
                },
                "sourceInterfaceInformsFortyGigabitEthernet": {
                    "type": "string",
                    "description": "Forty GigabitEthernet\n"
                },
                "sourceInterfaceInformsGigabitEthernet": {
                    "type": "string",
                    "description": "GigabitEthernet IEEE 802.3z\n"
                },
                "sourceInterfaceInformsHundredGigE": {
                    "type": "string",
                    "description": "Hundred GigabitEthernet\n"
                },
                "sourceInterfaceInformsLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "sourceInterfaceInformsPortChannel": {
                    "type": "integer",
                    "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                },
                "sourceInterfaceInformsPortChannelSubinterface": {
                    "type": "string"
                },
                "sourceInterfaceInformsTenGigabitEthernet": {
                    "type": "string",
                    "description": "Ten Gigabit Ethernet\n"
                },
                "sourceInterfaceInformsVlan": {
                    "type": "integer",
                    "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                },
                "sourceInterfaceTrapsFortyGigabitEthernet": {
                    "type": "string",
                    "description": "Forty GigabitEthernet\n"
                },
                "sourceInterfaceTrapsGigabitEthernet": {
                    "type": "string",
                    "description": "GigabitEthernet IEEE 802.3z\n"
                },
                "sourceInterfaceTrapsHundredGigE": {
                    "type": "string",
                    "description": "Hundred GigabitEthernet\n"
                },
                "sourceInterfaceTrapsLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "sourceInterfaceTrapsPortChannel": {
                    "type": "integer",
                    "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                },
                "sourceInterfaceTrapsPortChannelSubinterface": {
                    "type": "string"
                },
                "sourceInterfaceTrapsTenGigabitEthernet": {
                    "type": "string",
                    "description": "Ten Gigabit Ethernet\n"
                },
                "sourceInterfaceTrapsVlan": {
                    "type": "integer",
                    "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                },
                "systemShutdown": {
                    "type": "boolean",
                    "description": "Enable use of the SNMP reload command\n"
                },
                "trapSourceFortyGigabitEthernet": {
                    "type": "string",
                    "description": "Forty GigabitEthernet\n"
                },
                "trapSourceGigabitEthernet": {
                    "type": "string",
                    "description": "GigabitEthernet IEEE 802.3z\n"
                },
                "trapSourceHundredGigE": {
                    "type": "string",
                    "description": "Hundred GigabitEthernet\n"
                },
                "trapSourceLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "trapSourcePortChannel": {
                    "type": "integer",
                    "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                },
                "trapSourcePortChannelSubinterface": {
                    "type": "string"
                },
                "trapSourceTenGigabitEthernet": {
                    "type": "string",
                    "description": "Ten Gigabit Ethernet\n"
                },
                "trapSourceVlan": {
                    "type": "integer",
                    "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                },
                "views": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/SnmpServerView:SnmpServerView"
                    },
                    "description": "Define an SNMPv2 MIB view\n"
                }
            },
            "inputProperties": {
                "chassisId": {
                    "type": "string",
                    "description": "String to uniquely identify this chassis\n"
                },
                "contact": {
                    "type": "string",
                    "description": "Text for mib object sysContact\n"
                },
                "contexts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/SnmpServerContext:SnmpServerContext"
                    },
                    "description": "Create/Delete a context apart from default\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "enableInforms": {
                    "type": "boolean",
                    "description": "Enable SNMP Informs\n"
                },
                "enableLoggingGetop": {
                    "type": "boolean",
                    "description": "Enable SNMP GET Operation logging\n"
                },
                "enableLoggingSetop": {
                    "type": "boolean",
                    "description": "Enable SNMP SET Operation logging\n"
                },
                "enableTraps": {
                    "type": "boolean",
                    "description": "Enable SNMP Traps\n"
                },
                "enableTrapsAuthFrameworkSecViolation": {
                    "type": "boolean"
                },
                "enableTrapsBfd": {
                    "type": "boolean"
                },
                "enableTrapsBgpCbgp2": {
                    "type": "boolean",
                    "description": "Enable BGP MIBv2 traps\n"
                },
                "enableTrapsBridgeNewroot": {
                    "type": "boolean"
                },
                "enableTrapsBridgeTopologychange": {
                    "type": "boolean"
                },
                "enableTrapsBulkstatCollection": {
                    "type": "boolean",
                    "description": "Enable Data-Collection-MIB Collection notifications\n"
                },
                "enableTrapsBulkstatTransfer": {
                    "type": "boolean",
                    "description": "Enable Data-Collection-MIB Transfer notifications\n"
                },
                "enableTrapsCallHomeMessageSendFail": {
                    "type": "boolean"
                },
                "enableTrapsCallHomeServerFail": {
                    "type": "boolean"
                },
                "enableTrapsCefInconsistency": {
                    "type": "boolean"
                },
                "enableTrapsCefPeerFibStateChange": {
                    "type": "boolean"
                },
                "enableTrapsCefPeerStateChange": {
                    "type": "boolean"
                },
                "enableTrapsCefResourceFailure": {
                    "type": "boolean"
                },
                "enableTrapsConfig": {
                    "type": "boolean",
                    "description": "Enable SNMP config traps\n"
                },
                "enableTrapsConfigCopy": {
                    "type": "boolean",
                    "description": "Enable SNMP config-copy traps\n"
                },
                "enableTrapsConfigCtid": {
                    "type": "boolean"
                },
                "enableTrapsCpuThreshold": {
                    "type": "boolean",
                    "description": "Allow CPU utilization threshold violation traps\n"
                },
                "enableTrapsDhcp": {
                    "type": "boolean",
                    "description": "Enable SNMP dhcp traps\n"
                },
                "enableTrapsEigrp": {
                    "type": "boolean",
                    "description": "Enable SNMP EIGRP traps\n"
                },
                "enableTrapsEnergywise": {
                    "type": "boolean"
                },
                "enableTrapsEntity": {
                    "type": "boolean",
                    "description": "Enable SNMP entity traps\n"
                },
                "enableTrapsEntityDiagBootUpFail": {
                    "type": "boolean",
                    "description": "Enable SNMP ceDiagBootUpFailedNotif traps\n"
                },
                "enableTrapsEntityDiagHmTestRecover": {
                    "type": "boolean",
                    "description": "Enable SNMP ceDiagHMTestRecoverNotif traps\n"
                },
                "enableTrapsEntityDiagHmThreshReached": {
                    "type": "boolean",
                    "description": "Enable SNMP ceDiagHMThresholdReachedNotif traps\n"
                },
                "enableTrapsEntityDiagScheduledTestFail": {
                    "type": "boolean",
                    "description": "Enable SNMP ceDiagScheduledTestFailedNotif traps\n"
                },
                "enableTrapsEntityPerfThroughputNotif": {
                    "type": "boolean",
                    "description": "Enable ENTITY PERFORMANCE MIB throughput traps\n"
                },
                "enableTrapsEnvmon": {
                    "type": "boolean",
                    "description": "Enable SNMP environmental monitor traps\n"
                },
                "enableTrapsErrdisable": {
                    "type": "boolean",
                    "description": "Enable SNMP errdisable notifications\n"
                },
                "enableTrapsEventManager": {
                    "type": "boolean",
                    "description": "Enable SNMP Embedded Event Manager traps\n"
                },
                "enableTrapsFastRerouteProtected": {
                    "type": "boolean"
                },
                "enableTrapsFlashInsertion": {
                    "type": "boolean",
                    "description": "Enable SNMP Flash Insertion notifications\n"
                },
                "enableTrapsFlashLowspace": {
                    "type": "boolean",
                    "description": "Enable SNMP Flash Lowspace notifications\n"
                },
                "enableTrapsFlashRemoval": {
                    "type": "boolean",
                    "description": "Enable SNMP Flash Removal notifications\n"
                },
                "enableTrapsFlowmon": {
                    "type": "boolean",
                    "description": "Enable SNMP flowmon notifications\n"
                },
                "enableTrapsFruCtrl": {
                    "type": "boolean",
                    "description": "Enable SNMP entity FRU control traps\n"
                },
                "enableTrapsHsrp": {
                    "type": "boolean",
                    "description": "Enable SNMP HSRP traps\n"
                },
                "enableTrapsIkePolicyAdd": {
                    "type": "boolean",
                    "description": "Enable IKE Policy add trap\n"
                },
                "enableTrapsIkePolicyDelete": {
                    "type": "boolean",
                    "description": "Enable IKE Policy delete trap\n"
                },
                "enableTrapsIkeTunnelStart": {
                    "type": "boolean",
                    "description": "Enable IKE Tunnel start trap\n"
                },
                "enableTrapsIkeTunnelStop": {
                    "type": "boolean",
                    "description": "Enable IKE Tunnel stop trap\n"
                },
                "enableTrapsIpmulticast": {
                    "type": "boolean",
                    "description": "Enable SNMP ipmulticast traps\n"
                },
                "enableTrapsIpsecCryptomapAdd": {
                    "type": "boolean",
                    "description": "Enable IPsec Cryptomap add trap\n"
                },
                "enableTrapsIpsecCryptomapAttach": {
                    "type": "boolean",
                    "description": "Enable IPsec Cryptomap Attach trap\n"
                },
                "enableTrapsIpsecCryptomapDelete": {
                    "type": "boolean",
                    "description": "Enable IPsec Cryptomap delete trap\n"
                },
                "enableTrapsIpsecCryptomapDetach": {
                    "type": "boolean",
                    "description": "Enable IPsec Cryptomap Detach trap\n"
                },
                "enableTrapsIpsecTooManySas": {
                    "type": "boolean",
                    "description": "Enable IPsec Tunnel Start trap\n"
                },
                "enableTrapsIpsecTunnelStart": {
                    "type": "boolean",
                    "description": "Enable IPsec Tunnel Start trap\n"
                },
                "enableTrapsIpsecTunnelStop": {
                    "type": "boolean",
                    "description": "Enable IPsec Tunnel Stop trap\n"
                },
                "enableTrapsIpsla": {
                    "type": "boolean",
                    "description": "Enable IPSLA traps traps\n"
                },
                "enableTrapsIsis": {
                    "type": "boolean",
                    "description": "Enable ISIS traps traps\n"
                },
                "enableTrapsLicense": {
                    "type": "boolean",
                    "description": "Enable license traps\n"
                },
                "enableTrapsLocalAuth": {
                    "type": "boolean",
                    "description": "Enable SNMP local auth traps\n"
                },
                "enableTrapsMacNotificationChange": {
                    "type": "boolean",
                    "description": "Enable SNMP Change traps\n"
                },
                "enableTrapsMacNotificationMove": {
                    "type": "boolean",
                    "description": "Enable SNMP Move traps\n"
                },
                "enableTrapsMacNotificationThreshold": {
                    "type": "boolean",
                    "description": "Enable SNMP Threshold traps\n"
                },
                "enableTrapsMemoryBufferpeak": {
                    "type": "boolean",
                    "description": "Enable SNMP Memory Bufferpeak traps\n"
                },
                "enableTrapsMplsLdp": {
                    "type": "boolean",
                    "description": "SNMP MPLS label distribution protocol traps\n"
                },
                "enableTrapsMplsRfcLdp": {
                    "type": "boolean"
                },
                "enableTrapsMplsTrafficEng": {
                    "type": "boolean"
                },
                "enableTrapsMplsVpn": {
                    "type": "boolean"
                },
                "enableTrapsMsdp": {
                    "type": "boolean",
                    "description": "Enable SNMP MSDP traps\n"
                },
                "enableTrapsNhrpNhc": {
                    "type": "boolean"
                },
                "enableTrapsNhrpNhp": {
                    "type": "boolean"
                },
                "enableTrapsNhrpNhs": {
                    "type": "boolean"
                },
                "enableTrapsNhrpQuotaExceeded": {
                    "type": "boolean"
                },
                "enableTrapsOspfConfigErrors": {
                    "type": "boolean",
                    "description": "Enable all traps of errors\n"
                },
                "enableTrapsOspfConfigLsa": {
                    "type": "boolean",
                    "description": "Enable all traps of lsa\n"
                },
                "enableTrapsOspfConfigRetransmit": {
                    "type": "boolean",
                    "description": "Enable all traps of retransmit\n"
                },
                "enableTrapsOspfConfigStateChange": {
                    "type": "boolean",
                    "description": "Enable all traps of state-change\n"
                },
                "enableTrapsOspfErrorsEnable": {
                    "type": "boolean",
                    "description": "Enable all traps of errors\n"
                },
                "enableTrapsOspfLsaEnable": {
                    "type": "boolean",
                    "description": "Enable all traps of lsa\n"
                },
                "enableTrapsOspfNssaTransChange": {
                    "type": "boolean",
                    "description": "Nssa translator state changes\n"
                },
                "enableTrapsOspfRetransmitEnable": {
                    "type": "boolean",
                    "description": "Enable all traps of retransmit\n"
                },
                "enableTrapsOspfShamlinkInterface": {
                    "type": "boolean",
                    "description": "Sham link interface state changes\n"
                },
                "enableTrapsOspfShamlinkNeighbor": {
                    "type": "boolean",
                    "description": "Sham link neighbor state changes\n"
                },
                "enableTrapsOspfv3ConfigErrors": {
                    "type": "boolean",
                    "description": "Enable all traps of errors\n"
                },
                "enableTrapsOspfv3ConfigStateChange": {
                    "type": "boolean",
                    "description": "Enable all traps of state-change\n"
                },
                "enableTrapsPimInvalidPimMessage": {
                    "type": "boolean",
                    "description": "Enable invalid pim message trap\n"
                },
                "enableTrapsPimNeighborChange": {
                    "type": "boolean",
                    "description": "Enable neighbor change trap\n"
                },
                "enableTrapsPimRpMappingChange": {
                    "type": "boolean",
                    "description": "Enable rp mapping change trap\n"
                },
                "enableTrapsPortSecurity": {
                    "type": "boolean",
                    "description": "Enable SNMP port security traps\n"
                },
                "enableTrapsPowerEthernetGroup": {
                    "type": "string",
                    "description": "Enable SNMP inline power group based traps\n"
                },
                "enableTrapsPowerEthernetPolice": {
                    "type": "boolean",
                    "description": "Enable Policing Trap\n"
                },
                "enableTrapsPwVc": {
                    "type": "boolean"
                },
                "enableTrapsRep": {
                    "type": "boolean"
                },
                "enableTrapsRf": {
                    "type": "boolean",
                    "description": "Enable all SNMP traps defined in CISCO-RF-MIB\n"
                },
                "enableTrapsSmartLicense": {
                    "type": "boolean",
                    "description": "Enable smart license traps\n"
                },
                "enableTrapsSnmpAuthentication": {
                    "type": "boolean",
                    "description": "Enable authentication trap\n"
                },
                "enableTrapsSnmpColdstart": {
                    "type": "boolean",
                    "description": "Enable coldStart trap\n"
                },
                "enableTrapsSnmpLinkdown": {
                    "type": "boolean",
                    "description": "Enable linkDown trap\n"
                },
                "enableTrapsSnmpLinkup": {
                    "type": "boolean",
                    "description": "Enable linkUp trap\n"
                },
                "enableTrapsSnmpWarmstart": {
                    "type": "boolean",
                    "description": "Enable warmStart trap\n"
                },
                "enableTrapsStackwise": {
                    "type": "boolean",
                    "description": "Enable SNMP stackwise traps\n"
                },
                "enableTrapsStpxInconsistency": {
                    "type": "boolean"
                },
                "enableTrapsStpxLoopInconsistency": {
                    "type": "boolean"
                },
                "enableTrapsStpxRootInconsistency": {
                    "type": "boolean"
                },
                "enableTrapsSyslog": {
                    "type": "boolean",
                    "description": "Enable SNMP syslog traps\n"
                },
                "enableTrapsTransceiverAll": {
                    "type": "boolean"
                },
                "enableTrapsTty": {
                    "type": "boolean",
                    "description": "Enable TCP connection traps\n"
                },
                "enableTrapsUdldLinkFailRpt": {
                    "type": "boolean",
                    "description": "Enable SNMP cudldpFastHelloLinkFailRptNotification traps\n"
                },
                "enableTrapsUdldStatusChange": {
                    "type": "boolean",
                    "description": "Enable SNMP cudldpFastHelloStatusChangeNotification traps\n"
                },
                "enableTrapsVlanMembership": {
                    "type": "boolean"
                },
                "enableTrapsVlancreate": {
                    "type": "boolean"
                },
                "enableTrapsVlandelete": {
                    "type": "boolean"
                },
                "enableTrapsVrfmibVnetTrunkDown": {
                    "type": "boolean"
                },
                "enableTrapsVrfmibVnetTrunkUp": {
                    "type": "boolean"
                },
                "enableTrapsVrfmibVrfDown": {
                    "type": "boolean"
                },
                "enableTrapsVrfmibVrfUp": {
                    "type": "boolean"
                },
                "enableTrapsVtp": {
                    "type": "boolean"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/SnmpServerHost:SnmpServerHost"
                    },
                    "description": "Specify hosts keyed by (ip-address, community-or-user)\n"
                },
                "ifindexPersist": {
                    "type": "boolean",
                    "description": "Persist interface indices\n"
                },
                "location": {
                    "type": "string",
                    "description": "Text for mib object sysLocation\n"
                },
                "packetsize": {
                    "type": "integer",
                    "description": "Largest SNMP packet size - Range: `484`-`17892`\n"
                },
                "queueLength": {
                    "type": "integer",
                    "description": "Message queue length for each TRAP host - Range: `1`-`5000`\n"
                },
                "snmpCommunities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/SnmpServerSnmpCommunity:SnmpServerSnmpCommunity"
                    },
                    "description": "Enable SNMP; set community string and access privs\n"
                },
                "sourceInterfaceInformsFortyGigabitEthernet": {
                    "type": "string",
                    "description": "Forty GigabitEthernet\n"
                },
                "sourceInterfaceInformsGigabitEthernet": {
                    "type": "string",
                    "description": "GigabitEthernet IEEE 802.3z\n"
                },
                "sourceInterfaceInformsHundredGigE": {
                    "type": "string",
                    "description": "Hundred GigabitEthernet\n"
                },
                "sourceInterfaceInformsLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "sourceInterfaceInformsPortChannel": {
                    "type": "integer",
                    "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                },
                "sourceInterfaceInformsPortChannelSubinterface": {
                    "type": "string"
                },
                "sourceInterfaceInformsTenGigabitEthernet": {
                    "type": "string",
                    "description": "Ten Gigabit Ethernet\n"
                },
                "sourceInterfaceInformsVlan": {
                    "type": "integer",
                    "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                },
                "sourceInterfaceTrapsFortyGigabitEthernet": {
                    "type": "string",
                    "description": "Forty GigabitEthernet\n"
                },
                "sourceInterfaceTrapsGigabitEthernet": {
                    "type": "string",
                    "description": "GigabitEthernet IEEE 802.3z\n"
                },
                "sourceInterfaceTrapsHundredGigE": {
                    "type": "string",
                    "description": "Hundred GigabitEthernet\n"
                },
                "sourceInterfaceTrapsLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "sourceInterfaceTrapsPortChannel": {
                    "type": "integer",
                    "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                },
                "sourceInterfaceTrapsPortChannelSubinterface": {
                    "type": "string"
                },
                "sourceInterfaceTrapsTenGigabitEthernet": {
                    "type": "string",
                    "description": "Ten Gigabit Ethernet\n"
                },
                "sourceInterfaceTrapsVlan": {
                    "type": "integer",
                    "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                },
                "systemShutdown": {
                    "type": "boolean",
                    "description": "Enable use of the SNMP reload command\n"
                },
                "trapSourceFortyGigabitEthernet": {
                    "type": "string",
                    "description": "Forty GigabitEthernet\n"
                },
                "trapSourceGigabitEthernet": {
                    "type": "string",
                    "description": "GigabitEthernet IEEE 802.3z\n"
                },
                "trapSourceHundredGigE": {
                    "type": "string",
                    "description": "Hundred GigabitEthernet\n"
                },
                "trapSourceLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "trapSourcePortChannel": {
                    "type": "integer",
                    "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                },
                "trapSourcePortChannelSubinterface": {
                    "type": "string"
                },
                "trapSourceTenGigabitEthernet": {
                    "type": "string",
                    "description": "Ten Gigabit Ethernet\n"
                },
                "trapSourceVlan": {
                    "type": "integer",
                    "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                },
                "views": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/SnmpServerView:SnmpServerView"
                    },
                    "description": "Define an SNMPv2 MIB view\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SnmpServer resources.\n",
                "properties": {
                    "chassisId": {
                        "type": "string",
                        "description": "String to uniquely identify this chassis\n"
                    },
                    "contact": {
                        "type": "string",
                        "description": "Text for mib object sysContact\n"
                    },
                    "contexts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/SnmpServerContext:SnmpServerContext"
                        },
                        "description": "Create/Delete a context apart from default\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "enableInforms": {
                        "type": "boolean",
                        "description": "Enable SNMP Informs\n"
                    },
                    "enableLoggingGetop": {
                        "type": "boolean",
                        "description": "Enable SNMP GET Operation logging\n"
                    },
                    "enableLoggingSetop": {
                        "type": "boolean",
                        "description": "Enable SNMP SET Operation logging\n"
                    },
                    "enableTraps": {
                        "type": "boolean",
                        "description": "Enable SNMP Traps\n"
                    },
                    "enableTrapsAuthFrameworkSecViolation": {
                        "type": "boolean"
                    },
                    "enableTrapsBfd": {
                        "type": "boolean"
                    },
                    "enableTrapsBgpCbgp2": {
                        "type": "boolean",
                        "description": "Enable BGP MIBv2 traps\n"
                    },
                    "enableTrapsBridgeNewroot": {
                        "type": "boolean"
                    },
                    "enableTrapsBridgeTopologychange": {
                        "type": "boolean"
                    },
                    "enableTrapsBulkstatCollection": {
                        "type": "boolean",
                        "description": "Enable Data-Collection-MIB Collection notifications\n"
                    },
                    "enableTrapsBulkstatTransfer": {
                        "type": "boolean",
                        "description": "Enable Data-Collection-MIB Transfer notifications\n"
                    },
                    "enableTrapsCallHomeMessageSendFail": {
                        "type": "boolean"
                    },
                    "enableTrapsCallHomeServerFail": {
                        "type": "boolean"
                    },
                    "enableTrapsCefInconsistency": {
                        "type": "boolean"
                    },
                    "enableTrapsCefPeerFibStateChange": {
                        "type": "boolean"
                    },
                    "enableTrapsCefPeerStateChange": {
                        "type": "boolean"
                    },
                    "enableTrapsCefResourceFailure": {
                        "type": "boolean"
                    },
                    "enableTrapsConfig": {
                        "type": "boolean",
                        "description": "Enable SNMP config traps\n"
                    },
                    "enableTrapsConfigCopy": {
                        "type": "boolean",
                        "description": "Enable SNMP config-copy traps\n"
                    },
                    "enableTrapsConfigCtid": {
                        "type": "boolean"
                    },
                    "enableTrapsCpuThreshold": {
                        "type": "boolean",
                        "description": "Allow CPU utilization threshold violation traps\n"
                    },
                    "enableTrapsDhcp": {
                        "type": "boolean",
                        "description": "Enable SNMP dhcp traps\n"
                    },
                    "enableTrapsEigrp": {
                        "type": "boolean",
                        "description": "Enable SNMP EIGRP traps\n"
                    },
                    "enableTrapsEnergywise": {
                        "type": "boolean"
                    },
                    "enableTrapsEntity": {
                        "type": "boolean",
                        "description": "Enable SNMP entity traps\n"
                    },
                    "enableTrapsEntityDiagBootUpFail": {
                        "type": "boolean",
                        "description": "Enable SNMP ceDiagBootUpFailedNotif traps\n"
                    },
                    "enableTrapsEntityDiagHmTestRecover": {
                        "type": "boolean",
                        "description": "Enable SNMP ceDiagHMTestRecoverNotif traps\n"
                    },
                    "enableTrapsEntityDiagHmThreshReached": {
                        "type": "boolean",
                        "description": "Enable SNMP ceDiagHMThresholdReachedNotif traps\n"
                    },
                    "enableTrapsEntityDiagScheduledTestFail": {
                        "type": "boolean",
                        "description": "Enable SNMP ceDiagScheduledTestFailedNotif traps\n"
                    },
                    "enableTrapsEntityPerfThroughputNotif": {
                        "type": "boolean",
                        "description": "Enable ENTITY PERFORMANCE MIB throughput traps\n"
                    },
                    "enableTrapsEnvmon": {
                        "type": "boolean",
                        "description": "Enable SNMP environmental monitor traps\n"
                    },
                    "enableTrapsErrdisable": {
                        "type": "boolean",
                        "description": "Enable SNMP errdisable notifications\n"
                    },
                    "enableTrapsEventManager": {
                        "type": "boolean",
                        "description": "Enable SNMP Embedded Event Manager traps\n"
                    },
                    "enableTrapsFastRerouteProtected": {
                        "type": "boolean"
                    },
                    "enableTrapsFlashInsertion": {
                        "type": "boolean",
                        "description": "Enable SNMP Flash Insertion notifications\n"
                    },
                    "enableTrapsFlashLowspace": {
                        "type": "boolean",
                        "description": "Enable SNMP Flash Lowspace notifications\n"
                    },
                    "enableTrapsFlashRemoval": {
                        "type": "boolean",
                        "description": "Enable SNMP Flash Removal notifications\n"
                    },
                    "enableTrapsFlowmon": {
                        "type": "boolean",
                        "description": "Enable SNMP flowmon notifications\n"
                    },
                    "enableTrapsFruCtrl": {
                        "type": "boolean",
                        "description": "Enable SNMP entity FRU control traps\n"
                    },
                    "enableTrapsHsrp": {
                        "type": "boolean",
                        "description": "Enable SNMP HSRP traps\n"
                    },
                    "enableTrapsIkePolicyAdd": {
                        "type": "boolean",
                        "description": "Enable IKE Policy add trap\n"
                    },
                    "enableTrapsIkePolicyDelete": {
                        "type": "boolean",
                        "description": "Enable IKE Policy delete trap\n"
                    },
                    "enableTrapsIkeTunnelStart": {
                        "type": "boolean",
                        "description": "Enable IKE Tunnel start trap\n"
                    },
                    "enableTrapsIkeTunnelStop": {
                        "type": "boolean",
                        "description": "Enable IKE Tunnel stop trap\n"
                    },
                    "enableTrapsIpmulticast": {
                        "type": "boolean",
                        "description": "Enable SNMP ipmulticast traps\n"
                    },
                    "enableTrapsIpsecCryptomapAdd": {
                        "type": "boolean",
                        "description": "Enable IPsec Cryptomap add trap\n"
                    },
                    "enableTrapsIpsecCryptomapAttach": {
                        "type": "boolean",
                        "description": "Enable IPsec Cryptomap Attach trap\n"
                    },
                    "enableTrapsIpsecCryptomapDelete": {
                        "type": "boolean",
                        "description": "Enable IPsec Cryptomap delete trap\n"
                    },
                    "enableTrapsIpsecCryptomapDetach": {
                        "type": "boolean",
                        "description": "Enable IPsec Cryptomap Detach trap\n"
                    },
                    "enableTrapsIpsecTooManySas": {
                        "type": "boolean",
                        "description": "Enable IPsec Tunnel Start trap\n"
                    },
                    "enableTrapsIpsecTunnelStart": {
                        "type": "boolean",
                        "description": "Enable IPsec Tunnel Start trap\n"
                    },
                    "enableTrapsIpsecTunnelStop": {
                        "type": "boolean",
                        "description": "Enable IPsec Tunnel Stop trap\n"
                    },
                    "enableTrapsIpsla": {
                        "type": "boolean",
                        "description": "Enable IPSLA traps traps\n"
                    },
                    "enableTrapsIsis": {
                        "type": "boolean",
                        "description": "Enable ISIS traps traps\n"
                    },
                    "enableTrapsLicense": {
                        "type": "boolean",
                        "description": "Enable license traps\n"
                    },
                    "enableTrapsLocalAuth": {
                        "type": "boolean",
                        "description": "Enable SNMP local auth traps\n"
                    },
                    "enableTrapsMacNotificationChange": {
                        "type": "boolean",
                        "description": "Enable SNMP Change traps\n"
                    },
                    "enableTrapsMacNotificationMove": {
                        "type": "boolean",
                        "description": "Enable SNMP Move traps\n"
                    },
                    "enableTrapsMacNotificationThreshold": {
                        "type": "boolean",
                        "description": "Enable SNMP Threshold traps\n"
                    },
                    "enableTrapsMemoryBufferpeak": {
                        "type": "boolean",
                        "description": "Enable SNMP Memory Bufferpeak traps\n"
                    },
                    "enableTrapsMplsLdp": {
                        "type": "boolean",
                        "description": "SNMP MPLS label distribution protocol traps\n"
                    },
                    "enableTrapsMplsRfcLdp": {
                        "type": "boolean"
                    },
                    "enableTrapsMplsTrafficEng": {
                        "type": "boolean"
                    },
                    "enableTrapsMplsVpn": {
                        "type": "boolean"
                    },
                    "enableTrapsMsdp": {
                        "type": "boolean",
                        "description": "Enable SNMP MSDP traps\n"
                    },
                    "enableTrapsNhrpNhc": {
                        "type": "boolean"
                    },
                    "enableTrapsNhrpNhp": {
                        "type": "boolean"
                    },
                    "enableTrapsNhrpNhs": {
                        "type": "boolean"
                    },
                    "enableTrapsNhrpQuotaExceeded": {
                        "type": "boolean"
                    },
                    "enableTrapsOspfConfigErrors": {
                        "type": "boolean",
                        "description": "Enable all traps of errors\n"
                    },
                    "enableTrapsOspfConfigLsa": {
                        "type": "boolean",
                        "description": "Enable all traps of lsa\n"
                    },
                    "enableTrapsOspfConfigRetransmit": {
                        "type": "boolean",
                        "description": "Enable all traps of retransmit\n"
                    },
                    "enableTrapsOspfConfigStateChange": {
                        "type": "boolean",
                        "description": "Enable all traps of state-change\n"
                    },
                    "enableTrapsOspfErrorsEnable": {
                        "type": "boolean",
                        "description": "Enable all traps of errors\n"
                    },
                    "enableTrapsOspfLsaEnable": {
                        "type": "boolean",
                        "description": "Enable all traps of lsa\n"
                    },
                    "enableTrapsOspfNssaTransChange": {
                        "type": "boolean",
                        "description": "Nssa translator state changes\n"
                    },
                    "enableTrapsOspfRetransmitEnable": {
                        "type": "boolean",
                        "description": "Enable all traps of retransmit\n"
                    },
                    "enableTrapsOspfShamlinkInterface": {
                        "type": "boolean",
                        "description": "Sham link interface state changes\n"
                    },
                    "enableTrapsOspfShamlinkNeighbor": {
                        "type": "boolean",
                        "description": "Sham link neighbor state changes\n"
                    },
                    "enableTrapsOspfv3ConfigErrors": {
                        "type": "boolean",
                        "description": "Enable all traps of errors\n"
                    },
                    "enableTrapsOspfv3ConfigStateChange": {
                        "type": "boolean",
                        "description": "Enable all traps of state-change\n"
                    },
                    "enableTrapsPimInvalidPimMessage": {
                        "type": "boolean",
                        "description": "Enable invalid pim message trap\n"
                    },
                    "enableTrapsPimNeighborChange": {
                        "type": "boolean",
                        "description": "Enable neighbor change trap\n"
                    },
                    "enableTrapsPimRpMappingChange": {
                        "type": "boolean",
                        "description": "Enable rp mapping change trap\n"
                    },
                    "enableTrapsPortSecurity": {
                        "type": "boolean",
                        "description": "Enable SNMP port security traps\n"
                    },
                    "enableTrapsPowerEthernetGroup": {
                        "type": "string",
                        "description": "Enable SNMP inline power group based traps\n"
                    },
                    "enableTrapsPowerEthernetPolice": {
                        "type": "boolean",
                        "description": "Enable Policing Trap\n"
                    },
                    "enableTrapsPwVc": {
                        "type": "boolean"
                    },
                    "enableTrapsRep": {
                        "type": "boolean"
                    },
                    "enableTrapsRf": {
                        "type": "boolean",
                        "description": "Enable all SNMP traps defined in CISCO-RF-MIB\n"
                    },
                    "enableTrapsSmartLicense": {
                        "type": "boolean",
                        "description": "Enable smart license traps\n"
                    },
                    "enableTrapsSnmpAuthentication": {
                        "type": "boolean",
                        "description": "Enable authentication trap\n"
                    },
                    "enableTrapsSnmpColdstart": {
                        "type": "boolean",
                        "description": "Enable coldStart trap\n"
                    },
                    "enableTrapsSnmpLinkdown": {
                        "type": "boolean",
                        "description": "Enable linkDown trap\n"
                    },
                    "enableTrapsSnmpLinkup": {
                        "type": "boolean",
                        "description": "Enable linkUp trap\n"
                    },
                    "enableTrapsSnmpWarmstart": {
                        "type": "boolean",
                        "description": "Enable warmStart trap\n"
                    },
                    "enableTrapsStackwise": {
                        "type": "boolean",
                        "description": "Enable SNMP stackwise traps\n"
                    },
                    "enableTrapsStpxInconsistency": {
                        "type": "boolean"
                    },
                    "enableTrapsStpxLoopInconsistency": {
                        "type": "boolean"
                    },
                    "enableTrapsStpxRootInconsistency": {
                        "type": "boolean"
                    },
                    "enableTrapsSyslog": {
                        "type": "boolean",
                        "description": "Enable SNMP syslog traps\n"
                    },
                    "enableTrapsTransceiverAll": {
                        "type": "boolean"
                    },
                    "enableTrapsTty": {
                        "type": "boolean",
                        "description": "Enable TCP connection traps\n"
                    },
                    "enableTrapsUdldLinkFailRpt": {
                        "type": "boolean",
                        "description": "Enable SNMP cudldpFastHelloLinkFailRptNotification traps\n"
                    },
                    "enableTrapsUdldStatusChange": {
                        "type": "boolean",
                        "description": "Enable SNMP cudldpFastHelloStatusChangeNotification traps\n"
                    },
                    "enableTrapsVlanMembership": {
                        "type": "boolean"
                    },
                    "enableTrapsVlancreate": {
                        "type": "boolean"
                    },
                    "enableTrapsVlandelete": {
                        "type": "boolean"
                    },
                    "enableTrapsVrfmibVnetTrunkDown": {
                        "type": "boolean"
                    },
                    "enableTrapsVrfmibVnetTrunkUp": {
                        "type": "boolean"
                    },
                    "enableTrapsVrfmibVrfDown": {
                        "type": "boolean"
                    },
                    "enableTrapsVrfmibVrfUp": {
                        "type": "boolean"
                    },
                    "enableTrapsVtp": {
                        "type": "boolean"
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/SnmpServerHost:SnmpServerHost"
                        },
                        "description": "Specify hosts keyed by (ip-address, community-or-user)\n"
                    },
                    "ifindexPersist": {
                        "type": "boolean",
                        "description": "Persist interface indices\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "Text for mib object sysLocation\n"
                    },
                    "packetsize": {
                        "type": "integer",
                        "description": "Largest SNMP packet size - Range: `484`-`17892`\n"
                    },
                    "queueLength": {
                        "type": "integer",
                        "description": "Message queue length for each TRAP host - Range: `1`-`5000`\n"
                    },
                    "snmpCommunities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/SnmpServerSnmpCommunity:SnmpServerSnmpCommunity"
                        },
                        "description": "Enable SNMP; set community string and access privs\n"
                    },
                    "sourceInterfaceInformsFortyGigabitEthernet": {
                        "type": "string",
                        "description": "Forty GigabitEthernet\n"
                    },
                    "sourceInterfaceInformsGigabitEthernet": {
                        "type": "string",
                        "description": "GigabitEthernet IEEE 802.3z\n"
                    },
                    "sourceInterfaceInformsHundredGigE": {
                        "type": "string",
                        "description": "Hundred GigabitEthernet\n"
                    },
                    "sourceInterfaceInformsLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    },
                    "sourceInterfaceInformsPortChannel": {
                        "type": "integer",
                        "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                    },
                    "sourceInterfaceInformsPortChannelSubinterface": {
                        "type": "string"
                    },
                    "sourceInterfaceInformsTenGigabitEthernet": {
                        "type": "string",
                        "description": "Ten Gigabit Ethernet\n"
                    },
                    "sourceInterfaceInformsVlan": {
                        "type": "integer",
                        "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                    },
                    "sourceInterfaceTrapsFortyGigabitEthernet": {
                        "type": "string",
                        "description": "Forty GigabitEthernet\n"
                    },
                    "sourceInterfaceTrapsGigabitEthernet": {
                        "type": "string",
                        "description": "GigabitEthernet IEEE 802.3z\n"
                    },
                    "sourceInterfaceTrapsHundredGigE": {
                        "type": "string",
                        "description": "Hundred GigabitEthernet\n"
                    },
                    "sourceInterfaceTrapsLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    },
                    "sourceInterfaceTrapsPortChannel": {
                        "type": "integer",
                        "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                    },
                    "sourceInterfaceTrapsPortChannelSubinterface": {
                        "type": "string"
                    },
                    "sourceInterfaceTrapsTenGigabitEthernet": {
                        "type": "string",
                        "description": "Ten Gigabit Ethernet\n"
                    },
                    "sourceInterfaceTrapsVlan": {
                        "type": "integer",
                        "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                    },
                    "systemShutdown": {
                        "type": "boolean",
                        "description": "Enable use of the SNMP reload command\n"
                    },
                    "trapSourceFortyGigabitEthernet": {
                        "type": "string",
                        "description": "Forty GigabitEthernet\n"
                    },
                    "trapSourceGigabitEthernet": {
                        "type": "string",
                        "description": "GigabitEthernet IEEE 802.3z\n"
                    },
                    "trapSourceHundredGigE": {
                        "type": "string",
                        "description": "Hundred GigabitEthernet\n"
                    },
                    "trapSourceLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    },
                    "trapSourcePortChannel": {
                        "type": "integer",
                        "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                    },
                    "trapSourcePortChannelSubinterface": {
                        "type": "string"
                    },
                    "trapSourceTenGigabitEthernet": {
                        "type": "string",
                        "description": "Ten Gigabit Ethernet\n"
                    },
                    "trapSourceVlan": {
                        "type": "integer",
                        "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                    },
                    "views": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/SnmpServerView:SnmpServerView"
                        },
                        "description": "Define an SNMPv2 MIB view\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/snmpServerGroup:SnmpServerGroup": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "v3Securities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/SnmpServerGroupV3Security:SnmpServerGroupV3Security"
                    },
                    "description": "group using security Level\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "v3Securities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/SnmpServerGroupV3Security:SnmpServerGroupV3Security"
                    },
                    "description": "group using security Level\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SnmpServerGroup resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "v3Securities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/SnmpServerGroupV3Security:SnmpServerGroupV3Security"
                        },
                        "description": "group using security Level\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/snmpServerUser:SnmpServerUser": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "grpname": {
                    "type": "string",
                    "description": "Group to which the user belongs\n"
                },
                "username": {
                    "type": "string",
                    "description": "Name of the user\n"
                },
                "v3AuthAccessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "v3AuthAccessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "v3AuthAccessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                },
                "v3AuthAlgorithm": {
                    "type": "string",
                    "description": "Use HMAC SHA/MD5 algorithm for authentication - Choices: `md5`, `sha`\n"
                },
                "v3AuthPassword": {
                    "type": "string",
                    "description": "Authentication password for user\n"
                },
                "v3AuthPrivAesAccessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "v3AuthPrivAesAccessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "v3AuthPrivAesAccessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                },
                "v3AuthPrivAesAlgorithm": {
                    "type": "string",
                    "description": "- Choices: `128`, `192`, `256`\n"
                },
                "v3AuthPrivAesPassword": {
                    "type": "string",
                    "description": "Authentication password for user\n"
                },
                "v3AuthPrivDes3AccessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "v3AuthPrivDes3AccessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "v3AuthPrivDes3AccessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                },
                "v3AuthPrivDes3Password": {
                    "type": "string",
                    "description": "Authentication password for user\n"
                },
                "v3AuthPrivDesAccessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "v3AuthPrivDesAccessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "v3AuthPrivDesAccessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                },
                "v3AuthPrivDesPassword": {
                    "type": "string",
                    "description": "Authentication password for user\n"
                }
            },
            "required": [
                "grpname",
                "username",
                "v3AuthAlgorithm",
                "v3AuthPassword"
            ],
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "grpname": {
                    "type": "string",
                    "description": "Group to which the user belongs\n"
                },
                "username": {
                    "type": "string",
                    "description": "Name of the user\n"
                },
                "v3AuthAccessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "v3AuthAccessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "v3AuthAccessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                },
                "v3AuthAlgorithm": {
                    "type": "string",
                    "description": "Use HMAC SHA/MD5 algorithm for authentication - Choices: `md5`, `sha`\n"
                },
                "v3AuthPassword": {
                    "type": "string",
                    "description": "Authentication password for user\n"
                },
                "v3AuthPrivAesAccessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "v3AuthPrivAesAccessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "v3AuthPrivAesAccessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                },
                "v3AuthPrivAesAlgorithm": {
                    "type": "string",
                    "description": "- Choices: `128`, `192`, `256`\n"
                },
                "v3AuthPrivAesPassword": {
                    "type": "string",
                    "description": "Authentication password for user\n"
                },
                "v3AuthPrivDes3AccessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "v3AuthPrivDes3AccessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "v3AuthPrivDes3AccessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                },
                "v3AuthPrivDes3Password": {
                    "type": "string",
                    "description": "Authentication password for user\n"
                },
                "v3AuthPrivDesAccessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "v3AuthPrivDesAccessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "v3AuthPrivDesAccessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                },
                "v3AuthPrivDesPassword": {
                    "type": "string",
                    "description": "Authentication password for user\n"
                }
            },
            "requiredInputs": [
                "grpname",
                "username",
                "v3AuthAlgorithm",
                "v3AuthPassword"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SnmpServerUser resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "grpname": {
                        "type": "string",
                        "description": "Group to which the user belongs\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Name of the user\n"
                    },
                    "v3AuthAccessAclName": {
                        "type": "string",
                        "description": "Access-list name\n"
                    },
                    "v3AuthAccessIpv6Acl": {
                        "type": "string",
                        "description": "Specify IPv6 Named Access-List\n"
                    },
                    "v3AuthAccessStandardAcl": {
                        "type": "integer",
                        "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                    },
                    "v3AuthAlgorithm": {
                        "type": "string",
                        "description": "Use HMAC SHA/MD5 algorithm for authentication - Choices: `md5`, `sha`\n"
                    },
                    "v3AuthPassword": {
                        "type": "string",
                        "description": "Authentication password for user\n"
                    },
                    "v3AuthPrivAesAccessAclName": {
                        "type": "string",
                        "description": "Access-list name\n"
                    },
                    "v3AuthPrivAesAccessIpv6Acl": {
                        "type": "string",
                        "description": "Specify IPv6 Named Access-List\n"
                    },
                    "v3AuthPrivAesAccessStandardAcl": {
                        "type": "integer",
                        "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                    },
                    "v3AuthPrivAesAlgorithm": {
                        "type": "string",
                        "description": "- Choices: `128`, `192`, `256`\n"
                    },
                    "v3AuthPrivAesPassword": {
                        "type": "string",
                        "description": "Authentication password for user\n"
                    },
                    "v3AuthPrivDes3AccessAclName": {
                        "type": "string",
                        "description": "Access-list name\n"
                    },
                    "v3AuthPrivDes3AccessIpv6Acl": {
                        "type": "string",
                        "description": "Specify IPv6 Named Access-List\n"
                    },
                    "v3AuthPrivDes3AccessStandardAcl": {
                        "type": "integer",
                        "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                    },
                    "v3AuthPrivDes3Password": {
                        "type": "string",
                        "description": "Authentication password for user\n"
                    },
                    "v3AuthPrivDesAccessAclName": {
                        "type": "string",
                        "description": "Access-list name\n"
                    },
                    "v3AuthPrivDesAccessIpv6Acl": {
                        "type": "string",
                        "description": "Specify IPv6 Named Access-List\n"
                    },
                    "v3AuthPrivDesAccessStandardAcl": {
                        "type": "integer",
                        "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                    },
                    "v3AuthPrivDesPassword": {
                        "type": "string",
                        "description": "Authentication password for user\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/staticRoute:StaticRoute": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "mask": {
                    "type": "string"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/StaticRouteNextHop:StaticRouteNextHop"
                    }
                },
                "prefix": {
                    "type": "string"
                }
            },
            "required": [
                "mask",
                "prefix"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "mask": {
                    "type": "string"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/StaticRouteNextHop:StaticRouteNextHop"
                    }
                },
                "prefix": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "mask",
                "prefix"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StaticRoute resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "mask": {
                        "type": "string"
                    },
                    "nextHops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/StaticRouteNextHop:StaticRouteNextHop"
                        }
                    },
                    "prefix": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/staticRouteVrf:StaticRouteVrf": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/StaticRouteVrfRoute:StaticRouteVrfRoute"
                    }
                },
                "vrf": {
                    "type": "string"
                }
            },
            "required": [
                "vrf"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/StaticRouteVrfRoute:StaticRouteVrfRoute"
                    }
                },
                "vrf": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StaticRouteVrf resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/StaticRouteVrfRoute:StaticRouteVrfRoute"
                        }
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/system:System": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Set system's network name\n"
                },
                "ipDomainLookup": {
                    "type": "boolean",
                    "description": "Enable IP Domain Name System hostname translation\n"
                },
                "ipDomainName": {
                    "type": "string",
                    "description": "Define the default domain name\n"
                },
                "ipMulticastRouting": {
                    "type": "boolean",
                    "description": "Enable IP multicast forwarding\n"
                },
                "ipMulticastRoutingDistributed": {
                    "type": "boolean",
                    "description": "Distributed multicast switching\n"
                },
                "ipRouting": {
                    "type": "boolean",
                    "description": "Enable or disable IP routing\n"
                },
                "ipSourceRoute": {
                    "type": "boolean",
                    "description": "Process packets with source routing header options\n"
                },
                "ipv6UnicastRouting": {
                    "type": "boolean",
                    "description": "Enable unicast routing\n"
                },
                "loginDelay": {
                    "type": "integer",
                    "description": "Set delay between successive fail login - Range: `1`-`10`\n"
                },
                "loginOnFailure": {
                    "type": "boolean",
                    "description": "Set options for failed login attempt\n"
                },
                "loginOnFailureLog": {
                    "type": "boolean",
                    "description": "Generate syslogs on failure logins\n"
                },
                "loginOnSuccess": {
                    "type": "boolean",
                    "description": "Set options for successful login attempt\n"
                },
                "loginOnSuccessLog": {
                    "type": "boolean",
                    "description": "Generate syslogs on successful logins\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "- Range: `1500`-`9198`\n"
                },
                "multicastRoutingSwitch": {
                    "type": "boolean",
                    "description": "Enable IP multicast forwarding, some XE devices use this option instead of `multicast_routing`.\n"
                },
                "multicastRoutingVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/SystemMulticastRoutingVrf:SystemMulticastRoutingVrf"
                    },
                    "description": "Select VPN Routing/Forwarding instance\n"
                }
            },
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Set system's network name\n"
                },
                "ipDomainLookup": {
                    "type": "boolean",
                    "description": "Enable IP Domain Name System hostname translation\n"
                },
                "ipDomainName": {
                    "type": "string",
                    "description": "Define the default domain name\n"
                },
                "ipMulticastRouting": {
                    "type": "boolean",
                    "description": "Enable IP multicast forwarding\n"
                },
                "ipMulticastRoutingDistributed": {
                    "type": "boolean",
                    "description": "Distributed multicast switching\n"
                },
                "ipRouting": {
                    "type": "boolean",
                    "description": "Enable or disable IP routing\n"
                },
                "ipSourceRoute": {
                    "type": "boolean",
                    "description": "Process packets with source routing header options\n"
                },
                "ipv6UnicastRouting": {
                    "type": "boolean",
                    "description": "Enable unicast routing\n"
                },
                "loginDelay": {
                    "type": "integer",
                    "description": "Set delay between successive fail login - Range: `1`-`10`\n"
                },
                "loginOnFailure": {
                    "type": "boolean",
                    "description": "Set options for failed login attempt\n"
                },
                "loginOnFailureLog": {
                    "type": "boolean",
                    "description": "Generate syslogs on failure logins\n"
                },
                "loginOnSuccess": {
                    "type": "boolean",
                    "description": "Set options for successful login attempt\n"
                },
                "loginOnSuccessLog": {
                    "type": "boolean",
                    "description": "Generate syslogs on successful logins\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "- Range: `1500`-`9198`\n"
                },
                "multicastRoutingSwitch": {
                    "type": "boolean",
                    "description": "Enable IP multicast forwarding, some XE devices use this option instead of `multicast_routing`.\n"
                },
                "multicastRoutingVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/SystemMulticastRoutingVrf:SystemMulticastRoutingVrf"
                    },
                    "description": "Select VPN Routing/Forwarding instance\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering System resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Set system's network name\n"
                    },
                    "ipDomainLookup": {
                        "type": "boolean",
                        "description": "Enable IP Domain Name System hostname translation\n"
                    },
                    "ipDomainName": {
                        "type": "string",
                        "description": "Define the default domain name\n"
                    },
                    "ipMulticastRouting": {
                        "type": "boolean",
                        "description": "Enable IP multicast forwarding\n"
                    },
                    "ipMulticastRoutingDistributed": {
                        "type": "boolean",
                        "description": "Distributed multicast switching\n"
                    },
                    "ipRouting": {
                        "type": "boolean",
                        "description": "Enable or disable IP routing\n"
                    },
                    "ipSourceRoute": {
                        "type": "boolean",
                        "description": "Process packets with source routing header options\n"
                    },
                    "ipv6UnicastRouting": {
                        "type": "boolean",
                        "description": "Enable unicast routing\n"
                    },
                    "loginDelay": {
                        "type": "integer",
                        "description": "Set delay between successive fail login - Range: `1`-`10`\n"
                    },
                    "loginOnFailure": {
                        "type": "boolean",
                        "description": "Set options for failed login attempt\n"
                    },
                    "loginOnFailureLog": {
                        "type": "boolean",
                        "description": "Generate syslogs on failure logins\n"
                    },
                    "loginOnSuccess": {
                        "type": "boolean",
                        "description": "Set options for successful login attempt\n"
                    },
                    "loginOnSuccessLog": {
                        "type": "boolean",
                        "description": "Generate syslogs on successful logins\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "- Range: `1500`-`9198`\n"
                    },
                    "multicastRoutingSwitch": {
                        "type": "boolean",
                        "description": "Enable IP multicast forwarding, some XE devices use this option instead of `multicast_routing`.\n"
                    },
                    "multicastRoutingVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/SystemMulticastRoutingVrf:SystemMulticastRoutingVrf"
                        },
                        "description": "Select VPN Routing/Forwarding instance\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/tacacsServer:TacacsServer": {
            "properties": {
                "addressIpv4": {
                    "type": "string",
                    "description": "IPv4 address or Hostname for tacacs server\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The UNENCRYPTED (cleartext) server key\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for the tacacs server configuration\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Time to wait for this TACACS server to reply (overrides default) - Range: `1`-`1000`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "addressIpv4": {
                    "type": "string",
                    "description": "IPv4 address or Hostname for tacacs server\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The UNENCRYPTED (cleartext) server key\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for the tacacs server configuration\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Time to wait for this TACACS server to reply (overrides default) - Range: `1`-`1000`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TacacsServer resources.\n",
                "properties": {
                    "addressIpv4": {
                        "type": "string",
                        "description": "IPv4 address or Hostname for tacacs server\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The UNENCRYPTED (cleartext) server key\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the tacacs server configuration\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Time to wait for this TACACS server to reply (overrides default) - Range: `1`-`1000`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/template:Template": {
            "properties": {
                "accessSessionClosed": {
                    "type": "boolean",
                    "description": "Enable closed access on port (disabled by default, i.e. open access)\n"
                },
                "accessSessionControlDirection": {
                    "type": "string",
                    "description": "Set the control-direction on the interface - Choices: `both`, `in`\n"
                },
                "accessSessionHostMode": {
                    "type": "string",
                    "description": "Set the Host mode for authentication on this interface - Choices: `multi-auth`, `multi-domain`, `multi-host`,\n`single-host`\n"
                },
                "accessSessionInterfaceTemplateSticky": {
                    "type": "boolean",
                    "description": "Interface templates set to sticky\n"
                },
                "accessSessionInterfaceTemplateStickyTimer": {
                    "type": "integer",
                    "description": "Sticky timer value - Range: `1`-`65535`\n"
                },
                "accessSessionMonitor": {
                    "type": "boolean",
                    "description": "Apply template to monitor access sessions on the port\n"
                },
                "accessSessionPortControl": {
                    "type": "string",
                    "description": "Set the port-control value - Choices: `auto`, `force-authorized`, `force-unauthorized`\n"
                },
                "authenticationPeriodic": {
                    "type": "boolean",
                    "description": "Enable or Disable Reauthentication for this port\n"
                },
                "authenticationTimerReauthenticateRange": {
                    "type": "integer",
                    "description": "Enter a value between 1 and 65535 - Range: `1`-`65535`\n"
                },
                "authenticationTimerReauthenticateServer": {
                    "type": "boolean",
                    "description": "Obtain re-authentication timeout value from the server\n"
                },
                "ctsManual": {
                    "type": "boolean",
                    "description": "Supply local configuration for CTS parameters\n"
                },
                "ctsManualPolicyStaticSgt": {
                    "type": "integer",
                    "description": "Source Security Group Tag to apply to untagged or non-trusted incoming traffic - Range: `2`-`65519`\n"
                },
                "ctsManualPolicyStaticTrusted": {
                    "type": "boolean",
                    "description": "Trust the Source Group Tags (SGT) that the peer uses for sending\n"
                },
                "ctsManualPropagateSgt": {
                    "type": "boolean",
                    "description": "CTS SGT Propagation configuration\n"
                },
                "ctsRoleBasedEnforcement": {
                    "type": "boolean",
                    "description": "Enable Role-based Access Control enforcement\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "deviceTracking": {
                    "type": "boolean",
                    "description": "Configure device-tracking on the interface\n"
                },
                "deviceTrackingAttachPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/TemplateDeviceTrackingAttachPolicy:TemplateDeviceTrackingAttachPolicy"
                    },
                    "description": "policy name for device tracking\n"
                },
                "deviceTrackingVlanRange": {
                    "type": "string",
                    "description": "VLAN IDs of the VLANs for which this policy applies\n"
                },
                "dot1xMaxReauthReq": {
                    "type": "integer",
                    "description": "Max No. of Reauthentication Attempts - Range: `1`-`10`\n"
                },
                "dot1xMaxReq": {
                    "type": "integer",
                    "description": "Max No. of Retries - Range: `1`-`10`\n"
                },
                "dot1xPae": {
                    "type": "string",
                    "description": "Set 802.1x interface pae type - Choices: `authenticator`, `both`, `supplicant`\n"
                },
                "dot1xTimeoutTxPeriod": {
                    "type": "integer",
                    "description": "Timeout for supplicant retries - Range: `1`-`65535`\n"
                },
                "ipAccessGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/TemplateIpAccessGroup:TemplateIpAccessGroup"
                    },
                    "description": "Access control list for IP packets\n"
                },
                "ipDhcpSnoopingLimitRate": {
                    "type": "integer",
                    "description": "DHCP snooping rate limit - Range: `1`-`2048`\n"
                },
                "ipDhcpSnoopingTrust": {
                    "type": "boolean",
                    "description": "DHCP Snooping trust config\n"
                },
                "loadInterval": {
                    "type": "integer",
                    "description": "Load interval delay in seconds - Range: `30`-`600`\n"
                },
                "mab": {
                    "type": "boolean",
                    "description": "MAC Authentication Bypass Interface Config Commands\n"
                },
                "mabEap": {
                    "type": "boolean",
                    "description": "Use EAP authentication for MAC Auth Bypass\n"
                },
                "servicePolicyInput": {
                    "type": "string",
                    "description": "policy-map name\n"
                },
                "servicePolicyOutput": {
                    "type": "string",
                    "description": "policy-map name\n"
                },
                "servicePolicyTypeControlSubscriber": {
                    "type": "string",
                    "description": "Apply a subscriber control policy to the interface\n"
                },
                "sourceTemplate": {
                    "type": "string",
                    "description": "Get config from a template\n"
                },
                "spanningTreeBpduguardEnable": {
                    "type": "boolean",
                    "description": "Enable BPDU guard for this interface\n"
                },
                "spanningTreePortfast": {
                    "type": "boolean",
                    "description": "Portfast options for the interface\n"
                },
                "spanningTreePortfastDisable": {
                    "type": "boolean",
                    "description": "Disable portfast for this interface\n"
                },
                "spanningTreePortfastEdge": {
                    "type": "boolean",
                    "description": "Enable portfast edge on the interface\n"
                },
                "spanningTreePortfastNetwork": {
                    "type": "boolean",
                    "description": "Enable portfast network on the interface\n"
                },
                "spanningTreeServicePolicy": {
                    "type": "boolean",
                    "description": "help\n"
                },
                "stormControlActionShutdown": {
                    "type": "boolean",
                    "description": "Shutdown this interface if a storm occurs\n"
                },
                "stormControlActionTrap": {
                    "type": "boolean",
                    "description": "Send SNMP trap if a storm occurs\n"
                },
                "stormControlBroadcastLevelBpsThreshold": {
                    "type": "number",
                    "description": "Enter threshold\n"
                },
                "stormControlBroadcastLevelPpsThreshold": {
                    "type": "string",
                    "description": "Enter threshold\n"
                },
                "stormControlBroadcastLevelThreshold": {
                    "type": "number",
                    "description": "Enter threshold\n"
                },
                "stormControlMulticastLevelBpsThreshold": {
                    "type": "number",
                    "description": "Enter threshold\n"
                },
                "stormControlMulticastLevelPpsThreshold": {
                    "type": "string",
                    "description": "Enter threshold\n"
                },
                "stormControlMulticastLevelThreshold": {
                    "type": "number",
                    "description": "Enter threshold\n"
                },
                "subscriberAgingInactivityTimerProbe": {
                    "type": "boolean",
                    "description": "ARP probe\n"
                },
                "subscriberAgingInactivityTimerValue": {
                    "type": "integer",
                    "description": "Enter a value between 1 and 65535 in seconds - Range: `1`-`65535`\n"
                },
                "subscriberAgingProbe": {
                    "type": "boolean",
                    "description": "ARP probe\n"
                },
                "switchportAccessVlan": {
                    "type": "integer",
                    "description": "VLAN ID of the VLAN when this port is in access mode - Range: `1`-`4094`\n"
                },
                "switchportBlockUnicast": {
                    "type": "boolean",
                    "description": "Block unknown unicast addresses\n"
                },
                "switchportModeAccess": {
                    "type": "boolean",
                    "description": "Set trunking mode to ACCESS unconditionally\n"
                },
                "switchportModeTrunk": {
                    "type": "boolean",
                    "description": "Set trunking mode to TRUNK unconditionally\n"
                },
                "switchportNonegotiate": {
                    "type": "boolean",
                    "description": "Device will not engage in negotiation protocol on this interface\n"
                },
                "switchportPortSecurity": {
                    "type": "boolean",
                    "description": "Security related command\n"
                },
                "switchportPortSecurityAgingStatic": {
                    "type": "boolean",
                    "description": "Enable aging for configured secure addresses\n"
                },
                "switchportPortSecurityAgingTime": {
                    "type": "integer",
                    "description": "Port-security aging time - Range: `1`-`1440`\n"
                },
                "switchportPortSecurityAgingType": {
                    "type": "boolean",
                    "description": "Port-security aging type\n"
                },
                "switchportPortSecurityAgingTypeInactivity": {
                    "type": "boolean",
                    "description": "Aging based on inactivity time period\n"
                },
                "switchportPortSecurityMaximumRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/TemplateSwitchportPortSecurityMaximumRange:TemplateSwitchportPortSecurityMaximumRange"
                    }
                },
                "switchportPortSecurityViolationProtect": {
                    "type": "boolean",
                    "description": "Security violation protect mode\n"
                },
                "switchportPortSecurityViolationRestrict": {
                    "type": "boolean",
                    "description": "Security violation restrict mode\n"
                },
                "switchportPortSecurityViolationShutdown": {
                    "type": "boolean",
                    "description": "Security violation shutdown mode\n"
                },
                "switchportPrivateVlanHostAssociationPrimaryRange": {
                    "type": "integer",
                    "description": "Primary normal range VLAN ID of the private VLAN port association - Range: `2`-`1001`\n"
                },
                "switchportPrivateVlanHostAssociationSecondaryRange": {
                    "type": "integer",
                    "description": "Secondary normal range VLAN ID of the private VLAN host port association - Range: `2`-`1001`\n"
                },
                "switchportTrunkAllowedVlans": {
                    "type": "string",
                    "description": "VLAN IDs of the allowed VLANs when this port is in trunking mode\n"
                },
                "switchportTrunkAllowedVlansAll": {
                    "type": "boolean",
                    "description": "all VLANs\n"
                },
                "switchportTrunkAllowedVlansNone": {
                    "type": "boolean",
                    "description": "no VLANs\n"
                },
                "switchportTrunkNativeVlanTag": {
                    "type": "boolean",
                    "description": "Set native VLAN tagging state\n"
                },
                "switchportTrunkNativeVlanVlanId": {
                    "type": "integer",
                    "description": "VLAN ID of the native VLAN when this port is in trunking mode - Range: `1`-`4094`\n"
                },
                "switchportVoiceVlan": {
                    "type": "integer",
                    "description": "Vlan for voice traffic - Range: `1`-`4094`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name\n"
                }
            },
            "required": [
                "templateName"
            ],
            "inputProperties": {
                "accessSessionClosed": {
                    "type": "boolean",
                    "description": "Enable closed access on port (disabled by default, i.e. open access)\n"
                },
                "accessSessionControlDirection": {
                    "type": "string",
                    "description": "Set the control-direction on the interface - Choices: `both`, `in`\n"
                },
                "accessSessionHostMode": {
                    "type": "string",
                    "description": "Set the Host mode for authentication on this interface - Choices: `multi-auth`, `multi-domain`, `multi-host`,\n`single-host`\n"
                },
                "accessSessionInterfaceTemplateSticky": {
                    "type": "boolean",
                    "description": "Interface templates set to sticky\n"
                },
                "accessSessionInterfaceTemplateStickyTimer": {
                    "type": "integer",
                    "description": "Sticky timer value - Range: `1`-`65535`\n"
                },
                "accessSessionMonitor": {
                    "type": "boolean",
                    "description": "Apply template to monitor access sessions on the port\n"
                },
                "accessSessionPortControl": {
                    "type": "string",
                    "description": "Set the port-control value - Choices: `auto`, `force-authorized`, `force-unauthorized`\n"
                },
                "authenticationPeriodic": {
                    "type": "boolean",
                    "description": "Enable or Disable Reauthentication for this port\n"
                },
                "authenticationTimerReauthenticateRange": {
                    "type": "integer",
                    "description": "Enter a value between 1 and 65535 - Range: `1`-`65535`\n"
                },
                "authenticationTimerReauthenticateServer": {
                    "type": "boolean",
                    "description": "Obtain re-authentication timeout value from the server\n"
                },
                "ctsManual": {
                    "type": "boolean",
                    "description": "Supply local configuration for CTS parameters\n"
                },
                "ctsManualPolicyStaticSgt": {
                    "type": "integer",
                    "description": "Source Security Group Tag to apply to untagged or non-trusted incoming traffic - Range: `2`-`65519`\n"
                },
                "ctsManualPolicyStaticTrusted": {
                    "type": "boolean",
                    "description": "Trust the Source Group Tags (SGT) that the peer uses for sending\n"
                },
                "ctsManualPropagateSgt": {
                    "type": "boolean",
                    "description": "CTS SGT Propagation configuration\n"
                },
                "ctsRoleBasedEnforcement": {
                    "type": "boolean",
                    "description": "Enable Role-based Access Control enforcement\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "deviceTracking": {
                    "type": "boolean",
                    "description": "Configure device-tracking on the interface\n"
                },
                "deviceTrackingAttachPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/TemplateDeviceTrackingAttachPolicy:TemplateDeviceTrackingAttachPolicy"
                    },
                    "description": "policy name for device tracking\n"
                },
                "deviceTrackingVlanRange": {
                    "type": "string",
                    "description": "VLAN IDs of the VLANs for which this policy applies\n"
                },
                "dot1xMaxReauthReq": {
                    "type": "integer",
                    "description": "Max No. of Reauthentication Attempts - Range: `1`-`10`\n"
                },
                "dot1xMaxReq": {
                    "type": "integer",
                    "description": "Max No. of Retries - Range: `1`-`10`\n"
                },
                "dot1xPae": {
                    "type": "string",
                    "description": "Set 802.1x interface pae type - Choices: `authenticator`, `both`, `supplicant`\n"
                },
                "dot1xTimeoutTxPeriod": {
                    "type": "integer",
                    "description": "Timeout for supplicant retries - Range: `1`-`65535`\n"
                },
                "ipAccessGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/TemplateIpAccessGroup:TemplateIpAccessGroup"
                    },
                    "description": "Access control list for IP packets\n"
                },
                "ipDhcpSnoopingLimitRate": {
                    "type": "integer",
                    "description": "DHCP snooping rate limit - Range: `1`-`2048`\n"
                },
                "ipDhcpSnoopingTrust": {
                    "type": "boolean",
                    "description": "DHCP Snooping trust config\n"
                },
                "loadInterval": {
                    "type": "integer",
                    "description": "Load interval delay in seconds - Range: `30`-`600`\n"
                },
                "mab": {
                    "type": "boolean",
                    "description": "MAC Authentication Bypass Interface Config Commands\n"
                },
                "mabEap": {
                    "type": "boolean",
                    "description": "Use EAP authentication for MAC Auth Bypass\n"
                },
                "servicePolicyInput": {
                    "type": "string",
                    "description": "policy-map name\n"
                },
                "servicePolicyOutput": {
                    "type": "string",
                    "description": "policy-map name\n"
                },
                "servicePolicyTypeControlSubscriber": {
                    "type": "string",
                    "description": "Apply a subscriber control policy to the interface\n"
                },
                "sourceTemplate": {
                    "type": "string",
                    "description": "Get config from a template\n"
                },
                "spanningTreeBpduguardEnable": {
                    "type": "boolean",
                    "description": "Enable BPDU guard for this interface\n"
                },
                "spanningTreePortfast": {
                    "type": "boolean",
                    "description": "Portfast options for the interface\n"
                },
                "spanningTreePortfastDisable": {
                    "type": "boolean",
                    "description": "Disable portfast for this interface\n"
                },
                "spanningTreePortfastEdge": {
                    "type": "boolean",
                    "description": "Enable portfast edge on the interface\n"
                },
                "spanningTreePortfastNetwork": {
                    "type": "boolean",
                    "description": "Enable portfast network on the interface\n"
                },
                "spanningTreeServicePolicy": {
                    "type": "boolean",
                    "description": "help\n"
                },
                "stormControlActionShutdown": {
                    "type": "boolean",
                    "description": "Shutdown this interface if a storm occurs\n"
                },
                "stormControlActionTrap": {
                    "type": "boolean",
                    "description": "Send SNMP trap if a storm occurs\n"
                },
                "stormControlBroadcastLevelBpsThreshold": {
                    "type": "number",
                    "description": "Enter threshold\n"
                },
                "stormControlBroadcastLevelPpsThreshold": {
                    "type": "string",
                    "description": "Enter threshold\n"
                },
                "stormControlBroadcastLevelThreshold": {
                    "type": "number",
                    "description": "Enter threshold\n"
                },
                "stormControlMulticastLevelBpsThreshold": {
                    "type": "number",
                    "description": "Enter threshold\n"
                },
                "stormControlMulticastLevelPpsThreshold": {
                    "type": "string",
                    "description": "Enter threshold\n"
                },
                "stormControlMulticastLevelThreshold": {
                    "type": "number",
                    "description": "Enter threshold\n"
                },
                "subscriberAgingInactivityTimerProbe": {
                    "type": "boolean",
                    "description": "ARP probe\n"
                },
                "subscriberAgingInactivityTimerValue": {
                    "type": "integer",
                    "description": "Enter a value between 1 and 65535 in seconds - Range: `1`-`65535`\n"
                },
                "subscriberAgingProbe": {
                    "type": "boolean",
                    "description": "ARP probe\n"
                },
                "switchportAccessVlan": {
                    "type": "integer",
                    "description": "VLAN ID of the VLAN when this port is in access mode - Range: `1`-`4094`\n"
                },
                "switchportBlockUnicast": {
                    "type": "boolean",
                    "description": "Block unknown unicast addresses\n"
                },
                "switchportModeAccess": {
                    "type": "boolean",
                    "description": "Set trunking mode to ACCESS unconditionally\n"
                },
                "switchportModeTrunk": {
                    "type": "boolean",
                    "description": "Set trunking mode to TRUNK unconditionally\n"
                },
                "switchportNonegotiate": {
                    "type": "boolean",
                    "description": "Device will not engage in negotiation protocol on this interface\n"
                },
                "switchportPortSecurity": {
                    "type": "boolean",
                    "description": "Security related command\n"
                },
                "switchportPortSecurityAgingStatic": {
                    "type": "boolean",
                    "description": "Enable aging for configured secure addresses\n"
                },
                "switchportPortSecurityAgingTime": {
                    "type": "integer",
                    "description": "Port-security aging time - Range: `1`-`1440`\n"
                },
                "switchportPortSecurityAgingType": {
                    "type": "boolean",
                    "description": "Port-security aging type\n"
                },
                "switchportPortSecurityAgingTypeInactivity": {
                    "type": "boolean",
                    "description": "Aging based on inactivity time period\n"
                },
                "switchportPortSecurityMaximumRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/TemplateSwitchportPortSecurityMaximumRange:TemplateSwitchportPortSecurityMaximumRange"
                    }
                },
                "switchportPortSecurityViolationProtect": {
                    "type": "boolean",
                    "description": "Security violation protect mode\n"
                },
                "switchportPortSecurityViolationRestrict": {
                    "type": "boolean",
                    "description": "Security violation restrict mode\n"
                },
                "switchportPortSecurityViolationShutdown": {
                    "type": "boolean",
                    "description": "Security violation shutdown mode\n"
                },
                "switchportPrivateVlanHostAssociationPrimaryRange": {
                    "type": "integer",
                    "description": "Primary normal range VLAN ID of the private VLAN port association - Range: `2`-`1001`\n"
                },
                "switchportPrivateVlanHostAssociationSecondaryRange": {
                    "type": "integer",
                    "description": "Secondary normal range VLAN ID of the private VLAN host port association - Range: `2`-`1001`\n"
                },
                "switchportTrunkAllowedVlans": {
                    "type": "string",
                    "description": "VLAN IDs of the allowed VLANs when this port is in trunking mode\n"
                },
                "switchportTrunkAllowedVlansAll": {
                    "type": "boolean",
                    "description": "all VLANs\n"
                },
                "switchportTrunkAllowedVlansNone": {
                    "type": "boolean",
                    "description": "no VLANs\n"
                },
                "switchportTrunkNativeVlanTag": {
                    "type": "boolean",
                    "description": "Set native VLAN tagging state\n"
                },
                "switchportTrunkNativeVlanVlanId": {
                    "type": "integer",
                    "description": "VLAN ID of the native VLAN when this port is in trunking mode - Range: `1`-`4094`\n"
                },
                "switchportVoiceVlan": {
                    "type": "integer",
                    "description": "Vlan for voice traffic - Range: `1`-`4094`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name\n"
                }
            },
            "requiredInputs": [
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Template resources.\n",
                "properties": {
                    "accessSessionClosed": {
                        "type": "boolean",
                        "description": "Enable closed access on port (disabled by default, i.e. open access)\n"
                    },
                    "accessSessionControlDirection": {
                        "type": "string",
                        "description": "Set the control-direction on the interface - Choices: `both`, `in`\n"
                    },
                    "accessSessionHostMode": {
                        "type": "string",
                        "description": "Set the Host mode for authentication on this interface - Choices: `multi-auth`, `multi-domain`, `multi-host`,\n`single-host`\n"
                    },
                    "accessSessionInterfaceTemplateSticky": {
                        "type": "boolean",
                        "description": "Interface templates set to sticky\n"
                    },
                    "accessSessionInterfaceTemplateStickyTimer": {
                        "type": "integer",
                        "description": "Sticky timer value - Range: `1`-`65535`\n"
                    },
                    "accessSessionMonitor": {
                        "type": "boolean",
                        "description": "Apply template to monitor access sessions on the port\n"
                    },
                    "accessSessionPortControl": {
                        "type": "string",
                        "description": "Set the port-control value - Choices: `auto`, `force-authorized`, `force-unauthorized`\n"
                    },
                    "authenticationPeriodic": {
                        "type": "boolean",
                        "description": "Enable or Disable Reauthentication for this port\n"
                    },
                    "authenticationTimerReauthenticateRange": {
                        "type": "integer",
                        "description": "Enter a value between 1 and 65535 - Range: `1`-`65535`\n"
                    },
                    "authenticationTimerReauthenticateServer": {
                        "type": "boolean",
                        "description": "Obtain re-authentication timeout value from the server\n"
                    },
                    "ctsManual": {
                        "type": "boolean",
                        "description": "Supply local configuration for CTS parameters\n"
                    },
                    "ctsManualPolicyStaticSgt": {
                        "type": "integer",
                        "description": "Source Security Group Tag to apply to untagged or non-trusted incoming traffic - Range: `2`-`65519`\n"
                    },
                    "ctsManualPolicyStaticTrusted": {
                        "type": "boolean",
                        "description": "Trust the Source Group Tags (SGT) that the peer uses for sending\n"
                    },
                    "ctsManualPropagateSgt": {
                        "type": "boolean",
                        "description": "CTS SGT Propagation configuration\n"
                    },
                    "ctsRoleBasedEnforcement": {
                        "type": "boolean",
                        "description": "Enable Role-based Access Control enforcement\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "deviceTracking": {
                        "type": "boolean",
                        "description": "Configure device-tracking on the interface\n"
                    },
                    "deviceTrackingAttachPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/TemplateDeviceTrackingAttachPolicy:TemplateDeviceTrackingAttachPolicy"
                        },
                        "description": "policy name for device tracking\n"
                    },
                    "deviceTrackingVlanRange": {
                        "type": "string",
                        "description": "VLAN IDs of the VLANs for which this policy applies\n"
                    },
                    "dot1xMaxReauthReq": {
                        "type": "integer",
                        "description": "Max No. of Reauthentication Attempts - Range: `1`-`10`\n"
                    },
                    "dot1xMaxReq": {
                        "type": "integer",
                        "description": "Max No. of Retries - Range: `1`-`10`\n"
                    },
                    "dot1xPae": {
                        "type": "string",
                        "description": "Set 802.1x interface pae type - Choices: `authenticator`, `both`, `supplicant`\n"
                    },
                    "dot1xTimeoutTxPeriod": {
                        "type": "integer",
                        "description": "Timeout for supplicant retries - Range: `1`-`65535`\n"
                    },
                    "ipAccessGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/TemplateIpAccessGroup:TemplateIpAccessGroup"
                        },
                        "description": "Access control list for IP packets\n"
                    },
                    "ipDhcpSnoopingLimitRate": {
                        "type": "integer",
                        "description": "DHCP snooping rate limit - Range: `1`-`2048`\n"
                    },
                    "ipDhcpSnoopingTrust": {
                        "type": "boolean",
                        "description": "DHCP Snooping trust config\n"
                    },
                    "loadInterval": {
                        "type": "integer",
                        "description": "Load interval delay in seconds - Range: `30`-`600`\n"
                    },
                    "mab": {
                        "type": "boolean",
                        "description": "MAC Authentication Bypass Interface Config Commands\n"
                    },
                    "mabEap": {
                        "type": "boolean",
                        "description": "Use EAP authentication for MAC Auth Bypass\n"
                    },
                    "servicePolicyInput": {
                        "type": "string",
                        "description": "policy-map name\n"
                    },
                    "servicePolicyOutput": {
                        "type": "string",
                        "description": "policy-map name\n"
                    },
                    "servicePolicyTypeControlSubscriber": {
                        "type": "string",
                        "description": "Apply a subscriber control policy to the interface\n"
                    },
                    "sourceTemplate": {
                        "type": "string",
                        "description": "Get config from a template\n"
                    },
                    "spanningTreeBpduguardEnable": {
                        "type": "boolean",
                        "description": "Enable BPDU guard for this interface\n"
                    },
                    "spanningTreePortfast": {
                        "type": "boolean",
                        "description": "Portfast options for the interface\n"
                    },
                    "spanningTreePortfastDisable": {
                        "type": "boolean",
                        "description": "Disable portfast for this interface\n"
                    },
                    "spanningTreePortfastEdge": {
                        "type": "boolean",
                        "description": "Enable portfast edge on the interface\n"
                    },
                    "spanningTreePortfastNetwork": {
                        "type": "boolean",
                        "description": "Enable portfast network on the interface\n"
                    },
                    "spanningTreeServicePolicy": {
                        "type": "boolean",
                        "description": "help\n"
                    },
                    "stormControlActionShutdown": {
                        "type": "boolean",
                        "description": "Shutdown this interface if a storm occurs\n"
                    },
                    "stormControlActionTrap": {
                        "type": "boolean",
                        "description": "Send SNMP trap if a storm occurs\n"
                    },
                    "stormControlBroadcastLevelBpsThreshold": {
                        "type": "number",
                        "description": "Enter threshold\n"
                    },
                    "stormControlBroadcastLevelPpsThreshold": {
                        "type": "string",
                        "description": "Enter threshold\n"
                    },
                    "stormControlBroadcastLevelThreshold": {
                        "type": "number",
                        "description": "Enter threshold\n"
                    },
                    "stormControlMulticastLevelBpsThreshold": {
                        "type": "number",
                        "description": "Enter threshold\n"
                    },
                    "stormControlMulticastLevelPpsThreshold": {
                        "type": "string",
                        "description": "Enter threshold\n"
                    },
                    "stormControlMulticastLevelThreshold": {
                        "type": "number",
                        "description": "Enter threshold\n"
                    },
                    "subscriberAgingInactivityTimerProbe": {
                        "type": "boolean",
                        "description": "ARP probe\n"
                    },
                    "subscriberAgingInactivityTimerValue": {
                        "type": "integer",
                        "description": "Enter a value between 1 and 65535 in seconds - Range: `1`-`65535`\n"
                    },
                    "subscriberAgingProbe": {
                        "type": "boolean",
                        "description": "ARP probe\n"
                    },
                    "switchportAccessVlan": {
                        "type": "integer",
                        "description": "VLAN ID of the VLAN when this port is in access mode - Range: `1`-`4094`\n"
                    },
                    "switchportBlockUnicast": {
                        "type": "boolean",
                        "description": "Block unknown unicast addresses\n"
                    },
                    "switchportModeAccess": {
                        "type": "boolean",
                        "description": "Set trunking mode to ACCESS unconditionally\n"
                    },
                    "switchportModeTrunk": {
                        "type": "boolean",
                        "description": "Set trunking mode to TRUNK unconditionally\n"
                    },
                    "switchportNonegotiate": {
                        "type": "boolean",
                        "description": "Device will not engage in negotiation protocol on this interface\n"
                    },
                    "switchportPortSecurity": {
                        "type": "boolean",
                        "description": "Security related command\n"
                    },
                    "switchportPortSecurityAgingStatic": {
                        "type": "boolean",
                        "description": "Enable aging for configured secure addresses\n"
                    },
                    "switchportPortSecurityAgingTime": {
                        "type": "integer",
                        "description": "Port-security aging time - Range: `1`-`1440`\n"
                    },
                    "switchportPortSecurityAgingType": {
                        "type": "boolean",
                        "description": "Port-security aging type\n"
                    },
                    "switchportPortSecurityAgingTypeInactivity": {
                        "type": "boolean",
                        "description": "Aging based on inactivity time period\n"
                    },
                    "switchportPortSecurityMaximumRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/TemplateSwitchportPortSecurityMaximumRange:TemplateSwitchportPortSecurityMaximumRange"
                        }
                    },
                    "switchportPortSecurityViolationProtect": {
                        "type": "boolean",
                        "description": "Security violation protect mode\n"
                    },
                    "switchportPortSecurityViolationRestrict": {
                        "type": "boolean",
                        "description": "Security violation restrict mode\n"
                    },
                    "switchportPortSecurityViolationShutdown": {
                        "type": "boolean",
                        "description": "Security violation shutdown mode\n"
                    },
                    "switchportPrivateVlanHostAssociationPrimaryRange": {
                        "type": "integer",
                        "description": "Primary normal range VLAN ID of the private VLAN port association - Range: `2`-`1001`\n"
                    },
                    "switchportPrivateVlanHostAssociationSecondaryRange": {
                        "type": "integer",
                        "description": "Secondary normal range VLAN ID of the private VLAN host port association - Range: `2`-`1001`\n"
                    },
                    "switchportTrunkAllowedVlans": {
                        "type": "string",
                        "description": "VLAN IDs of the allowed VLANs when this port is in trunking mode\n"
                    },
                    "switchportTrunkAllowedVlansAll": {
                        "type": "boolean",
                        "description": "all VLANs\n"
                    },
                    "switchportTrunkAllowedVlansNone": {
                        "type": "boolean",
                        "description": "no VLANs\n"
                    },
                    "switchportTrunkNativeVlanTag": {
                        "type": "boolean",
                        "description": "Set native VLAN tagging state\n"
                    },
                    "switchportTrunkNativeVlanVlanId": {
                        "type": "integer",
                        "description": "VLAN ID of the native VLAN when this port is in trunking mode - Range: `1`-`4094`\n"
                    },
                    "switchportVoiceVlan": {
                        "type": "integer",
                        "description": "Vlan for voice traffic - Range: `1`-`4094`\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template name\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/udld:Udld": {
            "properties": {
                "aggressive": {
                    "type": "boolean",
                    "description": "Enable UDLD protocol in aggressive mode on fiber ports exceptwhere locally configured\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable UDLD protocol on fiber ports except where locally configured\n"
                },
                "messageTime": {
                    "type": "integer",
                    "description": "Set UDLD message time period - Range: `1`-`90`\n"
                },
                "recoveryInterval": {
                    "type": "integer",
                    "description": "timer-interval(sec) - Range: `30`-`86400`\n"
                }
            },
            "inputProperties": {
                "aggressive": {
                    "type": "boolean",
                    "description": "Enable UDLD protocol in aggressive mode on fiber ports exceptwhere locally configured\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable UDLD protocol on fiber ports except where locally configured\n"
                },
                "messageTime": {
                    "type": "integer",
                    "description": "Set UDLD message time period - Range: `1`-`90`\n"
                },
                "recoveryInterval": {
                    "type": "integer",
                    "description": "timer-interval(sec) - Range: `30`-`86400`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Udld resources.\n",
                "properties": {
                    "aggressive": {
                        "type": "boolean",
                        "description": "Enable UDLD protocol in aggressive mode on fiber ports exceptwhere locally configured\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable UDLD protocol on fiber ports except where locally configured\n"
                    },
                    "messageTime": {
                        "type": "integer",
                        "description": "Set UDLD message time period - Range: `1`-`90`\n"
                    },
                    "recoveryInterval": {
                        "type": "integer",
                        "description": "timer-interval(sec) - Range: `30`-`86400`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/username:Username": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description string with max 128 characters\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordEncryption": {
                    "type": "string",
                    "description": "- Choices: `0`, `6`, `7`\n"
                },
                "privilege": {
                    "type": "integer",
                    "description": "Set user privilege level - Range: `0`-`15`\n"
                },
                "secret": {
                    "type": "string"
                },
                "secretEncryption": {
                    "type": "string",
                    "description": "- Choices: `0`, `5`, `8`, `9`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "description string with max 128 characters\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordEncryption": {
                    "type": "string",
                    "description": "- Choices: `0`, `6`, `7`\n"
                },
                "privilege": {
                    "type": "integer",
                    "description": "Set user privilege level - Range: `0`-`15`\n"
                },
                "secret": {
                    "type": "string"
                },
                "secretEncryption": {
                    "type": "string",
                    "description": "- Choices: `0`, `5`, `8`, `9`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Username resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "description string with max 128 characters\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "passwordEncryption": {
                        "type": "string",
                        "description": "- Choices: `0`, `6`, `7`\n"
                    },
                    "privilege": {
                        "type": "integer",
                        "description": "Set user privilege level - Range: `0`-`15`\n"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "secretEncryption": {
                        "type": "string",
                        "description": "- Choices: `0`, `5`, `8`, `9`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/vlan:Vlan": {
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Ascii name of the VLAN\n"
                },
                "privateVlanAssociation": {
                    "type": "string",
                    "description": "Configure association between private VLANs\n"
                },
                "privateVlanCommunity": {
                    "type": "boolean",
                    "description": "Configure the VLAN as a community private VLAN\n"
                },
                "privateVlanIsolated": {
                    "type": "boolean",
                    "description": "Configure the VLAN as an isolated private VLAN\n"
                },
                "privateVlanPrimary": {
                    "type": "boolean",
                    "description": "Configure the VLAN as a primary private VLAN\n"
                },
                "remoteSpan": {
                    "type": "boolean",
                    "description": "Configure as Remote SPAN VLAN\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown VLAN switching\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "a single VLAN id (allowed value range 1-4094)or Comma-separated VLAN id range.e.g. 99 or 1-30 or 1-20,30,40-50 - Range:\n`1`-`4094`\n"
                }
            },
            "required": [
                "name",
                "vlanId"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Ascii name of the VLAN\n"
                },
                "privateVlanAssociation": {
                    "type": "string",
                    "description": "Configure association between private VLANs\n"
                },
                "privateVlanCommunity": {
                    "type": "boolean",
                    "description": "Configure the VLAN as a community private VLAN\n"
                },
                "privateVlanIsolated": {
                    "type": "boolean",
                    "description": "Configure the VLAN as an isolated private VLAN\n"
                },
                "privateVlanPrimary": {
                    "type": "boolean",
                    "description": "Configure the VLAN as a primary private VLAN\n"
                },
                "remoteSpan": {
                    "type": "boolean",
                    "description": "Configure as Remote SPAN VLAN\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown VLAN switching\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "a single VLAN id (allowed value range 1-4094)or Comma-separated VLAN id range.e.g. 99 or 1-30 or 1-20,30,40-50 - Range:\n`1`-`4094`\n"
                }
            },
            "requiredInputs": [
                "vlanId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vlan resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Ascii name of the VLAN\n"
                    },
                    "privateVlanAssociation": {
                        "type": "string",
                        "description": "Configure association between private VLANs\n"
                    },
                    "privateVlanCommunity": {
                        "type": "boolean",
                        "description": "Configure the VLAN as a community private VLAN\n"
                    },
                    "privateVlanIsolated": {
                        "type": "boolean",
                        "description": "Configure the VLAN as an isolated private VLAN\n"
                    },
                    "privateVlanPrimary": {
                        "type": "boolean",
                        "description": "Configure the VLAN as a primary private VLAN\n"
                    },
                    "remoteSpan": {
                        "type": "boolean",
                        "description": "Configure as Remote SPAN VLAN\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown VLAN switching\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "a single VLAN id (allowed value range 1-4094)or Comma-separated VLAN id range.e.g. 99 or 1-30 or 1-20,30,40-50 - Range:\n`1`-`4094`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/vlanAccessMap:VlanAccessMap": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Take the action - Choices: `drop`, `forward`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchIpAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpv6Addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Match IPv6 address to access control.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Vlan access map tag\n"
                },
                "sequence": {
                    "type": "integer",
                    "description": "Sequence to insert to/delete from existing vlan access-map entry - Range: `0`-`65535`\n"
                }
            },
            "required": [
                "name",
                "sequence"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Take the action - Choices: `drop`, `forward`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchIpAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpv6Addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Match IPv6 address to access control.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Vlan access map tag\n"
                },
                "sequence": {
                    "type": "integer",
                    "description": "Sequence to insert to/delete from existing vlan access-map entry - Range: `0`-`65535`\n"
                }
            },
            "requiredInputs": [
                "sequence"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VlanAccessMap resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Take the action - Choices: `drop`, `forward`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "matchIpAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "matchIpv6Addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Match IPv6 address to access control.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Vlan access map tag\n"
                    },
                    "sequence": {
                        "type": "integer",
                        "description": "Sequence to insert to/delete from existing vlan access-map entry - Range: `0`-`65535`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/vlanConfiguration:VlanConfiguration": {
            "properties": {
                "accessVfi": {
                    "type": "string",
                    "description": "Enter VFI name\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "evpnInstance": {
                    "type": "integer",
                    "description": "- Range: `1`-`65535`\n"
                },
                "evpnInstanceVni": {
                    "type": "integer",
                    "description": "VxLAN VNI value - Range: `4096`-`16777215`\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "VLAN ID List Eg. 1-10,15 - Range: `1`-`4094`\n"
                },
                "vni": {
                    "type": "integer",
                    "description": "VxLAN VNI value - Range: `4096`-`16777215`\n"
                }
            },
            "required": [
                "vlanId"
            ],
            "inputProperties": {
                "accessVfi": {
                    "type": "string",
                    "description": "Enter VFI name\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "evpnInstance": {
                    "type": "integer",
                    "description": "- Range: `1`-`65535`\n"
                },
                "evpnInstanceVni": {
                    "type": "integer",
                    "description": "VxLAN VNI value - Range: `4096`-`16777215`\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "VLAN ID List Eg. 1-10,15 - Range: `1`-`4094`\n"
                },
                "vni": {
                    "type": "integer",
                    "description": "VxLAN VNI value - Range: `4096`-`16777215`\n"
                }
            },
            "requiredInputs": [
                "vlanId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VlanConfiguration resources.\n",
                "properties": {
                    "accessVfi": {
                        "type": "string",
                        "description": "Enter VFI name\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "evpnInstance": {
                        "type": "integer",
                        "description": "- Range: `1`-`65535`\n"
                    },
                    "evpnInstanceVni": {
                        "type": "integer",
                        "description": "VxLAN VNI value - Range: `4096`-`16777215`\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "VLAN ID List Eg. 1-10,15 - Range: `1`-`4094`\n"
                    },
                    "vni": {
                        "type": "integer",
                        "description": "VxLAN VNI value - Range: `4096`-`16777215`\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/vrf:Vrf": {
            "properties": {
                "addressFamilyIpv4": {
                    "type": "boolean",
                    "description": "Address family\n"
                },
                "addressFamilyIpv6": {
                    "type": "boolean",
                    "description": "Address family\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "VRF specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4RouteTargetExportStitchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfIpv4RouteTargetExportStitching:VrfIpv4RouteTargetExportStitching"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "ipv4RouteTargetExports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfIpv4RouteTargetExport:VrfIpv4RouteTargetExport"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "ipv4RouteTargetImportStitchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfIpv4RouteTargetImportStitching:VrfIpv4RouteTargetImportStitching"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "ipv4RouteTargetImports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfIpv4RouteTargetImport:VrfIpv4RouteTargetImport"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "ipv6RouteTargetExportStitchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfIpv6RouteTargetExportStitching:VrfIpv6RouteTargetExportStitching"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "ipv6RouteTargetExports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfIpv6RouteTargetExport:VrfIpv6RouteTargetExport"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "ipv6RouteTargetImportStitchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfIpv6RouteTargetImportStitching:VrfIpv6RouteTargetImportStitching"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "ipv6RouteTargetImports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfIpv6RouteTargetImport:VrfIpv6RouteTargetImport"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "name": {
                    "type": "string",
                    "description": "WORD;;VRF name\n"
                },
                "rd": {
                    "type": "string",
                    "description": "Specify Route Distinguisher\n"
                },
                "routeTargetExports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfRouteTargetExport:VrfRouteTargetExport"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "routeTargetImports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfRouteTargetImport:VrfRouteTargetImport"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "vpnId": {
                    "type": "string",
                    "description": "Configure VPN ID in rfc2685 format\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "addressFamilyIpv4": {
                    "type": "boolean",
                    "description": "Address family\n"
                },
                "addressFamilyIpv6": {
                    "type": "boolean",
                    "description": "Address family\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "VRF specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4RouteTargetExportStitchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfIpv4RouteTargetExportStitching:VrfIpv4RouteTargetExportStitching"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "ipv4RouteTargetExports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfIpv4RouteTargetExport:VrfIpv4RouteTargetExport"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "ipv4RouteTargetImportStitchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfIpv4RouteTargetImportStitching:VrfIpv4RouteTargetImportStitching"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "ipv4RouteTargetImports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfIpv4RouteTargetImport:VrfIpv4RouteTargetImport"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "ipv6RouteTargetExportStitchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfIpv6RouteTargetExportStitching:VrfIpv6RouteTargetExportStitching"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "ipv6RouteTargetExports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfIpv6RouteTargetExport:VrfIpv6RouteTargetExport"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "ipv6RouteTargetImportStitchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfIpv6RouteTargetImportStitching:VrfIpv6RouteTargetImportStitching"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "ipv6RouteTargetImports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfIpv6RouteTargetImport:VrfIpv6RouteTargetImport"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "name": {
                    "type": "string",
                    "description": "WORD;;VRF name\n"
                },
                "rd": {
                    "type": "string",
                    "description": "Specify Route Distinguisher\n"
                },
                "routeTargetExports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfRouteTargetExport:VrfRouteTargetExport"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "routeTargetImports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nxos:nxos/VrfRouteTargetImport:VrfRouteTargetImport"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "vpnId": {
                    "type": "string",
                    "description": "Configure VPN ID in rfc2685 format\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vrf resources.\n",
                "properties": {
                    "addressFamilyIpv4": {
                        "type": "boolean",
                        "description": "Address family\n"
                    },
                    "addressFamilyIpv6": {
                        "type": "boolean",
                        "description": "Address family\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "VRF specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv4RouteTargetExportStitchings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/VrfIpv4RouteTargetExportStitching:VrfIpv4RouteTargetExportStitching"
                        },
                        "description": "Export Target-VPN community\n"
                    },
                    "ipv4RouteTargetExports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/VrfIpv4RouteTargetExport:VrfIpv4RouteTargetExport"
                        },
                        "description": "Export Target-VPN community\n"
                    },
                    "ipv4RouteTargetImportStitchings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/VrfIpv4RouteTargetImportStitching:VrfIpv4RouteTargetImportStitching"
                        },
                        "description": "Import Target-VPN community\n"
                    },
                    "ipv4RouteTargetImports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/VrfIpv4RouteTargetImport:VrfIpv4RouteTargetImport"
                        },
                        "description": "Import Target-VPN community\n"
                    },
                    "ipv6RouteTargetExportStitchings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/VrfIpv6RouteTargetExportStitching:VrfIpv6RouteTargetExportStitching"
                        },
                        "description": "Export Target-VPN community\n"
                    },
                    "ipv6RouteTargetExports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/VrfIpv6RouteTargetExport:VrfIpv6RouteTargetExport"
                        },
                        "description": "Export Target-VPN community\n"
                    },
                    "ipv6RouteTargetImportStitchings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/VrfIpv6RouteTargetImportStitching:VrfIpv6RouteTargetImportStitching"
                        },
                        "description": "Import Target-VPN community\n"
                    },
                    "ipv6RouteTargetImports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/VrfIpv6RouteTargetImport:VrfIpv6RouteTargetImport"
                        },
                        "description": "Import Target-VPN community\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "WORD;;VRF name\n"
                    },
                    "rd": {
                        "type": "string",
                        "description": "Specify Route Distinguisher\n"
                    },
                    "routeTargetExports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/VrfRouteTargetExport:VrfRouteTargetExport"
                        },
                        "description": "Export Target-VPN community\n"
                    },
                    "routeTargetImports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/VrfRouteTargetImport:VrfRouteTargetImport"
                        },
                        "description": "Import Target-VPN community\n"
                    },
                    "vpnId": {
                        "type": "string",
                        "description": "Configure VPN ID in rfc2685 format\n"
                    }
                },
                "type": "object"
            }
        },
        "nxos:nxos/vtp:Vtp": {
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Set the name of the VTP administrative domain.\n"
                },
                "file": {
                    "type": "string",
                    "description": "Configure IFS filesystem file where VTP configuration is stored.\n"
                },
                "interface": {
                    "type": "string",
                    "description": "The name of the interface providing the VTP updater ID for this device\n"
                },
                "interfaceOnly": {
                    "type": "boolean",
                    "description": "Use only this interface's IP address as the VTP IP updater address\n"
                },
                "modeClientMst": {
                    "type": "boolean",
                    "description": "Set the mode for MST VTP instance\n"
                },
                "modeClientUnknown": {
                    "type": "boolean",
                    "description": "Set the mode for unknown VTP instances\n"
                },
                "modeClientVlan": {
                    "type": "boolean",
                    "description": "Set the mode for VLAN VTP instance\n"
                },
                "modeOffMst": {
                    "type": "boolean",
                    "description": "Set the mode for MST VTP instance\n"
                },
                "modeOffUnknown": {
                    "type": "boolean",
                    "description": "Set the mode for unknown VTP instances\n"
                },
                "modeOffVlan": {
                    "type": "boolean",
                    "description": "Set the mode for VLAN VTP instance\n"
                },
                "modeServerMst": {
                    "type": "boolean",
                    "description": "Set the mode for MST VTP instance\n"
                },
                "modeServerUnknown": {
                    "type": "boolean",
                    "description": "Set the mode for unknown VTP instances\n"
                },
                "modeServerVlan": {
                    "type": "boolean",
                    "description": "Set the mode for VLAN VTP instance\n"
                },
                "modeTransparentMst": {
                    "type": "boolean",
                    "description": "Set the mode for MST VTP instance\n"
                },
                "modeTransparentUnknown": {
                    "type": "boolean",
                    "description": "Set the mode for unknown VTP instances\n"
                },
                "modeTransparentVlan": {
                    "type": "boolean",
                    "description": "Set the mode for VLAN VTP instance\n"
                },
                "password": {
                    "type": "string",
                    "description": "The ascii password for the VTP administrative domain\n"
                },
                "passwordHidden": {
                    "type": "boolean",
                    "description": "Set the VTP password hidden option\n"
                },
                "passwordSecret": {
                    "type": "boolean",
                    "description": "Specify the vtp password in encrypted form\n"
                },
                "pruning": {
                    "type": "boolean",
                    "description": "Set the administrative domain to permit pruning\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Set the administrative domain to VTP version - Range: `1`-`3`\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Set the name of the VTP administrative domain.\n"
                },
                "file": {
                    "type": "string",
                    "description": "Configure IFS filesystem file where VTP configuration is stored.\n"
                },
                "interface": {
                    "type": "string",
                    "description": "The name of the interface providing the VTP updater ID for this device\n"
                },
                "interfaceOnly": {
                    "type": "boolean",
                    "description": "Use only this interface's IP address as the VTP IP updater address\n"
                },
                "modeClientMst": {
                    "type": "boolean",
                    "description": "Set the mode for MST VTP instance\n"
                },
                "modeClientUnknown": {
                    "type": "boolean",
                    "description": "Set the mode for unknown VTP instances\n"
                },
                "modeClientVlan": {
                    "type": "boolean",
                    "description": "Set the mode for VLAN VTP instance\n"
                },
                "modeOffMst": {
                    "type": "boolean",
                    "description": "Set the mode for MST VTP instance\n"
                },
                "modeOffUnknown": {
                    "type": "boolean",
                    "description": "Set the mode for unknown VTP instances\n"
                },
                "modeOffVlan": {
                    "type": "boolean",
                    "description": "Set the mode for VLAN VTP instance\n"
                },
                "modeServerMst": {
                    "type": "boolean",
                    "description": "Set the mode for MST VTP instance\n"
                },
                "modeServerUnknown": {
                    "type": "boolean",
                    "description": "Set the mode for unknown VTP instances\n"
                },
                "modeServerVlan": {
                    "type": "boolean",
                    "description": "Set the mode for VLAN VTP instance\n"
                },
                "modeTransparentMst": {
                    "type": "boolean",
                    "description": "Set the mode for MST VTP instance\n"
                },
                "modeTransparentUnknown": {
                    "type": "boolean",
                    "description": "Set the mode for unknown VTP instances\n"
                },
                "modeTransparentVlan": {
                    "type": "boolean",
                    "description": "Set the mode for VLAN VTP instance\n"
                },
                "password": {
                    "type": "string",
                    "description": "The ascii password for the VTP administrative domain\n"
                },
                "passwordHidden": {
                    "type": "boolean",
                    "description": "Set the VTP password hidden option\n"
                },
                "passwordSecret": {
                    "type": "boolean",
                    "description": "Specify the vtp password in encrypted form\n"
                },
                "pruning": {
                    "type": "boolean",
                    "description": "Set the administrative domain to permit pruning\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Set the administrative domain to VTP version - Range: `1`-`3`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vtp resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Set the name of the VTP administrative domain.\n"
                    },
                    "file": {
                        "type": "string",
                        "description": "Configure IFS filesystem file where VTP configuration is stored.\n"
                    },
                    "interface": {
                        "type": "string",
                        "description": "The name of the interface providing the VTP updater ID for this device\n"
                    },
                    "interfaceOnly": {
                        "type": "boolean",
                        "description": "Use only this interface's IP address as the VTP IP updater address\n"
                    },
                    "modeClientMst": {
                        "type": "boolean",
                        "description": "Set the mode for MST VTP instance\n"
                    },
                    "modeClientUnknown": {
                        "type": "boolean",
                        "description": "Set the mode for unknown VTP instances\n"
                    },
                    "modeClientVlan": {
                        "type": "boolean",
                        "description": "Set the mode for VLAN VTP instance\n"
                    },
                    "modeOffMst": {
                        "type": "boolean",
                        "description": "Set the mode for MST VTP instance\n"
                    },
                    "modeOffUnknown": {
                        "type": "boolean",
                        "description": "Set the mode for unknown VTP instances\n"
                    },
                    "modeOffVlan": {
                        "type": "boolean",
                        "description": "Set the mode for VLAN VTP instance\n"
                    },
                    "modeServerMst": {
                        "type": "boolean",
                        "description": "Set the mode for MST VTP instance\n"
                    },
                    "modeServerUnknown": {
                        "type": "boolean",
                        "description": "Set the mode for unknown VTP instances\n"
                    },
                    "modeServerVlan": {
                        "type": "boolean",
                        "description": "Set the mode for VLAN VTP instance\n"
                    },
                    "modeTransparentMst": {
                        "type": "boolean",
                        "description": "Set the mode for MST VTP instance\n"
                    },
                    "modeTransparentUnknown": {
                        "type": "boolean",
                        "description": "Set the mode for unknown VTP instances\n"
                    },
                    "modeTransparentVlan": {
                        "type": "boolean",
                        "description": "Set the mode for VLAN VTP instance\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The ascii password for the VTP administrative domain\n"
                    },
                    "passwordHidden": {
                        "type": "boolean",
                        "description": "Set the VTP password hidden option\n"
                    },
                    "passwordSecret": {
                        "type": "boolean",
                        "description": "Specify the vtp password in encrypted form\n"
                    },
                    "pruning": {
                        "type": "boolean",
                        "description": "Set the administrative domain to permit pruning\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Set the administrative domain to VTP version - Range: `1`-`3`\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "nxos:nxos/getAaa:getAaa": {
            "inputs": {
                "description": "A collection of arguments for invoking getAaa.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAaa.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "groupServerRadii": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getAaaGroupServerRadius:getAaaGroupServerRadius"
                        }
                    },
                    "groupServerTacacspluses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getAaaGroupServerTacacsplus:getAaaGroupServerTacacsplus"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "newModel": {
                        "type": "boolean"
                    },
                    "serverRadiusDynamicAuthor": {
                        "type": "boolean"
                    },
                    "serverRadiusDynamicAuthorClients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getAaaServerRadiusDynamicAuthorClient:getAaaServerRadiusDynamicAuthorClient"
                        }
                    },
                    "sessionId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "groupServerRadii",
                    "groupServerTacacspluses",
                    "id",
                    "newModel",
                    "serverRadiusDynamicAuthor",
                    "serverRadiusDynamicAuthorClients",
                    "sessionId"
                ]
            }
        },
        "nxos:nxos/getAaaAccounting:getAaaAccounting": {
            "inputs": {
                "description": "A collection of arguments for invoking getAaaAccounting.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAaaAccounting.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "execs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getAaaAccountingExec:getAaaAccountingExec"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "identityDefaultStartStopGroup1": {
                        "type": "string"
                    },
                    "identityDefaultStartStopGroup2": {
                        "type": "string"
                    },
                    "identityDefaultStartStopGroup3": {
                        "type": "string"
                    },
                    "identityDefaultStartStopGroup4": {
                        "type": "string"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getAaaAccountingNetwork:getAaaAccountingNetwork"
                        }
                    },
                    "systemGuaranteeFirst": {
                        "type": "boolean"
                    },
                    "updateNewinfoPeriodic": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "execs",
                    "id",
                    "identityDefaultStartStopGroup1",
                    "identityDefaultStartStopGroup2",
                    "identityDefaultStartStopGroup3",
                    "identityDefaultStartStopGroup4",
                    "networks",
                    "systemGuaranteeFirst",
                    "updateNewinfoPeriodic"
                ]
            }
        },
        "nxos:nxos/getAaaAuthentication:getAaaAuthentication": {
            "inputs": {
                "description": "A collection of arguments for invoking getAaaAuthentication.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAaaAuthentication.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "dot1xDefaultA1Group": {
                        "type": "string"
                    },
                    "dot1xDefaultA1Local": {
                        "type": "boolean"
                    },
                    "dot1xDefaultA2Group": {
                        "type": "string"
                    },
                    "dot1xDefaultA2Local": {
                        "type": "boolean"
                    },
                    "dot1xDefaultA3Group": {
                        "type": "string"
                    },
                    "dot1xDefaultA3Local": {
                        "type": "boolean"
                    },
                    "dot1xDefaultA4Group": {
                        "type": "string"
                    },
                    "dot1xDefaultA4Local": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "logins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getAaaAuthenticationLogin:getAaaAuthenticationLogin"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "dot1xDefaultA1Group",
                    "dot1xDefaultA1Local",
                    "dot1xDefaultA2Group",
                    "dot1xDefaultA2Local",
                    "dot1xDefaultA3Group",
                    "dot1xDefaultA3Local",
                    "dot1xDefaultA4Group",
                    "dot1xDefaultA4Local",
                    "id",
                    "logins"
                ]
            }
        },
        "nxos:nxos/getAaaAuthorization:getAaaAuthorization": {
            "inputs": {
                "description": "A collection of arguments for invoking getAaaAuthorization.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAaaAuthorization.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "execs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getAaaAuthorizationExec:getAaaAuthorizationExec"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getAaaAuthorizationNetwork:getAaaAuthorizationNetwork"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "execs",
                    "id",
                    "networks"
                ]
            }
        },
        "nxos:nxos/getAccessListExtended:getAccessListExtended": {
            "inputs": {
                "description": "A collection of arguments for invoking getAccessListExtended.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccessListExtended.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getAccessListExtendedEntry:getAccessListExtendedEntry"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "entries",
                    "id",
                    "name"
                ]
            }
        },
        "nxos:nxos/getAccessListStandard:getAccessListStandard": {
            "inputs": {
                "description": "A collection of arguments for invoking getAccessListStandard.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccessListStandard.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getAccessListStandardEntry:getAccessListStandardEntry"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "entries",
                    "id",
                    "name"
                ]
            }
        },
        "nxos:nxos/getArp:getArp": {
            "inputs": {
                "description": "A collection of arguments for invoking getArp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getArp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "entryLearn": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "incompleteEntries": {
                        "type": "integer"
                    },
                    "inspectionFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getArpInspectionFilter:getArpInspectionFilter"
                        }
                    },
                    "inspectionLogBufferEntries": {
                        "type": "integer"
                    },
                    "inspectionLogBufferLogsEntries": {
                        "type": "integer"
                    },
                    "inspectionLogBufferLogsInterval": {
                        "type": "integer"
                    },
                    "inspectionValidateAllowZeros": {
                        "type": "boolean"
                    },
                    "inspectionValidateDstMac": {
                        "type": "boolean"
                    },
                    "inspectionValidateIp": {
                        "type": "boolean"
                    },
                    "inspectionValidateSrcMac": {
                        "type": "boolean"
                    },
                    "inspectionVlan": {
                        "type": "string"
                    },
                    "proxyDisable": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "entryLearn",
                    "id",
                    "incompleteEntries",
                    "inspectionFilters",
                    "inspectionLogBufferEntries",
                    "inspectionLogBufferLogsEntries",
                    "inspectionLogBufferLogsInterval",
                    "inspectionValidateAllowZeros",
                    "inspectionValidateDstMac",
                    "inspectionValidateIp",
                    "inspectionValidateSrcMac",
                    "inspectionVlan",
                    "proxyDisable"
                ]
            }
        },
        "nxos:nxos/getBanner:getBanner": {
            "inputs": {
                "description": "A collection of arguments for invoking getBanner.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBanner.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "execBanner": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "loginBanner": {
                        "type": "string"
                    },
                    "motdBanner": {
                        "type": "string"
                    },
                    "promptTimeoutBanner": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "execBanner",
                    "id",
                    "loginBanner",
                    "motdBanner",
                    "promptTimeoutBanner"
                ]
            }
        },
        "nxos:nxos/getBfd:getBfd": {
            "inputs": {
                "description": "A collection of arguments for invoking getBfd.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBfd.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipv4BothVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getBfdIpv4BothVrf:getBfdIpv4BothVrf"
                        }
                    },
                    "ipv4WithDstVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getBfdIpv4WithDstVrf:getBfdIpv4WithDstVrf"
                        }
                    },
                    "ipv4WithSrcVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getBfdIpv4WithSrcVrf:getBfdIpv4WithSrcVrf"
                        }
                    },
                    "ipv4WithoutVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getBfdIpv4WithoutVrf:getBfdIpv4WithoutVrf"
                        }
                    },
                    "ipv6WithBothVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getBfdIpv6WithBothVrf:getBfdIpv6WithBothVrf"
                        }
                    },
                    "ipv6WithDstVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getBfdIpv6WithDstVrf:getBfdIpv6WithDstVrf"
                        }
                    },
                    "ipv6WithSrcVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getBfdIpv6WithSrcVrf:getBfdIpv6WithSrcVrf"
                        }
                    },
                    "ipv6WithoutVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getBfdIpv6WithoutVrf:getBfdIpv6WithoutVrf"
                        }
                    },
                    "slowTimers": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "ipv4BothVrfs",
                    "ipv4WithDstVrfs",
                    "ipv4WithSrcVrfs",
                    "ipv4WithoutVrfs",
                    "ipv6WithBothVrfs",
                    "ipv6WithDstVrfs",
                    "ipv6WithSrcVrfs",
                    "ipv6WithoutVrfs",
                    "slowTimers"
                ]
            }
        },
        "nxos:nxos/getBfdTemplateMultiHop:getBfdTemplateMultiHop": {
            "inputs": {
                "description": "A collection of arguments for invoking getBfdTemplateMultiHop.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBfdTemplateMultiHop.\n",
                "properties": {
                    "authenticationMd5Keychain": {
                        "type": "string"
                    },
                    "authenticationMeticulousMd5Keychain": {
                        "type": "string"
                    },
                    "authenticationMeticulousSha1keychain": {
                        "type": "string"
                    },
                    "authenticationSha1Keychain": {
                        "type": "string"
                    },
                    "dampeningDownMonitoring": {
                        "type": "boolean"
                    },
                    "dampeningHalfTime": {
                        "type": "integer"
                    },
                    "dampeningMaxSuppressingTime": {
                        "type": "integer"
                    },
                    "dampeningSuppressTime": {
                        "type": "integer"
                    },
                    "dampeningThreshold": {
                        "type": "integer"
                    },
                    "dampeningUnsuppressTime": {
                        "type": "integer"
                    },
                    "device": {
                        "type": "string"
                    },
                    "echo": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "intervalMicroseconds": {
                        "type": "boolean"
                    },
                    "intervalMicrosecondsBoth": {
                        "type": "integer"
                    },
                    "intervalMicrosecondsMinRx": {
                        "type": "integer"
                    },
                    "intervalMicrosecondsMinTx": {
                        "type": "integer"
                    },
                    "intervalMicrosecondsMultiplier": {
                        "type": "integer"
                    },
                    "intervalMillisecondsBoth": {
                        "type": "integer"
                    },
                    "intervalMillisecondsMinRx": {
                        "type": "integer"
                    },
                    "intervalMillisecondsMinTx": {
                        "type": "integer"
                    },
                    "intervalMillisecondsMultiplier": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "authenticationMd5Keychain",
                    "authenticationMeticulousMd5Keychain",
                    "authenticationMeticulousSha1keychain",
                    "authenticationSha1Keychain",
                    "dampeningDownMonitoring",
                    "dampeningHalfTime",
                    "dampeningMaxSuppressingTime",
                    "dampeningSuppressTime",
                    "dampeningThreshold",
                    "dampeningUnsuppressTime",
                    "echo",
                    "id",
                    "intervalMicroseconds",
                    "intervalMicrosecondsBoth",
                    "intervalMicrosecondsMinRx",
                    "intervalMicrosecondsMinTx",
                    "intervalMicrosecondsMultiplier",
                    "intervalMillisecondsBoth",
                    "intervalMillisecondsMinRx",
                    "intervalMillisecondsMinTx",
                    "intervalMillisecondsMultiplier",
                    "name"
                ]
            }
        },
        "nxos:nxos/getBfdTemplateSingleHop:getBfdTemplateSingleHop": {
            "inputs": {
                "description": "A collection of arguments for invoking getBfdTemplateSingleHop.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBfdTemplateSingleHop.\n",
                "properties": {
                    "authenticationMd5Keychain": {
                        "type": "string"
                    },
                    "authenticationMeticulousMd5Keychain": {
                        "type": "string"
                    },
                    "authenticationMeticulousSha1Keychain": {
                        "type": "string"
                    },
                    "authenticationSha1Keychain": {
                        "type": "string"
                    },
                    "dampeningHalfTime": {
                        "type": "integer"
                    },
                    "dampeningMaxSuppressingTime": {
                        "type": "integer"
                    },
                    "dampeningSuppressTime": {
                        "type": "integer"
                    },
                    "dampeningUnsuppressTime": {
                        "type": "integer"
                    },
                    "device": {
                        "type": "string"
                    },
                    "echo": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "intervalMicrosecondsMinRx": {
                        "type": "integer"
                    },
                    "intervalMicrosecondsMinTx": {
                        "type": "integer"
                    },
                    "intervalMillisecondsBoth": {
                        "type": "integer"
                    },
                    "intervalMillisecondsMinRx": {
                        "type": "integer"
                    },
                    "intervalMillisecondsMinTx": {
                        "type": "integer"
                    },
                    "intervalMillisecondsMultiplier": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "authenticationMd5Keychain",
                    "authenticationMeticulousMd5Keychain",
                    "authenticationMeticulousSha1Keychain",
                    "authenticationSha1Keychain",
                    "dampeningHalfTime",
                    "dampeningMaxSuppressingTime",
                    "dampeningSuppressTime",
                    "dampeningUnsuppressTime",
                    "echo",
                    "id",
                    "intervalMicrosecondsMinRx",
                    "intervalMicrosecondsMinTx",
                    "intervalMillisecondsBoth",
                    "intervalMillisecondsMinRx",
                    "intervalMillisecondsMinTx",
                    "intervalMillisecondsMultiplier",
                    "name"
                ]
            }
        },
        "nxos:nxos/getBgp:getBgp": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgp.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgp.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "defaultIpv4Unicast": {
                        "type": "boolean"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "logNeighborChanges": {
                        "type": "boolean"
                    },
                    "routerIdLoopback": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "defaultIpv4Unicast",
                    "id",
                    "logNeighborChanges",
                    "routerIdLoopback"
                ]
            }
        },
        "nxos:nxos/getBgpAddressFamilyIpv4:getBgpAddressFamilyIpv4": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpAddressFamilyIpv4.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpAddressFamilyIpv4.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipv4UnicastNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getBgpAddressFamilyIpv4Ipv4UnicastNetwork:getBgpAddressFamilyIpv4Ipv4UnicastNetwork"
                        }
                    },
                    "ipv4UnicastNetworksMasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getBgpAddressFamilyIpv4Ipv4UnicastNetworksMask:getBgpAddressFamilyIpv4Ipv4UnicastNetworksMask"
                        }
                    },
                    "ipv4UnicastRedistributeConnected": {
                        "type": "boolean"
                    },
                    "ipv4UnicastRedistributeStatic": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn",
                    "id",
                    "ipv4UnicastNetworks",
                    "ipv4UnicastNetworksMasks",
                    "ipv4UnicastRedistributeConnected",
                    "ipv4UnicastRedistributeStatic"
                ]
            }
        },
        "nxos:nxos/getBgpAddressFamilyIpv4Vrf:getBgpAddressFamilyIpv4Vrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpAddressFamilyIpv4Vrf.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpAddressFamilyIpv4Vrf.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "vrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getBgpAddressFamilyIpv4VrfVrf:getBgpAddressFamilyIpv4VrfVrf"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn",
                    "id",
                    "vrfs"
                ]
            }
        },
        "nxos:nxos/getBgpAddressFamilyIpv6:getBgpAddressFamilyIpv6": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpAddressFamilyIpv6.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpAddressFamilyIpv6.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipv6UnicastNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getBgpAddressFamilyIpv6Ipv6UnicastNetwork:getBgpAddressFamilyIpv6Ipv6UnicastNetwork"
                        }
                    },
                    "ipv6UnicastRedistributeConnected": {
                        "type": "boolean"
                    },
                    "ipv6UnicastRedistributeStatic": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn",
                    "id",
                    "ipv6UnicastNetworks",
                    "ipv6UnicastRedistributeConnected",
                    "ipv6UnicastRedistributeStatic"
                ]
            }
        },
        "nxos:nxos/getBgpAddressFamilyIpv6Vrf:getBgpAddressFamilyIpv6Vrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpAddressFamilyIpv6Vrf.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpAddressFamilyIpv6Vrf.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "vrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getBgpAddressFamilyIpv6VrfVrf:getBgpAddressFamilyIpv6VrfVrf"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn",
                    "id",
                    "vrfs"
                ]
            }
        },
        "nxos:nxos/getBgpAddressFamilyL2vpn:getBgpAddressFamilyL2vpn": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpAddressFamilyL2vpn.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpAddressFamilyL2vpn.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn",
                    "id"
                ]
            }
        },
        "nxos:nxos/getBgpIpv4UnicastNeighbor:getBgpIpv4UnicastNeighbor": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpIpv4UnicastNeighbor.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "ip"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpIpv4UnicastNeighbor.\n",
                "properties": {
                    "activate": {
                        "type": "boolean"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "routeMaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getBgpIpv4UnicastNeighborRouteMap:getBgpIpv4UnicastNeighborRouteMap"
                        }
                    },
                    "routeReflectorClient": {
                        "type": "boolean"
                    },
                    "sendCommunity": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "activate",
                    "asn",
                    "id",
                    "ip",
                    "routeMaps",
                    "routeReflectorClient",
                    "sendCommunity"
                ]
            }
        },
        "nxos:nxos/getBgpIpv4UnicastVrfNeighbor:getBgpIpv4UnicastVrfNeighbor": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpIpv4UnicastVrfNeighbor.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "ip",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpIpv4UnicastVrfNeighbor.\n",
                "properties": {
                    "activate": {
                        "type": "boolean"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "disableConnectedCheck": {
                        "type": "boolean"
                    },
                    "ebgpMultihop": {
                        "type": "boolean"
                    },
                    "ebgpMultihopMaxHop": {
                        "type": "integer"
                    },
                    "fallOverBfdCheckControlPlaneFailure": {
                        "type": "boolean"
                    },
                    "fallOverBfdMultiHop": {
                        "type": "boolean"
                    },
                    "fallOverBfdSingleHop": {
                        "type": "boolean"
                    },
                    "fallOverBfdStrictMode": {
                        "type": "boolean"
                    },
                    "fallOverDefaultRouteMap": {
                        "type": "string"
                    },
                    "fallOverMaximumMetricRouteMap": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "localAs": {
                        "type": "string"
                    },
                    "localAsDualAs": {
                        "type": "boolean"
                    },
                    "localAsNoPrepend": {
                        "type": "boolean"
                    },
                    "localAsReplaceAs": {
                        "type": "boolean"
                    },
                    "logNeighborChangesDisable": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string"
                    },
                    "passwordType": {
                        "type": "integer"
                    },
                    "remoteAs": {
                        "type": "string"
                    },
                    "routeMaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getBgpIpv4UnicastVrfNeighborRouteMap:getBgpIpv4UnicastVrfNeighborRouteMap"
                        }
                    },
                    "routeReflectorClient": {
                        "type": "boolean"
                    },
                    "sendCommunity": {
                        "type": "string"
                    },
                    "shutdown": {
                        "type": "boolean"
                    },
                    "timersHoldtime": {
                        "type": "integer"
                    },
                    "timersKeepaliveInterval": {
                        "type": "integer"
                    },
                    "timersMinimumNeighborHold": {
                        "type": "integer"
                    },
                    "ttlSecurityHops": {
                        "type": "integer"
                    },
                    "updateSourceLoopback": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "activate",
                    "asn",
                    "clusterId",
                    "description",
                    "disableConnectedCheck",
                    "ebgpMultihop",
                    "ebgpMultihopMaxHop",
                    "fallOverBfdCheckControlPlaneFailure",
                    "fallOverBfdMultiHop",
                    "fallOverBfdSingleHop",
                    "fallOverBfdStrictMode",
                    "fallOverDefaultRouteMap",
                    "fallOverMaximumMetricRouteMap",
                    "id",
                    "ip",
                    "localAs",
                    "localAsDualAs",
                    "localAsNoPrepend",
                    "localAsReplaceAs",
                    "logNeighborChangesDisable",
                    "password",
                    "passwordType",
                    "remoteAs",
                    "routeMaps",
                    "routeReflectorClient",
                    "sendCommunity",
                    "shutdown",
                    "timersHoldtime",
                    "timersKeepaliveInterval",
                    "timersMinimumNeighborHold",
                    "ttlSecurityHops",
                    "updateSourceLoopback",
                    "version",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getBgpIpv6UnicastNeighbor:getBgpIpv6UnicastNeighbor": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpIpv6UnicastNeighbor.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "ip"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpIpv6UnicastNeighbor.\n",
                "properties": {
                    "activate": {
                        "type": "boolean"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "routeMaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getBgpIpv6UnicastNeighborRouteMap:getBgpIpv6UnicastNeighborRouteMap"
                        }
                    },
                    "routeReflectorClient": {
                        "type": "boolean"
                    },
                    "sendCommunity": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "activate",
                    "asn",
                    "id",
                    "ip",
                    "routeMaps",
                    "routeReflectorClient",
                    "sendCommunity"
                ]
            }
        },
        "nxos:nxos/getBgpL2vpnEvpnNeighbor:getBgpL2vpnEvpnNeighbor": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpL2vpnEvpnNeighbor.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "ip"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpL2vpnEvpnNeighbor.\n",
                "properties": {
                    "activate": {
                        "type": "boolean"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "routeReflectorClient": {
                        "type": "boolean"
                    },
                    "sendCommunity": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "activate",
                    "asn",
                    "id",
                    "ip",
                    "routeReflectorClient",
                    "sendCommunity"
                ]
            }
        },
        "nxos:nxos/getBgpNeighbor:getBgpNeighbor": {
            "inputs": {
                "description": "A collection of arguments for invoking getBgpNeighbor.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "ip"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpNeighbor.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "disableConnectedCheck": {
                        "type": "boolean"
                    },
                    "ebgpMultihop": {
                        "type": "boolean"
                    },
                    "ebgpMultihopMaxHop": {
                        "type": "integer"
                    },
                    "fallOverBfdCheckControlPlaneFailure": {
                        "type": "boolean"
                    },
                    "fallOverBfdMultiHop": {
                        "type": "boolean"
                    },
                    "fallOverBfdSingleHop": {
                        "type": "boolean"
                    },
                    "fallOverBfdStrictMode": {
                        "type": "boolean"
                    },
                    "fallOverDefaultEnable": {
                        "type": "boolean"
                    },
                    "fallOverDefaultRouteMap": {
                        "type": "string"
                    },
                    "fallOverMaximumMetricRouteMap": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "localAs": {
                        "type": "string"
                    },
                    "localAsDualAs": {
                        "type": "boolean"
                    },
                    "localAsNoPrepend": {
                        "type": "boolean"
                    },
                    "localAsReplaceAs": {
                        "type": "boolean"
                    },
                    "logNeighborChanges": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string"
                    },
                    "passwordType": {
                        "type": "integer"
                    },
                    "remoteAs": {
                        "type": "string"
                    },
                    "shutdown": {
                        "type": "boolean"
                    },
                    "timersHoldtime": {
                        "type": "integer"
                    },
                    "timersKeepaliveInterval": {
                        "type": "integer"
                    },
                    "timersMinimumNeighborHold": {
                        "type": "integer"
                    },
                    "ttlSecurityHops": {
                        "type": "integer"
                    },
                    "updateSourceLoopback": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "clusterId",
                    "description",
                    "disableConnectedCheck",
                    "ebgpMultihop",
                    "ebgpMultihopMaxHop",
                    "fallOverBfdCheckControlPlaneFailure",
                    "fallOverBfdMultiHop",
                    "fallOverBfdSingleHop",
                    "fallOverBfdStrictMode",
                    "fallOverDefaultEnable",
                    "fallOverDefaultRouteMap",
                    "fallOverMaximumMetricRouteMap",
                    "id",
                    "ip",
                    "localAs",
                    "localAsDualAs",
                    "localAsNoPrepend",
                    "localAsReplaceAs",
                    "logNeighborChanges",
                    "password",
                    "passwordType",
                    "remoteAs",
                    "shutdown",
                    "timersHoldtime",
                    "timersKeepaliveInterval",
                    "timersMinimumNeighborHold",
                    "ttlSecurityHops",
                    "updateSourceLoopback",
                    "version"
                ]
            }
        },
        "nxos:nxos/getCdp:getCdp": {
            "inputs": {
                "description": "A collection of arguments for invoking getCdp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCdp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "filterTlvList": {
                        "type": "string"
                    },
                    "holdtime": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "run": {
                        "type": "boolean"
                    },
                    "timer": {
                        "type": "integer"
                    },
                    "tlvLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getCdpTlvList:getCdpTlvList"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "filterTlvList",
                    "holdtime",
                    "id",
                    "run",
                    "timer",
                    "tlvLists"
                ]
            }
        },
        "nxos:nxos/getClassMap:getClassMap": {
            "inputs": {
                "description": "A collection of arguments for invoking getClassMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getClassMap.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "matchActivatedServiceTemplates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getClassMapMatchActivatedServiceTemplate:getClassMapMatchActivatedServiceTemplate"
                        }
                    },
                    "matchAuthorizationStatusAuthorized": {
                        "type": "boolean"
                    },
                    "matchAuthorizationStatusUnauthorized": {
                        "type": "boolean"
                    },
                    "matchAuthorizingMethodPriorityGreaterThans": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "matchMethodDot1x": {
                        "type": "boolean"
                    },
                    "matchMethodMab": {
                        "type": "boolean"
                    },
                    "matchResultTypeAaaTimeout": {
                        "type": "boolean"
                    },
                    "matchResultTypeMethodDot1xAgentNotFound": {
                        "type": "boolean"
                    },
                    "matchResultTypeMethodDot1xAuthoritative": {
                        "type": "boolean"
                    },
                    "matchResultTypeMethodDot1xMethodTimeout": {
                        "type": "boolean"
                    },
                    "matchResultTypeMethodMabAuthoritative": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "prematch": {
                        "type": "string"
                    },
                    "subscriber": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "matchActivatedServiceTemplates",
                    "matchAuthorizationStatusAuthorized",
                    "matchAuthorizationStatusUnauthorized",
                    "matchAuthorizingMethodPriorityGreaterThans",
                    "matchMethodDot1x",
                    "matchMethodMab",
                    "matchResultTypeAaaTimeout",
                    "matchResultTypeMethodDot1xAgentNotFound",
                    "matchResultTypeMethodDot1xAuthoritative",
                    "matchResultTypeMethodDot1xMethodTimeout",
                    "matchResultTypeMethodMabAuthoritative",
                    "name",
                    "prematch",
                    "subscriber",
                    "type"
                ]
            }
        },
        "nxos:nxos/getClock:getClock": {
            "inputs": {
                "description": "A collection of arguments for invoking getClock.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getClock.\n",
                "properties": {
                    "calendarValid": {
                        "type": "boolean"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "summerTimeDate": {
                        "type": "boolean"
                    },
                    "summerTimeDateEndDay": {
                        "type": "integer"
                    },
                    "summerTimeDateEndMonth": {
                        "type": "string"
                    },
                    "summerTimeDateEndTime": {
                        "type": "string"
                    },
                    "summerTimeDateEndYear": {
                        "type": "integer"
                    },
                    "summerTimeDateOffset": {
                        "type": "integer"
                    },
                    "summerTimeDateStartDay": {
                        "type": "integer"
                    },
                    "summerTimeDateStartMonth": {
                        "type": "string"
                    },
                    "summerTimeDateStartTime": {
                        "type": "string"
                    },
                    "summerTimeDateStartYear": {
                        "type": "integer"
                    },
                    "summerTimeRecurring": {
                        "type": "boolean"
                    },
                    "summerTimeRecurringEndMonth": {
                        "type": "string"
                    },
                    "summerTimeRecurringEndTime": {
                        "type": "string"
                    },
                    "summerTimeRecurringEndWeek": {
                        "type": "string"
                    },
                    "summerTimeRecurringEndWeekday": {
                        "type": "string"
                    },
                    "summerTimeRecurringOffset": {
                        "type": "integer"
                    },
                    "summerTimeRecurringStartMonth": {
                        "type": "string"
                    },
                    "summerTimeRecurringStartTime": {
                        "type": "string"
                    },
                    "summerTimeRecurringStartWeek": {
                        "type": "string"
                    },
                    "summerTimeRecurringStartWeekday": {
                        "type": "string"
                    },
                    "summerTimeZone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "calendarValid",
                    "id",
                    "summerTimeDate",
                    "summerTimeDateEndDay",
                    "summerTimeDateEndMonth",
                    "summerTimeDateEndTime",
                    "summerTimeDateEndYear",
                    "summerTimeDateOffset",
                    "summerTimeDateStartDay",
                    "summerTimeDateStartMonth",
                    "summerTimeDateStartTime",
                    "summerTimeDateStartYear",
                    "summerTimeRecurring",
                    "summerTimeRecurringEndMonth",
                    "summerTimeRecurringEndTime",
                    "summerTimeRecurringEndWeek",
                    "summerTimeRecurringEndWeekday",
                    "summerTimeRecurringOffset",
                    "summerTimeRecurringStartMonth",
                    "summerTimeRecurringStartTime",
                    "summerTimeRecurringStartWeek",
                    "summerTimeRecurringStartWeekday",
                    "summerTimeZone"
                ]
            }
        },
        "nxos:nxos/getCryptoIkev2:getCryptoIkev2": {
            "inputs": {
                "description": "A collection of arguments for invoking getCryptoIkev2.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCryptoIkev2.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "dpd": {
                        "type": "integer"
                    },
                    "dpdQuery": {
                        "type": "string"
                    },
                    "dpdRetryInterval": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "natKeepalive": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "dpd",
                    "dpdQuery",
                    "dpdRetryInterval",
                    "id",
                    "natKeepalive"
                ]
            }
        },
        "nxos:nxos/getCryptoIkev2Keyring:getCryptoIkev2Keyring": {
            "inputs": {
                "description": "A collection of arguments for invoking getCryptoIkev2Keyring.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCryptoIkev2Keyring.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getCryptoIkev2KeyringPeer:getCryptoIkev2KeyringPeer"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "peers"
                ]
            }
        },
        "nxos:nxos/getCryptoIkev2Policy:getCryptoIkev2Policy": {
            "inputs": {
                "description": "A collection of arguments for invoking getCryptoIkev2Policy.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCryptoIkev2Policy.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "matchAddressLocalIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "matchFvrf": {
                        "type": "string"
                    },
                    "matchFvrfAny": {
                        "type": "boolean"
                    },
                    "matchInboundOnly": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "proposals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getCryptoIkev2PolicyProposal:getCryptoIkev2PolicyProposal"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "matchAddressLocalIps",
                    "matchFvrf",
                    "matchFvrfAny",
                    "matchInboundOnly",
                    "name",
                    "proposals"
                ]
            }
        },
        "nxos:nxos/getCryptoIkev2Profile:getCryptoIkev2Profile": {
            "inputs": {
                "description": "A collection of arguments for invoking getCryptoIkev2Profile.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCryptoIkev2Profile.\n",
                "properties": {
                    "authenticationLocalPreShare": {
                        "type": "boolean"
                    },
                    "authenticationRemotePreShare": {
                        "type": "boolean"
                    },
                    "configExchangeRequest": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "dpdInterval": {
                        "type": "integer"
                    },
                    "dpdQuery": {
                        "type": "string"
                    },
                    "dpdRetry": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "identityLocalAddress": {
                        "type": "string"
                    },
                    "identityLocalKeyId": {
                        "type": "string"
                    },
                    "keyringLocal": {
                        "type": "string"
                    },
                    "matchAddressLocalIp": {
                        "type": "string"
                    },
                    "matchFvrf": {
                        "type": "string"
                    },
                    "matchFvrfAny": {
                        "type": "boolean"
                    },
                    "matchIdentityRemoteIpv4Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getCryptoIkev2ProfileMatchIdentityRemoteIpv4Address:getCryptoIkev2ProfileMatchIdentityRemoteIpv4Address"
                        }
                    },
                    "matchIdentityRemoteIpv6Prefixes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "matchIdentityRemoteKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "matchInboundOnly": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "authenticationLocalPreShare",
                    "authenticationRemotePreShare",
                    "configExchangeRequest",
                    "description",
                    "dpdInterval",
                    "dpdQuery",
                    "dpdRetry",
                    "id",
                    "identityLocalAddress",
                    "identityLocalKeyId",
                    "keyringLocal",
                    "matchAddressLocalIp",
                    "matchFvrf",
                    "matchFvrfAny",
                    "matchIdentityRemoteIpv4Addresses",
                    "matchIdentityRemoteIpv6Prefixes",
                    "matchIdentityRemoteKeys",
                    "matchInboundOnly",
                    "name"
                ]
            }
        },
        "nxos:nxos/getCryptoIkev2Proposal:getCryptoIkev2Proposal": {
            "inputs": {
                "description": "A collection of arguments for invoking getCryptoIkev2Proposal.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCryptoIkev2Proposal.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "encryptionAesCbc128": {
                        "type": "boolean"
                    },
                    "encryptionAesCbc192": {
                        "type": "boolean"
                    },
                    "encryptionAesCbc256": {
                        "type": "boolean"
                    },
                    "encryptionAesGcm128": {
                        "type": "boolean"
                    },
                    "encryptionAesGcm256": {
                        "type": "boolean"
                    },
                    "encryptionEn3des": {
                        "type": "boolean"
                    },
                    "groupFifteen": {
                        "type": "boolean"
                    },
                    "groupFourteen": {
                        "type": "boolean"
                    },
                    "groupNineteen": {
                        "type": "boolean"
                    },
                    "groupOne": {
                        "type": "boolean"
                    },
                    "groupSixteen": {
                        "type": "boolean"
                    },
                    "groupTwenty": {
                        "type": "boolean"
                    },
                    "groupTwentyFour": {
                        "type": "boolean"
                    },
                    "groupTwentyOne": {
                        "type": "boolean"
                    },
                    "groupTwo": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "integrityMd5": {
                        "type": "boolean"
                    },
                    "integritySha1": {
                        "type": "boolean"
                    },
                    "integritySha256": {
                        "type": "boolean"
                    },
                    "integritySha384": {
                        "type": "boolean"
                    },
                    "integritySha512": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "prfMd5": {
                        "type": "boolean"
                    },
                    "prfSha1": {
                        "type": "boolean"
                    },
                    "prfSha256": {
                        "type": "boolean"
                    },
                    "prfSha384": {
                        "type": "boolean"
                    },
                    "prfSha512": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "encryptionAesCbc128",
                    "encryptionAesCbc192",
                    "encryptionAesCbc256",
                    "encryptionAesGcm128",
                    "encryptionAesGcm256",
                    "encryptionEn3des",
                    "groupFifteen",
                    "groupFourteen",
                    "groupNineteen",
                    "groupOne",
                    "groupSixteen",
                    "groupTwenty",
                    "groupTwentyFour",
                    "groupTwentyOne",
                    "groupTwo",
                    "id",
                    "integrityMd5",
                    "integritySha1",
                    "integritySha256",
                    "integritySha384",
                    "integritySha512",
                    "name",
                    "prfMd5",
                    "prfSha1",
                    "prfSha256",
                    "prfSha384",
                    "prfSha512"
                ]
            }
        },
        "nxos:nxos/getCryptoIpsecProfile:getCryptoIpsecProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getCryptoIpsecProfile.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCryptoIpsecProfile.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "setIsakmpProfileIkev2ProfileIkev2ProfileCaseIkev2Profile": {
                        "type": "string"
                    },
                    "setIsakmpProfileIkev2ProfileIsakmpProfileCaseIsakmpProfile": {
                        "type": "string"
                    },
                    "setTransformSets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "setIsakmpProfileIkev2ProfileIkev2ProfileCaseIkev2Profile",
                    "setIsakmpProfileIkev2ProfileIsakmpProfileCaseIsakmpProfile",
                    "setTransformSets"
                ]
            }
        },
        "nxos:nxos/getCryptoIpsecTransformSet:getCryptoIpsecTransformSet": {
            "inputs": {
                "description": "A collection of arguments for invoking getCryptoIpsecTransformSet.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCryptoIpsecTransformSet.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "esp": {
                        "type": "string"
                    },
                    "espHmac": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "modeTunnel": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "esp",
                    "espHmac",
                    "id",
                    "modeTunnel",
                    "name"
                ]
            }
        },
        "nxos:nxos/getCts:getCts": {
            "inputs": {
                "description": "A collection of arguments for invoking getCts.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCts.\n",
                "properties": {
                    "authorizationList": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "authorizationList",
                    "id"
                ]
            }
        },
        "nxos:nxos/getDhcp:getDhcp": {
            "inputs": {
                "description": "A collection of arguments for invoking getDhcp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDhcp.\n",
                "properties": {
                    "compatibilitySuboptionLinkSelection": {
                        "type": "string"
                    },
                    "compatibilitySuboptionServerOverride": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "relayInformationOptionDefault": {
                        "type": "boolean"
                    },
                    "relayInformationOptionVpn": {
                        "type": "boolean"
                    },
                    "relayInformationTrustAll": {
                        "type": "boolean"
                    },
                    "snooping": {
                        "type": "boolean"
                    },
                    "snoopingInformationOptionFormatRemoteIdHostname": {
                        "type": "boolean"
                    },
                    "snoopingVlans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getDhcpSnoopingVlan:getDhcpSnoopingVlan"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "compatibilitySuboptionLinkSelection",
                    "compatibilitySuboptionServerOverride",
                    "id",
                    "relayInformationOptionDefault",
                    "relayInformationOptionVpn",
                    "relayInformationTrustAll",
                    "snooping",
                    "snoopingInformationOptionFormatRemoteIdHostname",
                    "snoopingVlans"
                ]
            }
        },
        "nxos:nxos/getDot1x:getDot1x": {
            "inputs": {
                "description": "A collection of arguments for invoking getDot1x.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDot1x.\n",
                "properties": {
                    "authFailEapol": {
                        "type": "boolean"
                    },
                    "credentials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getDot1xCredential:getDot1xCredential"
                        }
                    },
                    "criticalEapolConfigBlock": {
                        "type": "boolean"
                    },
                    "criticalRecoveryDelay": {
                        "type": "integer"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "loggingVerbose": {
                        "type": "boolean"
                    },
                    "supplicantControlledTransient": {
                        "type": "boolean"
                    },
                    "supplicantForceMulticast": {
                        "type": "boolean"
                    },
                    "systemAuthControl": {
                        "type": "boolean"
                    },
                    "testTimeout": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "authFailEapol",
                    "credentials",
                    "criticalEapolConfigBlock",
                    "criticalRecoveryDelay",
                    "id",
                    "loggingVerbose",
                    "supplicantControlledTransient",
                    "supplicantForceMulticast",
                    "systemAuthControl",
                    "testTimeout"
                ]
            }
        },
        "nxos:nxos/getErrdisable:getErrdisable": {
            "inputs": {
                "description": "A collection of arguments for invoking getErrdisable.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getErrdisable.\n",
                "properties": {
                    "detectCauseAll": {
                        "type": "boolean"
                    },
                    "detectCauseArpInspection": {
                        "type": "boolean"
                    },
                    "detectCauseBpduguard": {
                        "type": "boolean"
                    },
                    "detectCauseDhcpRateLimit": {
                        "type": "boolean"
                    },
                    "detectCauseDtpFlap": {
                        "type": "boolean"
                    },
                    "detectCauseGbicInvalid": {
                        "type": "boolean"
                    },
                    "detectCauseInlinePower": {
                        "type": "boolean"
                    },
                    "detectCauseL2ptguard": {
                        "type": "boolean"
                    },
                    "detectCauseLinkFlap": {
                        "type": "boolean"
                    },
                    "detectCauseLoopback": {
                        "type": "boolean"
                    },
                    "detectCauseLoopdetect": {
                        "type": "boolean"
                    },
                    "detectCauseMlacpMinlink": {
                        "type": "boolean"
                    },
                    "detectCausePagpFlap": {
                        "type": "boolean"
                    },
                    "detectCausePppoeIaRateLimit": {
                        "type": "boolean"
                    },
                    "detectCauseSecurityViolationShutdownVlan": {
                        "type": "boolean"
                    },
                    "detectCauseSfpConfigMismatch": {
                        "type": "boolean"
                    },
                    "detectCauseSmallFrame": {
                        "type": "boolean"
                    },
                    "device": {
                        "type": "string"
                    },
                    "flapSettingCauseDtpFlapMaxFlaps": {
                        "type": "integer"
                    },
                    "flapSettingCauseDtpFlapTime": {
                        "type": "integer"
                    },
                    "flapSettingCauseLinkFlapMaxFlaps": {
                        "type": "integer"
                    },
                    "flapSettingCauseLinkFlapTime": {
                        "type": "integer"
                    },
                    "flapSettingCausePagpFlapMaxFlaps": {
                        "type": "integer"
                    },
                    "flapSettingCausePagpFlapTime": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "recoveryCauseAll": {
                        "type": "boolean"
                    },
                    "recoveryCauseArpInspection": {
                        "type": "boolean"
                    },
                    "recoveryCauseBpduguard": {
                        "type": "boolean"
                    },
                    "recoveryCauseChannelMisconfig": {
                        "type": "boolean"
                    },
                    "recoveryCauseDhcpRateLimit": {
                        "type": "boolean"
                    },
                    "recoveryCauseDtpFlap": {
                        "type": "boolean"
                    },
                    "recoveryCauseGbicInvalid": {
                        "type": "boolean"
                    },
                    "recoveryCauseInlinePower": {
                        "type": "boolean"
                    },
                    "recoveryCauseL2ptguard": {
                        "type": "boolean"
                    },
                    "recoveryCauseLinkFlap": {
                        "type": "boolean"
                    },
                    "recoveryCauseLinkMonitorFailure": {
                        "type": "boolean"
                    },
                    "recoveryCauseLoopback": {
                        "type": "boolean"
                    },
                    "recoveryCauseLoopdetect": {
                        "type": "boolean"
                    },
                    "recoveryCauseMacLimit": {
                        "type": "boolean"
                    },
                    "recoveryCauseMlacpMinlink": {
                        "type": "boolean"
                    },
                    "recoveryCausePagpFlap": {
                        "type": "boolean"
                    },
                    "recoveryCausePortModeFailure": {
                        "type": "boolean"
                    },
                    "recoveryCausePppoeIaRateLimit": {
                        "type": "boolean"
                    },
                    "recoveryCausePsecureViolation": {
                        "type": "boolean"
                    },
                    "recoveryCausePsp": {
                        "type": "boolean"
                    },
                    "recoveryCauseSecurityViolation": {
                        "type": "boolean"
                    },
                    "recoveryCauseSfpConfigMismatch": {
                        "type": "boolean"
                    },
                    "recoveryCauseSmallFrame": {
                        "type": "boolean"
                    },
                    "recoveryCauseStormControl": {
                        "type": "boolean"
                    },
                    "recoveryCauseUdld": {
                        "type": "boolean"
                    },
                    "recoveryCauseUnicastFlood": {
                        "type": "boolean"
                    },
                    "recoveryCauseVmps": {
                        "type": "boolean"
                    },
                    "recoveryInterval": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "detectCauseAll",
                    "detectCauseArpInspection",
                    "detectCauseBpduguard",
                    "detectCauseDhcpRateLimit",
                    "detectCauseDtpFlap",
                    "detectCauseGbicInvalid",
                    "detectCauseInlinePower",
                    "detectCauseL2ptguard",
                    "detectCauseLinkFlap",
                    "detectCauseLoopback",
                    "detectCauseLoopdetect",
                    "detectCauseMlacpMinlink",
                    "detectCausePagpFlap",
                    "detectCausePppoeIaRateLimit",
                    "detectCauseSecurityViolationShutdownVlan",
                    "detectCauseSfpConfigMismatch",
                    "detectCauseSmallFrame",
                    "flapSettingCauseDtpFlapMaxFlaps",
                    "flapSettingCauseDtpFlapTime",
                    "flapSettingCauseLinkFlapMaxFlaps",
                    "flapSettingCauseLinkFlapTime",
                    "flapSettingCausePagpFlapMaxFlaps",
                    "flapSettingCausePagpFlapTime",
                    "id",
                    "recoveryCauseAll",
                    "recoveryCauseArpInspection",
                    "recoveryCauseBpduguard",
                    "recoveryCauseChannelMisconfig",
                    "recoveryCauseDhcpRateLimit",
                    "recoveryCauseDtpFlap",
                    "recoveryCauseGbicInvalid",
                    "recoveryCauseInlinePower",
                    "recoveryCauseL2ptguard",
                    "recoveryCauseLinkFlap",
                    "recoveryCauseLinkMonitorFailure",
                    "recoveryCauseLoopback",
                    "recoveryCauseLoopdetect",
                    "recoveryCauseMacLimit",
                    "recoveryCauseMlacpMinlink",
                    "recoveryCausePagpFlap",
                    "recoveryCausePortModeFailure",
                    "recoveryCausePppoeIaRateLimit",
                    "recoveryCausePsecureViolation",
                    "recoveryCausePsp",
                    "recoveryCauseSecurityViolation",
                    "recoveryCauseSfpConfigMismatch",
                    "recoveryCauseSmallFrame",
                    "recoveryCauseStormControl",
                    "recoveryCauseUdld",
                    "recoveryCauseUnicastFlood",
                    "recoveryCauseVmps",
                    "recoveryInterval"
                ]
            }
        },
        "nxos:nxos/getEvpn:getEvpn": {
            "inputs": {
                "description": "A collection of arguments for invoking getEvpn.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEvpn.\n",
                "properties": {
                    "defaultGatewayAdvertise": {
                        "type": "boolean"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipDuplicationLimit": {
                        "type": "integer"
                    },
                    "ipDuplicationTime": {
                        "type": "integer"
                    },
                    "loggingPeerState": {
                        "type": "boolean"
                    },
                    "macDuplicationLimit": {
                        "type": "integer"
                    },
                    "macDuplicationTime": {
                        "type": "integer"
                    },
                    "replicationTypeIngress": {
                        "type": "boolean"
                    },
                    "replicationTypeMp2mp": {
                        "type": "boolean"
                    },
                    "replicationTypeP2mp": {
                        "type": "boolean"
                    },
                    "replicationTypeStatic": {
                        "type": "boolean"
                    },
                    "routeTargetAutoVni": {
                        "type": "boolean"
                    },
                    "routerIdLoopback": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "defaultGatewayAdvertise",
                    "id",
                    "ipDuplicationLimit",
                    "ipDuplicationTime",
                    "loggingPeerState",
                    "macDuplicationLimit",
                    "macDuplicationTime",
                    "replicationTypeIngress",
                    "replicationTypeMp2mp",
                    "replicationTypeP2mp",
                    "replicationTypeStatic",
                    "routeTargetAutoVni",
                    "routerIdLoopback"
                ]
            }
        },
        "nxos:nxos/getEvpnInstance:getEvpnInstance": {
            "inputs": {
                "description": "A collection of arguments for invoking getEvpnInstance.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "evpnInstanceNum": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "evpnInstanceNum"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEvpnInstance.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "evpnInstanceNum": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "vlanBasedAutoRouteTarget": {
                        "type": "boolean"
                    },
                    "vlanBasedDefaultGatewayAdvertise": {
                        "type": "string"
                    },
                    "vlanBasedEncapsulation": {
                        "type": "string"
                    },
                    "vlanBasedIpLocalLearningDisable": {
                        "type": "boolean"
                    },
                    "vlanBasedIpLocalLearningEnable": {
                        "type": "boolean"
                    },
                    "vlanBasedRd": {
                        "type": "string"
                    },
                    "vlanBasedReOriginateRouteType5": {
                        "type": "boolean"
                    },
                    "vlanBasedReplicationTypeIngress": {
                        "type": "boolean"
                    },
                    "vlanBasedReplicationTypeMp2mp": {
                        "type": "boolean"
                    },
                    "vlanBasedReplicationTypeP2mp": {
                        "type": "boolean"
                    },
                    "vlanBasedReplicationTypeStatic": {
                        "type": "boolean"
                    },
                    "vlanBasedRouteTarget": {
                        "type": "string"
                    },
                    "vlanBasedRouteTargetBoth": {
                        "type": "string"
                    },
                    "vlanBasedRouteTargetExport": {
                        "type": "string"
                    },
                    "vlanBasedRouteTargetImport": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "evpnInstanceNum",
                    "id",
                    "vlanBasedAutoRouteTarget",
                    "vlanBasedDefaultGatewayAdvertise",
                    "vlanBasedEncapsulation",
                    "vlanBasedIpLocalLearningDisable",
                    "vlanBasedIpLocalLearningEnable",
                    "vlanBasedRd",
                    "vlanBasedReOriginateRouteType5",
                    "vlanBasedReplicationTypeIngress",
                    "vlanBasedReplicationTypeMp2mp",
                    "vlanBasedReplicationTypeP2mp",
                    "vlanBasedReplicationTypeStatic",
                    "vlanBasedRouteTarget",
                    "vlanBasedRouteTargetBoth",
                    "vlanBasedRouteTargetExport",
                    "vlanBasedRouteTargetImport"
                ]
            }
        },
        "nxos:nxos/getInterfaceEthernet:getInterfaceEthernet": {
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceEthernet.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceEthernet.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer"
                    },
                    "autoQosClassify": {
                        "type": "boolean"
                    },
                    "autoQosClassifyPolice": {
                        "type": "boolean"
                    },
                    "autoQosTrust": {
                        "type": "boolean"
                    },
                    "autoQosTrustCos": {
                        "type": "boolean"
                    },
                    "autoQosTrustDscp": {
                        "type": "boolean"
                    },
                    "autoQosVideoCts": {
                        "type": "boolean"
                    },
                    "autoQosVideoIpCamera": {
                        "type": "boolean"
                    },
                    "autoQosVideoMediaPlayer": {
                        "type": "boolean"
                    },
                    "autoQosVoip": {
                        "type": "boolean"
                    },
                    "autoQosVoipCiscoPhone": {
                        "type": "boolean"
                    },
                    "autoQosVoipCiscoSoftphone": {
                        "type": "boolean"
                    },
                    "autoQosVoipTrust": {
                        "type": "boolean"
                    },
                    "bfdEcho": {
                        "type": "boolean"
                    },
                    "bfdEnable": {
                        "type": "boolean"
                    },
                    "bfdInterval": {
                        "type": "integer"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer"
                    },
                    "bfdLocalAddress": {
                        "type": "string"
                    },
                    "bfdTemplate": {
                        "type": "string"
                    },
                    "channelGroupMode": {
                        "type": "string"
                    },
                    "channelGroupNumber": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "encapsulationDot1qVlanId": {
                        "type": "integer"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfaceEthernetHelperAddress:getInterfaceEthernetHelperAddress"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean"
                    },
                    "ipArpInspectionLimitRate": {
                        "type": "integer"
                    },
                    "ipArpInspectionTrust": {
                        "type": "boolean"
                    },
                    "ipDhcpRelaySourceInterface": {
                        "type": "string"
                    },
                    "ipDhcpSnoopingTrust": {
                        "type": "boolean"
                    },
                    "ipProxyArp": {
                        "type": "boolean"
                    },
                    "ipRedirects": {
                        "type": "boolean"
                    },
                    "ipUnreachables": {
                        "type": "boolean"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfaceEthernetIpv6Address:getInterfaceEthernetIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfaceEthernetIpv6LinkLocalAddress:getInterfaceEthernetIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean"
                    },
                    "mediaType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "shutdown": {
                        "type": "boolean"
                    },
                    "sourceTemplates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfaceEthernetSourceTemplate:getInterfaceEthernetSourceTemplate"
                        }
                    },
                    "spanningTreeGuard": {
                        "type": "string"
                    },
                    "spanningTreeLinkType": {
                        "type": "string"
                    },
                    "spanningTreePortfastTrunk": {
                        "type": "boolean"
                    },
                    "switchport": {
                        "type": "boolean"
                    },
                    "trustDevice": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "unnumbered": {
                        "type": "string"
                    },
                    "vrfForwarding": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "arpTimeout",
                    "autoQosClassify",
                    "autoQosClassifyPolice",
                    "autoQosTrust",
                    "autoQosTrustCos",
                    "autoQosTrustDscp",
                    "autoQosVideoCts",
                    "autoQosVideoIpCamera",
                    "autoQosVideoMediaPlayer",
                    "autoQosVoip",
                    "autoQosVoipCiscoPhone",
                    "autoQosVoipCiscoSoftphone",
                    "autoQosVoipTrust",
                    "bfdEcho",
                    "bfdEnable",
                    "bfdInterval",
                    "bfdIntervalMinRx",
                    "bfdIntervalMultiplier",
                    "bfdLocalAddress",
                    "bfdTemplate",
                    "channelGroupMode",
                    "channelGroupNumber",
                    "description",
                    "encapsulationDot1qVlanId",
                    "helperAddresses",
                    "id",
                    "ipAccessGroupIn",
                    "ipAccessGroupInEnable",
                    "ipAccessGroupOut",
                    "ipAccessGroupOutEnable",
                    "ipArpInspectionLimitRate",
                    "ipArpInspectionTrust",
                    "ipDhcpRelaySourceInterface",
                    "ipDhcpSnoopingTrust",
                    "ipProxyArp",
                    "ipRedirects",
                    "ipUnreachables",
                    "ipv4Address",
                    "ipv4AddressMask",
                    "ipv6AddressAutoconfigDefault",
                    "ipv6AddressDhcp",
                    "ipv6Addresses",
                    "ipv6Enable",
                    "ipv6LinkLocalAddresses",
                    "ipv6Mtu",
                    "ipv6NdRaSuppressAll",
                    "mediaType",
                    "name",
                    "shutdown",
                    "sourceTemplates",
                    "spanningTreeGuard",
                    "spanningTreeLinkType",
                    "spanningTreePortfastTrunk",
                    "switchport",
                    "trustDevice",
                    "type",
                    "unnumbered",
                    "vrfForwarding"
                ]
            }
        },
        "nxos:nxos/getInterfaceLoopback:getInterfaceLoopback": {
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceLoopback.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceLoopback.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean"
                    },
                    "ipProxyArp": {
                        "type": "boolean"
                    },
                    "ipRedirects": {
                        "type": "boolean"
                    },
                    "ipUnreachables": {
                        "type": "boolean"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfaceLoopbackIpv6Address:getInterfaceLoopbackIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfaceLoopbackIpv6LinkLocalAddress:getInterfaceLoopbackIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "integer"
                    },
                    "shutdown": {
                        "type": "boolean"
                    },
                    "vrfForwarding": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "arpTimeout",
                    "description",
                    "id",
                    "ipAccessGroupIn",
                    "ipAccessGroupInEnable",
                    "ipAccessGroupOut",
                    "ipAccessGroupOutEnable",
                    "ipProxyArp",
                    "ipRedirects",
                    "ipUnreachables",
                    "ipv4Address",
                    "ipv4AddressMask",
                    "ipv6AddressAutoconfigDefault",
                    "ipv6AddressDhcp",
                    "ipv6Addresses",
                    "ipv6Enable",
                    "ipv6LinkLocalAddresses",
                    "ipv6Mtu",
                    "ipv6NdRaSuppressAll",
                    "name",
                    "shutdown",
                    "vrfForwarding"
                ]
            }
        },
        "nxos:nxos/getInterfaceMpls:getInterfaceMpls": {
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceMpls.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceMpls.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "boolean"
                    },
                    "mtu": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "ip",
                    "mtu",
                    "name",
                    "type"
                ]
            }
        },
        "nxos:nxos/getInterfaceNve:getInterfaceNve": {
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceNve.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceNve.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "hostReachabilityProtocolBgp": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "integer"
                    },
                    "shutdown": {
                        "type": "boolean"
                    },
                    "sourceInterfaceLoopback": {
                        "type": "integer"
                    },
                    "vniVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfaceNveVniVrf:getInterfaceNveVniVrf"
                        }
                    },
                    "vnis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfaceNveVni:getInterfaceNveVni"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "hostReachabilityProtocolBgp",
                    "id",
                    "name",
                    "shutdown",
                    "sourceInterfaceLoopback",
                    "vniVrfs",
                    "vnis"
                ]
            }
        },
        "nxos:nxos/getInterfaceOspf:getInterfaceOspf": {
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceOspf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceOspf.\n",
                "properties": {
                    "cost": {
                        "type": "integer"
                    },
                    "deadInterval": {
                        "type": "integer"
                    },
                    "device": {
                        "type": "string"
                    },
                    "helloInterval": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "messageDigestKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfaceOspfMessageDigestKey:getInterfaceOspfMessageDigestKey"
                        }
                    },
                    "mtuIgnore": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkTypeBroadcast": {
                        "type": "boolean"
                    },
                    "networkTypeNonBroadcast": {
                        "type": "boolean"
                    },
                    "networkTypePointToMultipoint": {
                        "type": "boolean"
                    },
                    "networkTypePointToPoint": {
                        "type": "boolean"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "processIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfaceOspfProcessId:getInterfaceOspfProcessId"
                        }
                    },
                    "ttlSecurityHops": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cost",
                    "deadInterval",
                    "helloInterval",
                    "id",
                    "messageDigestKeys",
                    "mtuIgnore",
                    "name",
                    "networkTypeBroadcast",
                    "networkTypeNonBroadcast",
                    "networkTypePointToMultipoint",
                    "networkTypePointToPoint",
                    "priority",
                    "processIds",
                    "ttlSecurityHops",
                    "type"
                ]
            }
        },
        "nxos:nxos/getInterfaceOspfv3:getInterfaceOspfv3": {
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceOspfv3.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceOspfv3.\n",
                "properties": {
                    "cost": {
                        "type": "integer"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkTypeBroadcast": {
                        "type": "boolean"
                    },
                    "networkTypeNonBroadcast": {
                        "type": "boolean"
                    },
                    "networkTypePointToMultipoint": {
                        "type": "boolean"
                    },
                    "networkTypePointToPoint": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cost",
                    "id",
                    "name",
                    "networkTypeBroadcast",
                    "networkTypeNonBroadcast",
                    "networkTypePointToMultipoint",
                    "networkTypePointToPoint",
                    "type"
                ]
            }
        },
        "nxos:nxos/getInterfacePim:getInterfacePim": {
            "inputs": {
                "description": "A collection of arguments for invoking getInterfacePim.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfacePim.\n",
                "properties": {
                    "bfd": {
                        "type": "boolean"
                    },
                    "border": {
                        "type": "boolean"
                    },
                    "bsrBorder": {
                        "type": "boolean"
                    },
                    "denseMode": {
                        "type": "boolean"
                    },
                    "device": {
                        "type": "string"
                    },
                    "drPriority": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "passive": {
                        "type": "boolean"
                    },
                    "sparseDenseMode": {
                        "type": "boolean"
                    },
                    "sparseMode": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bfd",
                    "border",
                    "bsrBorder",
                    "denseMode",
                    "drPriority",
                    "id",
                    "name",
                    "passive",
                    "sparseDenseMode",
                    "sparseMode",
                    "type"
                ]
            }
        },
        "nxos:nxos/getInterfacePortChannel:getInterfacePortChannel": {
            "inputs": {
                "description": "A collection of arguments for invoking getInterfacePortChannel.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfacePortChannel.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer"
                    },
                    "autoQosClassify": {
                        "type": "boolean"
                    },
                    "autoQosClassifyPolice": {
                        "type": "boolean"
                    },
                    "autoQosTrust": {
                        "type": "boolean"
                    },
                    "autoQosTrustCos": {
                        "type": "boolean"
                    },
                    "autoQosTrustDscp": {
                        "type": "boolean"
                    },
                    "autoQosVideoCts": {
                        "type": "boolean"
                    },
                    "autoQosVideoIpCamera": {
                        "type": "boolean"
                    },
                    "autoQosVideoMediaPlayer": {
                        "type": "boolean"
                    },
                    "autoQosVoip": {
                        "type": "boolean"
                    },
                    "autoQosVoipCiscoPhone": {
                        "type": "boolean"
                    },
                    "autoQosVoipCiscoSoftphone": {
                        "type": "boolean"
                    },
                    "autoQosVoipTrust": {
                        "type": "boolean"
                    },
                    "bfdEcho": {
                        "type": "boolean"
                    },
                    "bfdEnable": {
                        "type": "boolean"
                    },
                    "bfdInterval": {
                        "type": "integer"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer"
                    },
                    "bfdLocalAddress": {
                        "type": "string"
                    },
                    "bfdTemplate": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfacePortChannelHelperAddress:getInterfacePortChannelHelperAddress"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean"
                    },
                    "ipArpInspectionLimitRate": {
                        "type": "integer"
                    },
                    "ipArpInspectionTrust": {
                        "type": "boolean"
                    },
                    "ipDhcpRelaySourceInterface": {
                        "type": "string"
                    },
                    "ipDhcpSnoopingTrust": {
                        "type": "boolean"
                    },
                    "ipProxyArp": {
                        "type": "boolean"
                    },
                    "ipRedirects": {
                        "type": "boolean"
                    },
                    "ipUnreachables": {
                        "type": "boolean"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfacePortChannelIpv6Address:getInterfacePortChannelIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfacePortChannelIpv6LinkLocalAddress:getInterfacePortChannelIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "integer"
                    },
                    "shutdown": {
                        "type": "boolean"
                    },
                    "spanningTreeGuard": {
                        "type": "string"
                    },
                    "spanningTreeLinkType": {
                        "type": "string"
                    },
                    "switchport": {
                        "type": "boolean"
                    },
                    "trustDevice": {
                        "type": "string"
                    },
                    "vrfForwarding": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "arpTimeout",
                    "autoQosClassify",
                    "autoQosClassifyPolice",
                    "autoQosTrust",
                    "autoQosTrustCos",
                    "autoQosTrustDscp",
                    "autoQosVideoCts",
                    "autoQosVideoIpCamera",
                    "autoQosVideoMediaPlayer",
                    "autoQosVoip",
                    "autoQosVoipCiscoPhone",
                    "autoQosVoipCiscoSoftphone",
                    "autoQosVoipTrust",
                    "bfdEcho",
                    "bfdEnable",
                    "bfdInterval",
                    "bfdIntervalMinRx",
                    "bfdIntervalMultiplier",
                    "bfdLocalAddress",
                    "bfdTemplate",
                    "description",
                    "helperAddresses",
                    "id",
                    "ipAccessGroupIn",
                    "ipAccessGroupInEnable",
                    "ipAccessGroupOut",
                    "ipAccessGroupOutEnable",
                    "ipArpInspectionLimitRate",
                    "ipArpInspectionTrust",
                    "ipDhcpRelaySourceInterface",
                    "ipDhcpSnoopingTrust",
                    "ipProxyArp",
                    "ipRedirects",
                    "ipUnreachables",
                    "ipv4Address",
                    "ipv4AddressMask",
                    "ipv6AddressAutoconfigDefault",
                    "ipv6AddressDhcp",
                    "ipv6Addresses",
                    "ipv6Enable",
                    "ipv6LinkLocalAddresses",
                    "ipv6Mtu",
                    "ipv6NdRaSuppressAll",
                    "name",
                    "shutdown",
                    "spanningTreeGuard",
                    "spanningTreeLinkType",
                    "switchport",
                    "trustDevice",
                    "vrfForwarding"
                ]
            }
        },
        "nxos:nxos/getInterfacePortChannelSubinterface:getInterfacePortChannelSubinterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getInterfacePortChannelSubinterface.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfacePortChannelSubinterface.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer"
                    },
                    "autoQosClassify": {
                        "type": "boolean"
                    },
                    "autoQosClassifyPolice": {
                        "type": "boolean"
                    },
                    "autoQosTrust": {
                        "type": "boolean"
                    },
                    "autoQosTrustCos": {
                        "type": "boolean"
                    },
                    "autoQosTrustDscp": {
                        "type": "boolean"
                    },
                    "autoQosVideoCts": {
                        "type": "boolean"
                    },
                    "autoQosVideoIpCamera": {
                        "type": "boolean"
                    },
                    "autoQosVideoMediaPlayer": {
                        "type": "boolean"
                    },
                    "autoQosVoip": {
                        "type": "boolean"
                    },
                    "autoQosVoipCiscoPhone": {
                        "type": "boolean"
                    },
                    "autoQosVoipCiscoSoftphone": {
                        "type": "boolean"
                    },
                    "autoQosVoipTrust": {
                        "type": "boolean"
                    },
                    "bfdEcho": {
                        "type": "boolean"
                    },
                    "bfdEnable": {
                        "type": "boolean"
                    },
                    "bfdInterval": {
                        "type": "integer"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer"
                    },
                    "bfdLocalAddress": {
                        "type": "string"
                    },
                    "bfdTemplate": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "encapsulationDot1qVlanId": {
                        "type": "integer"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfacePortChannelSubinterfaceHelperAddress:getInterfacePortChannelSubinterfaceHelperAddress"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean"
                    },
                    "ipArpInspectionLimitRate": {
                        "type": "integer"
                    },
                    "ipArpInspectionTrust": {
                        "type": "boolean"
                    },
                    "ipProxyArp": {
                        "type": "boolean"
                    },
                    "ipRedirects": {
                        "type": "boolean"
                    },
                    "ipUnreachables": {
                        "type": "boolean"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfacePortChannelSubinterfaceIpv6Address:getInterfacePortChannelSubinterfaceIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfacePortChannelSubinterfaceIpv6LinkLocalAddress:getInterfacePortChannelSubinterfaceIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "shutdown": {
                        "type": "boolean"
                    },
                    "trustDevice": {
                        "type": "string"
                    },
                    "vrfForwarding": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "arpTimeout",
                    "autoQosClassify",
                    "autoQosClassifyPolice",
                    "autoQosTrust",
                    "autoQosTrustCos",
                    "autoQosTrustDscp",
                    "autoQosVideoCts",
                    "autoQosVideoIpCamera",
                    "autoQosVideoMediaPlayer",
                    "autoQosVoip",
                    "autoQosVoipCiscoPhone",
                    "autoQosVoipCiscoSoftphone",
                    "autoQosVoipTrust",
                    "bfdEcho",
                    "bfdEnable",
                    "bfdInterval",
                    "bfdIntervalMinRx",
                    "bfdIntervalMultiplier",
                    "bfdLocalAddress",
                    "bfdTemplate",
                    "description",
                    "encapsulationDot1qVlanId",
                    "helperAddresses",
                    "id",
                    "ipAccessGroupIn",
                    "ipAccessGroupInEnable",
                    "ipAccessGroupOut",
                    "ipAccessGroupOutEnable",
                    "ipArpInspectionLimitRate",
                    "ipArpInspectionTrust",
                    "ipProxyArp",
                    "ipRedirects",
                    "ipUnreachables",
                    "ipv4Address",
                    "ipv4AddressMask",
                    "ipv6AddressAutoconfigDefault",
                    "ipv6AddressDhcp",
                    "ipv6Addresses",
                    "ipv6Enable",
                    "ipv6LinkLocalAddresses",
                    "ipv6Mtu",
                    "ipv6NdRaSuppressAll",
                    "name",
                    "shutdown",
                    "trustDevice",
                    "vrfForwarding"
                ]
            }
        },
        "nxos:nxos/getInterfaceSwitchport:getInterfaceSwitchport": {
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceSwitchport.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceSwitchport.\n",
                "properties": {
                    "accessVlan": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "host": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "modeAccess": {
                        "type": "boolean"
                    },
                    "modeDot1qTunnel": {
                        "type": "boolean"
                    },
                    "modePrivateVlanHost": {
                        "type": "boolean"
                    },
                    "modePrivateVlanPromiscuous": {
                        "type": "boolean"
                    },
                    "modePrivateVlanTrunk": {
                        "type": "boolean"
                    },
                    "modeTrunk": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nonegotiate": {
                        "type": "boolean"
                    },
                    "trunkAllowedVlans": {
                        "type": "string"
                    },
                    "trunkAllowedVlansNone": {
                        "type": "boolean"
                    },
                    "trunkNativeVlan": {
                        "type": "integer"
                    },
                    "trunkNativeVlanTag": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessVlan",
                    "host",
                    "id",
                    "modeAccess",
                    "modeDot1qTunnel",
                    "modePrivateVlanHost",
                    "modePrivateVlanPromiscuous",
                    "modePrivateVlanTrunk",
                    "modeTrunk",
                    "name",
                    "nonegotiate",
                    "trunkAllowedVlans",
                    "trunkAllowedVlansNone",
                    "trunkNativeVlan",
                    "trunkNativeVlanTag",
                    "type"
                ]
            }
        },
        "nxos:nxos/getInterfaceTunnel:getInterfaceTunnel": {
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceTunnel.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceTunnel.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer"
                    },
                    "bfdEcho": {
                        "type": "boolean"
                    },
                    "bfdEnable": {
                        "type": "boolean"
                    },
                    "bfdInterval": {
                        "type": "integer"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer"
                    },
                    "bfdLocalAddress": {
                        "type": "string"
                    },
                    "bfdTemplate": {
                        "type": "string"
                    },
                    "cryptoIpsecDfBit": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfaceTunnelHelperAddress:getInterfaceTunnelHelperAddress"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean"
                    },
                    "ipDhcpRelaySourceInterface": {
                        "type": "string"
                    },
                    "ipProxyArp": {
                        "type": "boolean"
                    },
                    "ipRedirects": {
                        "type": "boolean"
                    },
                    "ipUnreachables": {
                        "type": "boolean"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfaceTunnelIpv6Address:getInterfaceTunnelIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfaceTunnelIpv6LinkLocalAddress:getInterfaceTunnelIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "integer"
                    },
                    "shutdown": {
                        "type": "boolean"
                    },
                    "tunnelDestinationIpv4": {
                        "type": "string"
                    },
                    "tunnelModeIpsecIpv4": {
                        "type": "boolean"
                    },
                    "tunnelProtectionIpsecProfile": {
                        "type": "string"
                    },
                    "tunnelSource": {
                        "type": "string"
                    },
                    "unnumbered": {
                        "type": "string"
                    },
                    "vrfForwarding": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "arpTimeout",
                    "bfdEcho",
                    "bfdEnable",
                    "bfdInterval",
                    "bfdIntervalMinRx",
                    "bfdIntervalMultiplier",
                    "bfdLocalAddress",
                    "bfdTemplate",
                    "cryptoIpsecDfBit",
                    "description",
                    "helperAddresses",
                    "id",
                    "ipAccessGroupIn",
                    "ipAccessGroupInEnable",
                    "ipAccessGroupOut",
                    "ipAccessGroupOutEnable",
                    "ipDhcpRelaySourceInterface",
                    "ipProxyArp",
                    "ipRedirects",
                    "ipUnreachables",
                    "ipv4Address",
                    "ipv4AddressMask",
                    "ipv6AddressAutoconfigDefault",
                    "ipv6AddressDhcp",
                    "ipv6Addresses",
                    "ipv6Enable",
                    "ipv6LinkLocalAddresses",
                    "ipv6Mtu",
                    "ipv6NdRaSuppressAll",
                    "name",
                    "shutdown",
                    "tunnelDestinationIpv4",
                    "tunnelModeIpsecIpv4",
                    "tunnelProtectionIpsecProfile",
                    "tunnelSource",
                    "unnumbered",
                    "vrfForwarding"
                ]
            }
        },
        "nxos:nxos/getInterfaceVlan:getInterfaceVlan": {
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceVlan.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceVlan.\n",
                "properties": {
                    "autostate": {
                        "type": "boolean"
                    },
                    "bfdEcho": {
                        "type": "boolean"
                    },
                    "bfdEnable": {
                        "type": "boolean"
                    },
                    "bfdInterval": {
                        "type": "integer"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer"
                    },
                    "bfdLocalAddress": {
                        "type": "string"
                    },
                    "bfdTemplate": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfaceVlanHelperAddress:getInterfaceVlanHelperAddress"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean"
                    },
                    "ipDhcpRelaySourceInterface": {
                        "type": "string"
                    },
                    "ipProxyArp": {
                        "type": "boolean"
                    },
                    "ipRedirects": {
                        "type": "boolean"
                    },
                    "ipUnreachables": {
                        "type": "boolean"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfaceVlanIpv6Address:getInterfaceVlanIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getInterfaceVlanIpv6LinkLocalAddress:getInterfaceVlanIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "integer"
                    },
                    "shutdown": {
                        "type": "boolean"
                    },
                    "unnumbered": {
                        "type": "string"
                    },
                    "vrfForwarding": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "autostate",
                    "bfdEcho",
                    "bfdEnable",
                    "bfdInterval",
                    "bfdIntervalMinRx",
                    "bfdIntervalMultiplier",
                    "bfdLocalAddress",
                    "bfdTemplate",
                    "description",
                    "helperAddresses",
                    "id",
                    "ipAccessGroupIn",
                    "ipAccessGroupInEnable",
                    "ipAccessGroupOut",
                    "ipAccessGroupOutEnable",
                    "ipDhcpRelaySourceInterface",
                    "ipProxyArp",
                    "ipRedirects",
                    "ipUnreachables",
                    "ipv4Address",
                    "ipv4AddressMask",
                    "ipv6AddressAutoconfigDefault",
                    "ipv6AddressDhcp",
                    "ipv6Addresses",
                    "ipv6Enable",
                    "ipv6LinkLocalAddresses",
                    "ipv6Mtu",
                    "ipv6NdRaSuppressAll",
                    "name",
                    "shutdown",
                    "unnumbered",
                    "vrfForwarding"
                ]
            }
        },
        "nxos:nxos/getLine:getLine": {
            "inputs": {
                "description": "A collection of arguments for invoking getLine.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLine.\n",
                "properties": {
                    "consoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLineConsole:getLineConsole"
                        }
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "vties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLineVty:getLineVty"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "consoles",
                    "id",
                    "vties"
                ]
            }
        },
        "nxos:nxos/getLogging:getLogging": {
            "inputs": {
                "description": "A collection of arguments for invoking getLogging.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLogging.\n",
                "properties": {
                    "bufferedSeverity": {
                        "type": "string"
                    },
                    "bufferedSize": {
                        "type": "integer"
                    },
                    "consoleSeverity": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "facility": {
                        "type": "string"
                    },
                    "fileMaxSize": {
                        "type": "integer"
                    },
                    "fileMinSize": {
                        "type": "integer"
                    },
                    "fileName": {
                        "type": "string"
                    },
                    "fileSeverity": {
                        "type": "string"
                    },
                    "historySeverity": {
                        "type": "string"
                    },
                    "historySize": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipv4Hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingIpv4Host:getLoggingIpv4Host"
                        }
                    },
                    "ipv4VrfHosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingIpv4VrfHost:getLoggingIpv4VrfHost"
                        }
                    },
                    "ipv6Hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingIpv6Host:getLoggingIpv6Host"
                        }
                    },
                    "ipv6VrfHosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingIpv6VrfHost:getLoggingIpv6VrfHost"
                        }
                    },
                    "monitorSeverity": {
                        "type": "string"
                    },
                    "originIdName": {
                        "type": "string"
                    },
                    "originIdType": {
                        "type": "string"
                    },
                    "sourceInterface": {
                        "type": "string"
                    },
                    "sourceInterfacesVrves": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingSourceInterfacesVrf:getLoggingSourceInterfacesVrf"
                        }
                    },
                    "trap": {
                        "type": "boolean"
                    },
                    "trapSeverity": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bufferedSeverity",
                    "bufferedSize",
                    "consoleSeverity",
                    "facility",
                    "fileMaxSize",
                    "fileMinSize",
                    "fileName",
                    "fileSeverity",
                    "historySeverity",
                    "historySize",
                    "id",
                    "ipv4Hosts",
                    "ipv4VrfHosts",
                    "ipv6Hosts",
                    "ipv6VrfHosts",
                    "monitorSeverity",
                    "originIdName",
                    "originIdType",
                    "sourceInterface",
                    "sourceInterfacesVrves",
                    "trap",
                    "trapSeverity"
                ]
            }
        },
        "nxos:nxos/getLoggingIpv4HostTransport:getLoggingIpv4HostTransport": {
            "inputs": {
                "description": "A collection of arguments for invoking getLoggingIpv4HostTransport.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "ipv4Host": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "ipv4Host"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoggingIpv4HostTransport.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipv4Host": {
                        "type": "string"
                    },
                    "transportTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingIpv4HostTransportTransportTcpPort:getLoggingIpv4HostTransportTransportTcpPort"
                        }
                    },
                    "transportTlsPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingIpv4HostTransportTransportTlsPort:getLoggingIpv4HostTransportTransportTlsPort"
                        }
                    },
                    "transportUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingIpv4HostTransportTransportUdpPort:getLoggingIpv4HostTransportTransportUdpPort"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "ipv4Host",
                    "transportTcpPorts",
                    "transportTlsPorts",
                    "transportUdpPorts"
                ]
            }
        },
        "nxos:nxos/getLoggingIpv4HostVrfTransport:getLoggingIpv4HostVrfTransport": {
            "inputs": {
                "description": "A collection of arguments for invoking getLoggingIpv4HostVrfTransport.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "ipv4Host": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "ipv4Host",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoggingIpv4HostVrfTransport.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipv4Host": {
                        "type": "string"
                    },
                    "transportTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingIpv4HostVrfTransportTransportTcpPort:getLoggingIpv4HostVrfTransportTransportTcpPort"
                        }
                    },
                    "transportTlsPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingIpv4HostVrfTransportTransportTlsPort:getLoggingIpv4HostVrfTransportTransportTlsPort"
                        }
                    },
                    "transportUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingIpv4HostVrfTransportTransportUdpPort:getLoggingIpv4HostVrfTransportTransportUdpPort"
                        }
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "ipv4Host",
                    "transportTcpPorts",
                    "transportTlsPorts",
                    "transportUdpPorts",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getLoggingIpv6HostTransport:getLoggingIpv6HostTransport": {
            "inputs": {
                "description": "A collection of arguments for invoking getLoggingIpv6HostTransport.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "ipv6Host": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "ipv6Host"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoggingIpv6HostTransport.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipv6Host": {
                        "type": "string"
                    },
                    "transportTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingIpv6HostTransportTransportTcpPort:getLoggingIpv6HostTransportTransportTcpPort"
                        }
                    },
                    "transportTlsPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingIpv6HostTransportTransportTlsPort:getLoggingIpv6HostTransportTransportTlsPort"
                        }
                    },
                    "transportUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingIpv6HostTransportTransportUdpPort:getLoggingIpv6HostTransportTransportUdpPort"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "ipv6Host",
                    "transportTcpPorts",
                    "transportTlsPorts",
                    "transportUdpPorts"
                ]
            }
        },
        "nxos:nxos/getLoggingIpv6HostVrfTransport:getLoggingIpv6HostVrfTransport": {
            "inputs": {
                "description": "A collection of arguments for invoking getLoggingIpv6HostVrfTransport.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "ipv6Host": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "ipv6Host",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoggingIpv6HostVrfTransport.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipv6Host": {
                        "type": "string"
                    },
                    "transportTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingIpv6HostVrfTransportTransportTcpPort:getLoggingIpv6HostVrfTransportTransportTcpPort"
                        }
                    },
                    "transportTlsPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingIpv6HostVrfTransportTransportTlsPort:getLoggingIpv6HostVrfTransportTransportTlsPort"
                        }
                    },
                    "transportUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getLoggingIpv6HostVrfTransportTransportUdpPort:getLoggingIpv6HostVrfTransportTransportUdpPort"
                        }
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "ipv6Host",
                    "transportTcpPorts",
                    "transportTlsPorts",
                    "transportUdpPorts",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getMdtSubscription:getMdtSubscription": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdtSubscription.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "subscriptionId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "subscriptionId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMdtSubscription.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "encoding": {
                        "type": "string"
                    },
                    "filterXpath": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "receivers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getMdtSubscriptionReceiver:getMdtSubscriptionReceiver"
                        }
                    },
                    "sourceAddress": {
                        "type": "string"
                    },
                    "sourceVrf": {
                        "type": "string"
                    },
                    "stream": {
                        "type": "string"
                    },
                    "subscriptionId": {
                        "type": "integer"
                    },
                    "updatePolicyOnChange": {
                        "type": "boolean"
                    },
                    "updatePolicyPeriodic": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "encoding",
                    "filterXpath",
                    "id",
                    "receivers",
                    "sourceAddress",
                    "sourceVrf",
                    "stream",
                    "subscriptionId",
                    "updatePolicyOnChange",
                    "updatePolicyPeriodic"
                ]
            }
        },
        "nxos:nxos/getMsdp:getMsdp": {
            "inputs": {
                "description": "A collection of arguments for invoking getMsdp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMsdp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "originatorId": {
                        "type": "string"
                    },
                    "passwords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getMsdpPassword:getMsdpPassword"
                        }
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getMsdpPeer:getMsdpPeer"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "originatorId",
                    "passwords",
                    "peers"
                ]
            }
        },
        "nxos:nxos/getMsdpVrf:getMsdpVrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getMsdpVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMsdpVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "originatorId": {
                        "type": "string"
                    },
                    "passwords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getMsdpVrfPassword:getMsdpVrfPassword"
                        }
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getMsdpVrfPeer:getMsdpVrfPeer"
                        }
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "originatorId",
                    "passwords",
                    "peers",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getNtp:getNtp": {
            "inputs": {
                "description": "A collection of arguments for invoking getNtp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNtp.\n",
                "properties": {
                    "accessGroupPeerAcl": {
                        "type": "string"
                    },
                    "accessGroupQueryOnlyAcl": {
                        "type": "string"
                    },
                    "accessGroupServeAcl": {
                        "type": "string"
                    },
                    "accessGroupServeOnlyAcl": {
                        "type": "string"
                    },
                    "authenticate": {
                        "type": "boolean"
                    },
                    "authenticationKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getNtpAuthenticationKey:getNtpAuthenticationKey"
                        }
                    },
                    "clockPeriod": {
                        "type": "integer"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "logging": {
                        "type": "boolean"
                    },
                    "master": {
                        "type": "boolean"
                    },
                    "masterStratum": {
                        "type": "integer"
                    },
                    "passive": {
                        "type": "boolean"
                    },
                    "peerVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getNtpPeerVrf:getNtpPeerVrf"
                        }
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getNtpPeer:getNtpPeer"
                        }
                    },
                    "serverVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getNtpServerVrf:getNtpServerVrf"
                        }
                    },
                    "servers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getNtpServer:getNtpServer"
                        }
                    },
                    "trapSourceFortyGigabitEthernet": {
                        "type": "string"
                    },
                    "trapSourceGigabitEthernet": {
                        "type": "string"
                    },
                    "trapSourceHundredGigE": {
                        "type": "string"
                    },
                    "trapSourceLoopback": {
                        "type": "integer"
                    },
                    "trapSourcePortChannel": {
                        "type": "integer"
                    },
                    "trapSourcePortChannelSubinterface": {
                        "type": "string"
                    },
                    "trapSourceTenGigabitEthernet": {
                        "type": "string"
                    },
                    "trapSourceVlan": {
                        "type": "integer"
                    },
                    "updateCalendar": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "accessGroupPeerAcl",
                    "accessGroupQueryOnlyAcl",
                    "accessGroupServeAcl",
                    "accessGroupServeOnlyAcl",
                    "authenticate",
                    "authenticationKeys",
                    "clockPeriod",
                    "id",
                    "logging",
                    "master",
                    "masterStratum",
                    "passive",
                    "peerVrfs",
                    "peers",
                    "serverVrfs",
                    "servers",
                    "trapSourceFortyGigabitEthernet",
                    "trapSourceGigabitEthernet",
                    "trapSourceHundredGigE",
                    "trapSourceLoopback",
                    "trapSourcePortChannel",
                    "trapSourcePortChannelSubinterface",
                    "trapSourceTenGigabitEthernet",
                    "trapSourceVlan",
                    "updateCalendar"
                ]
            }
        },
        "nxos:nxos/getOspf:getOspf": {
            "inputs": {
                "description": "A collection of arguments for invoking getOspf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "processId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "processId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOspf.\n",
                "properties": {
                    "areas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getOspfArea:getOspfArea"
                        }
                    },
                    "bfdAllInterfaces": {
                        "type": "boolean"
                    },
                    "defaultInformationOriginate": {
                        "type": "boolean"
                    },
                    "defaultInformationOriginateAlways": {
                        "type": "boolean"
                    },
                    "defaultMetric": {
                        "type": "integer"
                    },
                    "device": {
                        "type": "string"
                    },
                    "distance": {
                        "type": "integer"
                    },
                    "domainTag": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "mplsLdpAutoconfig": {
                        "type": "boolean"
                    },
                    "mplsLdpSync": {
                        "type": "boolean"
                    },
                    "neighbors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getOspfNeighbor:getOspfNeighbor"
                        }
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getOspfNetwork:getOspfNetwork"
                        }
                    },
                    "passiveInterfaceDefault": {
                        "type": "boolean"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "processId": {
                        "type": "integer"
                    },
                    "routerId": {
                        "type": "string"
                    },
                    "shutdown": {
                        "type": "boolean"
                    },
                    "summaryAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getOspfSummaryAddress:getOspfSummaryAddress"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "areas",
                    "bfdAllInterfaces",
                    "defaultInformationOriginate",
                    "defaultInformationOriginateAlways",
                    "defaultMetric",
                    "distance",
                    "domainTag",
                    "id",
                    "mplsLdpAutoconfig",
                    "mplsLdpSync",
                    "neighbors",
                    "networks",
                    "passiveInterfaceDefault",
                    "priority",
                    "processId",
                    "routerId",
                    "shutdown",
                    "summaryAddresses"
                ]
            }
        },
        "nxos:nxos/getOspfVrf:getOspfVrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getOspfVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "processId": {
                        "type": "integer"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "processId",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOspfVrf.\n",
                "properties": {
                    "areas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getOspfVrfArea:getOspfVrfArea"
                        }
                    },
                    "bfdAllInterfaces": {
                        "type": "boolean"
                    },
                    "defaultInformationOriginate": {
                        "type": "boolean"
                    },
                    "defaultInformationOriginateAlways": {
                        "type": "boolean"
                    },
                    "defaultMetric": {
                        "type": "integer"
                    },
                    "device": {
                        "type": "string"
                    },
                    "distance": {
                        "type": "integer"
                    },
                    "domainTag": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "mplsLdpAutoconfig": {
                        "type": "boolean"
                    },
                    "mplsLdpSync": {
                        "type": "boolean"
                    },
                    "neighbors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getOspfVrfNeighbor:getOspfVrfNeighbor"
                        }
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getOspfVrfNetwork:getOspfVrfNetwork"
                        }
                    },
                    "passiveInterfaceDefault": {
                        "type": "boolean"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "processId": {
                        "type": "integer"
                    },
                    "routerId": {
                        "type": "string"
                    },
                    "shutdown": {
                        "type": "boolean"
                    },
                    "summaryAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getOspfVrfSummaryAddress:getOspfVrfSummaryAddress"
                        }
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "areas",
                    "bfdAllInterfaces",
                    "defaultInformationOriginate",
                    "defaultInformationOriginateAlways",
                    "defaultMetric",
                    "distance",
                    "domainTag",
                    "id",
                    "mplsLdpAutoconfig",
                    "mplsLdpSync",
                    "neighbors",
                    "networks",
                    "passiveInterfaceDefault",
                    "priority",
                    "processId",
                    "routerId",
                    "shutdown",
                    "summaryAddresses",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getPim:getPim": {
            "inputs": {
                "description": "A collection of arguments for invoking getPim.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPim.\n",
                "properties": {
                    "autorp": {
                        "type": "boolean"
                    },
                    "autorpListener": {
                        "type": "boolean"
                    },
                    "bsrCandidateAcceptRpCandidate": {
                        "type": "string"
                    },
                    "bsrCandidateLoopback": {
                        "type": "integer"
                    },
                    "bsrCandidateMask": {
                        "type": "integer"
                    },
                    "bsrCandidatePriority": {
                        "type": "integer"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "rpAddress": {
                        "type": "string"
                    },
                    "rpAddressBidir": {
                        "type": "boolean"
                    },
                    "rpAddressOverride": {
                        "type": "boolean"
                    },
                    "rpAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getPimRpAddress:getPimRpAddress"
                        }
                    },
                    "rpCandidates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getPimRpCandidate:getPimRpCandidate"
                        }
                    },
                    "ssmDefault": {
                        "type": "boolean"
                    },
                    "ssmRange": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "autorp",
                    "autorpListener",
                    "bsrCandidateAcceptRpCandidate",
                    "bsrCandidateLoopback",
                    "bsrCandidateMask",
                    "bsrCandidatePriority",
                    "id",
                    "rpAddress",
                    "rpAddressBidir",
                    "rpAddressOverride",
                    "rpAddresses",
                    "rpCandidates",
                    "ssmDefault",
                    "ssmRange"
                ]
            }
        },
        "nxos:nxos/getPimVrf:getPimVrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getPimVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimVrf.\n",
                "properties": {
                    "autorp": {
                        "type": "boolean"
                    },
                    "autorpListener": {
                        "type": "boolean"
                    },
                    "bsrCandidateAcceptRpCandidate": {
                        "type": "string"
                    },
                    "bsrCandidateLoopback": {
                        "type": "integer"
                    },
                    "bsrCandidateMask": {
                        "type": "integer"
                    },
                    "bsrCandidatePriority": {
                        "type": "integer"
                    },
                    "cacheRpfOif": {
                        "type": "boolean"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "rpAddress": {
                        "type": "string"
                    },
                    "rpAddressBidir": {
                        "type": "boolean"
                    },
                    "rpAddressOverride": {
                        "type": "boolean"
                    },
                    "rpAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getPimVrfRpAddress:getPimVrfRpAddress"
                        }
                    },
                    "rpCandidates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getPimVrfRpCandidate:getPimVrfRpCandidate"
                        }
                    },
                    "ssmDefault": {
                        "type": "boolean"
                    },
                    "ssmRange": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "autorp",
                    "autorpListener",
                    "bsrCandidateAcceptRpCandidate",
                    "bsrCandidateLoopback",
                    "bsrCandidateMask",
                    "bsrCandidatePriority",
                    "cacheRpfOif",
                    "id",
                    "rpAddress",
                    "rpAddressBidir",
                    "rpAddressOverride",
                    "rpAddresses",
                    "rpCandidates",
                    "ssmDefault",
                    "ssmRange",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getPolicyMap:getPolicyMap": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "subscriber": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "subscriber",
                    "type"
                ]
            }
        },
        "nxos:nxos/getPolicyMapEvent:getPolicyMapEvent": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyMapEvent.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "eventType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "eventType",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyMapEvent.\n",
                "properties": {
                    "classNumbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getPolicyMapEventClassNumber:getPolicyMapEventClassNumber"
                        }
                    },
                    "device": {
                        "type": "string"
                    },
                    "eventType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "matchType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "classNumbers",
                    "eventType",
                    "id",
                    "matchType",
                    "name"
                ]
            }
        },
        "nxos:nxos/getPrefixList:getPrefixList": {
            "inputs": {
                "description": "A collection of arguments for invoking getPrefixList.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPrefixList.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "prefixes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getPrefixListPrefix:getPrefixListPrefix"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "prefixes"
                ]
            }
        },
        "nxos:nxos/getRadius:getRadius": {
            "inputs": {
                "description": "A collection of arguments for invoking getRadius.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRadius.\n",
                "properties": {
                    "accountingPort": {
                        "type": "integer"
                    },
                    "authenticationPort": {
                        "type": "integer"
                    },
                    "automateTesterIgnoreAcctPort": {
                        "type": "boolean"
                    },
                    "automateTesterProbeOnConfig": {
                        "type": "boolean"
                    },
                    "automateTesterUsername": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pacKey": {
                        "type": "string"
                    },
                    "pacKeyEncryption": {
                        "type": "string"
                    },
                    "retransmit": {
                        "type": "integer"
                    },
                    "timeout": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "accountingPort",
                    "authenticationPort",
                    "automateTesterIgnoreAcctPort",
                    "automateTesterProbeOnConfig",
                    "automateTesterUsername",
                    "id",
                    "ipv4Address",
                    "key",
                    "name",
                    "pacKey",
                    "pacKeyEncryption",
                    "retransmit",
                    "timeout"
                ]
            }
        },
        "nxos:nxos/getRadiusServer:getRadiusServer": {
            "inputs": {
                "description": "A collection of arguments for invoking getRadiusServer.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRadiusServer.\n",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getRadiusServerAttribute:getRadiusServerAttribute"
                        }
                    },
                    "deadCriteriaTime": {
                        "type": "integer"
                    },
                    "deadCriteriaTries": {
                        "type": "integer"
                    },
                    "deadtime": {
                        "type": "integer"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "attributes",
                    "deadCriteriaTime",
                    "deadCriteriaTries",
                    "deadtime",
                    "id"
                ]
            }
        },
        "nxos:nxos/getRestconf:getRestconf": {
            "inputs": {
                "description": "A collection of arguments for invoking getRestconf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "path"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRestconf.\n",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "attributes",
                    "id",
                    "path"
                ]
            }
        },
        "nxos:nxos/getRouteMap:getRouteMap": {
            "inputs": {
                "description": "A collection of arguments for invoking getRouteMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRouteMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getRouteMapEntry:getRouteMapEntry"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "entries",
                    "id",
                    "name"
                ]
            }
        },
        "nxos:nxos/getService:getService": {
            "inputs": {
                "description": "A collection of arguments for invoking getService.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getService.\n",
                "properties": {
                    "callHome": {
                        "type": "boolean"
                    },
                    "compressConfig": {
                        "type": "boolean"
                    },
                    "device": {
                        "type": "string"
                    },
                    "dhcp": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "pad": {
                        "type": "boolean"
                    },
                    "passwordEncryption": {
                        "type": "boolean"
                    },
                    "passwordRecovery": {
                        "type": "boolean"
                    },
                    "sequenceNumbers": {
                        "type": "boolean"
                    },
                    "tcpKeepalivesIn": {
                        "type": "boolean"
                    },
                    "tcpKeepalivesOut": {
                        "type": "boolean"
                    },
                    "timestamps": {
                        "type": "boolean"
                    },
                    "timestampsDebug": {
                        "type": "boolean"
                    },
                    "timestampsDebugDatetime": {
                        "type": "boolean"
                    },
                    "timestampsDebugDatetimeLocaltime": {
                        "type": "boolean"
                    },
                    "timestampsDebugDatetimeMsec": {
                        "type": "boolean"
                    },
                    "timestampsDebugDatetimeShowTimezone": {
                        "type": "boolean"
                    },
                    "timestampsDebugDatetimeYear": {
                        "type": "boolean"
                    },
                    "timestampsDebugUptime": {
                        "type": "boolean"
                    },
                    "timestampsLog": {
                        "type": "boolean"
                    },
                    "timestampsLogDatetime": {
                        "type": "boolean"
                    },
                    "timestampsLogDatetimeLocaltime": {
                        "type": "boolean"
                    },
                    "timestampsLogDatetimeMsec": {
                        "type": "boolean"
                    },
                    "timestampsLogDatetimeShowTimezone": {
                        "type": "boolean"
                    },
                    "timestampsLogDatetimeYear": {
                        "type": "boolean"
                    },
                    "timestampsLogUptime": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "callHome",
                    "compressConfig",
                    "dhcp",
                    "id",
                    "pad",
                    "passwordEncryption",
                    "passwordRecovery",
                    "sequenceNumbers",
                    "tcpKeepalivesIn",
                    "tcpKeepalivesOut",
                    "timestamps",
                    "timestampsDebug",
                    "timestampsDebugDatetime",
                    "timestampsDebugDatetimeLocaltime",
                    "timestampsDebugDatetimeMsec",
                    "timestampsDebugDatetimeShowTimezone",
                    "timestampsDebugDatetimeYear",
                    "timestampsDebugUptime",
                    "timestampsLog",
                    "timestampsLogDatetime",
                    "timestampsLogDatetimeLocaltime",
                    "timestampsLogDatetimeMsec",
                    "timestampsLogDatetimeShowTimezone",
                    "timestampsLogDatetimeYear",
                    "timestampsLogUptime"
                ]
            }
        },
        "nxos:nxos/getServiceTemplate:getServiceTemplate": {
            "inputs": {
                "description": "A collection of arguments for invoking getServiceTemplate.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceTemplate.\n",
                "properties": {
                    "absoluteTimer": {
                        "type": "integer"
                    },
                    "accessGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getServiceTemplateAccessGroup:getServiceTemplateAccessGroup"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "dnsAclPreauth": {
                        "type": "string"
                    },
                    "ianctivityTimer": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "inactivityTimerProbe": {
                        "type": "boolean"
                    },
                    "interfaceTemplates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getServiceTemplateInterfaceTemplate:getServiceTemplateInterfaceTemplate"
                        }
                    },
                    "linksecPolicy": {
                        "type": "string"
                    },
                    "mdnsServicePolicy": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "redirectAppendClientMac": {
                        "type": "string"
                    },
                    "redirectAppendSwitchMac": {
                        "type": "string"
                    },
                    "redirectUrl": {
                        "type": "string"
                    },
                    "redirectUrlMatchAcl": {
                        "type": "string"
                    },
                    "redirectUrlMatchAction": {
                        "type": "string"
                    },
                    "servicePolicyQosInput": {
                        "type": "string"
                    },
                    "servicePolicyQosOutput": {
                        "type": "string"
                    },
                    "sgt": {
                        "type": "integer"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getServiceTemplateTag:getServiceTemplateTag"
                        }
                    },
                    "tunnelCapwapName": {
                        "type": "string"
                    },
                    "vlan": {
                        "type": "integer"
                    },
                    "vnid": {
                        "type": "string"
                    },
                    "voiceVlan": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "absoluteTimer",
                    "accessGroups",
                    "description",
                    "dnsAclPreauth",
                    "ianctivityTimer",
                    "id",
                    "inactivityTimerProbe",
                    "interfaceTemplates",
                    "linksecPolicy",
                    "mdnsServicePolicy",
                    "name",
                    "redirectAppendClientMac",
                    "redirectAppendSwitchMac",
                    "redirectUrl",
                    "redirectUrlMatchAcl",
                    "redirectUrlMatchAction",
                    "servicePolicyQosInput",
                    "servicePolicyQosOutput",
                    "sgt",
                    "tags",
                    "tunnelCapwapName",
                    "vlan",
                    "vnid",
                    "voiceVlan"
                ]
            }
        },
        "nxos:nxos/getSnmpServer:getSnmpServer": {
            "inputs": {
                "description": "A collection of arguments for invoking getSnmpServer.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSnmpServer.\n",
                "properties": {
                    "chassisId": {
                        "type": "string"
                    },
                    "contact": {
                        "type": "string"
                    },
                    "contexts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getSnmpServerContext:getSnmpServerContext"
                        }
                    },
                    "device": {
                        "type": "string"
                    },
                    "enableInforms": {
                        "type": "boolean"
                    },
                    "enableLoggingGetop": {
                        "type": "boolean"
                    },
                    "enableLoggingSetop": {
                        "type": "boolean"
                    },
                    "enableTraps": {
                        "type": "boolean"
                    },
                    "enableTrapsAuthFrameworkSecViolation": {
                        "type": "boolean"
                    },
                    "enableTrapsBfd": {
                        "type": "boolean"
                    },
                    "enableTrapsBgpCbgp2": {
                        "type": "boolean"
                    },
                    "enableTrapsBridgeNewroot": {
                        "type": "boolean"
                    },
                    "enableTrapsBridgeTopologychange": {
                        "type": "boolean"
                    },
                    "enableTrapsBulkstatCollection": {
                        "type": "boolean"
                    },
                    "enableTrapsBulkstatTransfer": {
                        "type": "boolean"
                    },
                    "enableTrapsCallHomeMessageSendFail": {
                        "type": "boolean"
                    },
                    "enableTrapsCallHomeServerFail": {
                        "type": "boolean"
                    },
                    "enableTrapsCefInconsistency": {
                        "type": "boolean"
                    },
                    "enableTrapsCefPeerFibStateChange": {
                        "type": "boolean"
                    },
                    "enableTrapsCefPeerStateChange": {
                        "type": "boolean"
                    },
                    "enableTrapsCefResourceFailure": {
                        "type": "boolean"
                    },
                    "enableTrapsConfig": {
                        "type": "boolean"
                    },
                    "enableTrapsConfigCopy": {
                        "type": "boolean"
                    },
                    "enableTrapsConfigCtid": {
                        "type": "boolean"
                    },
                    "enableTrapsCpuThreshold": {
                        "type": "boolean"
                    },
                    "enableTrapsDhcp": {
                        "type": "boolean"
                    },
                    "enableTrapsEigrp": {
                        "type": "boolean"
                    },
                    "enableTrapsEnergywise": {
                        "type": "boolean"
                    },
                    "enableTrapsEntity": {
                        "type": "boolean"
                    },
                    "enableTrapsEntityDiagBootUpFail": {
                        "type": "boolean"
                    },
                    "enableTrapsEntityDiagHmTestRecover": {
                        "type": "boolean"
                    },
                    "enableTrapsEntityDiagHmThreshReached": {
                        "type": "boolean"
                    },
                    "enableTrapsEntityDiagScheduledTestFail": {
                        "type": "boolean"
                    },
                    "enableTrapsEntityPerfThroughputNotif": {
                        "type": "boolean"
                    },
                    "enableTrapsEnvmon": {
                        "type": "boolean"
                    },
                    "enableTrapsErrdisable": {
                        "type": "boolean"
                    },
                    "enableTrapsEventManager": {
                        "type": "boolean"
                    },
                    "enableTrapsFastRerouteProtected": {
                        "type": "boolean"
                    },
                    "enableTrapsFlashInsertion": {
                        "type": "boolean"
                    },
                    "enableTrapsFlashLowspace": {
                        "type": "boolean"
                    },
                    "enableTrapsFlashRemoval": {
                        "type": "boolean"
                    },
                    "enableTrapsFlowmon": {
                        "type": "boolean"
                    },
                    "enableTrapsFruCtrl": {
                        "type": "boolean"
                    },
                    "enableTrapsHsrp": {
                        "type": "boolean"
                    },
                    "enableTrapsIkePolicyAdd": {
                        "type": "boolean"
                    },
                    "enableTrapsIkePolicyDelete": {
                        "type": "boolean"
                    },
                    "enableTrapsIkeTunnelStart": {
                        "type": "boolean"
                    },
                    "enableTrapsIkeTunnelStop": {
                        "type": "boolean"
                    },
                    "enableTrapsIpmulticast": {
                        "type": "boolean"
                    },
                    "enableTrapsIpsecCryptomapAdd": {
                        "type": "boolean"
                    },
                    "enableTrapsIpsecCryptomapAttach": {
                        "type": "boolean"
                    },
                    "enableTrapsIpsecCryptomapDelete": {
                        "type": "boolean"
                    },
                    "enableTrapsIpsecCryptomapDetach": {
                        "type": "boolean"
                    },
                    "enableTrapsIpsecTooManySas": {
                        "type": "boolean"
                    },
                    "enableTrapsIpsecTunnelStart": {
                        "type": "boolean"
                    },
                    "enableTrapsIpsecTunnelStop": {
                        "type": "boolean"
                    },
                    "enableTrapsIpsla": {
                        "type": "boolean"
                    },
                    "enableTrapsIsis": {
                        "type": "boolean"
                    },
                    "enableTrapsLicense": {
                        "type": "boolean"
                    },
                    "enableTrapsLocalAuth": {
                        "type": "boolean"
                    },
                    "enableTrapsMacNotificationChange": {
                        "type": "boolean"
                    },
                    "enableTrapsMacNotificationMove": {
                        "type": "boolean"
                    },
                    "enableTrapsMacNotificationThreshold": {
                        "type": "boolean"
                    },
                    "enableTrapsMemoryBufferpeak": {
                        "type": "boolean"
                    },
                    "enableTrapsMplsLdp": {
                        "type": "boolean"
                    },
                    "enableTrapsMplsRfcLdp": {
                        "type": "boolean"
                    },
                    "enableTrapsMplsTrafficEng": {
                        "type": "boolean"
                    },
                    "enableTrapsMplsVpn": {
                        "type": "boolean"
                    },
                    "enableTrapsMsdp": {
                        "type": "boolean"
                    },
                    "enableTrapsNhrpNhc": {
                        "type": "boolean"
                    },
                    "enableTrapsNhrpNhp": {
                        "type": "boolean"
                    },
                    "enableTrapsNhrpNhs": {
                        "type": "boolean"
                    },
                    "enableTrapsNhrpQuotaExceeded": {
                        "type": "boolean"
                    },
                    "enableTrapsOspfConfigErrors": {
                        "type": "boolean"
                    },
                    "enableTrapsOspfConfigLsa": {
                        "type": "boolean"
                    },
                    "enableTrapsOspfConfigRetransmit": {
                        "type": "boolean"
                    },
                    "enableTrapsOspfConfigStateChange": {
                        "type": "boolean"
                    },
                    "enableTrapsOspfErrorsEnable": {
                        "type": "boolean"
                    },
                    "enableTrapsOspfLsaEnable": {
                        "type": "boolean"
                    },
                    "enableTrapsOspfNssaTransChange": {
                        "type": "boolean"
                    },
                    "enableTrapsOspfRetransmitEnable": {
                        "type": "boolean"
                    },
                    "enableTrapsOspfShamlinkInterface": {
                        "type": "boolean"
                    },
                    "enableTrapsOspfShamlinkNeighbor": {
                        "type": "boolean"
                    },
                    "enableTrapsOspfv3ConfigErrors": {
                        "type": "boolean"
                    },
                    "enableTrapsOspfv3ConfigStateChange": {
                        "type": "boolean"
                    },
                    "enableTrapsPimInvalidPimMessage": {
                        "type": "boolean"
                    },
                    "enableTrapsPimNeighborChange": {
                        "type": "boolean"
                    },
                    "enableTrapsPimRpMappingChange": {
                        "type": "boolean"
                    },
                    "enableTrapsPortSecurity": {
                        "type": "boolean"
                    },
                    "enableTrapsPowerEthernetGroup": {
                        "type": "string"
                    },
                    "enableTrapsPowerEthernetPolice": {
                        "type": "boolean"
                    },
                    "enableTrapsPwVc": {
                        "type": "boolean"
                    },
                    "enableTrapsRep": {
                        "type": "boolean"
                    },
                    "enableTrapsRf": {
                        "type": "boolean"
                    },
                    "enableTrapsSmartLicense": {
                        "type": "boolean"
                    },
                    "enableTrapsSnmpAuthentication": {
                        "type": "boolean"
                    },
                    "enableTrapsSnmpColdstart": {
                        "type": "boolean"
                    },
                    "enableTrapsSnmpLinkdown": {
                        "type": "boolean"
                    },
                    "enableTrapsSnmpLinkup": {
                        "type": "boolean"
                    },
                    "enableTrapsSnmpWarmstart": {
                        "type": "boolean"
                    },
                    "enableTrapsStackwise": {
                        "type": "boolean"
                    },
                    "enableTrapsStpxInconsistency": {
                        "type": "boolean"
                    },
                    "enableTrapsStpxLoopInconsistency": {
                        "type": "boolean"
                    },
                    "enableTrapsStpxRootInconsistency": {
                        "type": "boolean"
                    },
                    "enableTrapsSyslog": {
                        "type": "boolean"
                    },
                    "enableTrapsTransceiverAll": {
                        "type": "boolean"
                    },
                    "enableTrapsTty": {
                        "type": "boolean"
                    },
                    "enableTrapsUdldLinkFailRpt": {
                        "type": "boolean"
                    },
                    "enableTrapsUdldStatusChange": {
                        "type": "boolean"
                    },
                    "enableTrapsVlanMembership": {
                        "type": "boolean"
                    },
                    "enableTrapsVlancreate": {
                        "type": "boolean"
                    },
                    "enableTrapsVlandelete": {
                        "type": "boolean"
                    },
                    "enableTrapsVrfmibVnetTrunkDown": {
                        "type": "boolean"
                    },
                    "enableTrapsVrfmibVnetTrunkUp": {
                        "type": "boolean"
                    },
                    "enableTrapsVrfmibVrfDown": {
                        "type": "boolean"
                    },
                    "enableTrapsVrfmibVrfUp": {
                        "type": "boolean"
                    },
                    "enableTrapsVtp": {
                        "type": "boolean"
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getSnmpServerHost:getSnmpServerHost"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "ifindexPersist": {
                        "type": "boolean"
                    },
                    "location": {
                        "type": "string"
                    },
                    "packetsize": {
                        "type": "integer"
                    },
                    "queueLength": {
                        "type": "integer"
                    },
                    "snmpCommunities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getSnmpServerSnmpCommunity:getSnmpServerSnmpCommunity"
                        }
                    },
                    "sourceInterfaceInformsFortyGigabitEthernet": {
                        "type": "string"
                    },
                    "sourceInterfaceInformsGigabitEthernet": {
                        "type": "string"
                    },
                    "sourceInterfaceInformsHundredGigE": {
                        "type": "string"
                    },
                    "sourceInterfaceInformsLoopback": {
                        "type": "integer"
                    },
                    "sourceInterfaceInformsPortChannel": {
                        "type": "integer"
                    },
                    "sourceInterfaceInformsPortChannelSubinterface": {
                        "type": "string"
                    },
                    "sourceInterfaceInformsTenGigabitEthernet": {
                        "type": "string"
                    },
                    "sourceInterfaceInformsVlan": {
                        "type": "integer"
                    },
                    "sourceInterfaceTrapsFortyGigabitEthernet": {
                        "type": "string"
                    },
                    "sourceInterfaceTrapsGigabitEthernet": {
                        "type": "string"
                    },
                    "sourceInterfaceTrapsHundredGigE": {
                        "type": "string"
                    },
                    "sourceInterfaceTrapsLoopback": {
                        "type": "integer"
                    },
                    "sourceInterfaceTrapsPortChannel": {
                        "type": "integer"
                    },
                    "sourceInterfaceTrapsPortChannelSubinterface": {
                        "type": "string"
                    },
                    "sourceInterfaceTrapsTenGigabitEthernet": {
                        "type": "string"
                    },
                    "sourceInterfaceTrapsVlan": {
                        "type": "integer"
                    },
                    "systemShutdown": {
                        "type": "boolean"
                    },
                    "trapSourceFortyGigabitEthernet": {
                        "type": "string"
                    },
                    "trapSourceGigabitEthernet": {
                        "type": "string"
                    },
                    "trapSourceHundredGigE": {
                        "type": "string"
                    },
                    "trapSourceLoopback": {
                        "type": "integer"
                    },
                    "trapSourcePortChannel": {
                        "type": "integer"
                    },
                    "trapSourcePortChannelSubinterface": {
                        "type": "string"
                    },
                    "trapSourceTenGigabitEthernet": {
                        "type": "string"
                    },
                    "trapSourceVlan": {
                        "type": "integer"
                    },
                    "views": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getSnmpServerView:getSnmpServerView"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "chassisId",
                    "contact",
                    "contexts",
                    "enableInforms",
                    "enableLoggingGetop",
                    "enableLoggingSetop",
                    "enableTraps",
                    "enableTrapsAuthFrameworkSecViolation",
                    "enableTrapsBfd",
                    "enableTrapsBgpCbgp2",
                    "enableTrapsBridgeNewroot",
                    "enableTrapsBridgeTopologychange",
                    "enableTrapsBulkstatCollection",
                    "enableTrapsBulkstatTransfer",
                    "enableTrapsCallHomeMessageSendFail",
                    "enableTrapsCallHomeServerFail",
                    "enableTrapsCefInconsistency",
                    "enableTrapsCefPeerFibStateChange",
                    "enableTrapsCefPeerStateChange",
                    "enableTrapsCefResourceFailure",
                    "enableTrapsConfig",
                    "enableTrapsConfigCopy",
                    "enableTrapsConfigCtid",
                    "enableTrapsCpuThreshold",
                    "enableTrapsDhcp",
                    "enableTrapsEigrp",
                    "enableTrapsEnergywise",
                    "enableTrapsEntity",
                    "enableTrapsEntityDiagBootUpFail",
                    "enableTrapsEntityDiagHmTestRecover",
                    "enableTrapsEntityDiagHmThreshReached",
                    "enableTrapsEntityDiagScheduledTestFail",
                    "enableTrapsEntityPerfThroughputNotif",
                    "enableTrapsEnvmon",
                    "enableTrapsErrdisable",
                    "enableTrapsEventManager",
                    "enableTrapsFastRerouteProtected",
                    "enableTrapsFlashInsertion",
                    "enableTrapsFlashLowspace",
                    "enableTrapsFlashRemoval",
                    "enableTrapsFlowmon",
                    "enableTrapsFruCtrl",
                    "enableTrapsHsrp",
                    "enableTrapsIkePolicyAdd",
                    "enableTrapsIkePolicyDelete",
                    "enableTrapsIkeTunnelStart",
                    "enableTrapsIkeTunnelStop",
                    "enableTrapsIpmulticast",
                    "enableTrapsIpsecCryptomapAdd",
                    "enableTrapsIpsecCryptomapAttach",
                    "enableTrapsIpsecCryptomapDelete",
                    "enableTrapsIpsecCryptomapDetach",
                    "enableTrapsIpsecTooManySas",
                    "enableTrapsIpsecTunnelStart",
                    "enableTrapsIpsecTunnelStop",
                    "enableTrapsIpsla",
                    "enableTrapsIsis",
                    "enableTrapsLicense",
                    "enableTrapsLocalAuth",
                    "enableTrapsMacNotificationChange",
                    "enableTrapsMacNotificationMove",
                    "enableTrapsMacNotificationThreshold",
                    "enableTrapsMemoryBufferpeak",
                    "enableTrapsMplsLdp",
                    "enableTrapsMplsRfcLdp",
                    "enableTrapsMplsTrafficEng",
                    "enableTrapsMplsVpn",
                    "enableTrapsMsdp",
                    "enableTrapsNhrpNhc",
                    "enableTrapsNhrpNhp",
                    "enableTrapsNhrpNhs",
                    "enableTrapsNhrpQuotaExceeded",
                    "enableTrapsOspfConfigErrors",
                    "enableTrapsOspfConfigLsa",
                    "enableTrapsOspfConfigRetransmit",
                    "enableTrapsOspfConfigStateChange",
                    "enableTrapsOspfErrorsEnable",
                    "enableTrapsOspfLsaEnable",
                    "enableTrapsOspfNssaTransChange",
                    "enableTrapsOspfRetransmitEnable",
                    "enableTrapsOspfShamlinkInterface",
                    "enableTrapsOspfShamlinkNeighbor",
                    "enableTrapsOspfv3ConfigErrors",
                    "enableTrapsOspfv3ConfigStateChange",
                    "enableTrapsPimInvalidPimMessage",
                    "enableTrapsPimNeighborChange",
                    "enableTrapsPimRpMappingChange",
                    "enableTrapsPortSecurity",
                    "enableTrapsPowerEthernetGroup",
                    "enableTrapsPowerEthernetPolice",
                    "enableTrapsPwVc",
                    "enableTrapsRep",
                    "enableTrapsRf",
                    "enableTrapsSmartLicense",
                    "enableTrapsSnmpAuthentication",
                    "enableTrapsSnmpColdstart",
                    "enableTrapsSnmpLinkdown",
                    "enableTrapsSnmpLinkup",
                    "enableTrapsSnmpWarmstart",
                    "enableTrapsStackwise",
                    "enableTrapsStpxInconsistency",
                    "enableTrapsStpxLoopInconsistency",
                    "enableTrapsStpxRootInconsistency",
                    "enableTrapsSyslog",
                    "enableTrapsTransceiverAll",
                    "enableTrapsTty",
                    "enableTrapsUdldLinkFailRpt",
                    "enableTrapsUdldStatusChange",
                    "enableTrapsVlanMembership",
                    "enableTrapsVlancreate",
                    "enableTrapsVlandelete",
                    "enableTrapsVrfmibVnetTrunkDown",
                    "enableTrapsVrfmibVnetTrunkUp",
                    "enableTrapsVrfmibVrfDown",
                    "enableTrapsVrfmibVrfUp",
                    "enableTrapsVtp",
                    "hosts",
                    "id",
                    "ifindexPersist",
                    "location",
                    "packetsize",
                    "queueLength",
                    "snmpCommunities",
                    "sourceInterfaceInformsFortyGigabitEthernet",
                    "sourceInterfaceInformsGigabitEthernet",
                    "sourceInterfaceInformsHundredGigE",
                    "sourceInterfaceInformsLoopback",
                    "sourceInterfaceInformsPortChannel",
                    "sourceInterfaceInformsPortChannelSubinterface",
                    "sourceInterfaceInformsTenGigabitEthernet",
                    "sourceInterfaceInformsVlan",
                    "sourceInterfaceTrapsFortyGigabitEthernet",
                    "sourceInterfaceTrapsGigabitEthernet",
                    "sourceInterfaceTrapsHundredGigE",
                    "sourceInterfaceTrapsLoopback",
                    "sourceInterfaceTrapsPortChannel",
                    "sourceInterfaceTrapsPortChannelSubinterface",
                    "sourceInterfaceTrapsTenGigabitEthernet",
                    "sourceInterfaceTrapsVlan",
                    "systemShutdown",
                    "trapSourceFortyGigabitEthernet",
                    "trapSourceGigabitEthernet",
                    "trapSourceHundredGigE",
                    "trapSourceLoopback",
                    "trapSourcePortChannel",
                    "trapSourcePortChannelSubinterface",
                    "trapSourceTenGigabitEthernet",
                    "trapSourceVlan",
                    "views"
                ]
            }
        },
        "nxos:nxos/getSnmpServerGroup:getSnmpServerGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getSnmpServerGroup.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSnmpServerGroup.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "v3Securities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getSnmpServerGroupV3Security:getSnmpServerGroupV3Security"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "v3Securities"
                ]
            }
        },
        "nxos:nxos/getSnmpServerUser:getSnmpServerUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getSnmpServerUser.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "grpname": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "grpname",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSnmpServerUser.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "grpname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "v3AuthAccessAclName": {
                        "type": "string"
                    },
                    "v3AuthAccessIpv6Acl": {
                        "type": "string"
                    },
                    "v3AuthAccessStandardAcl": {
                        "type": "integer"
                    },
                    "v3AuthAlgorithm": {
                        "type": "string"
                    },
                    "v3AuthPassword": {
                        "type": "string"
                    },
                    "v3AuthPrivAesAccessAclName": {
                        "type": "string"
                    },
                    "v3AuthPrivAesAccessIpv6Acl": {
                        "type": "string"
                    },
                    "v3AuthPrivAesAccessStandardAcl": {
                        "type": "integer"
                    },
                    "v3AuthPrivAesAlgorithm": {
                        "type": "string"
                    },
                    "v3AuthPrivAesPassword": {
                        "type": "string"
                    },
                    "v3AuthPrivDes3AccessAclName": {
                        "type": "string"
                    },
                    "v3AuthPrivDes3AccessIpv6Acl": {
                        "type": "string"
                    },
                    "v3AuthPrivDes3AccessStandardAcl": {
                        "type": "integer"
                    },
                    "v3AuthPrivDes3Password": {
                        "type": "string"
                    },
                    "v3AuthPrivDesAccessAclName": {
                        "type": "string"
                    },
                    "v3AuthPrivDesAccessIpv6Acl": {
                        "type": "string"
                    },
                    "v3AuthPrivDesAccessStandardAcl": {
                        "type": "integer"
                    },
                    "v3AuthPrivDesPassword": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "grpname",
                    "id",
                    "username",
                    "v3AuthAccessAclName",
                    "v3AuthAccessIpv6Acl",
                    "v3AuthAccessStandardAcl",
                    "v3AuthAlgorithm",
                    "v3AuthPassword",
                    "v3AuthPrivAesAccessAclName",
                    "v3AuthPrivAesAccessIpv6Acl",
                    "v3AuthPrivAesAccessStandardAcl",
                    "v3AuthPrivAesAlgorithm",
                    "v3AuthPrivAesPassword",
                    "v3AuthPrivDes3AccessAclName",
                    "v3AuthPrivDes3AccessIpv6Acl",
                    "v3AuthPrivDes3AccessStandardAcl",
                    "v3AuthPrivDes3Password",
                    "v3AuthPrivDesAccessAclName",
                    "v3AuthPrivDesAccessIpv6Acl",
                    "v3AuthPrivDesAccessStandardAcl",
                    "v3AuthPrivDesPassword"
                ]
            }
        },
        "nxos:nxos/getStaticRoute:getStaticRoute": {
            "inputs": {
                "description": "A collection of arguments for invoking getStaticRoute.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "mask": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "mask",
                    "prefix"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getStaticRoute.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "mask": {
                        "type": "string"
                    },
                    "nextHops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getStaticRouteNextHop:getStaticRouteNextHop"
                        }
                    },
                    "prefix": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "mask",
                    "nextHops",
                    "prefix"
                ]
            }
        },
        "nxos:nxos/getStaticRouteVrf:getStaticRouteVrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getStaticRouteVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getStaticRouteVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getStaticRouteVrfRoute:getStaticRouteVrfRoute"
                        }
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "routes",
                    "vrf"
                ]
            }
        },
        "nxos:nxos/getSystem:getSystem": {
            "inputs": {
                "description": "A collection of arguments for invoking getSystem.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSystem.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipDomainLookup": {
                        "type": "boolean"
                    },
                    "ipDomainName": {
                        "type": "string"
                    },
                    "ipMulticastRouting": {
                        "type": "boolean"
                    },
                    "ipMulticastRoutingDistributed": {
                        "type": "boolean"
                    },
                    "ipRouting": {
                        "type": "boolean"
                    },
                    "ipSourceRoute": {
                        "type": "boolean"
                    },
                    "ipv6UnicastRouting": {
                        "type": "boolean"
                    },
                    "loginDelay": {
                        "type": "integer"
                    },
                    "loginOnFailure": {
                        "type": "boolean"
                    },
                    "loginOnFailureLog": {
                        "type": "boolean"
                    },
                    "loginOnSuccess": {
                        "type": "boolean"
                    },
                    "loginOnSuccessLog": {
                        "type": "boolean"
                    },
                    "mtu": {
                        "type": "integer"
                    },
                    "multicastRoutingSwitch": {
                        "type": "boolean"
                    },
                    "multicastRoutingVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getSystemMulticastRoutingVrf:getSystemMulticastRoutingVrf"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "hostname",
                    "id",
                    "ipDomainLookup",
                    "ipDomainName",
                    "ipMulticastRouting",
                    "ipMulticastRoutingDistributed",
                    "ipRouting",
                    "ipSourceRoute",
                    "ipv6UnicastRouting",
                    "loginDelay",
                    "loginOnFailure",
                    "loginOnFailureLog",
                    "loginOnSuccess",
                    "loginOnSuccessLog",
                    "mtu",
                    "multicastRoutingSwitch",
                    "multicastRoutingVrfs"
                ]
            }
        },
        "nxos:nxos/getTacacsServer:getTacacsServer": {
            "inputs": {
                "description": "A collection of arguments for invoking getTacacsServer.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTacacsServer.\n",
                "properties": {
                    "addressIpv4": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "timeout": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "addressIpv4",
                    "id",
                    "key",
                    "name",
                    "timeout"
                ]
            }
        },
        "nxos:nxos/getTemplate:getTemplate": {
            "inputs": {
                "description": "A collection of arguments for invoking getTemplate.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTemplate.\n",
                "properties": {
                    "accessSessionClosed": {
                        "type": "boolean"
                    },
                    "accessSessionControlDirection": {
                        "type": "string"
                    },
                    "accessSessionHostMode": {
                        "type": "string"
                    },
                    "accessSessionInterfaceTemplateSticky": {
                        "type": "boolean"
                    },
                    "accessSessionInterfaceTemplateStickyTimer": {
                        "type": "integer"
                    },
                    "accessSessionMonitor": {
                        "type": "boolean"
                    },
                    "accessSessionPortControl": {
                        "type": "string"
                    },
                    "authenticationPeriodic": {
                        "type": "boolean"
                    },
                    "authenticationTimerReauthenticateRange": {
                        "type": "integer"
                    },
                    "authenticationTimerReauthenticateServer": {
                        "type": "boolean"
                    },
                    "ctsManual": {
                        "type": "boolean"
                    },
                    "ctsManualPolicyStaticSgt": {
                        "type": "integer"
                    },
                    "ctsManualPolicyStaticTrusted": {
                        "type": "boolean"
                    },
                    "ctsManualPropagateSgt": {
                        "type": "boolean"
                    },
                    "ctsRoleBasedEnforcement": {
                        "type": "boolean"
                    },
                    "device": {
                        "type": "string"
                    },
                    "deviceTracking": {
                        "type": "boolean"
                    },
                    "deviceTrackingAttachPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getTemplateDeviceTrackingAttachPolicy:getTemplateDeviceTrackingAttachPolicy"
                        }
                    },
                    "deviceTrackingVlanRange": {
                        "type": "string"
                    },
                    "dot1xMaxReauthReq": {
                        "type": "integer"
                    },
                    "dot1xMaxReq": {
                        "type": "integer"
                    },
                    "dot1xPae": {
                        "type": "string"
                    },
                    "dot1xTimeoutTxPeriod": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipAccessGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getTemplateIpAccessGroup:getTemplateIpAccessGroup"
                        }
                    },
                    "ipDhcpSnoopingLimitRate": {
                        "type": "integer"
                    },
                    "ipDhcpSnoopingTrust": {
                        "type": "boolean"
                    },
                    "loadInterval": {
                        "type": "integer"
                    },
                    "mab": {
                        "type": "boolean"
                    },
                    "mabEap": {
                        "type": "boolean"
                    },
                    "servicePolicyInput": {
                        "type": "string"
                    },
                    "servicePolicyOutput": {
                        "type": "string"
                    },
                    "servicePolicyTypeControlSubscriber": {
                        "type": "string"
                    },
                    "sourceTemplate": {
                        "type": "string"
                    },
                    "spanningTreeBpduguardEnable": {
                        "type": "boolean"
                    },
                    "spanningTreePortfast": {
                        "type": "boolean"
                    },
                    "spanningTreePortfastDisable": {
                        "type": "boolean"
                    },
                    "spanningTreePortfastEdge": {
                        "type": "boolean"
                    },
                    "spanningTreePortfastNetwork": {
                        "type": "boolean"
                    },
                    "spanningTreeServicePolicy": {
                        "type": "boolean"
                    },
                    "stormControlActionShutdown": {
                        "type": "boolean"
                    },
                    "stormControlActionTrap": {
                        "type": "boolean"
                    },
                    "stormControlBroadcastLevelBpsThreshold": {
                        "type": "number"
                    },
                    "stormControlBroadcastLevelPpsThreshold": {
                        "type": "string"
                    },
                    "stormControlBroadcastLevelThreshold": {
                        "type": "number"
                    },
                    "stormControlMulticastLevelBpsThreshold": {
                        "type": "number"
                    },
                    "stormControlMulticastLevelPpsThreshold": {
                        "type": "string"
                    },
                    "stormControlMulticastLevelThreshold": {
                        "type": "number"
                    },
                    "subscriberAgingInactivityTimerProbe": {
                        "type": "boolean"
                    },
                    "subscriberAgingInactivityTimerValue": {
                        "type": "integer"
                    },
                    "subscriberAgingProbe": {
                        "type": "boolean"
                    },
                    "switchportAccessVlan": {
                        "type": "integer"
                    },
                    "switchportBlockUnicast": {
                        "type": "boolean"
                    },
                    "switchportModeAccess": {
                        "type": "boolean"
                    },
                    "switchportModeTrunk": {
                        "type": "boolean"
                    },
                    "switchportNonegotiate": {
                        "type": "boolean"
                    },
                    "switchportPortSecurity": {
                        "type": "boolean"
                    },
                    "switchportPortSecurityAgingStatic": {
                        "type": "boolean"
                    },
                    "switchportPortSecurityAgingTime": {
                        "type": "integer"
                    },
                    "switchportPortSecurityAgingType": {
                        "type": "boolean"
                    },
                    "switchportPortSecurityAgingTypeInactivity": {
                        "type": "boolean"
                    },
                    "switchportPortSecurityMaximumRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getTemplateSwitchportPortSecurityMaximumRange:getTemplateSwitchportPortSecurityMaximumRange"
                        }
                    },
                    "switchportPortSecurityViolationProtect": {
                        "type": "boolean"
                    },
                    "switchportPortSecurityViolationRestrict": {
                        "type": "boolean"
                    },
                    "switchportPortSecurityViolationShutdown": {
                        "type": "boolean"
                    },
                    "switchportPrivateVlanHostAssociationPrimaryRange": {
                        "type": "integer"
                    },
                    "switchportPrivateVlanHostAssociationSecondaryRange": {
                        "type": "integer"
                    },
                    "switchportTrunkAllowedVlans": {
                        "type": "string"
                    },
                    "switchportTrunkAllowedVlansAll": {
                        "type": "boolean"
                    },
                    "switchportTrunkAllowedVlansNone": {
                        "type": "boolean"
                    },
                    "switchportTrunkNativeVlanTag": {
                        "type": "boolean"
                    },
                    "switchportTrunkNativeVlanVlanId": {
                        "type": "integer"
                    },
                    "switchportVoiceVlan": {
                        "type": "integer"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessSessionClosed",
                    "accessSessionControlDirection",
                    "accessSessionHostMode",
                    "accessSessionInterfaceTemplateSticky",
                    "accessSessionInterfaceTemplateStickyTimer",
                    "accessSessionMonitor",
                    "accessSessionPortControl",
                    "authenticationPeriodic",
                    "authenticationTimerReauthenticateRange",
                    "authenticationTimerReauthenticateServer",
                    "ctsManual",
                    "ctsManualPolicyStaticSgt",
                    "ctsManualPolicyStaticTrusted",
                    "ctsManualPropagateSgt",
                    "ctsRoleBasedEnforcement",
                    "deviceTracking",
                    "deviceTrackingAttachPolicies",
                    "deviceTrackingVlanRange",
                    "dot1xMaxReauthReq",
                    "dot1xMaxReq",
                    "dot1xPae",
                    "dot1xTimeoutTxPeriod",
                    "id",
                    "ipAccessGroups",
                    "ipDhcpSnoopingLimitRate",
                    "ipDhcpSnoopingTrust",
                    "loadInterval",
                    "mab",
                    "mabEap",
                    "servicePolicyInput",
                    "servicePolicyOutput",
                    "servicePolicyTypeControlSubscriber",
                    "sourceTemplate",
                    "spanningTreeBpduguardEnable",
                    "spanningTreePortfast",
                    "spanningTreePortfastDisable",
                    "spanningTreePortfastEdge",
                    "spanningTreePortfastNetwork",
                    "spanningTreeServicePolicy",
                    "stormControlActionShutdown",
                    "stormControlActionTrap",
                    "stormControlBroadcastLevelBpsThreshold",
                    "stormControlBroadcastLevelPpsThreshold",
                    "stormControlBroadcastLevelThreshold",
                    "stormControlMulticastLevelBpsThreshold",
                    "stormControlMulticastLevelPpsThreshold",
                    "stormControlMulticastLevelThreshold",
                    "subscriberAgingInactivityTimerProbe",
                    "subscriberAgingInactivityTimerValue",
                    "subscriberAgingProbe",
                    "switchportAccessVlan",
                    "switchportBlockUnicast",
                    "switchportModeAccess",
                    "switchportModeTrunk",
                    "switchportNonegotiate",
                    "switchportPortSecurity",
                    "switchportPortSecurityAgingStatic",
                    "switchportPortSecurityAgingTime",
                    "switchportPortSecurityAgingType",
                    "switchportPortSecurityAgingTypeInactivity",
                    "switchportPortSecurityMaximumRanges",
                    "switchportPortSecurityViolationProtect",
                    "switchportPortSecurityViolationRestrict",
                    "switchportPortSecurityViolationShutdown",
                    "switchportPrivateVlanHostAssociationPrimaryRange",
                    "switchportPrivateVlanHostAssociationSecondaryRange",
                    "switchportTrunkAllowedVlans",
                    "switchportTrunkAllowedVlansAll",
                    "switchportTrunkAllowedVlansNone",
                    "switchportTrunkNativeVlanTag",
                    "switchportTrunkNativeVlanVlanId",
                    "switchportVoiceVlan",
                    "templateName"
                ]
            }
        },
        "nxos:nxos/getUdld:getUdld": {
            "inputs": {
                "description": "A collection of arguments for invoking getUdld.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUdld.\n",
                "properties": {
                    "aggressive": {
                        "type": "boolean"
                    },
                    "device": {
                        "type": "string"
                    },
                    "enable": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "messageTime": {
                        "type": "integer"
                    },
                    "recoveryInterval": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "aggressive",
                    "enable",
                    "id",
                    "messageTime",
                    "recoveryInterval"
                ]
            }
        },
        "nxos:nxos/getUsername:getUsername": {
            "inputs": {
                "description": "A collection of arguments for invoking getUsername.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUsername.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "passwordEncryption": {
                        "type": "string"
                    },
                    "privilege": {
                        "type": "integer"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "secretEncryption": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "name",
                    "password",
                    "passwordEncryption",
                    "privilege",
                    "secret",
                    "secretEncryption"
                ]
            }
        },
        "nxos:nxos/getVlan:getVlan": {
            "inputs": {
                "description": "A collection of arguments for invoking getVlan.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "vlanId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "vlanId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVlan.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "privateVlanAssociation": {
                        "type": "string"
                    },
                    "privateVlanCommunity": {
                        "type": "boolean"
                    },
                    "privateVlanIsolated": {
                        "type": "boolean"
                    },
                    "privateVlanPrimary": {
                        "type": "boolean"
                    },
                    "remoteSpan": {
                        "type": "boolean"
                    },
                    "shutdown": {
                        "type": "boolean"
                    },
                    "vlanId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "privateVlanAssociation",
                    "privateVlanCommunity",
                    "privateVlanIsolated",
                    "privateVlanPrimary",
                    "remoteSpan",
                    "shutdown",
                    "vlanId"
                ]
            }
        },
        "nxos:nxos/getVlanAccessMap:getVlanAccessMap": {
            "inputs": {
                "description": "A collection of arguments for invoking getVlanAccessMap.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sequence": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "sequence"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVlanAccessMap.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "matchIpAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "matchIpv6Addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "sequence": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "id",
                    "matchIpAddresses",
                    "matchIpv6Addresses",
                    "name",
                    "sequence"
                ]
            }
        },
        "nxos:nxos/getVlanConfiguration:getVlanConfiguration": {
            "inputs": {
                "description": "A collection of arguments for invoking getVlanConfiguration.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "vlanId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "vlanId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVlanConfiguration.\n",
                "properties": {
                    "accessVfi": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "evpnInstance": {
                        "type": "integer"
                    },
                    "evpnInstanceVni": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "vlanId": {
                        "type": "integer"
                    },
                    "vni": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "accessVfi",
                    "evpnInstance",
                    "evpnInstanceVni",
                    "id",
                    "vlanId",
                    "vni"
                ]
            }
        },
        "nxos:nxos/getVrf:getVrf": {
            "inputs": {
                "description": "A collection of arguments for invoking getVrf.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrf.\n",
                "properties": {
                    "addressFamilyIpv4": {
                        "type": "boolean"
                    },
                    "addressFamilyIpv6": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipv4RouteTargetExportStitchings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getVrfIpv4RouteTargetExportStitching:getVrfIpv4RouteTargetExportStitching"
                        }
                    },
                    "ipv4RouteTargetExports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getVrfIpv4RouteTargetExport:getVrfIpv4RouteTargetExport"
                        }
                    },
                    "ipv4RouteTargetImportStitchings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getVrfIpv4RouteTargetImportStitching:getVrfIpv4RouteTargetImportStitching"
                        }
                    },
                    "ipv4RouteTargetImports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getVrfIpv4RouteTargetImport:getVrfIpv4RouteTargetImport"
                        }
                    },
                    "ipv6RouteTargetExportStitchings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getVrfIpv6RouteTargetExportStitching:getVrfIpv6RouteTargetExportStitching"
                        }
                    },
                    "ipv6RouteTargetExports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getVrfIpv6RouteTargetExport:getVrfIpv6RouteTargetExport"
                        }
                    },
                    "ipv6RouteTargetImportStitchings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getVrfIpv6RouteTargetImportStitching:getVrfIpv6RouteTargetImportStitching"
                        }
                    },
                    "ipv6RouteTargetImports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getVrfIpv6RouteTargetImport:getVrfIpv6RouteTargetImport"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "rd": {
                        "type": "string"
                    },
                    "routeTargetExports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getVrfRouteTargetExport:getVrfRouteTargetExport"
                        }
                    },
                    "routeTargetImports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nxos:nxos/getVrfRouteTargetImport:getVrfRouteTargetImport"
                        }
                    },
                    "vpnId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamilyIpv4",
                    "addressFamilyIpv6",
                    "description",
                    "id",
                    "ipv4RouteTargetExports",
                    "ipv4RouteTargetExportStitchings",
                    "ipv4RouteTargetImports",
                    "ipv4RouteTargetImportStitchings",
                    "ipv6RouteTargetExports",
                    "ipv6RouteTargetExportStitchings",
                    "ipv6RouteTargetImports",
                    "ipv6RouteTargetImportStitchings",
                    "name",
                    "rd",
                    "routeTargetExports",
                    "routeTargetImports",
                    "vpnId"
                ]
            }
        },
        "nxos:nxos/getVtp:getVtp": {
            "inputs": {
                "description": "A collection of arguments for invoking getVtp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVtp.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "file": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interface": {
                        "type": "string"
                    },
                    "interfaceOnly": {
                        "type": "boolean"
                    },
                    "modeClientMst": {
                        "type": "boolean"
                    },
                    "modeClientUnknown": {
                        "type": "boolean"
                    },
                    "modeClientVlan": {
                        "type": "boolean"
                    },
                    "modeOffMst": {
                        "type": "boolean"
                    },
                    "modeOffUnknown": {
                        "type": "boolean"
                    },
                    "modeOffVlan": {
                        "type": "boolean"
                    },
                    "modeServerMst": {
                        "type": "boolean"
                    },
                    "modeServerUnknown": {
                        "type": "boolean"
                    },
                    "modeServerVlan": {
                        "type": "boolean"
                    },
                    "modeTransparentMst": {
                        "type": "boolean"
                    },
                    "modeTransparentUnknown": {
                        "type": "boolean"
                    },
                    "modeTransparentVlan": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string"
                    },
                    "passwordHidden": {
                        "type": "boolean"
                    },
                    "passwordSecret": {
                        "type": "boolean"
                    },
                    "pruning": {
                        "type": "boolean"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "domain",
                    "file",
                    "id",
                    "interface",
                    "interfaceOnly",
                    "modeClientMst",
                    "modeClientUnknown",
                    "modeClientVlan",
                    "modeOffMst",
                    "modeOffUnknown",
                    "modeOffVlan",
                    "modeServerMst",
                    "modeServerUnknown",
                    "modeServerVlan",
                    "modeTransparentMst",
                    "modeTransparentUnknown",
                    "modeTransparentVlan",
                    "password",
                    "passwordHidden",
                    "passwordSecret",
                    "pruning",
                    "version"
                ]
            }
        }
    }
}